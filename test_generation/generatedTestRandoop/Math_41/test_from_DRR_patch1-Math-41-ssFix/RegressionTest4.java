import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test2001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2001");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        double double55 = variance33.evaluate(doubleArray52);
        double double57 = variance14.evaluate(doubleArray52, (double) 100.0f);
        double double58 = variance12.evaluate(doubleArray52);
        long long59 = variance12.getN();
        boolean boolean60 = variance10.equals((java.lang.Object) variance12);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test2002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2002");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        double double55 = variance12.evaluate(doubleArray50, (double) 100.0f);
        double double56 = variance10.evaluate(doubleArray50);
        variance8.setData(doubleArray50);
        double double59 = variance1.evaluate(doubleArray50, (double) (-1));
        variance1.clear();
        double double61 = variance1.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
    }

    @Test
    public void test2003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2003");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        long long11 = variance4.getN();
        long long12 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        variance33.setData(doubleArray44);
        variance14.incrementAll(doubleArray44);
        double double49 = variance4.evaluate(doubleArray44, 0.0d);
        double[] doubleArray50 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean53 = variance52.isBiasCorrected();
        double[] doubleArray55 = new double[] { 100 };
        variance52.incrementAll(doubleArray55);
        double double58 = variance4.evaluate(doubleArray55, 193.760000000149d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
    }

    @Test
    public void test2004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2004");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance7.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance7.copy();
        boolean boolean11 = variance10.isBiasCorrected();
        variance10.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = variance17.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance23.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance23.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        variance23.incrementAll(doubleArray43);
        variance21.setData(doubleArray43);
        double double49 = variance17.evaluate(doubleArray43, (double) (short) 10);
        variance10.setData(doubleArray43, 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance53);
        variance53.setBiasCorrected(true);
        java.lang.Class<?> wildcardClass57 = variance53.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(variance19);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test2005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2005");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance1.copy();
        double double10 = variance1.getResult();
        variance1.setBiasCorrected(false);
        variance1.increment(2025.0d);
        java.lang.Class<?> wildcardClass15 = variance1.getClass();
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2006");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        double double10 = variance4.getResult();
        long long11 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance12.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        variance18.clear();
        variance18.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = variance30.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance57.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance61.evaluate(doubleArray76);
        double double79 = variance57.evaluate(doubleArray76);
        double double81 = variance38.evaluate(doubleArray76, (double) 100.0f);
        double double82 = variance36.evaluate(doubleArray76);
        variance34.setData(doubleArray76);
        variance32.incrementAll(doubleArray76);
        double double86 = variance18.evaluate(doubleArray76, (double) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            variance12.incrementAll(doubleArray76, (int) (byte) 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2550.25d + "'", double10 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance32);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
    }

    @Test
    public void test2007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2007");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance1.copy();
        double double10 = variance1.getResult();
        variance1.setBiasCorrected(false);
        variance1.increment(2025.0d);
        long long15 = variance1.getN();
        // The following exception was thrown during execution in test generation
        try {
            double double16 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
    }

    @Test
    public void test2008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2008");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        variance36.clear();
        boolean boolean43 = variance31.equals((java.lang.Object) variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance36);
        boolean boolean45 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.setBiasCorrected(false);
        double double49 = variance1.getResult();
        double[] doubleArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray50, (int) (short) 10, 0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
    }

    @Test
    public void test2009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2009");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance0);
        double[] doubleArray3 = variance2.getData();
        long long4 = variance2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        double double55 = variance33.evaluate(doubleArray52);
        double double57 = variance14.evaluate(doubleArray52, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = variance14.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance58);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        double[] doubleArray68 = new double[] { (-1), 100.0f };
        variance64.incrementAll(doubleArray68);
        double double70 = variance59.evaluate(doubleArray68);
        variance6.setData(doubleArray68);
        variance6.setBiasCorrected(true);
        double[] doubleArray74 = variance6.getData();
        // The following exception was thrown during execution in test generation
        try {
            double double78 = variance2.evaluate(doubleArray74, (double) (-1L), (-1), (int) '4');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: start position (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertNotNull(variance58);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 100.0]");
    }

    @Test
    public void test2010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2010");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        double[] doubleArray6 = variance4.getData();
        boolean boolean7 = variance4.isBiasCorrected();
        variance4.setBiasCorrected(false);
        double[] doubleArray10 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        double[] doubleArray42 = new double[] { (-1), 100.0f };
        variance38.incrementAll(doubleArray42);
        variance31.setData(doubleArray42);
        variance12.incrementAll(doubleArray42);
        double double47 = variance4.evaluate(doubleArray42, 0.0d);
        boolean boolean48 = variance4.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test2011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2011");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance22.increment((double) (-1.0f));
        boolean boolean25 = variance22.isBiasCorrected();
        long long26 = variance22.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2L + "'", long26 == 2L);
    }

    @Test
    public void test2012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2012");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        long long6 = variance4.getN();
        variance4.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        double[] doubleArray17 = variance16.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = variance22.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        variance32.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        double[] doubleArray47 = new double[] { (-1), 100.0f };
        variance43.incrementAll(doubleArray47);
        double double49 = variance32.evaluate(doubleArray47);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance51.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        variance55.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        double[] doubleArray70 = new double[] { (-1), 100.0f };
        variance66.incrementAll(doubleArray70);
        double double72 = variance55.evaluate(doubleArray70);
        double double73 = variance51.evaluate(doubleArray70);
        double double75 = variance32.evaluate(doubleArray70, (double) 100.0f);
        double double76 = variance30.evaluate(doubleArray70);
        variance28.setData(doubleArray70);
        double double79 = variance26.evaluate(doubleArray70, (double) ' ');
        variance22.setData(doubleArray70);
        variance16.incrementAll(doubleArray70);
        double[] doubleArray82 = variance16.getData();
        double double83 = variance16.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance16);
        long long85 = variance16.getN();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertNull(doubleArray17);
        org.junit.Assert.assertNotNull(variance24);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 2L + "'", long85 == 2L);
    }

    @Test
    public void test2013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2013");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.increment(2046.8888888888887d);
        double[] doubleArray4 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance8.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        variance13.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        double[] doubleArray28 = new double[] { (-1), 100.0f };
        variance24.incrementAll(doubleArray28);
        double double30 = variance13.evaluate(doubleArray28);
        variance8.incrementAll(doubleArray28);
        variance6.setData(doubleArray28);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double double39 = variance34.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        variance45.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        double[] doubleArray60 = new double[] { (-1), 100.0f };
        variance56.incrementAll(doubleArray60);
        double double62 = variance45.evaluate(doubleArray60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance64.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        variance68.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment78);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance76, variance79);
        double[] doubleArray83 = new double[] { (-1), 100.0f };
        variance79.incrementAll(doubleArray83);
        double double85 = variance68.evaluate(doubleArray83);
        double double86 = variance64.evaluate(doubleArray83);
        double double88 = variance45.evaluate(doubleArray83, (double) 100.0f);
        double double89 = variance43.evaluate(doubleArray83);
        variance41.setData(doubleArray83);
        double double92 = variance34.evaluate(doubleArray83, (double) (-1));
        variance6.setData(doubleArray83);
        long long94 = variance6.getN();
        long long95 = variance6.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance6);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2550.25d + "'", double30 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2550.25d + "'", double89 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 0L + "'", long94 == 0L);
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + 0L + "'", long95 == 0L);
    }

    @Test
    public void test2014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2014");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        boolean boolean11 = variance4.isBiasCorrected();
        double double12 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance14.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean19 = variance18.isBiasCorrected();
        double[] doubleArray21 = new double[] { 100 };
        variance18.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance47.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        double double68 = variance51.evaluate(doubleArray66);
        double double69 = variance47.evaluate(doubleArray66);
        double double71 = variance28.evaluate(doubleArray66, (double) 100.0f);
        double double72 = variance26.evaluate(doubleArray66);
        variance24.setData(doubleArray66);
        double double75 = variance18.evaluate(doubleArray66, (double) (byte) -1);
        double double77 = variance14.evaluate(doubleArray66, (double) 1.0f);
        variance4.incrementAll(doubleArray66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance79);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2550.25d + "'", double12 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
    }

    @Test
    public void test2015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2015");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        double double10 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        double double17 = variance12.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        variance23.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        double[] doubleArray38 = new double[] { (-1), 100.0f };
        variance34.incrementAll(doubleArray38);
        double double40 = variance23.evaluate(doubleArray38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        double[] doubleArray61 = new double[] { (-1), 100.0f };
        variance57.incrementAll(doubleArray61);
        double double63 = variance46.evaluate(doubleArray61);
        double double64 = variance42.evaluate(doubleArray61);
        double double66 = variance23.evaluate(doubleArray61, (double) 100.0f);
        double double67 = variance21.evaluate(doubleArray61);
        variance19.setData(doubleArray61);
        double double70 = variance12.evaluate(doubleArray61, (double) (-1));
        variance12.increment(0.0d);
        boolean boolean73 = variance1.equals((java.lang.Object) variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        long long75 = variance12.getN();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2550.25d + "'", double40 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1L + "'", long75 == 1L);
    }

    @Test
    public void test2016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2016");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        double double7 = variance1.getResult();
        boolean boolean8 = variance1.isBiasCorrected();
        boolean boolean9 = variance1.isBiasCorrected();
        boolean boolean10 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test2017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2017");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        variance1.clear();
        variance1.increment((double) 100);
        boolean boolean7 = variance1.isBiasCorrected();
        variance1.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance11);
        variance18.clear();
        variance18.increment((double) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance25.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = variance25.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        variance25.incrementAll(doubleArray45);
        variance23.setData(doubleArray45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance23);
        variance50.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance54.increment((double) 10);
        variance54.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance54);
        double double59 = variance54.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance61.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = variance61.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        variance66.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance74, variance77);
        double[] doubleArray81 = new double[] { (-1), 100.0f };
        variance77.incrementAll(doubleArray81);
        double double83 = variance66.evaluate(doubleArray81);
        variance61.incrementAll(doubleArray81);
        double double86 = variance54.evaluate(doubleArray81, (double) (byte) 10);
        variance18.setData(doubleArray81);
        double double89 = variance1.evaluate(doubleArray81, 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance28);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(variance64);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 5100.5d + "'", double86 == 5100.5d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2550.25d + "'", double89 == 2550.25d);
    }

    @Test
    public void test2018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2018");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance45.clear();
        double double47 = variance45.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance45.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
    }

    @Test
    public void test2019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2019");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        variance36.clear();
        boolean boolean43 = variance31.equals((java.lang.Object) variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance36);
        variance36.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test2020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2020");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        double double2 = variance1.getResult();
        long long3 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance25.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double[] doubleArray36 = new double[] { (-1), 100.0f };
        variance32.incrementAll(doubleArray36);
        variance25.setData(doubleArray36);
        variance6.incrementAll(doubleArray36);
        variance1.incrementAll(doubleArray36);
        java.lang.Class<?> wildcardClass41 = doubleArray36.getClass();
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test2021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2021");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        variance12.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        variance33.increment((double) (-1.0f));
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance33);
        // The following exception was thrown during execution in test generation
        try {
            double double37 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
    }

    @Test
    public void test2022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2022");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        double double10 = variance1.getResult();
        boolean boolean11 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance13.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        double double35 = variance18.evaluate(doubleArray33);
        variance13.incrementAll(doubleArray33);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance13.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        double[] doubleArray46 = new double[] { (-1), 100.0f };
        variance42.incrementAll(doubleArray46);
        variance37.setData(doubleArray46);
        variance1.incrementAll(doubleArray46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance51.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = variance51.copy();
        long long55 = variance51.getN();
        long long56 = variance51.getN();
        double double57 = variance51.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        long long68 = variance62.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean71 = variance70.isBiasCorrected();
        double[] doubleArray73 = new double[] { 100 };
        variance70.incrementAll(doubleArray73);
        boolean boolean75 = variance62.equals((java.lang.Object) doubleArray73);
        long long76 = variance62.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance62);
        boolean boolean78 = variance1.equals((java.lang.Object) variance51);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = variance1.copy();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1L + "'", long55 == 1L);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 2L + "'", long68 == 2L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 2L + "'", long76 == 2L);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(variance79);
    }

    @Test
    public void test2023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2023");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        variance1.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance1.copy();
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(variance11);
    }

    @Test
    public void test2024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2024");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        double double55 = variance12.evaluate(doubleArray50, (double) 100.0f);
        double double56 = variance10.evaluate(doubleArray50);
        variance8.setData(doubleArray50);
        double double59 = variance1.evaluate(doubleArray50, (double) (-1));
        variance1.increment(0.0d);
        long long62 = variance1.getN();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1L + "'", long62 == 1L);
    }

    @Test
    public void test2025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2025");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance46.evaluate(doubleArray55);
        variance46.increment(Double.NaN);
        boolean boolean60 = variance46.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        variance62.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        double double79 = variance62.evaluate(doubleArray77);
        java.lang.Object obj80 = null;
        boolean boolean81 = variance62.equals(obj80);
        variance62.setBiasCorrected(true);
        double[] doubleArray90 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double92 = variance62.evaluate(doubleArray90, 100.0d);
        double double93 = variance46.evaluate(doubleArray90);
        java.lang.Class<?> wildcardClass94 = doubleArray90.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1617.066666666667d + "'", double92 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1347.5555555555554d + "'", double93 == 1347.5555555555554d);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2026");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance0);
        double[] doubleArray3 = variance2.getData();
        variance2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        boolean boolean12 = variance6.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance6.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance6.copy();
        double double15 = variance6.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance36.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        double double58 = variance36.evaluate(doubleArray55);
        double double60 = variance17.evaluate(doubleArray55, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = variance17.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance61);
        double[] doubleArray63 = variance62.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance65.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        variance69.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment79);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance77, variance80);
        double[] doubleArray84 = new double[] { (-1), 100.0f };
        variance80.incrementAll(doubleArray84);
        double double86 = variance69.evaluate(doubleArray84);
        double double87 = variance65.evaluate(doubleArray84);
        variance62.incrementAll(doubleArray84);
        variance6.incrementAll(doubleArray84, 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double95 = variance2.evaluate(doubleArray84, (double) (short) 10, (int) (short) 10, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: length (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(variance14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertNotNull(variance61);
        org.junit.Assert.assertNull(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
    }

    @Test
    public void test2027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2027");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double double28 = variance23.getResult();
        double[] doubleArray34 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double36 = variance23.evaluate(doubleArray34, (double) (short) 1);
        variance1.setData(doubleArray34);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance39.clear();
        long long41 = variance39.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1030428.01d + "'", double36 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
    }

    @Test
    public void test2028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2028");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance11.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance17.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = variance17.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        variance17.incrementAll(doubleArray37);
        variance15.setData(doubleArray37);
        double double43 = variance11.evaluate(doubleArray37, (double) (short) 10);
        variance4.setData(doubleArray37, 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double double48 = variance4.evaluate();
        variance4.setBiasCorrected(false);
        long long51 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance55.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = variance55.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        variance60.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        double[] doubleArray75 = new double[] { (-1), 100.0f };
        variance71.incrementAll(doubleArray75);
        double double77 = variance60.evaluate(doubleArray75);
        variance55.incrementAll(doubleArray75);
        variance53.setData(doubleArray75);
        double double81 = variance4.evaluate(doubleArray75, 1976072.0d);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(variance20);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNotNull(variance58);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
    }

    @Test
    public void test2029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2029");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance1.setBiasCorrected(false);
        variance1.increment(0.0d);
        variance1.increment((double) (byte) 0);
        variance1.increment((double) (short) -1);
        double double54 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.2222222222222222d + "'", double54 == 0.2222222222222222d);
    }

    @Test
    public void test2030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2030");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        variance1.increment((double) (byte) 0);
        long long8 = variance1.getN();
        long long9 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance11.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance11.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        variance16.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double[] doubleArray31 = new double[] { (-1), 100.0f };
        variance27.incrementAll(doubleArray31);
        double double33 = variance16.evaluate(doubleArray31);
        variance11.incrementAll(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = variance11.copy();
        long long36 = variance35.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance38.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = variance38.copy();
        variance38.increment((double) '#');
        double[] doubleArray49 = new double[] { '#', 0L, (byte) 1, (-1), (short) 1 };
        variance38.incrementAll(doubleArray49);
        variance35.incrementAll(doubleArray49);
        // The following exception was thrown during execution in test generation
        try {
            variance1.setData(doubleArray49, (int) (byte) -1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 2L + "'", long9 == 2L);
        org.junit.Assert.assertNotNull(variance14);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2550.25d + "'", double33 == 2550.25d);
        org.junit.Assert.assertNotNull(variance35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 3L + "'", long36 == 3L);
        org.junit.Assert.assertNotNull(variance41);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[35.0, 0.0, 1.0, -1.0, 1.0]");
    }

    @Test
    public void test2031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2031");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance7.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance7.copy();
        boolean boolean11 = variance10.isBiasCorrected();
        variance10.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = variance17.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance23.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance23.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        variance23.incrementAll(doubleArray43);
        variance21.setData(doubleArray43);
        double double49 = variance17.evaluate(doubleArray43, (double) (short) 10);
        variance10.setData(doubleArray43, 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance53);
        variance53.clear();
        variance53.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = variance53.copy();
        variance57.clear();
        variance57.clear();
        variance57.increment((double) 100L);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(variance19);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertNotNull(variance57);
    }

    @Test
    public void test2032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2032");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        boolean boolean32 = variance26.equals((java.lang.Object) 10);
        variance26.increment((double) (short) 10);
        variance26.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        double double59 = variance42.evaluate(doubleArray57);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance61.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment67);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance65, variance68);
        variance65.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        double[] doubleArray80 = new double[] { (-1), 100.0f };
        variance76.incrementAll(doubleArray80);
        double double82 = variance65.evaluate(doubleArray80);
        double double83 = variance61.evaluate(doubleArray80);
        double double85 = variance42.evaluate(doubleArray80, (double) 100.0f);
        double double86 = variance40.evaluate(doubleArray80);
        variance38.setData(doubleArray80);
        variance26.setData(doubleArray80, (int) (byte) 1, 0);
        double double91 = variance24.evaluate(doubleArray80);
        long long92 = variance24.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance93 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance94 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance93);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2550.25d + "'", double91 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 0L + "'", long92 == 0L);
    }

    @Test
    public void test2033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2033");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean6 = variance1.isBiasCorrected();
        variance1.increment((double) 1);
        double[] doubleArray9 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray9);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test2034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2034");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double[] doubleArray8 = variance6.getData();
        java.lang.Object obj9 = null;
        boolean boolean10 = variance6.equals(obj9);
        variance6.clear();
        java.lang.Class<?> wildcardClass12 = variance6.getClass();
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2035");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        variance1.clear();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        double[] doubleArray14 = new double[] { (-1), 100.0f };
        variance10.incrementAll(doubleArray14);
        variance10.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double68 = variance43.evaluate(doubleArray64);
        double double69 = variance10.evaluate(doubleArray64);
        double double70 = variance1.evaluate(doubleArray64);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = variance1.copy();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance18);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 5100.5d + "'", double70 == 5100.5d);
        org.junit.Assert.assertNotNull(variance71);
    }

    @Test
    public void test2036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2036");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        boolean boolean11 = variance4.isBiasCorrected();
        long long12 = variance4.getN();
        variance4.clear();
        boolean boolean14 = variance4.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test2037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2037");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance11.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance17.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = variance17.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        variance17.incrementAll(doubleArray37);
        variance15.setData(doubleArray37);
        double double43 = variance11.evaluate(doubleArray37, (double) (short) 10);
        variance4.setData(doubleArray37, 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray48 = variance4.getData();
        boolean boolean49 = variance4.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(variance20);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test2038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2038");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        variance1.setBiasCorrected(true);
        long long34 = variance1.getN();
        variance1.setBiasCorrected(true);
        long long37 = variance1.getN();
        double[] doubleArray38 = variance1.getData();
        double double39 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance40);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
    }

    @Test
    public void test2039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2039");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment6);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance7);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        double[] doubleArray19 = new double[] { (-1), 100.0f };
        variance15.incrementAll(doubleArray19);
        double double21 = variance4.evaluate(doubleArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = variance4.equals(obj22);
        variance4.setBiasCorrected(true);
        double[] doubleArray32 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double34 = variance4.evaluate(doubleArray32, 100.0d);
        variance4.setBiasCorrected(true);
        long long37 = variance4.getN();
        variance4.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        long long51 = variance45.getN();
        boolean boolean52 = variance45.isBiasCorrected();
        double double53 = variance45.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = variance45.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        variance56.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        double double73 = variance56.evaluate(doubleArray71);
        java.lang.Object obj74 = null;
        boolean boolean75 = variance56.equals(obj74);
        variance56.setBiasCorrected(true);
        double[] doubleArray84 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double86 = variance56.evaluate(doubleArray84, 100.0d);
        variance54.setData(doubleArray84, (int) (byte) 1, 0);
        boolean boolean90 = variance40.equals((java.lang.Object) doubleArray84);
        variance1.incrementAll(doubleArray84);
        boolean boolean92 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance95 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        double double96 = variance95.getResult();
        long long97 = variance95.getN();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2550.25d + "'", double21 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1617.066666666667d + "'", double34 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(variance40);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 2L + "'", long51 == 2L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertNotNull(variance54);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1617.066666666667d + "'", double86 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 1347.5555555555554d + "'", double96 == 1347.5555555555554d);
        org.junit.Assert.assertTrue("'" + long97 + "' != '" + 6L + "'", long97 == 6L);
    }

    @Test
    public void test2040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2040");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        variance14.increment(0.0d);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double71 = variance14.evaluate(doubleArray64, (double) (short) 1);
        double double72 = variance4.evaluate(doubleArray64);
        double[] doubleArray73 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = variance4.copy();
        double[] doubleArray75 = variance4.getData();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertNotNull(variance74);
        org.junit.Assert.assertNull(doubleArray75);
    }

    @Test
    public void test2041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2041");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        java.lang.Class<?> wildcardClass8 = variance1.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test2042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2042");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        boolean boolean16 = variance10.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance19.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean24 = variance23.isBiasCorrected();
        double[] doubleArray26 = new double[] { 100 };
        variance23.incrementAll(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        variance33.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        double double50 = variance33.evaluate(doubleArray48);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance52.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        variance56.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        double double73 = variance56.evaluate(doubleArray71);
        double double74 = variance52.evaluate(doubleArray71);
        double double76 = variance33.evaluate(doubleArray71, (double) 100.0f);
        double double77 = variance31.evaluate(doubleArray71);
        variance29.setData(doubleArray71);
        double double80 = variance23.evaluate(doubleArray71, (double) (byte) -1);
        double double82 = variance19.evaluate(doubleArray71, (double) 1.0f);
        double double83 = variance17.evaluate(doubleArray71);
        double double85 = variance8.evaluate(doubleArray71, (double) 10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(variance17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
    }

    @Test
    public void test2043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2043");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        double double8 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        boolean boolean16 = variance10.equals((java.lang.Object) 10);
        variance10.increment((double) (short) 10);
        variance10.clear();
        double double20 = variance10.getResult();
        double double21 = variance10.getResult();
        long long22 = variance10.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance10);
        long long24 = variance1.getN();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
    }

    @Test
    public void test2044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2044");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.clear();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance5.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance5.copy();
        boolean boolean9 = variance8.isBiasCorrected();
        long long10 = variance8.getN();
        variance8.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = variance14.equals(obj32);
        double[] doubleArray34 = variance14.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance36.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = variance36.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        variance41.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        double[] doubleArray56 = new double[] { (-1), 100.0f };
        variance52.incrementAll(doubleArray56);
        double double58 = variance41.evaluate(doubleArray56);
        variance36.incrementAll(doubleArray56);
        variance14.incrementAll(doubleArray56);
        double double62 = variance8.evaluate(doubleArray56, (double) '4');
        variance1.incrementAll(doubleArray56, (int) (byte) 0, (int) (short) 1);
        variance1.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double[] doubleArray70 = variance69.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance69);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        double[] doubleArray80 = new double[] { (-1), 100.0f };
        variance76.incrementAll(doubleArray80);
        double double82 = variance76.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance76);
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance83);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance84);
        // The following exception was thrown during execution in test generation
        try {
            double double86 = variance84.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNotNull(variance39);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
    }

    @Test
    public void test2045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2045");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        variance1.increment((double) 0);
        double double34 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance36.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = variance36.copy();
        variance36.clear();
        variance36.increment((double) (short) 1);
        double double43 = variance36.getResult();
        long long44 = variance36.getN();
        java.lang.Class<?> wildcardClass45 = variance36.getClass();
        boolean boolean46 = variance1.equals((java.lang.Object) wildcardClass45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance48.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = variance48.copy();
        boolean boolean52 = variance51.isBiasCorrected();
        double[] doubleArray53 = variance51.getData();
        boolean boolean54 = variance51.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance51);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        long long66 = variance60.getN();
        boolean boolean67 = variance60.isBiasCorrected();
        double double68 = variance60.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance60.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance69);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance72.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = variance72.copy();
        variance72.clear();
        variance72.increment((double) (short) 1);
        double double79 = variance72.getResult();
        variance72.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment85 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment85);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance83, variance86);
        boolean boolean88 = variance83.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance90 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean91 = variance90.isBiasCorrected();
        double[] doubleArray93 = new double[] { 100 };
        variance90.incrementAll(doubleArray93);
        double double95 = variance83.evaluate(doubleArray93);
        variance72.setData(doubleArray93);
        variance51.setData(doubleArray93);
        variance1.setData(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(variance39);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(variance51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(doubleArray53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 2L + "'", long66 == 2L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertNotNull(variance75);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[100.0]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
    }

    @Test
    public void test2046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2046");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        double double11 = variance1.getResult();
        double double12 = variance1.getResult();
        long long13 = variance1.getN();
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        boolean boolean22 = variance1.equals((java.lang.Object) variance20);
        double[] doubleArray23 = variance20.getData();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(doubleArray23);
    }

    @Test
    public void test2047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2047");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        double[] doubleArray45 = variance1.getData();
        double[] doubleArray46 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance48.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        variance48.setData(doubleArray59);
        variance1.setData(doubleArray59);
        long long63 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray45);
        org.junit.Assert.assertNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
    }

    @Test
    public void test2048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2048");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.increment((double) (byte) 10);
        variance1.increment((double) (short) 100);
        variance1.increment(5100.5d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        // The following exception was thrown during execution in test generation
        try {
            double double17 = variance16.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test2049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2049");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        double double8 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        boolean boolean16 = variance10.equals((java.lang.Object) 10);
        variance10.increment((double) (short) 10);
        variance10.clear();
        double double20 = variance10.getResult();
        double double21 = variance10.getResult();
        long long22 = variance10.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance10);
        variance10.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance10);
        double double27 = variance26.getResult();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    }

    @Test
    public void test2050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2050");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance43.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance48.evaluate(doubleArray63);
        variance43.incrementAll(doubleArray63);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = variance43.copy();
        variance43.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance43);
        boolean boolean71 = variance4.isBiasCorrected();
        variance4.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(variance67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test2051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2051");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance4.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        double double26 = variance4.evaluate(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance29.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        variance33.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        double double50 = variance33.evaluate(doubleArray48);
        double double51 = variance29.evaluate(doubleArray48);
        double double52 = variance27.evaluate(doubleArray48);
        double double53 = variance1.evaluate(doubleArray48);
        double[] doubleArray54 = variance1.getData();
        variance1.setBiasCorrected(true);
        long long57 = variance1.getN();
        variance1.clear();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2550.25d + "'", double26 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
    }

    @Test
    public void test2052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2052");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        double double49 = variance48.getResult();
        variance48.increment((double) 'a');
        variance48.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
    }

    @Test
    public void test2053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2053");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        variance1.increment(5100.5d);
        double double30 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = variance32.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance35);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance35.copy();
        variance37.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance42.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        variance42.incrementAll(doubleArray62);
        variance40.setData(doubleArray62);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance40);
        variance67.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance71.increment((double) 10);
        variance71.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance71);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = variance67.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance37);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(variance35);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertNotNull(variance76);
    }

    @Test
    public void test2054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2054");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.increment((double) (byte) 10);
        variance1.increment((double) (short) 100);
        variance1.increment(5100.5d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = variance16.copy();
        variance17.clear();
        double[] doubleArray19 = variance17.getData();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance17);
        org.junit.Assert.assertNull(doubleArray19);
    }

    @Test
    public void test2055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2055");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        double[] doubleArray12 = new double[] { (-1), 100.0f };
        variance8.incrementAll(doubleArray12);
        variance1.setData(doubleArray12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        variance16.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance16);
        variance23.clear();
        variance23.increment((double) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance30.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = variance30.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        variance30.incrementAll(doubleArray50);
        variance28.setData(doubleArray50);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance28);
        variance55.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        variance59.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance59);
        double double64 = variance59.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance66.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance66.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        variance71.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment81);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance79, variance82);
        double[] doubleArray86 = new double[] { (-1), 100.0f };
        variance82.incrementAll(doubleArray86);
        double double88 = variance71.evaluate(doubleArray86);
        variance66.incrementAll(doubleArray86);
        double double91 = variance59.evaluate(doubleArray86, (double) (byte) 10);
        variance23.setData(doubleArray86);
        boolean boolean93 = variance1.equals((java.lang.Object) variance23);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance33);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 5100.5d + "'", double91 == 5100.5d);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test2056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2056");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        double[] doubleArray50 = new double[] { 1.0d, 10.0d, (byte) 100 };
        double double53 = variance45.evaluate(doubleArray50, 0, 0);
        boolean boolean54 = variance45.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        long long65 = variance59.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean68 = variance67.isBiasCorrected();
        double[] doubleArray70 = new double[] { 100 };
        variance67.incrementAll(doubleArray70);
        boolean boolean72 = variance59.equals((java.lang.Object) doubleArray70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance59);
        double[] doubleArray74 = variance45.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 2L + "'", long65 == 2L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(doubleArray74);
    }

    @Test
    public void test2057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2057");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        variance4.clear();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance4.copy();
        double[] doubleArray9 = variance8.getData();
        variance8.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test2058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2058");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double double28 = variance23.getResult();
        double[] doubleArray34 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double36 = variance23.evaluate(doubleArray34, (double) (short) 1);
        variance1.setData(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = variance38.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        boolean boolean47 = variance41.equals((java.lang.Object) 10);
        variance41.increment((double) (short) 10);
        variance41.clear();
        variance41.clear();
        double[] doubleArray52 = variance41.getData();
        variance41.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance41);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1030428.01d + "'", double36 == 1030428.01d);
        org.junit.Assert.assertNotNull(variance38);
        org.junit.Assert.assertNotNull(variance39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(doubleArray52);
    }

    @Test
    public void test2059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2059");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        variance36.clear();
        boolean boolean43 = variance31.equals((java.lang.Object) variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance36);
        variance1.increment((double) (short) -1);
        variance1.increment(1347.5555555555554d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test2060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2060");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance11);
        double[] doubleArray14 = variance13.getData();
        double[] doubleArray15 = variance13.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance17.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean22 = variance21.isBiasCorrected();
        double[] doubleArray24 = new double[] { 100 };
        variance21.incrementAll(doubleArray24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        variance31.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        double[] doubleArray46 = new double[] { (-1), 100.0f };
        variance42.incrementAll(doubleArray46);
        double double48 = variance31.evaluate(doubleArray46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        variance54.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        double[] doubleArray69 = new double[] { (-1), 100.0f };
        variance65.incrementAll(doubleArray69);
        double double71 = variance54.evaluate(doubleArray69);
        double double72 = variance50.evaluate(doubleArray69);
        double double74 = variance31.evaluate(doubleArray69, (double) 100.0f);
        double double75 = variance29.evaluate(doubleArray69);
        variance27.setData(doubleArray69);
        double double78 = variance21.evaluate(doubleArray69, (double) (byte) -1);
        double double80 = variance17.evaluate(doubleArray69, (double) 1.0f);
        boolean boolean81 = variance13.equals((java.lang.Object) variance17);
        double double82 = variance17.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance17);
        long long84 = variance1.getN();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNull(doubleArray14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 0L + "'", long84 == 0L);
    }

    @Test
    public void test2061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2061");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        double double13 = variance4.getResult();
        double[] doubleArray14 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2550.25d + "'", double13 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray14);
    }

    @Test
    public void test2062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2062");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance5);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        variance17.clear();
        boolean boolean24 = variance12.equals((java.lang.Object) variance17);
        variance12.increment((double) 10L);
        double[] doubleArray27 = variance12.getData();
        boolean boolean28 = variance12.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        variance31.setBiasCorrected(false);
        variance31.increment(0.0d);
        variance31.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        variance43.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        double[] doubleArray58 = new double[] { (-1), 100.0f };
        variance54.incrementAll(doubleArray58);
        double double60 = variance43.evaluate(doubleArray58);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance62.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        variance66.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance74, variance77);
        double[] doubleArray81 = new double[] { (-1), 100.0f };
        variance77.incrementAll(doubleArray81);
        double double83 = variance66.evaluate(doubleArray81);
        double double84 = variance62.evaluate(doubleArray81);
        double double86 = variance43.evaluate(doubleArray81, (double) 100.0f);
        double double88 = variance31.evaluate(doubleArray81, (double) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            variance1.setData(doubleArray81, (int) (short) -1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
    }

    @Test
    public void test2063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2063");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray26 = variance25.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        double double35 = variance28.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance28.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        variance39.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance39.copy();
        double double48 = variance39.getResult();
        variance39.setBiasCorrected(false);
        variance39.increment(2025.0d);
        long long53 = variance39.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = variance39.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        long long65 = variance59.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean68 = variance67.isBiasCorrected();
        double[] doubleArray70 = new double[] { 100 };
        variance67.incrementAll(doubleArray70);
        boolean boolean72 = variance59.equals((java.lang.Object) doubleArray70);
        double double73 = variance39.evaluate(doubleArray70);
        double double75 = variance37.evaluate(doubleArray70, (double) 100.0f);
        variance1.setData(doubleArray70);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = variance1.copy();
        long long78 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(doubleArray26);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertNotNull(variance47);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertNotNull(variance54);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 2L + "'", long65 == 2L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(variance77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
    }

    @Test
    public void test2064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2064");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double[] doubleArray8 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        boolean boolean16 = variance10.equals((java.lang.Object) 10);
        variance10.increment((double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        variance20.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        double[] doubleArray35 = new double[] { (-1), 100.0f };
        variance31.incrementAll(doubleArray35);
        double double37 = variance20.evaluate(doubleArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = variance20.equals(obj38);
        variance20.setBiasCorrected(true);
        double[] doubleArray48 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double50 = variance20.evaluate(doubleArray48, 100.0d);
        double double51 = variance10.evaluate(doubleArray48);
        boolean boolean52 = variance6.equals((java.lang.Object) double51);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = variance53.copy();
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2550.25d + "'", double37 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1617.066666666667d + "'", double50 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1347.5555555555554d + "'", double51 == 1347.5555555555554d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(variance54);
    }

    @Test
    public void test2065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2065");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        double double51 = variance5.evaluate(doubleArray45);
        variance3.setData(doubleArray45);
        double double54 = variance1.evaluate(doubleArray45, (double) ' ');
        double double55 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment59);
        variance60.increment(10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        boolean boolean64 = variance60.isBiasCorrected();
        long long65 = variance60.getN();
        // The following exception was thrown during execution in test generation
        try {
            double double66 = variance60.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(variance57);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
    }

    @Test
    public void test2066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2066");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        double double36 = variance4.evaluate(doubleArray30, (double) (short) 10);
        variance4.clear();
        variance4.increment((double) (short) 0);
        double double40 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance44.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance44.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        variance44.incrementAll(doubleArray64);
        variance42.setData(doubleArray64);
        boolean boolean69 = variance4.equals((java.lang.Object) doubleArray64);
        boolean boolean70 = variance4.isBiasCorrected();
        variance4.setBiasCorrected(false);
        boolean boolean73 = variance4.isBiasCorrected();
        long long74 = variance4.getN();
        boolean boolean75 = variance4.isBiasCorrected();
        variance4.increment((double) 2L);
        variance4.clear();
        double[] doubleArray79 = variance4.getData();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(variance47);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1L + "'", long74 == 1L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(doubleArray79);
    }

    @Test
    public void test2067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2067");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        long long3 = variance1.getN();
        variance1.clear();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        double[] doubleArray24 = new double[] { (-1), 100.0f };
        variance20.incrementAll(doubleArray24);
        variance20.clear();
        boolean boolean27 = variance15.equals((java.lang.Object) variance20);
        boolean boolean28 = variance20.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance57.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance61.evaluate(doubleArray76);
        double double79 = variance57.evaluate(doubleArray76);
        double double81 = variance38.evaluate(doubleArray76, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = variance38.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance82);
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment87 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment87);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance85, variance88);
        double[] doubleArray92 = new double[] { (-1), 100.0f };
        variance88.incrementAll(doubleArray92);
        double double94 = variance83.evaluate(doubleArray92);
        variance30.setData(doubleArray92);
        double double97 = variance20.evaluate(doubleArray92, (double) 1);
        variance1.setData(doubleArray92);
        boolean boolean99 = variance1.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertNotNull(variance82);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2550.25d + "'", double94 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 2550.25d + "'", double97 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test2068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2068");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        variance1.clear();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        // The following exception was thrown during execution in test generation
        try {
            double double7 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test2069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2069");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        variance59.incrementAll(doubleArray79);
        variance57.setData(doubleArray79);
        double double85 = variance53.evaluate(doubleArray79, (double) (short) 10);
        variance46.incrementAll(doubleArray79);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance46.copy();
        variance87.setBiasCorrected(false);
        long long90 = variance87.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertNotNull(variance87);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 2L + "'", long90 == 2L);
    }

    @Test
    public void test2070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2070");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        double double55 = variance12.evaluate(doubleArray50, (double) 100.0f);
        double double56 = variance10.evaluate(doubleArray50);
        variance8.setData(doubleArray50);
        variance6.incrementAll(doubleArray50);
        variance6.clear();
        variance6.clear();
        double[] doubleArray61 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray61);
    }

    @Test
    public void test2071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2071");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        double double11 = variance1.getResult();
        double double12 = variance1.getResult();
        long long13 = variance1.getN();
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        boolean boolean22 = variance1.equals((java.lang.Object) variance20);
        double[] doubleArray23 = variance1.getData();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(doubleArray23);
    }

    @Test
    public void test2072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2072");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        boolean boolean9 = variance1.equals((java.lang.Object) variance8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance14.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = variance20.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        variance25.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        double double42 = variance25.evaluate(doubleArray40);
        variance20.incrementAll(doubleArray40);
        variance18.setData(doubleArray40);
        double double46 = variance14.evaluate(doubleArray40, (double) (short) 10);
        variance8.incrementAll(doubleArray40);
        double[] doubleArray48 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance8.incrementAll(doubleArray48, 1, 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertNotNull(variance23);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
    }

    @Test
    public void test2073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2073");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        variance29.clear();
        java.lang.Class<?> wildcardClass32 = variance29.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test2074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2074");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        variance1.setBiasCorrected(false);
        long long8 = variance1.getN();
        variance1.increment(2550.2500000009313d);
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
    }

    @Test
    public void test2075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2075");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        variance9.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        double[] doubleArray24 = new double[] { (-1), 100.0f };
        variance20.incrementAll(doubleArray24);
        double double26 = variance9.evaluate(doubleArray24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance28.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        variance32.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        double[] doubleArray47 = new double[] { (-1), 100.0f };
        variance43.incrementAll(doubleArray47);
        double double49 = variance32.evaluate(doubleArray47);
        double double50 = variance28.evaluate(doubleArray47);
        double double52 = variance9.evaluate(doubleArray47, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance9.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance54.evaluate(doubleArray63);
        variance1.setData(doubleArray63);
        variance1.setBiasCorrected(true);
        variance1.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        variance72.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance72);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = variance72.copy();
        double double81 = variance72.getResult();
        variance72.setBiasCorrected(false);
        double double84 = variance72.getResult();
        boolean boolean85 = variance1.equals((java.lang.Object) variance72);
        double[] doubleArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double90 = variance1.evaluate(doubleArray86, 1624668.890625d, (int) 'a', (int) ' ');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2550.25d + "'", double26 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertNotNull(variance53);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(variance80);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test2076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2076");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        double[] doubleArray20 = variance1.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(doubleArray20);
    }

    @Test
    public void test2077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2077");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        long long11 = variance4.getN();
        long long12 = variance4.getN();
        double double13 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance4.copy();
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        double double35 = variance18.evaluate(doubleArray33);
        java.lang.Object obj36 = null;
        boolean boolean37 = variance18.equals(obj36);
        variance18.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance49.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = variance49.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        variance54.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        double[] doubleArray69 = new double[] { (-1), 100.0f };
        variance65.incrementAll(doubleArray69);
        double double71 = variance54.evaluate(doubleArray69);
        variance49.incrementAll(doubleArray69);
        variance18.setData(doubleArray69);
        boolean boolean74 = variance18.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance18);
        double[] doubleArray76 = variance75.getData();
        variance14.incrementAll(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2550.25d + "'", double13 == 2550.25d);
        org.junit.Assert.assertNotNull(variance14);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(variance52);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
    }

    @Test
    public void test2078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2078");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double[] doubleArray31 = new double[] { (-1), 100.0f };
        variance27.incrementAll(doubleArray31);
        variance20.setData(doubleArray31);
        variance1.incrementAll(doubleArray31);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance37.increment(4050.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0]");
    }

    @Test
    public void test2079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2079");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        boolean boolean9 = variance8.isBiasCorrected();
        double[] doubleArray10 = null;
        variance8.setData(doubleArray10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        variance13.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        double[] doubleArray28 = new double[] { (-1), 100.0f };
        variance24.incrementAll(doubleArray28);
        double double30 = variance13.evaluate(doubleArray28);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        variance36.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        double[] doubleArray51 = new double[] { (-1), 100.0f };
        variance47.incrementAll(doubleArray51);
        double double53 = variance36.evaluate(doubleArray51);
        double double54 = variance32.evaluate(doubleArray51);
        double double56 = variance13.evaluate(doubleArray51, (double) 100.0f);
        double[] doubleArray57 = variance13.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = variance13.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance58);
        variance8.increment(1617.0666666666664d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2550.25d + "'", double30 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray57);
        org.junit.Assert.assertNotNull(variance58);
    }

    @Test
    public void test2080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2080");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        variance1.clear();
        variance1.increment((double) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        double double35 = variance1.evaluate(doubleArray30);
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
    }

    @Test
    public void test2081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2081");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double[] doubleArray2 = variance1.getData();
        double double3 = variance1.getResult();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
    }

    @Test
    public void test2082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2082");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        variance1.setBiasCorrected(true);
        long long34 = variance1.getN();
        variance1.setBiasCorrected(true);
        long long37 = variance1.getN();
        double[] doubleArray38 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance40.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = variance40.copy();
        variance40.clear();
        variance40.increment((double) (short) 1);
        double double47 = variance40.getResult();
        long long48 = variance40.getN();
        double[] doubleArray49 = null;
        variance40.setData(doubleArray49);
        double double51 = variance40.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance53.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = variance53.copy();
        variance53.increment((double) 100.0f);
        boolean boolean59 = variance53.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance53);
        boolean boolean62 = variance1.equals((java.lang.Object) variance53);
        long long63 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertNotNull(variance43);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1L + "'", long48 == 1L);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(variance56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(variance60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
    }

    @Test
    public void test2083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2083");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        boolean boolean32 = variance1.isBiasCorrected();
        boolean boolean33 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test2084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2084");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double double28 = variance23.getResult();
        double[] doubleArray34 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double36 = variance23.evaluate(doubleArray34, (double) (short) 1);
        variance1.setData(doubleArray34);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance39.clear();
        double double41 = variance39.getResult();
        variance39.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1030428.01d + "'", double36 == 1030428.01d);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
    }

    @Test
    public void test2085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2085");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double[] doubleArray8 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean15 = variance14.isBiasCorrected();
        double[] doubleArray17 = new double[] { 100 };
        variance14.incrementAll(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        double double67 = variance24.evaluate(doubleArray62, (double) 100.0f);
        double double68 = variance22.evaluate(doubleArray62);
        variance20.setData(doubleArray62);
        double double71 = variance14.evaluate(doubleArray62, (double) (byte) -1);
        double double73 = variance10.evaluate(doubleArray62, (double) 1.0f);
        boolean boolean74 = variance6.equals((java.lang.Object) variance10);
        variance10.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance10);
        variance77.setBiasCorrected(false);
        double[] doubleArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double84 = variance77.evaluate(doubleArray80, 1.0d, (int) ' ', (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test2086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2086");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance24.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        double double46 = variance24.evaluate(doubleArray43);
        double double48 = variance5.evaluate(doubleArray43, (double) 100.0f);
        double double49 = variance3.evaluate(doubleArray43);
        variance1.setData(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        long long61 = variance55.getN();
        boolean boolean62 = variance55.isBiasCorrected();
        double double63 = variance55.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = variance55.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance64);
        double double66 = variance64.evaluate();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 2L + "'", long61 == 2L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertNotNull(variance64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
    }

    @Test
    public void test2087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2087");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        boolean boolean21 = variance13.isBiasCorrected();
        variance13.increment((double) 10);
        double double24 = variance13.getResult();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
    }

    @Test
    public void test2088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2088");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment((double) (short) -1);
        long long28 = variance1.getN();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 4L + "'", long28 == 4L);
    }

    @Test
    public void test2089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2089");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.clear();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance5.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance5.copy();
        boolean boolean9 = variance8.isBiasCorrected();
        long long10 = variance8.getN();
        variance8.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = variance14.equals(obj32);
        double[] doubleArray34 = variance14.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance36.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = variance36.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        variance41.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        double[] doubleArray56 = new double[] { (-1), 100.0f };
        variance52.incrementAll(doubleArray56);
        double double58 = variance41.evaluate(doubleArray56);
        variance36.incrementAll(doubleArray56);
        variance14.incrementAll(doubleArray56);
        double double62 = variance8.evaluate(doubleArray56, (double) '4');
        variance1.incrementAll(doubleArray56, (int) (byte) 0, (int) (short) 1);
        variance1.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double[] doubleArray70 = variance69.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance69);
        long long72 = variance69.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = variance69.copy();
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNotNull(variance39);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray70);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 2L + "'", long72 == 2L);
        org.junit.Assert.assertNotNull(variance73);
    }

    @Test
    public void test2090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2090");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        variance1.increment(0.0d);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        long long22 = variance16.getN();
        long long23 = variance16.getN();
        long long24 = variance16.getN();
        variance16.increment(1347.5555555555554d);
        long long27 = variance16.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        double double46 = variance29.evaluate(doubleArray44);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance49.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = variance49.copy();
        boolean boolean53 = variance52.isBiasCorrected();
        variance52.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance65.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = variance65.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        variance70.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment80);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance78, variance81);
        double[] doubleArray85 = new double[] { (-1), 100.0f };
        variance81.incrementAll(doubleArray85);
        double double87 = variance70.evaluate(doubleArray85);
        variance65.incrementAll(doubleArray85);
        variance63.setData(doubleArray85);
        double double91 = variance59.evaluate(doubleArray85, (double) (short) 10);
        variance52.setData(doubleArray85, 1, 1);
        double double95 = variance29.evaluate(doubleArray85);
        variance16.incrementAll(doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            double double99 = variance1.evaluate(doubleArray85, (int) (byte) -1, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: start position (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2L + "'", long22 == 2L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 3L + "'", long27 == 3L);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertNotNull(variance52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(variance61);
        org.junit.Assert.assertNotNull(variance68);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2550.25d + "'", double91 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 2550.25d + "'", double95 == 2550.25d);
    }

    @Test
    public void test2091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2091");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray2 = variance1.getData();
        long long3 = variance1.getN();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    }

    @Test
    public void test2092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2092");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        double double55 = variance12.evaluate(doubleArray50, (double) 100.0f);
        double double56 = variance10.evaluate(doubleArray50);
        variance8.setData(doubleArray50);
        double double59 = variance1.evaluate(doubleArray50, (double) (-1));
        variance1.increment(0.0d);
        variance1.increment((-1.0d));
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance66.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance66.copy();
        boolean boolean70 = variance1.equals((java.lang.Object) variance69);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = variance1.copy();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(variance71);
    }

    @Test
    public void test2093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2093");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        variance1.setBiasCorrected(true);
        long long27 = variance1.getN();
        variance1.setBiasCorrected(true);
        java.lang.Class<?> wildcardClass30 = variance1.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 3L + "'", long27 == 3L);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test2094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2094");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        variance59.incrementAll(doubleArray79);
        variance57.setData(doubleArray79);
        double double85 = variance53.evaluate(doubleArray79, (double) (short) 10);
        variance46.incrementAll(doubleArray79);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance46.copy();
        variance46.setBiasCorrected(true);
        variance46.setBiasCorrected(false);
        double[] doubleArray92 = variance46.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertNotNull(variance87);
        org.junit.Assert.assertNull(doubleArray92);
    }

    @Test
    public void test2095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2095");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance46.evaluate(doubleArray55);
        variance46.increment(Double.NaN);
        boolean boolean60 = variance46.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        variance62.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        double double79 = variance62.evaluate(doubleArray77);
        java.lang.Object obj80 = null;
        boolean boolean81 = variance62.equals(obj80);
        variance62.setBiasCorrected(true);
        double[] doubleArray90 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double92 = variance62.evaluate(doubleArray90, 100.0d);
        double double93 = variance46.evaluate(doubleArray90);
        org.apache.commons.math.stat.descriptive.moment.Variance variance94 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance95 = variance46.copy();
        boolean boolean96 = variance46.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1617.066666666667d + "'", double92 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1347.5555555555554d + "'", double93 == 1347.5555555555554d);
        org.junit.Assert.assertNotNull(variance95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test2096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2096");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        double[] doubleArray7 = variance6.getData();
        variance6.clear();
        double[] doubleArray9 = variance6.getData();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test2097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2097");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        variance20.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        double[] doubleArray35 = new double[] { (-1), 100.0f };
        variance31.incrementAll(doubleArray35);
        double double37 = variance20.evaluate(doubleArray35);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance39.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        variance43.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        double[] doubleArray58 = new double[] { (-1), 100.0f };
        variance54.incrementAll(doubleArray58);
        double double60 = variance43.evaluate(doubleArray58);
        double double61 = variance39.evaluate(doubleArray58);
        double double63 = variance20.evaluate(doubleArray58, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = variance20.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance64);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment69);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        double[] doubleArray74 = new double[] { (-1), 100.0f };
        variance70.incrementAll(doubleArray74);
        double double76 = variance65.evaluate(doubleArray74);
        variance12.setData(doubleArray74);
        variance10.incrementAll(doubleArray74, 0, (int) (short) 0);
        variance10.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance10);
        double[] doubleArray83 = variance10.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance10);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2550.25d + "'", double37 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertNotNull(variance64);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray83);
    }

    @Test
    public void test2098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2098");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        double[] doubleArray21 = variance1.getData();
        variance1.clear();
        variance1.setBiasCorrected(true);
        double double25 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
    }

    @Test
    public void test2099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2099");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        variance1.setBiasCorrected(true);
        long long34 = variance1.getN();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        double[] doubleArray46 = new double[] { (-1), 100.0f };
        variance42.incrementAll(doubleArray46);
        long long48 = variance42.getN();
        boolean boolean49 = variance42.isBiasCorrected();
        double double50 = variance42.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = variance42.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        variance53.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        double[] doubleArray68 = new double[] { (-1), 100.0f };
        variance64.incrementAll(doubleArray68);
        double double70 = variance53.evaluate(doubleArray68);
        java.lang.Object obj71 = null;
        boolean boolean72 = variance53.equals(obj71);
        variance53.setBiasCorrected(true);
        double[] doubleArray81 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double83 = variance53.evaluate(doubleArray81, 100.0d);
        variance51.setData(doubleArray81, (int) (byte) 1, 0);
        boolean boolean87 = variance37.equals((java.lang.Object) doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double double88 = variance37.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 2L + "'", long48 == 2L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertNotNull(variance51);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1617.066666666667d + "'", double83 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test2100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2100");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        boolean boolean9 = variance8.isBiasCorrected();
        double[] doubleArray10 = null;
        variance8.setData(doubleArray10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        variance12.setBiasCorrected(false);
        long long15 = variance12.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = variance20.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        variance25.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        double double42 = variance25.evaluate(doubleArray40);
        variance20.incrementAll(doubleArray40);
        variance18.setData(doubleArray40);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance18);
        variance45.increment((double) (-1));
        double double48 = variance45.evaluate();
        double double49 = variance45.evaluate();
        long long50 = variance45.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance52.increment((double) 10);
        variance52.clear();
        variance52.increment((double) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance61.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = variance61.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        variance66.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance74, variance77);
        double[] doubleArray81 = new double[] { (-1), 100.0f };
        variance77.incrementAll(doubleArray81);
        double double83 = variance66.evaluate(doubleArray81);
        variance61.incrementAll(doubleArray81);
        variance59.setData(doubleArray81);
        double double86 = variance52.evaluate(doubleArray81);
        double double87 = variance45.evaluate(doubleArray81);
        variance12.incrementAll(doubleArray81);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(variance23);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 5100.5d + "'", double48 == 5100.5d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 5100.5d + "'", double49 == 5100.5d);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNotNull(variance64);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 5100.5d + "'", double87 == 5100.5d);
    }

    @Test
    public void test2101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2101");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        // The following exception was thrown during execution in test generation
        try {
            double double4 = variance3.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2102");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean23 = variance8.equals((java.lang.Object) variance22);
        double[] doubleArray24 = variance22.getData();
        double double25 = variance22.getResult();
        boolean boolean26 = variance22.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance49.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        variance53.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        double[] doubleArray68 = new double[] { (-1), 100.0f };
        variance64.incrementAll(doubleArray68);
        double double70 = variance53.evaluate(doubleArray68);
        double double71 = variance49.evaluate(doubleArray68);
        double double73 = variance30.evaluate(doubleArray68, (double) 100.0f);
        double double74 = variance28.evaluate(doubleArray68);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = variance28.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance75);
        boolean boolean77 = variance22.equals((java.lang.Object) variance76);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = variance76.copy();
        variance78.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = variance78.copy();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertNotNull(variance75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(variance78);
        org.junit.Assert.assertNotNull(variance81);
    }

    @Test
    public void test2103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2103");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        variance36.clear();
        boolean boolean43 = variance31.equals((java.lang.Object) variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance36);
        double[] doubleArray45 = variance1.getData();
        double[] doubleArray46 = variance1.getData();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(doubleArray45);
        org.junit.Assert.assertNull(doubleArray46);
    }

    @Test
    public void test2104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2104");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        variance1.setBiasCorrected(false);
        long long8 = variance1.getN();
        variance1.increment((double) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance1.copy();
        boolean boolean12 = variance11.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2105");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance28.increment((double) (-1));
        double double31 = variance28.evaluate();
        double double32 = variance28.evaluate();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        double double51 = variance34.evaluate(doubleArray49);
        java.lang.Object obj52 = null;
        boolean boolean53 = variance34.equals(obj52);
        double[] doubleArray54 = variance34.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance56.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = variance56.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance61.evaluate(doubleArray76);
        variance56.incrementAll(doubleArray76);
        variance34.incrementAll(doubleArray76);
        boolean boolean81 = variance34.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance34);
        variance34.increment(25.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long88 = variance87.getN();
        long long89 = variance87.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance87);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 5100.5d + "'", double31 == 5100.5d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 5100.5d + "'", double32 == 5100.5d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(doubleArray54);
        org.junit.Assert.assertNotNull(variance59);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 0L + "'", long88 == 0L);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 0L + "'", long89 == 0L);
    }

    @Test
    public void test2106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2106");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        boolean boolean11 = variance4.isBiasCorrected();
        double double12 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance14.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean19 = variance18.isBiasCorrected();
        double[] doubleArray21 = new double[] { 100 };
        variance18.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance47.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        double double68 = variance51.evaluate(doubleArray66);
        double double69 = variance47.evaluate(doubleArray66);
        double double71 = variance28.evaluate(doubleArray66, (double) 100.0f);
        double double72 = variance26.evaluate(doubleArray66);
        variance24.setData(doubleArray66);
        double double75 = variance18.evaluate(doubleArray66, (double) (byte) -1);
        double double77 = variance14.evaluate(doubleArray66, (double) 1.0f);
        variance4.incrementAll(doubleArray66);
        long long79 = variance4.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2550.25d + "'", double12 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 4L + "'", long79 == 4L);
    }

    @Test
    public void test2107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2107");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        double double51 = variance5.evaluate(doubleArray45);
        variance3.setData(doubleArray45);
        double double54 = variance1.evaluate(doubleArray45, (double) ' ');
        double double55 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = variance1.copy();
        double double58 = variance1.getResult();
        double[] doubleArray59 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(variance57);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNull(doubleArray59);
    }

    @Test
    public void test2108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2108");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        double[] doubleArray7 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance11.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance11.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        variance16.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double[] doubleArray31 = new double[] { (-1), 100.0f };
        variance27.incrementAll(doubleArray31);
        double double33 = variance16.evaluate(doubleArray31);
        variance11.incrementAll(doubleArray31);
        variance9.setData(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance9);
        variance36.increment((double) (-1));
        double double39 = variance36.evaluate();
        double double40 = variance36.evaluate();
        long long41 = variance36.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        variance43.clear();
        variance43.increment((double) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance52.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance52.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        variance57.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment67);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance65, variance68);
        double[] doubleArray72 = new double[] { (-1), 100.0f };
        variance68.incrementAll(doubleArray72);
        double double74 = variance57.evaluate(doubleArray72);
        variance52.incrementAll(doubleArray72);
        variance50.setData(doubleArray72);
        double double77 = variance43.evaluate(doubleArray72);
        double double78 = variance36.evaluate(doubleArray72);
        variance1.setData(doubleArray72);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNotNull(variance14);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2550.25d + "'", double33 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 5100.5d + "'", double39 == 5100.5d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 5100.5d + "'", double40 == 5100.5d);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 5100.5d + "'", double78 == 5100.5d);
    }

    @Test
    public void test2109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2109");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        variance43.increment(0.0d);
        boolean boolean68 = variance4.equals((java.lang.Object) 0.0d);
        double[] doubleArray69 = variance4.getData();
        variance4.increment(2550.25d);
        variance4.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(doubleArray69);
    }

    @Test
    public void test2110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2110");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double double16 = variance11.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance11);
        double double18 = variance1.getResult();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test2111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2111");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        variance1.increment(5100.5d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = variance31.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        variance36.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        double[] doubleArray51 = new double[] { (-1), 100.0f };
        variance47.incrementAll(doubleArray51);
        double double53 = variance36.evaluate(doubleArray51);
        variance31.incrementAll(doubleArray51);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance31.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance55);
        double[] doubleArray57 = variance55.getData();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertNotNull(variance34);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
    }

    @Test
    public void test2112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2112");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        double double9 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance11.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance11.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        variance16.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double[] doubleArray31 = new double[] { (-1), 100.0f };
        variance27.incrementAll(doubleArray31);
        double double33 = variance16.evaluate(doubleArray31);
        variance11.incrementAll(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        variance39.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance39.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance50.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        variance55.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        double[] doubleArray70 = new double[] { (-1), 100.0f };
        variance66.incrementAll(doubleArray70);
        double double72 = variance55.evaluate(doubleArray70);
        variance50.incrementAll(doubleArray70);
        variance11.incrementAll(doubleArray70);
        double double76 = variance1.evaluate(doubleArray70, (double) (-1.0f));
        double[] doubleArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double81 = variance1.evaluate(doubleArray77, 1624668.890625d, (int) (short) 10, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(variance14);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2550.25d + "'", double33 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance47);
        org.junit.Assert.assertNotNull(variance53);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
    }

    @Test
    public void test2113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2113");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        double double11 = variance1.getResult();
        double double12 = variance1.getResult();
        long long13 = variance1.getN();
        variance1.setBiasCorrected(false);
        // The following exception was thrown during execution in test generation
        try {
            double double16 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test2114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2114");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.clear();
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        variance16.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        variance28.clear();
        boolean boolean35 = variance23.equals((java.lang.Object) variance28);
        variance28.increment((double) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        variance41.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        double[] doubleArray56 = new double[] { (-1), 100.0f };
        variance52.incrementAll(doubleArray56);
        double double58 = variance41.evaluate(doubleArray56);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance60.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        double double82 = variance60.evaluate(doubleArray79);
        double double84 = variance41.evaluate(doubleArray79, (double) 100.0f);
        double double85 = variance39.evaluate(doubleArray79);
        variance28.incrementAll(doubleArray79);
        double double87 = variance13.evaluate(doubleArray79);
        double double88 = variance13.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double88));
    }

    @Test
    public void test2115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2115");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        double[] doubleArray6 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) (-1L));
        variance8.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        variance45.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        double[] doubleArray60 = new double[] { (-1), 100.0f };
        variance56.incrementAll(doubleArray60);
        double double62 = variance45.evaluate(doubleArray60);
        double double63 = variance41.evaluate(doubleArray60);
        double double65 = variance22.evaluate(doubleArray60, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = variance22.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance67.evaluate(doubleArray76);
        variance14.setData(doubleArray76);
        double double80 = variance8.evaluate(doubleArray76);
        variance4.setData(doubleArray76);
        variance4.setBiasCorrected(false);
        double double84 = variance4.getResult();
        variance4.clear();
        long long86 = variance4.getN();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(variance66);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 0L + "'", long86 == 0L);
    }

    @Test
    public void test2116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2116");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double[] doubleArray8 = variance6.getData();
        java.lang.Object obj9 = null;
        boolean boolean10 = variance6.equals(obj9);
        double[] doubleArray11 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance6.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance17.getResult();
        long long24 = variance17.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean28 = variance27.isBiasCorrected();
        double[] doubleArray30 = new double[] { 100 };
        variance27.incrementAll(doubleArray30);
        variance17.incrementAll(doubleArray30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance17);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0]");
    }

    @Test
    public void test2117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2117");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        variance1.increment((double) 0L);
        boolean boolean10 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        long long14 = variance12.getN();
        double[] doubleArray15 = variance12.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance17);
        variance17.clear();
        double double26 = variance17.getResult();
        boolean boolean27 = variance17.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance29.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        double double51 = variance34.evaluate(doubleArray49);
        variance29.incrementAll(doubleArray49);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        variance53.setData(doubleArray62);
        variance17.incrementAll(doubleArray62);
        variance12.setData(doubleArray62);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(variance32);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertNotNull(variance53);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
    }

    @Test
    public void test2118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2118");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        double double10 = variance1.getResult();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        boolean boolean20 = variance14.equals((java.lang.Object) 10);
        variance14.increment((double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double double29 = variance24.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance24);
        variance24.clear();
        variance24.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double double39 = variance34.getResult();
        double[] doubleArray45 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double47 = variance34.evaluate(doubleArray45, (double) (short) 1);
        double double49 = variance24.evaluate(doubleArray45, 100.0d);
        double double51 = variance1.evaluate(doubleArray45, (double) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1030428.01d + "'", double47 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1030428.01d + "'", double49 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1288035.0125d + "'", double51 == 1288035.0125d);
    }

    @Test
    public void test2119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2119");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        double[] doubleArray10 = variance1.getData();
        variance1.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance17.copy();
        double[] doubleArray26 = variance25.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = variance31.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance37.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = variance37.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        double double59 = variance42.evaluate(doubleArray57);
        variance37.incrementAll(doubleArray57);
        variance35.setData(doubleArray57);
        double double63 = variance31.evaluate(doubleArray57, (double) (short) 10);
        variance25.setData(doubleArray57);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance66.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance66.copy();
        variance66.increment((double) '#');
        double[] doubleArray77 = new double[] { '#', 0L, (byte) 1, (-1), (short) 1 };
        variance66.incrementAll(doubleArray77);
        double double80 = variance25.evaluate(doubleArray77, 2266.8888888888887d);
        boolean boolean81 = variance25.isBiasCorrected();
        double[] doubleArray82 = variance25.getData();
        double double84 = variance1.evaluate(doubleArray82, (double) (byte) 100);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertNull(doubleArray26);
        org.junit.Assert.assertNotNull(variance33);
        org.junit.Assert.assertNotNull(variance40);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[35.0, 0.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 193.760000000149d + "'", double80 == 193.760000000149d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
    }

    @Test
    public void test2120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2120");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double[] doubleArray8 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean15 = variance14.isBiasCorrected();
        double[] doubleArray17 = new double[] { 100 };
        variance14.incrementAll(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        double double67 = variance24.evaluate(doubleArray62, (double) 100.0f);
        double double68 = variance22.evaluate(doubleArray62);
        variance20.setData(doubleArray62);
        double double71 = variance14.evaluate(doubleArray62, (double) (byte) -1);
        double double73 = variance10.evaluate(doubleArray62, (double) 1.0f);
        boolean boolean74 = variance6.equals((java.lang.Object) variance10);
        variance10.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance10);
        variance77.clear();
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test2121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2121");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray2 = variance1.getData();
        variance1.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        boolean boolean15 = variance9.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance9.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance18.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean23 = variance22.isBiasCorrected();
        double[] doubleArray25 = new double[] { 100 };
        variance22.incrementAll(doubleArray25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        variance32.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        double[] doubleArray47 = new double[] { (-1), 100.0f };
        variance43.incrementAll(doubleArray47);
        double double49 = variance32.evaluate(doubleArray47);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance51.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        variance55.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        double[] doubleArray70 = new double[] { (-1), 100.0f };
        variance66.incrementAll(doubleArray70);
        double double72 = variance55.evaluate(doubleArray70);
        double double73 = variance51.evaluate(doubleArray70);
        double double75 = variance32.evaluate(doubleArray70, (double) 100.0f);
        double double76 = variance30.evaluate(doubleArray70);
        variance28.setData(doubleArray70);
        double double79 = variance22.evaluate(doubleArray70, (double) (byte) -1);
        double double81 = variance18.evaluate(doubleArray70, (double) 1.0f);
        double double82 = variance16.evaluate(doubleArray70);
        variance16.setBiasCorrected(false);
        double[] doubleArray91 = new double[] { 0.0f, 10L, (short) 100, (byte) 10, 0L, (byte) 100 };
        double double95 = variance16.evaluate(doubleArray91, (double) (short) 0, (int) (short) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            variance5.incrementAll(doubleArray91, (int) (short) 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: length (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0, 10.0, 100.0, 10.0, 0.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double95));
    }

    @Test
    public void test2122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2122");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        double double36 = variance4.evaluate(doubleArray30, (double) (short) 10);
        variance4.clear();
        long long38 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance43);
        double[] doubleArray46 = variance45.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance45);
        variance45.clear();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNull(doubleArray46);
    }

    @Test
    public void test2123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2123");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance46.evaluate(doubleArray55);
        variance46.increment(Double.NaN);
        double double60 = variance46.getResult();
        variance46.setBiasCorrected(false);
        variance46.increment((double) 100.0f);
        variance46.setBiasCorrected(true);
        boolean boolean67 = variance46.isBiasCorrected();
        variance46.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test2124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2124");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double49 = variance24.evaluate(doubleArray45);
        double[] doubleArray50 = variance24.getData();
        variance24.clear();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray50);
    }

    @Test
    public void test2125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2125");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        long long11 = variance4.getN();
        long long12 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        variance33.setData(doubleArray44);
        variance14.incrementAll(doubleArray44);
        double double49 = variance4.evaluate(doubleArray44, 0.0d);
        variance4.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
    }

    @Test
    public void test2126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2126");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        double[] doubleArray13 = variance12.getData();
        variance12.setBiasCorrected(false);
        variance12.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        long long19 = variance12.getN();
        variance12.increment(1.0d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 3L + "'", long19 == 3L);
    }

    @Test
    public void test2127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2127");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance1.copy();
        long long10 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        double double55 = variance12.evaluate(doubleArray50, (double) 100.0f);
        double[] doubleArray56 = variance12.getData();
        double[] doubleArray57 = variance12.getData();
        double double58 = variance12.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = variance12.copy();
        java.lang.Class<?> wildcardClass60 = variance59.getClass();
        boolean boolean61 = variance1.equals((java.lang.Object) wildcardClass60);
        boolean boolean62 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray56);
        org.junit.Assert.assertNull(doubleArray57);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(variance59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test2128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2128");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        variance1.increment((double) 2L);
        double[] doubleArray28 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance30.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = variance30.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        variance30.incrementAll(doubleArray50);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = variance30.copy();
        long long55 = variance54.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance57.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = variance57.copy();
        variance57.increment((double) '#');
        double[] doubleArray68 = new double[] { '#', 0L, (byte) 1, (-1), (short) 1 };
        variance57.incrementAll(doubleArray68);
        variance54.incrementAll(doubleArray68);
        double double71 = variance1.evaluate(doubleArray68);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNotNull(variance33);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertNotNull(variance54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 3L + "'", long55 == 3L);
        org.junit.Assert.assertNotNull(variance60);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[35.0, 0.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 193.76d + "'", double71 == 193.76d);
    }

    @Test
    public void test2129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2129");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long11 = variance10.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        double double35 = variance13.evaluate(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance38.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        double double59 = variance42.evaluate(doubleArray57);
        double double60 = variance38.evaluate(doubleArray57);
        double double61 = variance36.evaluate(doubleArray57);
        double double62 = variance10.evaluate(doubleArray57);
        variance8.setData(doubleArray57);
        variance8.increment(0.25d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
    }

    @Test
    public void test2130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2130");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        variance1.increment((double) (short) 100);
        double double7 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance9.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance9.copy();
        boolean boolean13 = variance12.isBiasCorrected();
        variance12.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance16.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        variance20.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        double[] doubleArray35 = new double[] { (-1), 100.0f };
        variance31.incrementAll(doubleArray35);
        double double37 = variance20.evaluate(doubleArray35);
        double double38 = variance16.evaluate(doubleArray35);
        variance16.increment(0.0d);
        boolean boolean41 = variance12.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        variance43.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        double[] doubleArray58 = new double[] { (-1), 100.0f };
        variance54.incrementAll(doubleArray58);
        double double60 = variance43.evaluate(doubleArray58);
        java.lang.Object obj61 = null;
        boolean boolean62 = variance43.equals(obj61);
        double[] doubleArray63 = variance43.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment67);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance65, variance68);
        double double70 = variance65.getResult();
        double[] doubleArray76 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double78 = variance65.evaluate(doubleArray76, (double) (short) 1);
        double double79 = variance43.evaluate(doubleArray76);
        double double81 = variance12.evaluate(doubleArray76, (double) (short) 10);
        variance12.clear();
        variance12.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance12);
        variance12.setBiasCorrected(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2550.25d + "'", double37 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(doubleArray63);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1030428.01d + "'", double78 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1030428.01d + "'", double79 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1030428.01d + "'", double81 == 1030428.01d);
    }

    @Test
    public void test2131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2131");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        variance1.increment(0.0d);
        long long26 = variance1.getN();
        double double27 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance30);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance35.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = variance35.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        variance35.incrementAll(doubleArray55);
        variance33.setData(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance33);
        variance60.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance64.increment((double) 10);
        variance64.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance64);
        double double69 = variance64.getResult();
        double[] doubleArray70 = variance64.getData();
        double double71 = variance64.evaluate();
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance73.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment79);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance77, variance80);
        double[] doubleArray84 = new double[] { (-1), 100.0f };
        variance80.incrementAll(doubleArray84);
        variance73.setData(doubleArray84);
        double double87 = variance64.evaluate(doubleArray84);
        variance1.incrementAll(doubleArray84, 0, (int) (short) 0);
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(variance38);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 5100.5d + "'", double71 == 5100.5d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 5100.5d + "'", double87 == 5100.5d);
    }

    @Test
    public void test2132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2132");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray2 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment6);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance7);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        double[] doubleArray19 = new double[] { (-1), 100.0f };
        variance15.incrementAll(doubleArray19);
        double double21 = variance4.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance23.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        variance27.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        double[] doubleArray42 = new double[] { (-1), 100.0f };
        variance38.incrementAll(doubleArray42);
        double double44 = variance27.evaluate(doubleArray42);
        double double45 = variance23.evaluate(doubleArray42);
        double double47 = variance4.evaluate(doubleArray42, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance4.copy();
        variance48.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance51.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = variance51.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        variance56.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        double double73 = variance56.evaluate(doubleArray71);
        variance51.incrementAll(doubleArray71);
        variance48.setData(doubleArray71);
        variance1.incrementAll(doubleArray71);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = variance1.copy();
        double[] doubleArray78 = null;
        variance77.setData(doubleArray78);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2550.25d + "'", double21 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertNotNull(variance54);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertNotNull(variance77);
    }

    @Test
    public void test2133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2133");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        double double36 = variance4.evaluate(doubleArray30, (double) (short) 10);
        variance4.clear();
        variance4.increment((double) (short) 0);
        double double40 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance44.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance44.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        variance44.incrementAll(doubleArray64);
        variance42.setData(doubleArray64);
        boolean boolean69 = variance4.equals((java.lang.Object) doubleArray64);
        boolean boolean70 = variance4.isBiasCorrected();
        variance4.setBiasCorrected(false);
        boolean boolean73 = variance4.isBiasCorrected();
        long long74 = variance4.getN();
        boolean boolean75 = variance4.isBiasCorrected();
        long long76 = variance4.getN();
        variance4.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(variance47);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1L + "'", long74 == 1L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1L + "'", long76 == 1L);
    }

    @Test
    public void test2134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2134");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        variance36.clear();
        boolean boolean43 = variance31.equals((java.lang.Object) variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance36);
        boolean boolean45 = variance1.isBiasCorrected();
        double[] doubleArray46 = variance1.getData();
        double[] doubleArray47 = variance1.getData();
        variance1.setBiasCorrected(true);
        // The following exception was thrown during execution in test generation
        try {
            double double50 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(doubleArray46);
        org.junit.Assert.assertNull(doubleArray47);
    }

    @Test
    public void test2135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2135");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        double[] doubleArray4 = new double[] { 100 };
        variance1.incrementAll(doubleArray4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance30.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        double double51 = variance34.evaluate(doubleArray49);
        double double52 = variance30.evaluate(doubleArray49);
        double double54 = variance11.evaluate(doubleArray49, (double) 100.0f);
        double double55 = variance9.evaluate(doubleArray49);
        variance7.setData(doubleArray49);
        double double58 = variance1.evaluate(doubleArray49, (double) (byte) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        variance60.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance60);
        variance60.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance60);
        java.lang.Class<?> wildcardClass70 = variance60.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2136");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        boolean boolean9 = variance1.equals((java.lang.Object) variance8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance13.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        double double35 = variance18.evaluate(doubleArray33);
        variance13.incrementAll(doubleArray33);
        variance11.setData(doubleArray33);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance11);
        variance38.increment((double) (-1));
        double double41 = variance38.evaluate();
        boolean boolean42 = variance1.equals((java.lang.Object) double41);
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 5100.5d + "'", double41 == 5100.5d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test2137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2137");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double[] doubleArray31 = new double[] { (-1), 100.0f };
        variance27.incrementAll(doubleArray31);
        variance20.setData(doubleArray31);
        variance1.incrementAll(doubleArray31);
        variance1.increment((double) 10);
        double[] doubleArray37 = variance1.getData();
        variance1.clear();
        // The following exception was thrown during execution in test generation
        try {
            double double39 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0]");
        org.junit.Assert.assertNull(doubleArray37);
    }

    @Test
    public void test2138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2138");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        double double7 = variance1.getResult();
        boolean boolean8 = variance1.isBiasCorrected();
        double[] doubleArray9 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance1.copy();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNotNull(variance10);
    }

    @Test
    public void test2139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2139");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance1.setBiasCorrected(false);
        variance1.increment(0.0d);
        variance1.setBiasCorrected(true);
        java.lang.Class<?> wildcardClass52 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2140");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        variance29.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = variance33.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        variance33.incrementAll(doubleArray53);
        variance29.incrementAll(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        variance29.incrementAll(doubleArray66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance29);
        long long70 = variance29.getN();
        boolean boolean71 = variance29.isBiasCorrected();
        variance29.increment((double) 10L);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(variance36);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 4L + "'", long70 == 4L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test2141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2141");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean22 = variance21.isBiasCorrected();
        double[] doubleArray24 = new double[] { 100 };
        variance21.incrementAll(doubleArray24);
        // The following exception was thrown during execution in test generation
        try {
            double double29 = variance1.evaluate(doubleArray24, 0.0d, (int) ' ', (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0]");
    }

    @Test
    public void test2142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2142");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance29);
        variance39.increment(2448.2400000000002d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        variance43.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        double[] doubleArray58 = new double[] { (-1), 100.0f };
        variance54.incrementAll(doubleArray58);
        double double60 = variance43.evaluate(doubleArray58);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance62.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        variance66.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance74, variance77);
        double[] doubleArray81 = new double[] { (-1), 100.0f };
        variance77.incrementAll(doubleArray81);
        double double83 = variance66.evaluate(doubleArray81);
        double double84 = variance62.evaluate(doubleArray81);
        double double86 = variance43.evaluate(doubleArray81, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance43.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance87);
        double[] doubleArray92 = new double[] { 1.0d, 10.0d, (byte) 100 };
        double double95 = variance87.evaluate(doubleArray92, 0, 0);
        variance39.incrementAll(doubleArray92);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertNotNull(variance87);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double95));
    }

    @Test
    public void test2143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2143");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        boolean boolean21 = variance13.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance13);
        double[] doubleArray23 = variance22.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance27.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = variance27.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        variance32.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        double[] doubleArray47 = new double[] { (-1), 100.0f };
        variance43.incrementAll(doubleArray47);
        double double49 = variance32.evaluate(doubleArray47);
        variance27.incrementAll(doubleArray47);
        variance25.setData(doubleArray47);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance25);
        variance52.increment((double) (-1));
        double double55 = variance52.evaluate();
        boolean boolean56 = variance52.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance63);
        boolean boolean66 = variance58.equals((java.lang.Object) variance65);
        boolean boolean68 = variance65.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance65.copy();
        double[] doubleArray75 = new double[] { 10, Double.NaN, 100.0f, 2550.25d, 0.0d };
        variance65.setData(doubleArray75);
        double double80 = variance52.evaluate(doubleArray75, 1617.066666666667d, (int) (byte) 1, 0);
        double double83 = variance22.evaluate(doubleArray75, 0, (int) (short) 0);
        double double84 = variance22.getResult();
        double[] doubleArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance22.incrementAll(doubleArray85, 10, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNotNull(variance30);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 5100.5d + "'", double55 == 5100.5d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, NaN, 100.0, 2550.25, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue(Double.isNaN(double84));
    }

    @Test
    public void test2144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2144");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        variance1.increment(0.0d);
        variance1.setBiasCorrected(false);
        variance1.increment(193.76d);
    }

    @Test
    public void test2145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2145");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance1.copy();
        double double10 = variance1.getResult();
        variance1.setBiasCorrected(false);
        variance1.increment(2025.0d);
        long long15 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        double[] doubleArray24 = new double[] { (-1), 100.0f };
        variance20.incrementAll(doubleArray24);
        variance20.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = variance20.copy();
        double[] doubleArray29 = variance28.getData();
        variance28.setBiasCorrected(false);
        variance28.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance28);
        boolean boolean35 = variance34.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = variance34.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean39 = variance38.isBiasCorrected();
        double[] doubleArray41 = new double[] { 100 };
        variance38.incrementAll(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance48.evaluate(doubleArray63);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance67.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        variance71.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment81);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance79, variance82);
        double[] doubleArray86 = new double[] { (-1), 100.0f };
        variance82.incrementAll(doubleArray86);
        double double88 = variance71.evaluate(doubleArray86);
        double double89 = variance67.evaluate(doubleArray86);
        double double91 = variance48.evaluate(doubleArray86, (double) 100.0f);
        double double92 = variance46.evaluate(doubleArray86);
        variance44.setData(doubleArray86);
        double double95 = variance38.evaluate(doubleArray86, (double) (byte) -1);
        double double97 = variance36.evaluate(doubleArray86, (double) 'a');
        double double99 = variance1.evaluate(doubleArray86, (-1.0d));
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(variance36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2550.25d + "'", double89 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2550.25d + "'", double91 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 2550.25d + "'", double95 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 2550.25d + "'", double97 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 2550.25d + "'", double99 == 2550.25d);
    }

    @Test
    public void test2146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2146");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance4.increment(10.0d);
        variance4.setBiasCorrected(false);
        double[] doubleArray10 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance4.incrementAll(doubleArray10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2147");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance28.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        variance32.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance32);
        double double37 = variance32.getResult();
        double[] doubleArray38 = variance32.getData();
        boolean boolean39 = variance32.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test2148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2148");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        variance6.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        variance9.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        double[] doubleArray24 = new double[] { (-1), 100.0f };
        variance20.incrementAll(doubleArray24);
        double double26 = variance9.evaluate(doubleArray24);
        boolean boolean27 = variance9.isBiasCorrected();
        variance9.setBiasCorrected(true);
        variance9.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = variance33.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance36);
        boolean boolean38 = variance9.equals((java.lang.Object) variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2550.25d + "'", double26 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(variance36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test2149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2149");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        boolean boolean9 = variance1.equals((java.lang.Object) variance8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance1.copy();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(variance10);
    }

    @Test
    public void test2150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2150");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance8.clear();
        variance8.clear();
        boolean boolean11 = variance8.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance14.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = variance14.copy();
        long long18 = variance14.getN();
        long long19 = variance14.getN();
        boolean boolean20 = variance14.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance14);
        java.lang.Class<?> wildcardClass22 = variance14.getClass();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(variance17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2151");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double[] doubleArray8 = variance6.getData();
        java.lang.Object obj9 = null;
        boolean boolean10 = variance6.equals(obj9);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test2152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2152");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        double double7 = variance6.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        variance9.setBiasCorrected(false);
        double double16 = variance9.getResult();
        boolean boolean17 = variance6.equals((java.lang.Object) double16);
        variance6.clear();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test2153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2153");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance28.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        variance32.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance28.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = variance28.copy();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertNotNull(variance38);
    }

    @Test
    public void test2154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2154");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance45.clear();
        double double47 = variance45.getResult();
        variance45.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance49.setBiasCorrected(true);
        long long52 = variance49.getN();
        double double53 = variance49.getResult();
        variance49.clear();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
    }

    @Test
    public void test2155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2155");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        variance36.clear();
        boolean boolean43 = variance31.equals((java.lang.Object) variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance46.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = variance46.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        double double68 = variance51.evaluate(doubleArray66);
        variance46.incrementAll(doubleArray66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = variance46.copy();
        long long71 = variance70.getN();
        variance70.increment((double) (byte) -1);
        boolean boolean74 = variance1.equals((java.lang.Object) (byte) -1);
        variance1.increment(25.0d);
        double[] doubleArray77 = variance1.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(variance49);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertNotNull(variance70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 3L + "'", long71 == 3L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(doubleArray77);
    }

    @Test
    public void test2156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2156");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        variance14.increment(0.0d);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double71 = variance14.evaluate(doubleArray64, (double) (short) 1);
        double double72 = variance4.evaluate(doubleArray64);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance74, variance77);
        double double79 = variance74.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance74);
        boolean boolean81 = variance4.equals((java.lang.Object) variance74);
        java.lang.Class<?> wildcardClass82 = variance4.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2157");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        double[] doubleArray7 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = variance13.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean18 = variance17.isBiasCorrected();
        double[] doubleArray20 = new double[] { 100 };
        variance17.incrementAll(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance17);
        double double23 = variance13.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        variance25.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance25);
        variance25.clear();
        double double34 = variance25.getResult();
        boolean boolean35 = variance25.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance37.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = variance37.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        double double59 = variance42.evaluate(doubleArray57);
        variance37.incrementAll(doubleArray57);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = variance37.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        double[] doubleArray70 = new double[] { (-1), 100.0f };
        variance66.incrementAll(doubleArray70);
        variance61.setData(doubleArray70);
        variance25.incrementAll(doubleArray70);
        double double75 = variance13.evaluate(doubleArray70, 25.0d);
        double double76 = variance6.evaluate(doubleArray70);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNotNull(variance15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(variance40);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertNotNull(variance61);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
    }

    @Test
    public void test2158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2158");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        long long3 = variance1.getN();
        variance1.clear();
        variance1.increment((double) 1L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        double double30 = variance8.evaluate(doubleArray27);
        variance8.increment(0.0d);
        long long33 = variance8.getN();
        double double34 = variance8.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance42.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        variance42.incrementAll(doubleArray62);
        variance40.setData(doubleArray62);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance40);
        variance67.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance71.increment((double) 10);
        variance71.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance71);
        double double76 = variance71.getResult();
        double[] doubleArray77 = variance71.getData();
        double double78 = variance71.evaluate();
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance80.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment86 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment86);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance84, variance87);
        double[] doubleArray91 = new double[] { (-1), 100.0f };
        variance87.incrementAll(doubleArray91);
        variance80.setData(doubleArray91);
        double double94 = variance71.evaluate(doubleArray91);
        variance8.incrementAll(doubleArray91, 0, (int) (short) 0);
        variance1.setData(doubleArray91);
        org.apache.commons.math.stat.descriptive.moment.Variance variance99 = variance1.copy();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2550.25d + "'", double30 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 5100.5d + "'", double78 == 5100.5d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 5100.5d + "'", double94 == 5100.5d);
        org.junit.Assert.assertNotNull(variance99);
    }

    @Test
    public void test2159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2159");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance46.evaluate(doubleArray55);
        variance46.setBiasCorrected(false);
        double double60 = variance46.getResult();
        variance46.clear();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
    }

    @Test
    public void test2160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2160");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance1.copy();
        long long48 = variance1.getN();
        variance1.clear();
        variance1.setBiasCorrected(false);
        double double52 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(variance47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
    }

    @Test
    public void test2161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2161");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        variance29.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = variance33.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        variance33.incrementAll(doubleArray53);
        variance29.incrementAll(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        variance29.incrementAll(doubleArray66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance29.copy();
        boolean boolean70 = variance69.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(variance36);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test2162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2162");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = variance41.copy();
        boolean boolean45 = variance44.isBiasCorrected();
        variance44.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance51.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance57.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = variance57.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        variance62.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        double double79 = variance62.evaluate(doubleArray77);
        variance57.incrementAll(doubleArray77);
        variance55.setData(doubleArray77);
        double double83 = variance51.evaluate(doubleArray77, (double) (short) 10);
        variance44.setData(doubleArray77, 1, 1);
        boolean boolean87 = variance29.equals((java.lang.Object) doubleArray77);
        long long88 = variance29.getN();
        java.lang.Class<?> wildcardClass89 = variance29.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertNotNull(variance44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(variance53);
        org.junit.Assert.assertNotNull(variance60);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 3L + "'", long88 == 3L);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2163");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        long long9 = variance8.getN();
        long long10 = variance8.getN();
        // The following exception was thrown during execution in test generation
        try {
            double double11 = variance8.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test2164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2164");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        variance1.increment((double) 0L);
        boolean boolean10 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        long long24 = variance18.getN();
        boolean boolean25 = variance18.isBiasCorrected();
        double double26 = variance18.getResult();
        long long27 = variance18.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance29.increment((double) (-1L));
        variance29.increment((double) 0.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance35);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        double[] doubleArray51 = new double[] { (-1), 100.0f };
        variance47.incrementAll(doubleArray51);
        variance47.clear();
        boolean boolean54 = variance42.equals((java.lang.Object) variance47);
        variance42.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        variance58.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        double[] doubleArray73 = new double[] { (-1), 100.0f };
        variance69.incrementAll(doubleArray73);
        double double75 = variance58.evaluate(doubleArray73);
        java.lang.Object obj76 = null;
        boolean boolean77 = variance58.equals(obj76);
        variance58.setBiasCorrected(true);
        double[] doubleArray86 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double88 = variance58.evaluate(doubleArray86, 100.0d);
        variance42.setData(doubleArray86, (int) (byte) 0, (int) (short) 0);
        double double94 = variance29.evaluate(doubleArray86, (int) (byte) 0, (int) (byte) 1);
        variance18.setData(doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            double double99 = variance12.evaluate(doubleArray86, 2550.250000000233d, (int) (short) 0, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2550.25d + "'", double26 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 2L + "'", long27 == 2L);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1617.066666666667d + "'", double88 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
    }

    @Test
    public void test2165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2165");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray2 = variance1.getData();
        variance1.setBiasCorrected(false);
        java.lang.Object obj5 = null;
        boolean boolean6 = variance1.equals(obj5);
        variance1.increment((double) '4');
        double[] doubleArray9 = variance1.getData();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test2166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2166");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        boolean boolean4 = variance1.isBiasCorrected();
        double double5 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance7);
        variance7.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance7);
        variance7.setBiasCorrected(false);
        double double31 = variance7.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance7);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance39);
        boolean boolean42 = variance34.equals((java.lang.Object) variance41);
        boolean boolean44 = variance41.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance41.copy();
        double[] doubleArray51 = new double[] { 10, Double.NaN, 100.0f, 2550.25d, 0.0d };
        variance41.setData(doubleArray51);
        variance7.incrementAll(doubleArray51);
        // The following exception was thrown during execution in test generation
        try {
            double double56 = variance1.evaluate(doubleArray51, (int) (byte) 10, 0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, NaN, 100.0, 2550.25, 0.0]");
    }

    @Test
    public void test2167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2167");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        long long3 = variance1.getN();
        variance1.clear();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        double[] doubleArray24 = new double[] { (-1), 100.0f };
        variance20.incrementAll(doubleArray24);
        variance20.clear();
        boolean boolean27 = variance15.equals((java.lang.Object) variance20);
        boolean boolean28 = variance20.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance57.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance61.evaluate(doubleArray76);
        double double79 = variance57.evaluate(doubleArray76);
        double double81 = variance38.evaluate(doubleArray76, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = variance38.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance82);
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment87 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment87);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance85, variance88);
        double[] doubleArray92 = new double[] { (-1), 100.0f };
        variance88.incrementAll(doubleArray92);
        double double94 = variance83.evaluate(doubleArray92);
        variance30.setData(doubleArray92);
        double double97 = variance20.evaluate(doubleArray92, (double) 1);
        variance1.setData(doubleArray92);
        java.lang.Class<?> wildcardClass99 = variance1.getClass();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertNotNull(variance82);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2550.25d + "'", double94 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 2550.25d + "'", double97 == 2550.25d);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2168");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        double double2 = variance0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance5.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance5.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        variance10.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        double[] doubleArray25 = new double[] { (-1), 100.0f };
        variance21.incrementAll(doubleArray25);
        double double27 = variance10.evaluate(doubleArray25);
        variance5.incrementAll(doubleArray25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = variance5.copy();
        variance5.increment((double) 2L);
        boolean boolean32 = variance5.isBiasCorrected();
        double[] doubleArray33 = variance5.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance35);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        double[] doubleArray51 = new double[] { (-1), 100.0f };
        variance47.incrementAll(doubleArray51);
        variance47.clear();
        boolean boolean54 = variance42.equals((java.lang.Object) variance47);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean57 = variance42.equals((java.lang.Object) variance56);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        long long68 = variance62.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean71 = variance70.isBiasCorrected();
        double[] doubleArray73 = new double[] { 100 };
        variance70.incrementAll(doubleArray73);
        boolean boolean75 = variance62.equals((java.lang.Object) doubleArray73);
        variance56.incrementAll(doubleArray73);
        variance5.setData(doubleArray73);
        double double78 = variance3.evaluate(doubleArray73);
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2550.25d + "'", double27 == 2550.25d);
        org.junit.Assert.assertNotNull(variance29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 2L + "'", long68 == 2L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
    }

    @Test
    public void test2169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2169");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance46.evaluate(doubleArray55);
        variance46.increment(Double.NaN);
        double double60 = variance46.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        variance46.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
    }

    @Test
    public void test2170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2170");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double double34 = variance29.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        variance63.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        double[] doubleArray78 = new double[] { (-1), 100.0f };
        variance74.incrementAll(doubleArray78);
        double double80 = variance63.evaluate(doubleArray78);
        double double81 = variance59.evaluate(doubleArray78);
        double double83 = variance40.evaluate(doubleArray78, (double) 100.0f);
        double double84 = variance38.evaluate(doubleArray78);
        variance36.setData(doubleArray78);
        double double87 = variance29.evaluate(doubleArray78, (double) (-1));
        variance1.setData(doubleArray78);
        long long89 = variance1.getN();
        double double90 = variance1.getResult();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 0L + "'", long89 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
    }

    @Test
    public void test2171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2171");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance4.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        double double26 = variance4.evaluate(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance29.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        variance33.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        double double50 = variance33.evaluate(doubleArray48);
        double double51 = variance29.evaluate(doubleArray48);
        double double52 = variance27.evaluate(doubleArray48);
        double double53 = variance1.evaluate(doubleArray48);
        double[] doubleArray54 = variance1.getData();
        variance1.setBiasCorrected(true);
        long long57 = variance1.getN();
        java.lang.Class<?> wildcardClass58 = variance1.getClass();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2550.25d + "'", double26 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2172");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        double double8 = variance1.getResult();
        long long9 = variance1.getN();
        double[] doubleArray10 = null;
        variance1.setData(doubleArray10);
        double double12 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance14.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = variance14.copy();
        variance14.increment((double) 100.0f);
        boolean boolean20 = variance14.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = variance14.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance14);
        variance14.clear();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(variance17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(variance21);
    }

    @Test
    public void test2173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2173");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        double[] doubleArray12 = new double[] { (-1), 100.0f };
        variance8.incrementAll(doubleArray12);
        variance1.setData(doubleArray12);
        long long15 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        double double18 = variance1.evaluate();
        variance1.increment(Double.NaN);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
    }

    @Test
    public void test2174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2174");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance9.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance9.copy();
        boolean boolean13 = variance12.isBiasCorrected();
        double[] doubleArray14 = variance12.getData();
        boolean boolean15 = variance12.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance16);
        double[] doubleArray18 = variance6.getData();
        variance6.setBiasCorrected(true);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(doubleArray18);
    }

    @Test
    public void test2175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2175");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance4.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        double double26 = variance4.evaluate(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance29.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        variance33.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        double double50 = variance33.evaluate(doubleArray48);
        double double51 = variance29.evaluate(doubleArray48);
        double double52 = variance27.evaluate(doubleArray48);
        double double53 = variance1.evaluate(doubleArray48);
        boolean boolean54 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2550.25d + "'", double26 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test2176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2176");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        boolean boolean32 = variance26.equals((java.lang.Object) 10);
        variance26.increment((double) (short) 10);
        variance26.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        double double59 = variance42.evaluate(doubleArray57);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance61.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment67);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance65, variance68);
        variance65.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        double[] doubleArray80 = new double[] { (-1), 100.0f };
        variance76.incrementAll(doubleArray80);
        double double82 = variance65.evaluate(doubleArray80);
        double double83 = variance61.evaluate(doubleArray80);
        double double85 = variance42.evaluate(doubleArray80, (double) 100.0f);
        double double86 = variance40.evaluate(doubleArray80);
        variance38.setData(doubleArray80);
        variance26.setData(doubleArray80, (int) (byte) 1, 0);
        double double91 = variance24.evaluate(doubleArray80);
        variance24.clear();
        variance24.clear();
        double[] doubleArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance24.incrementAll(doubleArray94);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2550.25d + "'", double91 == 2550.25d);
    }

    @Test
    public void test2177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2177");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        double double11 = variance1.getResult();
        double double12 = variance1.getResult();
        long long13 = variance1.getN();
        variance1.setBiasCorrected(false);
        variance1.clear();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test2178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2178");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        boolean boolean9 = variance8.isBiasCorrected();
        double[] doubleArray10 = null;
        variance8.setData(doubleArray10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        variance12.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance16.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = variance16.copy();
        variance16.clear();
        variance16.increment((double) (short) 1);
        double double23 = variance16.getResult();
        variance16.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        boolean boolean32 = variance27.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean35 = variance34.isBiasCorrected();
        double[] doubleArray37 = new double[] { 100 };
        variance34.incrementAll(doubleArray37);
        double double39 = variance27.evaluate(doubleArray37);
        variance16.setData(doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            variance12.incrementAll(doubleArray37, 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(variance19);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
    }

    @Test
    public void test2179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2179");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean23 = variance8.equals((java.lang.Object) variance22);
        variance22.clear();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test2180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2180");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        boolean boolean5 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance7.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        double[] doubleArray17 = variance16.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = variance22.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        variance32.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        double[] doubleArray47 = new double[] { (-1), 100.0f };
        variance43.incrementAll(doubleArray47);
        double double49 = variance32.evaluate(doubleArray47);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance51.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        variance55.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        double[] doubleArray70 = new double[] { (-1), 100.0f };
        variance66.incrementAll(doubleArray70);
        double double72 = variance55.evaluate(doubleArray70);
        double double73 = variance51.evaluate(doubleArray70);
        double double75 = variance32.evaluate(doubleArray70, (double) 100.0f);
        double double76 = variance30.evaluate(doubleArray70);
        variance28.setData(doubleArray70);
        double double79 = variance26.evaluate(doubleArray70, (double) ' ');
        variance22.setData(doubleArray70);
        variance16.incrementAll(doubleArray70);
        double double83 = variance7.evaluate(doubleArray70, (double) (-1.0f));
        // The following exception was thrown during execution in test generation
        try {
            variance4.incrementAll(doubleArray70, (int) (byte) 100, (-1));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: length (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray17);
        org.junit.Assert.assertNotNull(variance24);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
    }

    @Test
    public void test2181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2181");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) (-1L));
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance7.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance7.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        variance7.incrementAll(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = variance7.copy();
        long long32 = variance31.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        double double51 = variance34.evaluate(doubleArray49);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance53.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        variance53.setData(doubleArray64);
        variance34.incrementAll(doubleArray64);
        double double69 = variance31.evaluate(doubleArray64, (-1.0d));
        double double70 = variance1.evaluate(doubleArray64);
        variance1.clear();
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(variance31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 3L + "'", long32 == 3L);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 5100.5d + "'", double70 == 5100.5d);
    }

    @Test
    public void test2182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2182");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        boolean boolean15 = variance7.equals((java.lang.Object) variance14);
        boolean boolean17 = variance14.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double[] doubleArray36 = new double[] { (-1), 100.0f };
        variance32.incrementAll(doubleArray36);
        double double38 = variance21.evaluate(doubleArray36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance40.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double61 = variance44.evaluate(doubleArray59);
        double double62 = variance40.evaluate(doubleArray59);
        double double64 = variance21.evaluate(doubleArray59, (double) 100.0f);
        double double65 = variance19.evaluate(doubleArray59);
        double double66 = variance14.evaluate(doubleArray59);
        double double68 = variance5.evaluate(doubleArray59, 0.25d);
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
    }

    @Test
    public void test2183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2183");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double double6 = variance5.getResult();
        double double7 = variance5.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance5);
        double[] doubleArray9 = variance8.getData();
        double[] doubleArray10 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double13 = variance8.evaluate(doubleArray10, (-1), (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test2184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2184");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        double double55 = variance33.evaluate(doubleArray52);
        double double57 = variance14.evaluate(doubleArray52, (double) 100.0f);
        double double58 = variance12.evaluate(doubleArray52);
        variance10.setData(doubleArray52);
        double double61 = variance8.evaluate(doubleArray52, (double) ' ');
        variance4.setData(doubleArray52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = variance4.copy();
        double[] doubleArray64 = variance63.getData();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertNotNull(variance63);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
    }

    @Test
    public void test2185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2185");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        double double2 = variance0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        double[] doubleArray12 = new double[] { (-1), 100.0f };
        variance8.incrementAll(doubleArray12);
        long long14 = variance8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = variance8.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        variance29.clear();
        boolean boolean36 = variance24.equals((java.lang.Object) variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean39 = variance24.equals((java.lang.Object) variance38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        variance41.setBiasCorrected(false);
        variance41.increment(0.0d);
        variance41.setBiasCorrected(false);
        variance41.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance56.increment((double) 10);
        variance56.clear();
        variance56.increment((double) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance65.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = variance65.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        variance70.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment80);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance78, variance81);
        double[] doubleArray85 = new double[] { (-1), 100.0f };
        variance81.incrementAll(doubleArray85);
        double double87 = variance70.evaluate(doubleArray85);
        variance65.incrementAll(doubleArray85);
        variance63.setData(doubleArray85);
        double double90 = variance56.evaluate(doubleArray85);
        variance38.setData(doubleArray85);
        double double92 = variance8.evaluate(doubleArray85);
        variance0.setData(doubleArray85);
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertNotNull(variance15);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(variance68);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2550.25d + "'", double90 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
    }

    @Test
    public void test2186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2186");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) (-1L));
        variance1.increment((double) 0.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance7);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        variance19.clear();
        boolean boolean26 = variance14.equals((java.lang.Object) variance19);
        variance14.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        java.lang.Object obj48 = null;
        boolean boolean49 = variance30.equals(obj48);
        variance30.setBiasCorrected(true);
        double[] doubleArray58 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double60 = variance30.evaluate(doubleArray58, 100.0d);
        variance14.setData(doubleArray58, (int) (byte) 0, (int) (short) 0);
        double double66 = variance1.evaluate(doubleArray58, (int) (byte) 0, (int) (byte) 1);
        boolean boolean67 = variance1.isBiasCorrected();
        variance1.increment((double) 0);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1617.066666666667d + "'", double60 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test2187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2187");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        double[] doubleArray8 = variance1.getData();
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(doubleArray8);
    }

    @Test
    public void test2188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2188");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        double[] doubleArray6 = variance4.getData();
        boolean boolean7 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        long long19 = variance13.getN();
        boolean boolean20 = variance13.isBiasCorrected();
        double double21 = variance13.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = variance13.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance25.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = variance25.copy();
        variance25.clear();
        variance25.increment((double) (short) 1);
        double double32 = variance25.getResult();
        variance25.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        boolean boolean41 = variance36.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean44 = variance43.isBiasCorrected();
        double[] doubleArray46 = new double[] { 100 };
        variance43.incrementAll(doubleArray46);
        double double48 = variance36.evaluate(doubleArray46);
        variance25.setData(doubleArray46);
        variance4.setData(doubleArray46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2550.25d + "'", double21 == 2550.25d);
        org.junit.Assert.assertNotNull(variance22);
        org.junit.Assert.assertNotNull(variance28);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test2189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2189");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean15 = variance14.isBiasCorrected();
        double[] doubleArray17 = new double[] { 100 };
        variance14.incrementAll(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        double double67 = variance24.evaluate(doubleArray62, (double) 100.0f);
        double double68 = variance22.evaluate(doubleArray62);
        variance20.setData(doubleArray62);
        double double71 = variance14.evaluate(doubleArray62, (double) (byte) -1);
        double double73 = variance10.evaluate(doubleArray62, (double) 1.0f);
        double double74 = variance8.evaluate(doubleArray62);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance78);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
    }

    @Test
    public void test2190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2190");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance1.isBiasCorrected();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance8.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance11);
        double double13 = variance12.getResult();
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance17.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance21.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        variance25.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        variance33.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        double double50 = variance33.evaluate(doubleArray48);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance52.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        variance56.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        double double73 = variance56.evaluate(doubleArray71);
        double double74 = variance52.evaluate(doubleArray71);
        double double76 = variance33.evaluate(doubleArray71, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = variance33.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance77);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment82 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment82);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance80, variance83);
        double[] doubleArray87 = new double[] { (-1), 100.0f };
        variance83.incrementAll(doubleArray87);
        double double89 = variance78.evaluate(doubleArray87);
        variance25.setData(doubleArray87);
        variance21.incrementAll(doubleArray87);
        variance17.setData(doubleArray87);
        variance12.incrementAll(doubleArray87);
        double double95 = variance1.evaluate(doubleArray87, (double) 10);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertNotNull(variance77);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2550.25d + "'", double89 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 2550.25d + "'", double95 == 2550.25d);
    }

    @Test
    public void test2191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2191");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        double[] doubleArray3 = variance2.getData();
        double[] doubleArray4 = variance2.getData();
        double[] doubleArray5 = variance2.getData();
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
    }

    @Test
    public void test2192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2192");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        double double8 = variance1.getResult();
        variance1.setBiasCorrected(false);
        variance1.setBiasCorrected(true);
        double[] doubleArray13 = variance1.getData();
        double double14 = variance1.getResult();
        double[] doubleArray15 = variance1.getData();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNull(doubleArray15);
    }

    @Test
    public void test2193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2193");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance46.evaluate(doubleArray55);
        variance46.increment(Double.NaN);
        variance46.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        variance62.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance62);
        long long70 = variance69.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance69);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
    }

    @Test
    public void test2194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2194");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        variance14.increment(0.0d);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double71 = variance14.evaluate(doubleArray64, (double) (short) 1);
        double double72 = variance4.evaluate(doubleArray64);
        double[] doubleArray73 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = variance4.copy();
        double double75 = variance4.getResult();
        java.lang.Class<?> wildcardClass76 = variance4.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertNotNull(variance74);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2195");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        double[] doubleArray34 = new double[] { (-1), 100.0f };
        variance30.incrementAll(doubleArray34);
        variance25.setData(doubleArray34);
        boolean boolean37 = variance25.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance25);
        variance25.clear();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test2196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2196");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance6.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance12.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = variance12.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        variance12.incrementAll(doubleArray32);
        variance10.setData(doubleArray32);
        double double38 = variance6.evaluate(doubleArray32, (double) (short) 10);
        variance6.clear();
        variance6.increment((double) (short) 0);
        double double42 = variance6.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance46.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = variance46.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        double double68 = variance51.evaluate(doubleArray66);
        variance46.incrementAll(doubleArray66);
        variance44.setData(doubleArray66);
        boolean boolean71 = variance6.equals((java.lang.Object) doubleArray66);
        boolean boolean72 = variance6.isBiasCorrected();
        variance6.setBiasCorrected(false);
        boolean boolean75 = variance6.isBiasCorrected();
        boolean boolean76 = variance1.equals((java.lang.Object) boolean75);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment((double) 10.0f);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(variance15);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(variance49);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test2197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2197");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.clear();
        variance4.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance14.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = variance14.copy();
        variance14.increment((double) '#');
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance24.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        double double51 = variance34.evaluate(doubleArray49);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance53.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        variance57.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment67);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance65, variance68);
        double[] doubleArray72 = new double[] { (-1), 100.0f };
        variance68.incrementAll(doubleArray72);
        double double74 = variance57.evaluate(doubleArray72);
        double double75 = variance53.evaluate(doubleArray72);
        double double77 = variance34.evaluate(doubleArray72, (double) 100.0f);
        double double78 = variance32.evaluate(doubleArray72);
        variance30.setData(doubleArray72);
        double double81 = variance28.evaluate(doubleArray72, (double) ' ');
        variance24.setData(doubleArray72);
        double double84 = variance14.evaluate(doubleArray72, (double) 100.0f);
        // The following exception was thrown during execution in test generation
        try {
            double double87 = variance4.evaluate(doubleArray72, (int) '4', (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance17);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
    }

    @Test
    public void test2198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2198");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        boolean boolean4 = variance1.isBiasCorrected();
        variance1.increment(0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test2199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2199");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        java.lang.Class<?> wildcardClass4 = variance1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test2200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2200");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance46.evaluate(doubleArray55);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        variance60.increment(0.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
    }

    @Test
    public void test2201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2201");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        double double10 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance13.copy();
        boolean boolean17 = variance16.isBiasCorrected();
        double[] doubleArray18 = variance16.getData();
        boolean boolean19 = variance16.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        long long31 = variance25.getN();
        boolean boolean32 = variance25.isBiasCorrected();
        double double33 = variance25.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = variance25.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance34);
        variance16.increment((-1.0d));
        long long38 = variance16.getN();
        variance16.increment(1347.5555555555554d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = variance42.copy();
        double double51 = variance42.getResult();
        variance42.setBiasCorrected(false);
        variance42.increment(2025.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = variance42.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance58.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = variance58.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        variance63.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        double[] doubleArray78 = new double[] { (-1), 100.0f };
        variance74.incrementAll(doubleArray78);
        double double80 = variance63.evaluate(doubleArray78);
        variance58.incrementAll(doubleArray78);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = variance58.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment86 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment86);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance84, variance87);
        double[] doubleArray91 = new double[] { (-1), 100.0f };
        variance87.incrementAll(doubleArray91);
        variance82.setData(doubleArray91);
        variance82.clear();
        double[] doubleArray95 = variance82.getData();
        variance42.incrementAll(doubleArray95);
        double double98 = variance16.evaluate(doubleArray95, (double) 2L);
        variance11.incrementAll(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2550.25d + "'", double10 == 2550.25d);
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 2L + "'", long31 == 2L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2550.25d + "'", double33 == 2550.25d);
        org.junit.Assert.assertNotNull(variance34);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 2L + "'", long38 == 2L);
        org.junit.Assert.assertNotNull(variance50);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(variance56);
        org.junit.Assert.assertNotNull(variance61);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertNotNull(variance82);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 2550.25d + "'", double98 == 2550.25d);
    }

    @Test
    public void test2202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2202");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        double double51 = variance5.evaluate(doubleArray45);
        variance3.setData(doubleArray45);
        double double54 = variance1.evaluate(doubleArray45, (double) ' ');
        double double55 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        long long58 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
    }

    @Test
    public void test2203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2203");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        variance4.clear();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = variance13.copy();
        double[] doubleArray22 = variance21.getData();
        variance21.setBiasCorrected(false);
        variance21.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        boolean boolean34 = variance28.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = variance28.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long38 = variance37.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance40.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double61 = variance44.evaluate(doubleArray59);
        double double62 = variance40.evaluate(doubleArray59);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance40);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance65.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        variance69.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment79);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance77, variance80);
        double[] doubleArray84 = new double[] { (-1), 100.0f };
        variance80.incrementAll(doubleArray84);
        double double86 = variance69.evaluate(doubleArray84);
        double double87 = variance65.evaluate(doubleArray84);
        double double88 = variance63.evaluate(doubleArray84);
        double double89 = variance37.evaluate(doubleArray84);
        variance35.setData(doubleArray84);
        variance21.incrementAll(doubleArray84);
        double double92 = variance21.getResult();
        variance21.increment(10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance21);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance21);
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(variance35);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2550.25d + "'", double89 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2448.2400000000002d + "'", double92 == 2448.2400000000002d);
    }

    @Test
    public void test2204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2204");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance0);
        double[] doubleArray3 = variance2.getData();
        long long4 = variance2.getN();
        double[] doubleArray5 = variance2.getData();
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(doubleArray5);
    }

    @Test
    public void test2205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2205");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double[] doubleArray8 = variance6.getData();
        java.lang.Object obj9 = null;
        boolean boolean10 = variance6.equals(obj9);
        variance6.clear();
        double double12 = variance6.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance13.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance13);
        double[] doubleArray16 = variance15.getData();
        long long17 = variance15.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance22);
        double[] doubleArray25 = variance24.getData();
        double[] doubleArray26 = variance24.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        boolean boolean34 = variance28.equals((java.lang.Object) 10);
        variance28.increment((double) (short) 10);
        variance28.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double61 = variance44.evaluate(doubleArray59);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance63.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment69);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        variance67.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment77);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance75, variance78);
        double[] doubleArray82 = new double[] { (-1), 100.0f };
        variance78.incrementAll(doubleArray82);
        double double84 = variance67.evaluate(doubleArray82);
        double double85 = variance63.evaluate(doubleArray82);
        double double87 = variance44.evaluate(doubleArray82, (double) 100.0f);
        double double88 = variance42.evaluate(doubleArray82);
        variance40.setData(doubleArray82);
        variance28.setData(doubleArray82, (int) (byte) 1, 0);
        double[] doubleArray93 = variance28.getData();
        variance24.incrementAll(doubleArray93);
        variance15.setData(doubleArray93);
        // The following exception was thrown during execution in test generation
        try {
            variance6.setData(doubleArray93, (int) (byte) -1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(variance14);
        org.junit.Assert.assertNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNull(doubleArray25);
        org.junit.Assert.assertNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[]");
    }

    @Test
    public void test2206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2206");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance48.evaluate(doubleArray63);
        boolean boolean66 = variance48.isBiasCorrected();
        variance48.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance48);
        double[] doubleArray70 = variance48.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = variance75.copy();
        double double78 = variance75.getResult();
        long long79 = variance75.getN();
        boolean boolean80 = variance48.equals((java.lang.Object) long79);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(doubleArray70);
        org.junit.Assert.assertNotNull(variance77);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 0L + "'", long79 == 0L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test2207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2207");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance5.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance5.copy();
        boolean boolean9 = variance8.isBiasCorrected();
        double[] doubleArray10 = variance8.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance12.increment((double) (-1L));
        variance12.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = variance26.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance70);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        double[] doubleArray80 = new double[] { (-1), 100.0f };
        variance76.incrementAll(doubleArray80);
        double double82 = variance71.evaluate(doubleArray80);
        variance18.setData(doubleArray80);
        double double84 = variance12.evaluate(doubleArray80);
        variance8.setData(doubleArray80);
        double double86 = variance8.evaluate();
        double[] doubleArray87 = variance8.getData();
        variance1.incrementAll(doubleArray87);
        boolean boolean89 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertNotNull(variance70);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test2208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2208");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance12.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        variance45.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        double[] doubleArray60 = new double[] { (-1), 100.0f };
        variance56.incrementAll(doubleArray60);
        double double62 = variance45.evaluate(doubleArray60);
        double double63 = variance41.evaluate(doubleArray60);
        double double65 = variance22.evaluate(doubleArray60, (double) 100.0f);
        double double66 = variance20.evaluate(doubleArray60);
        variance18.setData(doubleArray60);
        double double69 = variance16.evaluate(doubleArray60, (double) ' ');
        variance12.setData(doubleArray60);
        variance6.incrementAll(doubleArray60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        double double78 = variance73.getResult();
        double[] doubleArray84 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double86 = variance73.evaluate(doubleArray84, (double) (short) 1);
        double double87 = variance6.evaluate(doubleArray84);
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance89.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance92 = variance89.copy();
        boolean boolean93 = variance92.isBiasCorrected();
        long long94 = variance92.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance92);
        org.apache.commons.math.stat.descriptive.moment.Variance variance96 = variance6.copy();
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNotNull(variance14);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1030428.01d + "'", double86 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1030428.01d + "'", double87 == 1030428.01d);
        org.junit.Assert.assertNotNull(variance92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 1L + "'", long94 == 1L);
        org.junit.Assert.assertNotNull(variance96);
    }

    @Test
    public void test2209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2209");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance1.copy();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance12.increment((double) (-1.0f));
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance16.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = variance16.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double[] doubleArray36 = new double[] { (-1), 100.0f };
        variance32.incrementAll(doubleArray36);
        double double38 = variance21.evaluate(doubleArray36);
        variance16.incrementAll(doubleArray36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = variance16.copy();
        long long41 = variance40.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        variance43.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        double[] doubleArray58 = new double[] { (-1), 100.0f };
        variance54.incrementAll(doubleArray58);
        double double60 = variance43.evaluate(doubleArray58);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance62.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        double[] doubleArray73 = new double[] { (-1), 100.0f };
        variance69.incrementAll(doubleArray73);
        variance62.setData(doubleArray73);
        variance43.incrementAll(doubleArray73);
        double double78 = variance40.evaluate(doubleArray73, (-1.0d));
        variance12.setData(doubleArray73);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = variance12.copy();
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertNotNull(variance19);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertNotNull(variance40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 3L + "'", long41 == 3L);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertNotNull(variance80);
    }

    @Test
    public void test2210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2210");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance9.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance9.copy();
        variance9.increment((double) '#');
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = variance19.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        double double46 = variance29.evaluate(doubleArray44);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance48.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        variance52.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        double[] doubleArray67 = new double[] { (-1), 100.0f };
        variance63.incrementAll(doubleArray67);
        double double69 = variance52.evaluate(doubleArray67);
        double double70 = variance48.evaluate(doubleArray67);
        double double72 = variance29.evaluate(doubleArray67, (double) 100.0f);
        double double73 = variance27.evaluate(doubleArray67);
        variance25.setData(doubleArray67);
        double double76 = variance23.evaluate(doubleArray67, (double) ' ');
        variance19.setData(doubleArray67);
        double double79 = variance9.evaluate(doubleArray67, (double) 100.0f);
        variance1.incrementAll(doubleArray67);
        boolean boolean81 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(variance21);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test2211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2211");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        variance1.increment(0.0d);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        variance13.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        double[] doubleArray28 = new double[] { (-1), 100.0f };
        variance24.incrementAll(doubleArray28);
        double double30 = variance13.evaluate(doubleArray28);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        variance36.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        double[] doubleArray51 = new double[] { (-1), 100.0f };
        variance47.incrementAll(doubleArray51);
        double double53 = variance36.evaluate(doubleArray51);
        double double54 = variance32.evaluate(doubleArray51);
        double double56 = variance13.evaluate(doubleArray51, (double) 100.0f);
        double double58 = variance1.evaluate(doubleArray51, (double) (short) 1);
        double[] doubleArray59 = variance1.getData();
        long long60 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2550.25d + "'", double30 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
    }

    @Test
    public void test2212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2212");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double[] doubleArray31 = new double[] { (-1), 100.0f };
        variance27.incrementAll(doubleArray31);
        variance20.setData(doubleArray31);
        variance1.incrementAll(doubleArray31);
        variance1.increment((double) 10);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        variance39.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        double[] doubleArray54 = new double[] { (-1), 100.0f };
        variance50.incrementAll(doubleArray54);
        double double56 = variance39.evaluate(doubleArray54);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance58.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        variance62.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        double double79 = variance62.evaluate(doubleArray77);
        double double80 = variance58.evaluate(doubleArray77);
        double double82 = variance39.evaluate(doubleArray77, (double) 100.0f);
        double[] doubleArray83 = variance39.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = variance39.copy();
        double[] doubleArray85 = variance84.getData();
        double double86 = variance84.getResult();
        boolean boolean87 = variance1.equals((java.lang.Object) double86);
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance89.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance92 = variance89.copy();
        boolean boolean93 = variance92.isBiasCorrected();
        double[] doubleArray94 = variance92.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance95 = variance92.copy();
        boolean boolean96 = variance1.equals((java.lang.Object) variance92);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray83);
        org.junit.Assert.assertNotNull(variance84);
        org.junit.Assert.assertNull(doubleArray85);
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(variance92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(doubleArray94);
        org.junit.Assert.assertNotNull(variance95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test2213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2213");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        double[] doubleArray8 = variance1.getData();
        variance1.increment((double) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(doubleArray8);
    }

    @Test
    public void test2214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2214");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        double double55 = variance33.evaluate(doubleArray52);
        double double57 = variance14.evaluate(doubleArray52, (double) 100.0f);
        double double58 = variance12.evaluate(doubleArray52);
        variance10.setData(doubleArray52);
        double double61 = variance8.evaluate(doubleArray52, (double) ' ');
        variance4.setData(doubleArray52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        java.lang.Object obj82 = null;
        boolean boolean83 = variance64.equals(obj82);
        variance64.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment89 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance90 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment89);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance87, variance90);
        org.apache.commons.math.stat.descriptive.moment.Variance variance92 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance90);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance92);
        boolean boolean94 = variance4.equals((java.lang.Object) variance92);
        variance92.clear();
        variance92.clear();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test2215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2215");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance28.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        variance32.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance28.copy();
        double double38 = variance37.getResult();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    }

    @Test
    public void test2216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2216");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        variance8.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        variance8.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        variance14.increment(0.0d);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double71 = variance14.evaluate(doubleArray64, (double) (short) 1);
        boolean boolean72 = variance8.equals((java.lang.Object) variance14);
        variance14.increment((double) 2L);
        variance14.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        long long77 = variance14.getN();
        variance14.increment(576.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 0L + "'", long77 == 0L);
    }

    @Test
    public void test2217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2217");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        long long11 = variance4.getN();
        long long12 = variance4.getN();
        double[] doubleArray13 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance4.copy();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNotNull(variance14);
    }

    @Test
    public void test2218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2218");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance11);
        double double42 = variance11.getResult();
        // The following exception was thrown during execution in test generation
        try {
            double double43 = variance11.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
    }

    @Test
    public void test2219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2219");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance45.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance48);
        variance48.clear();
        double double57 = variance48.getResult();
        boolean boolean58 = variance48.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance60.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = variance60.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment67);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance65, variance68);
        variance65.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        double[] doubleArray80 = new double[] { (-1), 100.0f };
        variance76.incrementAll(doubleArray80);
        double double82 = variance65.evaluate(doubleArray80);
        variance60.incrementAll(doubleArray80);
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = variance60.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment88 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment88);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance86, variance89);
        double[] doubleArray93 = new double[] { (-1), 100.0f };
        variance89.incrementAll(doubleArray93);
        variance84.setData(doubleArray93);
        variance48.incrementAll(doubleArray93);
        // The following exception was thrown during execution in test generation
        try {
            variance45.setData(doubleArray93, (int) 'a', (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(variance63);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertNotNull(variance84);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-1.0, 100.0]");
    }

    @Test
    public void test2220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2220");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        variance14.increment(0.0d);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double71 = variance14.evaluate(doubleArray64, (double) (short) 1);
        double double72 = variance4.evaluate(doubleArray64);
        double[] doubleArray73 = variance4.getData();
        variance4.setBiasCorrected(true);
        double double76 = variance4.getResult();
        long long77 = variance4.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 0L + "'", long77 == 0L);
    }

    @Test
    public void test2221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2221");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        double[] doubleArray12 = new double[] { (-1), 100.0f };
        variance8.incrementAll(doubleArray12);
        variance1.setData(doubleArray12);
        long long15 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
    }

    @Test
    public void test2222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2222");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        boolean boolean11 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance13.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        double double35 = variance18.evaluate(doubleArray33);
        variance13.incrementAll(doubleArray33);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance13.copy();
        variance13.increment((double) 2L);
        boolean boolean40 = variance13.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) (-1L));
        variance42.increment((double) (short) 100);
        boolean boolean47 = variance13.equals((java.lang.Object) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance13);
        long long49 = variance4.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 2L + "'", long49 == 2L);
    }

    @Test
    public void test2223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2223");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        double double11 = variance1.getResult();
        double double12 = variance1.getResult();
        long long13 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance36.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        double double58 = variance36.evaluate(doubleArray55);
        double double60 = variance17.evaluate(doubleArray55, (double) 100.0f);
        double double61 = variance15.evaluate(doubleArray55);
        long long62 = variance15.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = variance15.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance64);
        double double66 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = variance1.copy();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertNotNull(variance63);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertNotNull(variance67);
    }

    @Test
    public void test2224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2224");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.clear();
        variance4.setBiasCorrected(false);
        variance4.setBiasCorrected(true);
        double double15 = variance4.getResult();
        java.lang.Object obj16 = null;
        boolean boolean17 = variance4.equals(obj16);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test2225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2225");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        boolean boolean7 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        double[] doubleArray9 = variance1.getData();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test2226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2226");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.increment(2046.8888888888887d);
        double[] doubleArray4 = variance1.getData();
        long long5 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        double[] doubleArray14 = new double[] { (-1), 100.0f };
        variance10.incrementAll(doubleArray14);
        long long16 = variance10.getN();
        boolean boolean17 = variance10.isBiasCorrected();
        double double18 = variance10.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double[] doubleArray36 = new double[] { (-1), 100.0f };
        variance32.incrementAll(doubleArray36);
        double double38 = variance21.evaluate(doubleArray36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance40.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        double[] doubleArray51 = new double[] { (-1), 100.0f };
        variance47.incrementAll(doubleArray51);
        variance40.setData(doubleArray51);
        variance21.incrementAll(doubleArray51);
        variance21.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        variance58.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        double[] doubleArray73 = new double[] { (-1), 100.0f };
        variance69.incrementAll(doubleArray73);
        double double75 = variance58.evaluate(doubleArray73);
        java.lang.Object obj76 = null;
        boolean boolean77 = variance58.equals(obj76);
        variance58.setBiasCorrected(true);
        double[] doubleArray86 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double88 = variance58.evaluate(doubleArray86, 100.0d);
        double double89 = variance21.evaluate(doubleArray86);
        variance10.setData(doubleArray86);
        variance1.setData(doubleArray86);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(variance19);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1617.066666666667d + "'", double88 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1617.0666666666664d + "'", double89 == 1617.0666666666664d);
    }

    @Test
    public void test2227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2227");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        long long26 = variance25.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = variance25.copy();
        long long28 = variance25.getN();
        double[] doubleArray29 = variance25.getData();
        double double30 = variance25.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = variance32.copy();
        variance32.clear();
        variance32.increment((double) (short) 1);
        double double39 = variance32.getResult();
        double double40 = variance32.getResult();
        variance32.increment(2550.25d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = variance43.copy();
        double double45 = variance44.getResult();
        long long46 = variance44.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance44.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance68.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        variance68.setData(doubleArray79);
        variance49.incrementAll(doubleArray79);
        variance44.incrementAll(doubleArray79);
        variance32.setData(doubleArray79, (int) (byte) 1, (int) (byte) 0);
        variance25.incrementAll(doubleArray79);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 3L + "'", long26 == 3L);
        org.junit.Assert.assertNotNull(variance27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 3L + "'", long28 == 3L);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2046.8888888888887d + "'", double30 == 2046.8888888888887d);
        org.junit.Assert.assertNotNull(variance35);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(variance44);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNotNull(variance47);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
    }

    @Test
    public void test2228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2228");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        double[] doubleArray7 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance12.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance18.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = variance18.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        variance23.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        double[] doubleArray38 = new double[] { (-1), 100.0f };
        variance34.incrementAll(doubleArray38);
        double double40 = variance23.evaluate(doubleArray38);
        variance18.incrementAll(doubleArray38);
        variance16.setData(doubleArray38);
        double double44 = variance12.evaluate(doubleArray38, (double) (short) 10);
        variance12.clear();
        long long46 = variance12.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance51);
        double[] doubleArray54 = variance53.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance53);
        variance53.increment((double) 1.0f);
        boolean boolean58 = variance1.equals((java.lang.Object) variance53);
        variance1.increment(193.760000000149d);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNotNull(variance14);
        org.junit.Assert.assertNotNull(variance21);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2550.25d + "'", double40 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNull(doubleArray54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test2229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2229");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        variance1.increment((double) 2L);
        boolean boolean28 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        variance33.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        double double50 = variance33.evaluate(doubleArray48);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance52.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        variance56.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        double double73 = variance56.evaluate(doubleArray71);
        double double74 = variance52.evaluate(doubleArray71);
        double double76 = variance33.evaluate(doubleArray71, (double) 100.0f);
        double double77 = variance31.evaluate(doubleArray71);
        long long78 = variance31.getN();
        variance31.increment((-1.0d));
        variance31.setBiasCorrected(true);
        double[] doubleArray89 = new double[] { 0.0d, 1.0d, 1.0d, 1, 1030428.01d, 100.0d };
        double double93 = variance31.evaluate(doubleArray89, 1030428.01d, (int) (byte) 0, (int) (byte) 1);
        variance1.incrementAll(doubleArray89);
        double double95 = variance1.getResult();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(variance29);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[0.0, 1.0, 1.0, 1.0, 1030428.01, 100.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 9.555596086228761E10d + "'", double95 == 9.555596086228761E10d);
    }

    @Test
    public void test2230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2230");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance25.copy();
        variance26.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance26);
    }

    @Test
    public void test2231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2231");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        variance27.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance27);
        double[] doubleArray35 = variance34.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance34);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray35);
    }

    @Test
    public void test2232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2232");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean13 = variance12.isBiasCorrected();
        double[] doubleArray15 = new double[] { 100 };
        variance12.incrementAll(doubleArray15);
        boolean boolean17 = variance4.equals((java.lang.Object) doubleArray15);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = variance4.copy();
        variance4.increment(0.0d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(variance18);
    }

    @Test
    public void test2233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2233");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance46.evaluate(doubleArray55);
        variance46.increment(Double.NaN);
        double[] doubleArray60 = variance46.getData();
        double double61 = variance46.getResult();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
    }

    @Test
    public void test2234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2234");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double[] doubleArray8 = variance6.getData();
        java.lang.Object obj9 = null;
        boolean boolean10 = variance6.equals(obj9);
        java.lang.Class<?> wildcardClass11 = variance6.getClass();
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2235");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        double double10 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance12.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = variance12.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        variance12.incrementAll(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = variance12.copy();
        variance12.increment((double) 2L);
        boolean boolean39 = variance12.isBiasCorrected();
        double[] doubleArray40 = variance12.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        double[] doubleArray58 = new double[] { (-1), 100.0f };
        variance54.incrementAll(doubleArray58);
        variance54.clear();
        boolean boolean61 = variance49.equals((java.lang.Object) variance54);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean64 = variance49.equals((java.lang.Object) variance63);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        double[] doubleArray73 = new double[] { (-1), 100.0f };
        variance69.incrementAll(doubleArray73);
        long long75 = variance69.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean78 = variance77.isBiasCorrected();
        double[] doubleArray80 = new double[] { 100 };
        variance77.incrementAll(doubleArray80);
        boolean boolean82 = variance69.equals((java.lang.Object) doubleArray80);
        variance63.incrementAll(doubleArray80);
        variance12.setData(doubleArray80);
        variance1.incrementAll(doubleArray80);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(variance15);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertNotNull(variance36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 2L + "'", long75 == 2L);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test2236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2236");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.setBiasCorrected(false);
        double double25 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        double[] doubleArray27 = variance1.getData();
        boolean boolean28 = variance1.isBiasCorrected();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2237");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        double double8 = variance1.getResult();
        variance1.setBiasCorrected(false);
        variance1.setBiasCorrected(true);
        double[] doubleArray13 = variance1.getData();
        double double14 = variance1.getResult();
        long long15 = variance1.getN();
        // The following exception was thrown during execution in test generation
        try {
            double double16 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
    }

    @Test
    public void test2238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2238");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        variance20.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        double[] doubleArray35 = new double[] { (-1), 100.0f };
        variance31.incrementAll(doubleArray35);
        double double37 = variance20.evaluate(doubleArray35);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance39.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        variance43.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        double[] doubleArray58 = new double[] { (-1), 100.0f };
        variance54.incrementAll(doubleArray58);
        double double60 = variance43.evaluate(doubleArray58);
        double double61 = variance39.evaluate(doubleArray58);
        double double63 = variance20.evaluate(doubleArray58, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = variance20.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance64);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment69);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        double[] doubleArray74 = new double[] { (-1), 100.0f };
        variance70.incrementAll(doubleArray74);
        double double76 = variance65.evaluate(doubleArray74);
        variance12.setData(doubleArray74);
        variance10.incrementAll(doubleArray74, 0, (int) (short) 0);
        variance10.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance10);
        double double83 = variance10.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance10);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2550.25d + "'", double37 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertNotNull(variance64);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
    }

    @Test
    public void test2239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2239");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        variance4.clear();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance9.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance9.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        variance9.incrementAll(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance37.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance48.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = variance48.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        variance53.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        double[] doubleArray68 = new double[] { (-1), 100.0f };
        variance64.incrementAll(doubleArray68);
        double double70 = variance53.evaluate(doubleArray68);
        variance48.incrementAll(doubleArray68);
        variance9.incrementAll(doubleArray68);
        // The following exception was thrown during execution in test generation
        try {
            variance4.incrementAll(doubleArray68, (int) ' ', (int) '#');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance51);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
    }

    @Test
    public void test2240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2240");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        double double10 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        long long22 = variance16.getN();
        long long23 = variance16.getN();
        long long24 = variance16.getN();
        double double25 = variance16.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance28);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        variance40.clear();
        boolean boolean47 = variance35.equals((java.lang.Object) variance40);
        variance35.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        double double68 = variance51.evaluate(doubleArray66);
        java.lang.Object obj69 = null;
        boolean boolean70 = variance51.equals(obj69);
        variance51.setBiasCorrected(true);
        double[] doubleArray79 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double81 = variance51.evaluate(doubleArray79, 100.0d);
        variance35.setData(doubleArray79, (int) (byte) 0, (int) (short) 0);
        double double86 = variance16.evaluate(doubleArray79, (double) ' ');
        double double87 = variance16.getResult();
        double[] doubleArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance16.incrementAll(doubleArray88);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2550.25d + "'", double10 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2L + "'", long22 == 2L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1617.066666666667d + "'", double81 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1347.5555555555554d + "'", double86 == 1347.5555555555554d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
    }

    @Test
    public void test2241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2241");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        long long26 = variance25.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = variance25.copy();
        double[] doubleArray28 = variance27.getData();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 3L + "'", long26 == 3L);
        org.junit.Assert.assertNotNull(variance27);
        org.junit.Assert.assertNull(doubleArray28);
    }

    @Test
    public void test2242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2242");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        double double51 = variance5.evaluate(doubleArray45);
        variance3.setData(doubleArray45);
        double double54 = variance1.evaluate(doubleArray45, (double) ' ');
        double double55 = variance1.getResult();
        java.lang.Class<?> wildcardClass56 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2243");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        double[] doubleArray47 = variance46.getData();
        variance46.setBiasCorrected(true);
        long long50 = variance46.getN();
        variance46.clear();
        variance46.increment((double) 6L);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNull(doubleArray47);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
    }

    @Test
    public void test2244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2244");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        variance1.increment(0.0d);
        variance1.setBiasCorrected(false);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        double[] doubleArray15 = variance1.getData();
        variance1.increment(4050.0d);
        variance1.clear();
        org.junit.Assert.assertNull(doubleArray15);
    }

    @Test
    public void test2245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2245");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        double double20 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
    }

    @Test
    public void test2246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2246");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance6.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance12.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = variance12.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        variance12.incrementAll(doubleArray32);
        variance10.setData(doubleArray32);
        double double38 = variance6.evaluate(doubleArray32, (double) (short) 10);
        variance6.clear();
        variance6.increment((double) (short) 0);
        double double42 = variance6.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance46.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = variance46.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        double double68 = variance51.evaluate(doubleArray66);
        variance46.incrementAll(doubleArray66);
        variance44.setData(doubleArray66);
        boolean boolean71 = variance6.equals((java.lang.Object) doubleArray66);
        boolean boolean72 = variance6.isBiasCorrected();
        variance6.setBiasCorrected(false);
        boolean boolean75 = variance6.isBiasCorrected();
        boolean boolean76 = variance1.equals((java.lang.Object) boolean75);
        variance1.increment((double) 3L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = variance1.copy();
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(variance15);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(variance49);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(variance79);
    }

    @Test
    public void test2247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2247");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance45.clear();
        double double47 = variance45.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        double[] doubleArray49 = variance45.getData();
        variance45.increment((double) 'a');
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNull(doubleArray49);
    }

    @Test
    public void test2248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2248");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.clear();
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance4.copy();
        long long14 = variance4.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test2249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2249");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance27.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        variance31.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        double[] doubleArray46 = new double[] { (-1), 100.0f };
        variance42.incrementAll(doubleArray46);
        double double48 = variance31.evaluate(doubleArray46);
        double double49 = variance27.evaluate(doubleArray46);
        double double51 = variance8.evaluate(doubleArray46, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = variance8.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance52);
        boolean boolean54 = variance52.isBiasCorrected();
        variance52.increment(1030428.01d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance52);
        variance52.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance61.evaluate(doubleArray76);
        variance52.incrementAll(doubleArray76);
        variance1.incrementAll(doubleArray76);
        long long81 = variance1.getN();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertNotNull(variance52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 2L + "'", long81 == 2L);
    }

    @Test
    public void test2250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2250");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance6.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance12.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = variance12.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        variance12.incrementAll(doubleArray32);
        variance10.setData(doubleArray32);
        double double38 = variance6.evaluate(doubleArray32, (double) (short) 10);
        variance6.clear();
        variance6.increment((double) (short) 0);
        double double42 = variance6.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance46.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = variance46.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        double double68 = variance51.evaluate(doubleArray66);
        variance46.incrementAll(doubleArray66);
        variance44.setData(doubleArray66);
        boolean boolean71 = variance6.equals((java.lang.Object) doubleArray66);
        boolean boolean72 = variance6.isBiasCorrected();
        variance6.setBiasCorrected(false);
        boolean boolean75 = variance6.isBiasCorrected();
        boolean boolean76 = variance1.equals((java.lang.Object) boolean75);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(100.0d);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(variance15);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(variance49);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test2251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2251");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        double double55 = variance33.evaluate(doubleArray52);
        double double57 = variance14.evaluate(doubleArray52, (double) 100.0f);
        double double58 = variance12.evaluate(doubleArray52);
        variance10.setData(doubleArray52);
        double double61 = variance8.evaluate(doubleArray52, (double) ' ');
        variance4.setData(doubleArray52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = variance4.copy();
        variance63.increment((double) 'a');
        variance63.clear();
        double[] doubleArray67 = variance63.getData();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertNotNull(variance63);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 100.0]");
    }

    @Test
    public void test2252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2252");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        variance1.increment(0.0d);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        variance13.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        double[] doubleArray28 = new double[] { (-1), 100.0f };
        variance24.incrementAll(doubleArray28);
        double double30 = variance13.evaluate(doubleArray28);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        variance36.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        double[] doubleArray51 = new double[] { (-1), 100.0f };
        variance47.incrementAll(doubleArray51);
        double double53 = variance36.evaluate(doubleArray51);
        double double54 = variance32.evaluate(doubleArray51);
        double double56 = variance13.evaluate(doubleArray51, (double) 100.0f);
        double double58 = variance1.evaluate(doubleArray51, (double) (short) 1);
        double[] doubleArray59 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        double[] doubleArray68 = new double[] { (-1), 100.0f };
        variance64.incrementAll(doubleArray68);
        double double71 = variance1.evaluate(doubleArray68, (double) 100L);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2550.25d + "'", double30 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
    }

    @Test
    public void test2253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2253");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        double double51 = variance5.evaluate(doubleArray45);
        variance3.setData(doubleArray45);
        double double54 = variance1.evaluate(doubleArray45, (double) ' ');
        double double55 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment59);
        variance60.increment(10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = variance60.copy();
        double[] doubleArray65 = null;
        variance60.setData(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(variance57);
        org.junit.Assert.assertNotNull(variance64);
    }

    @Test
    public void test2254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2254");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        double[] doubleArray13 = variance12.getData();
        variance12.setBiasCorrected(false);
        variance12.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        boolean boolean19 = variance18.isBiasCorrected();
        double[] doubleArray20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        variance45.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        double[] doubleArray60 = new double[] { (-1), 100.0f };
        variance56.incrementAll(doubleArray60);
        double double62 = variance45.evaluate(doubleArray60);
        double double63 = variance41.evaluate(doubleArray60);
        double double65 = variance22.evaluate(doubleArray60, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = variance22.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance67.evaluate(doubleArray76);
        // The following exception was thrown during execution in test generation
        try {
            double double79 = variance18.evaluate(doubleArray20, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(variance66);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
    }

    @Test
    public void test2255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2255");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance1.isBiasCorrected();
        long long6 = variance1.getN();
        double[] doubleArray7 = variance1.getData();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNull(doubleArray7);
    }

    @Test
    public void test2256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2256");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        variance36.clear();
        boolean boolean43 = variance31.equals((java.lang.Object) variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance46.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = variance46.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        double double68 = variance51.evaluate(doubleArray66);
        variance46.incrementAll(doubleArray66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = variance46.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = variance70.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance70);
        double[] doubleArray73 = null;
        double[] doubleArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double78 = variance70.evaluate(doubleArray73, doubleArray74, (double) (byte) 1, (-1), 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(variance49);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertNotNull(variance70);
        org.junit.Assert.assertNotNull(variance71);
    }

    @Test
    public void test2257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2257");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        long long47 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        variance48.clear();
        double[] doubleArray50 = variance48.getData();
        variance48.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance48.copy();
        // The following exception was thrown during execution in test generation
        try {
            double double54 = variance48.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertNull(doubleArray50);
        org.junit.Assert.assertNotNull(variance53);
    }

    @Test
    public void test2258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2258");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        double[] doubleArray4 = variance1.getData();
        org.junit.Assert.assertNull(doubleArray4);
    }

    @Test
    public void test2259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2259");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance24.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        double double46 = variance24.evaluate(doubleArray43);
        double double48 = variance5.evaluate(doubleArray43, (double) 100.0f);
        double double49 = variance3.evaluate(doubleArray43);
        variance1.setData(doubleArray43);
        variance1.clear();
        variance1.increment((double) 100.0f);
        double[] doubleArray54 = variance1.getData();
        double[] doubleArray55 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        double double57 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test2260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2260");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance46.evaluate(doubleArray55);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        double[] doubleArray61 = variance60.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray61);
    }

    @Test
    public void test2261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2261");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        double[] doubleArray5 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance8.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance13.copy();
        boolean boolean17 = variance16.isBiasCorrected();
        variance16.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        variance20.increment(0.0d);
        boolean boolean45 = variance16.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        java.lang.Object obj65 = null;
        boolean boolean66 = variance47.equals(obj65);
        double[] doubleArray67 = variance47.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double double74 = variance69.getResult();
        double[] doubleArray80 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double82 = variance69.evaluate(doubleArray80, (double) (short) 1);
        double double83 = variance47.evaluate(doubleArray80);
        double double85 = variance16.evaluate(doubleArray80, (double) (short) 10);
        variance11.incrementAll(doubleArray80);
        variance6.setData(doubleArray80);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(doubleArray67);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1030428.01d + "'", double82 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1030428.01d + "'", double83 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1030428.01d + "'", double85 == 1030428.01d);
    }

    @Test
    public void test2262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2262");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = variance26.copy();
        boolean boolean30 = variance29.isBiasCorrected();
        variance29.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = variance36.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance42.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        variance42.incrementAll(doubleArray62);
        variance40.setData(doubleArray62);
        double double68 = variance36.evaluate(doubleArray62, (double) (short) 10);
        variance29.setData(doubleArray62, 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance29);
        boolean boolean73 = variance24.equals((java.lang.Object) variance29);
        variance24.increment(1219458.32421875d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(variance38);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test2263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2263");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        double double2 = variance1.getResult();
        long long3 = variance1.getN();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance6.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance6.copy();
        variance6.clear();
        variance6.increment((double) (short) 1);
        variance6.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double double21 = variance16.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        variance27.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        double[] doubleArray42 = new double[] { (-1), 100.0f };
        variance38.incrementAll(doubleArray42);
        double double44 = variance27.evaluate(doubleArray42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance46.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        variance50.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        double[] doubleArray65 = new double[] { (-1), 100.0f };
        variance61.incrementAll(doubleArray65);
        double double67 = variance50.evaluate(doubleArray65);
        double double68 = variance46.evaluate(doubleArray65);
        double double70 = variance27.evaluate(doubleArray65, (double) 100.0f);
        double double71 = variance25.evaluate(doubleArray65);
        variance23.setData(doubleArray65);
        double double74 = variance16.evaluate(doubleArray65, (double) (-1));
        double double76 = variance6.evaluate(doubleArray65, (double) 1L);
        // The following exception was thrown during execution in test generation
        try {
            variance1.setData(doubleArray65, 0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
    }

    @Test
    public void test2264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2264");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        double double10 = variance4.getResult();
        long long11 = variance4.getN();
        variance4.increment((double) (-1L));
        long long14 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        variance16.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = variance16.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance39.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        variance43.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        double[] doubleArray58 = new double[] { (-1), 100.0f };
        variance54.incrementAll(doubleArray58);
        double double60 = variance43.evaluate(doubleArray58);
        double double61 = variance39.evaluate(doubleArray58);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance64.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        variance68.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment78);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance76, variance79);
        double[] doubleArray83 = new double[] { (-1), 100.0f };
        variance79.incrementAll(doubleArray83);
        double double85 = variance68.evaluate(doubleArray83);
        double double86 = variance64.evaluate(doubleArray83);
        double double87 = variance62.evaluate(doubleArray83);
        double double88 = variance29.evaluate(doubleArray83);
        double double91 = variance16.evaluate(doubleArray83, 0, 0);
        double double92 = variance4.evaluate(doubleArray83);
        double[] doubleArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = variance4.evaluate(doubleArray93, (int) 'a', 0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2550.25d + "'", double10 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 3L + "'", long14 == 3L);
        org.junit.Assert.assertNotNull(variance24);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
    }

    @Test
    public void test2265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2265");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double double2 = variance1.getResult();
        variance1.clear();
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
    }

    @Test
    public void test2266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2266");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance6.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance12.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = variance12.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        variance12.incrementAll(doubleArray32);
        variance10.setData(doubleArray32);
        double double38 = variance6.evaluate(doubleArray32, (double) (short) 10);
        variance6.clear();
        variance6.increment((double) (short) 0);
        double double42 = variance6.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance46.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = variance46.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        double double68 = variance51.evaluate(doubleArray66);
        variance46.incrementAll(doubleArray66);
        variance44.setData(doubleArray66);
        boolean boolean71 = variance6.equals((java.lang.Object) doubleArray66);
        boolean boolean72 = variance6.isBiasCorrected();
        variance6.setBiasCorrected(false);
        boolean boolean75 = variance6.isBiasCorrected();
        boolean boolean76 = variance1.equals((java.lang.Object) boolean75);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance77);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(variance15);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(variance49);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test2267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2267");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance48.evaluate(doubleArray63);
        boolean boolean66 = variance48.isBiasCorrected();
        variance48.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance48);
        double[] doubleArray70 = variance48.getData();
        long long71 = variance48.getN();
        variance48.clear();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(doubleArray70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
    }

    @Test
    public void test2268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2268");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        double double36 = variance4.evaluate(doubleArray30, (double) (short) 10);
        variance4.clear();
        long long38 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance43);
        double[] doubleArray46 = variance45.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance45);
        long long48 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = variance4.copy();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNull(doubleArray46);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(variance49);
    }

    @Test
    public void test2269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2269");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        boolean boolean7 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance13.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = variance16.copy();
        variance18.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double[] doubleArray36 = new double[] { (-1), 100.0f };
        variance32.incrementAll(doubleArray36);
        double double38 = variance21.evaluate(doubleArray36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance40.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double61 = variance44.evaluate(doubleArray59);
        double double62 = variance40.evaluate(doubleArray59);
        double double64 = variance21.evaluate(doubleArray59, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = variance21.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance65);
        double[] doubleArray67 = variance66.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance69.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        variance73.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment83 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment83);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance81, variance84);
        double[] doubleArray88 = new double[] { (-1), 100.0f };
        variance84.incrementAll(doubleArray88);
        double double90 = variance73.evaluate(doubleArray88);
        double double91 = variance69.evaluate(doubleArray88);
        variance66.incrementAll(doubleArray88);
        variance18.setData(doubleArray88, (int) (short) 0, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double99 = variance11.evaluate(doubleArray88, (double) (short) 0, 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertNotNull(variance18);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertNotNull(variance65);
        org.junit.Assert.assertNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2550.25d + "'", double90 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2550.25d + "'", double91 == 2550.25d);
    }

    @Test
    public void test2270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2270");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        double double36 = variance4.evaluate(doubleArray30, (double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance4.copy();
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertNotNull(variance37);
    }

    @Test
    public void test2271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2271");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        variance8.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        variance8.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        variance14.increment(0.0d);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double71 = variance14.evaluate(doubleArray64, (double) (short) 1);
        boolean boolean72 = variance8.equals((java.lang.Object) variance14);
        variance14.increment((double) 2L);
        variance14.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        variance14.increment(0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test2272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2272");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(variance4);
    }

    @Test
    public void test2273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2273");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) (-1L));
        variance1.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance34.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        double double56 = variance34.evaluate(doubleArray53);
        double double58 = variance15.evaluate(doubleArray53, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = variance15.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance59);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        double[] doubleArray69 = new double[] { (-1), 100.0f };
        variance65.incrementAll(doubleArray69);
        double double71 = variance60.evaluate(doubleArray69);
        variance7.setData(doubleArray69);
        double double73 = variance1.evaluate(doubleArray69);
        double[] doubleArray74 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment79);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance77, variance80);
        double[] doubleArray84 = new double[] { (-1), 100.0f };
        variance80.incrementAll(doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            variance75.incrementAll(doubleArray84, 10, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: length (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertNotNull(variance59);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 100.0]");
    }

    @Test
    public void test2274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2274");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        variance6.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        variance9.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        double[] doubleArray24 = new double[] { (-1), 100.0f };
        variance20.incrementAll(doubleArray24);
        double double26 = variance9.evaluate(doubleArray24);
        boolean boolean27 = variance9.isBiasCorrected();
        variance9.setBiasCorrected(true);
        variance9.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = variance33.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance36);
        boolean boolean38 = variance9.equals((java.lang.Object) variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        variance41.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        double[] doubleArray56 = new double[] { (-1), 100.0f };
        variance52.incrementAll(doubleArray56);
        double double58 = variance41.evaluate(doubleArray56);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance60.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        double double82 = variance60.evaluate(doubleArray79);
        double double84 = variance41.evaluate(doubleArray79, (double) 100.0f);
        double[] doubleArray85 = variance41.getData();
        variance41.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance41);
        double[] doubleArray88 = null;
        variance6.setData(doubleArray88);
        variance6.increment((double) 3L);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2550.25d + "'", double26 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(variance36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray85);
    }

    @Test
    public void test2275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2275");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double double28 = variance23.getResult();
        double[] doubleArray34 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double36 = variance23.evaluate(doubleArray34, (double) (short) 1);
        variance1.setData(doubleArray34);
        variance1.clear();
        long long39 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment((double) 6L);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1030428.01d + "'", double36 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    }

    @Test
    public void test2276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2276");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        double double36 = variance4.evaluate(doubleArray30, (double) (short) 10);
        variance4.clear();
        variance4.increment((double) (short) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        variance41.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        double[] doubleArray56 = new double[] { (-1), 100.0f };
        variance52.incrementAll(doubleArray56);
        double double58 = variance41.evaluate(doubleArray56);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance60.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        variance60.setData(doubleArray71);
        variance41.incrementAll(doubleArray71);
        variance4.incrementAll(doubleArray71);
        long long76 = variance4.getN();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 3L + "'", long76 == 3L);
    }

    @Test
    public void test2277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2277");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray2 = variance1.getData();
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        boolean boolean12 = variance6.equals((java.lang.Object) 10);
        variance6.increment((double) (short) 10);
        variance6.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        variance45.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        double[] doubleArray60 = new double[] { (-1), 100.0f };
        variance56.incrementAll(doubleArray60);
        double double62 = variance45.evaluate(doubleArray60);
        double double63 = variance41.evaluate(doubleArray60);
        double double65 = variance22.evaluate(doubleArray60, (double) 100.0f);
        double double66 = variance20.evaluate(doubleArray60);
        variance18.setData(doubleArray60);
        variance6.setData(doubleArray60, (int) (byte) 1, 0);
        boolean boolean71 = variance6.isBiasCorrected();
        double double72 = variance6.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance73);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    }

    @Test
    public void test2278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2278");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        double double36 = variance4.evaluate(doubleArray30, (double) (short) 10);
        variance4.clear();
        variance4.increment((double) (short) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        variance41.setData(doubleArray52);
        double double55 = variance4.evaluate(doubleArray52);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
    }

    @Test
    public void test2279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2279");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance28.increment((double) (-1));
        double double31 = variance28.evaluate();
        double double32 = variance28.evaluate();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        double double51 = variance34.evaluate(doubleArray49);
        java.lang.Object obj52 = null;
        boolean boolean53 = variance34.equals(obj52);
        double[] doubleArray54 = variance34.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance56.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = variance56.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance61.evaluate(doubleArray76);
        variance56.incrementAll(doubleArray76);
        variance34.incrementAll(doubleArray76);
        boolean boolean81 = variance34.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance34);
        variance34.increment(25.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance34);
        variance85.increment(0.0d);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 5100.5d + "'", double31 == 5100.5d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 5100.5d + "'", double32 == 5100.5d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(doubleArray54);
        org.junit.Assert.assertNotNull(variance59);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test2280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2280");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        long long26 = variance25.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = variance25.copy();
        boolean boolean29 = variance25.equals((java.lang.Object) (short) 1);
        variance25.setBiasCorrected(false);
        long long32 = variance25.getN();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 3L + "'", long26 == 3L);
        org.junit.Assert.assertNotNull(variance27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 3L + "'", long32 == 3L);
    }

    @Test
    public void test2281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2281");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance1.setBiasCorrected(false);
        boolean boolean49 = variance1.equals((java.lang.Object) 100.0f);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance52.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance52);
        double[] doubleArray56 = variance1.getData();
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(doubleArray56);
    }

    @Test
    public void test2282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2282");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        long long11 = variance4.getN();
        long long12 = variance4.getN();
        variance4.increment(1347.5555555555554d);
        long long15 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        boolean boolean23 = variance17.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = variance17.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long27 = variance26.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance29.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        variance33.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        double double50 = variance33.evaluate(doubleArray48);
        double double51 = variance29.evaluate(doubleArray48);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance54.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        variance58.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        double[] doubleArray73 = new double[] { (-1), 100.0f };
        variance69.incrementAll(doubleArray73);
        double double75 = variance58.evaluate(doubleArray73);
        double double76 = variance54.evaluate(doubleArray73);
        double double77 = variance52.evaluate(doubleArray73);
        double double78 = variance26.evaluate(doubleArray73);
        variance24.setData(doubleArray73);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = variance24.copy();
        double[] doubleArray81 = variance24.getData();
        variance4.incrementAll(doubleArray81);
        boolean boolean83 = variance4.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 3L + "'", long15 == 3L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(variance24);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertNotNull(variance80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test2283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2283");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.increment(2046.8888888888887d);
        double[] doubleArray4 = variance1.getData();
        variance1.increment((double) (short) 100);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.junit.Assert.assertNull(doubleArray4);
    }

    @Test
    public void test2284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2284");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        boolean boolean15 = variance7.equals((java.lang.Object) variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance21);
        double[] doubleArray24 = variance23.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        variance39.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        double[] doubleArray54 = new double[] { (-1), 100.0f };
        variance50.incrementAll(doubleArray54);
        double double56 = variance39.evaluate(doubleArray54);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance58.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        variance62.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        double double79 = variance62.evaluate(doubleArray77);
        double double80 = variance58.evaluate(doubleArray77);
        double double82 = variance39.evaluate(doubleArray77, (double) 100.0f);
        double double83 = variance37.evaluate(doubleArray77);
        variance35.setData(doubleArray77);
        double double86 = variance33.evaluate(doubleArray77, (double) ' ');
        variance29.setData(doubleArray77);
        variance23.incrementAll(doubleArray77);
        double double90 = variance14.evaluate(doubleArray77, (double) (-1));
        variance14.clear();
        double[] doubleArray94 = new double[] { 2448.2400000000002d, 193.76d };
        // The following exception was thrown during execution in test generation
        try {
            double double98 = variance14.evaluate(doubleArray94, 0.0d, (int) (byte) 1, (int) '#');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertNotNull(variance31);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2550.25d + "'", double90 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[2448.2400000000002, 193.76]");
    }

    @Test
    public void test2285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2285");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        double double11 = variance1.getResult();
        long long12 = variance1.getN();
        boolean boolean13 = variance1.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test2286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2286");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean13 = variance12.isBiasCorrected();
        double[] doubleArray15 = new double[] { 100 };
        variance12.incrementAll(doubleArray15);
        boolean boolean17 = variance4.equals((java.lang.Object) doubleArray15);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double[] doubleArray36 = new double[] { (-1), 100.0f };
        variance32.incrementAll(doubleArray36);
        double double38 = variance21.evaluate(doubleArray36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance40.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double61 = variance44.evaluate(doubleArray59);
        double double62 = variance40.evaluate(doubleArray59);
        double double64 = variance21.evaluate(doubleArray59, (double) 100.0f);
        double double65 = variance19.evaluate(doubleArray59);
        variance4.incrementAll(doubleArray59);
        double double67 = variance4.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
    }

    @Test
    public void test2287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2287");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        variance59.incrementAll(doubleArray79);
        variance57.setData(doubleArray79);
        double double85 = variance53.evaluate(doubleArray79, (double) (short) 10);
        variance46.incrementAll(doubleArray79);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance46.copy();
        variance46.setBiasCorrected(false);
        variance46.clear();
        boolean boolean91 = variance46.isBiasCorrected();
        // The following exception was thrown during execution in test generation
        try {
            double double92 = variance46.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertNotNull(variance87);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test2288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2288");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean15 = variance14.isBiasCorrected();
        double[] doubleArray17 = new double[] { 100 };
        variance14.incrementAll(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        double double67 = variance24.evaluate(doubleArray62, (double) 100.0f);
        double double68 = variance22.evaluate(doubleArray62);
        variance20.setData(doubleArray62);
        double double71 = variance14.evaluate(doubleArray62, (double) (byte) -1);
        double double73 = variance10.evaluate(doubleArray62, (double) 1.0f);
        double double74 = variance8.evaluate(doubleArray62);
        variance8.setBiasCorrected(false);
        double[] doubleArray83 = new double[] { 0.0f, 10L, (short) 100, (byte) 10, 0L, (byte) 100 };
        double double87 = variance8.evaluate(doubleArray83, (double) (short) 0, (int) (short) 1, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        variance8.increment((double) 1L);
        variance8.clear();
        boolean boolean92 = variance8.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[0.0, 10.0, 100.0, 10.0, 0.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test2289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2289");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance6.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance6.copy();
        boolean boolean10 = variance9.isBiasCorrected();
        variance9.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        double double35 = variance13.evaluate(doubleArray32);
        variance13.increment(0.0d);
        boolean boolean38 = variance9.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        java.lang.Object obj58 = null;
        boolean boolean59 = variance40.equals(obj58);
        double[] doubleArray60 = variance40.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        double double67 = variance62.getResult();
        double[] doubleArray73 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double75 = variance62.evaluate(doubleArray73, (double) (short) 1);
        double double76 = variance40.evaluate(doubleArray73);
        double double78 = variance9.evaluate(doubleArray73, (double) (short) 10);
        variance4.incrementAll(doubleArray73);
        variance4.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(doubleArray60);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1030428.01d + "'", double75 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1030428.01d + "'", double76 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1030428.01d + "'", double78 == 1030428.01d);
    }

    @Test
    public void test2290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2290");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        variance59.incrementAll(doubleArray79);
        variance57.setData(doubleArray79);
        double double85 = variance53.evaluate(doubleArray79, (double) (short) 10);
        variance46.incrementAll(doubleArray79);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance46.copy();
        variance46.setBiasCorrected(true);
        variance46.clear();
        long long91 = variance46.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertNotNull(variance87);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 0L + "'", long91 == 0L);
    }

    @Test
    public void test2291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2291");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        long long11 = variance4.getN();
        long long12 = variance4.getN();
        double[] doubleArray13 = variance4.getData();
        variance4.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertNull(doubleArray13);
    }

    @Test
    public void test2292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2292");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        double double51 = variance5.evaluate(doubleArray45);
        variance3.setData(doubleArray45);
        double double54 = variance1.evaluate(doubleArray45, (double) ' ');
        double double55 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
    }

    @Test
    public void test2293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2293");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        double[] doubleArray6 = variance4.getData();
        boolean boolean7 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        long long18 = variance12.getN();
        boolean boolean19 = variance12.isBiasCorrected();
        java.lang.Class<?> wildcardClass20 = variance12.getClass();
        boolean boolean21 = variance4.equals((java.lang.Object) variance12);
        long long22 = variance4.getN();
        java.lang.Class<?> wildcardClass23 = variance4.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2294");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        double[] doubleArray19 = new double[] { (-1), 100.0f };
        variance15.incrementAll(doubleArray19);
        long long21 = variance15.getN();
        boolean boolean22 = variance15.isBiasCorrected();
        double double23 = variance15.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = variance15.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        java.lang.Object obj44 = null;
        boolean boolean45 = variance26.equals(obj44);
        variance26.setBiasCorrected(true);
        double[] doubleArray54 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double56 = variance26.evaluate(doubleArray54, 100.0d);
        variance24.setData(doubleArray54, (int) (byte) 1, 0);
        double double60 = variance4.evaluate(doubleArray54);
        java.lang.Class<?> wildcardClass61 = variance4.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2L + "'", long21 == 2L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance24);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1617.066666666667d + "'", double56 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1347.5555555555554d + "'", double60 == 1347.5555555555554d);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2295");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance2.setBiasCorrected(false);
        // The following exception was thrown during execution in test generation
        try {
            long long5 = variance2.getN();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2296");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        double[] doubleArray13 = variance12.getData();
        variance12.setBiasCorrected(false);
        variance12.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = variance18.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean22 = variance21.isBiasCorrected();
        variance21.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        variance27.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        double[] doubleArray42 = new double[] { (-1), 100.0f };
        variance38.incrementAll(doubleArray42);
        double double44 = variance27.evaluate(doubleArray42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance46.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        variance50.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        double[] doubleArray65 = new double[] { (-1), 100.0f };
        variance61.incrementAll(doubleArray65);
        double double67 = variance50.evaluate(doubleArray65);
        double double68 = variance46.evaluate(doubleArray65);
        double double70 = variance27.evaluate(doubleArray65, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = variance27.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = variance27.copy();
        double double73 = variance72.getResult();
        variance72.clear();
        boolean boolean75 = variance21.equals((java.lang.Object) variance72);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNotNull(variance19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertNotNull(variance71);
        org.junit.Assert.assertNotNull(variance72);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test2297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2297");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = variance49.copy();
        java.lang.Class<?> wildcardClass51 = variance49.getClass();
        boolean boolean52 = variance46.equals((java.lang.Object) wildcardClass51);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        double double55 = variance54.getResult();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
    }

    @Test
    public void test2298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2298");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double double6 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance27.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        variance31.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        double[] doubleArray46 = new double[] { (-1), 100.0f };
        variance42.incrementAll(doubleArray46);
        double double48 = variance31.evaluate(doubleArray46);
        double double49 = variance27.evaluate(doubleArray46);
        double double51 = variance8.evaluate(doubleArray46, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = variance8.copy();
        variance52.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = variance58.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance64.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = variance64.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        variance69.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment79);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance77, variance80);
        double[] doubleArray84 = new double[] { (-1), 100.0f };
        variance80.incrementAll(doubleArray84);
        double double86 = variance69.evaluate(doubleArray84);
        variance64.incrementAll(doubleArray84);
        variance62.setData(doubleArray84);
        double double90 = variance58.evaluate(doubleArray84, (double) (short) 10);
        double double92 = variance52.evaluate(doubleArray84, 100.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance52);
        variance52.setBiasCorrected(true);
        boolean boolean96 = variance52.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertNotNull(variance52);
        org.junit.Assert.assertNotNull(variance60);
        org.junit.Assert.assertNotNull(variance67);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2550.25d + "'", double90 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test2299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2299");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        long long21 = variance8.getN();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
    }

    @Test
    public void test2300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2300");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        variance4.clear();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance9.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance9.copy();
        variance9.clear();
        variance9.increment((double) (short) 1);
        long long16 = variance9.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        double[] doubleArray34 = new double[] { (-1), 100.0f };
        variance30.incrementAll(doubleArray34);
        variance30.clear();
        boolean boolean37 = variance25.equals((java.lang.Object) variance30);
        variance25.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        variance41.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        double[] doubleArray56 = new double[] { (-1), 100.0f };
        variance52.incrementAll(doubleArray56);
        double double58 = variance41.evaluate(doubleArray56);
        java.lang.Object obj59 = null;
        boolean boolean60 = variance41.equals(obj59);
        variance41.setBiasCorrected(true);
        double[] doubleArray69 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double71 = variance41.evaluate(doubleArray69, 100.0d);
        variance25.setData(doubleArray69, (int) (byte) 0, (int) (short) 0);
        double double75 = variance9.evaluate(doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            variance4.setData(doubleArray69, (int) (byte) 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1617.066666666667d + "'", double71 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1347.5555555555554d + "'", double75 == 1347.5555555555554d);
    }

    @Test
    public void test2301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2301");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        long long47 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        variance48.clear();
        double[] doubleArray50 = variance48.getData();
        variance48.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertNull(doubleArray50);
    }

    @Test
    public void test2302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2302");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        boolean boolean11 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance13.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        double double35 = variance18.evaluate(doubleArray33);
        variance13.incrementAll(doubleArray33);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance13.copy();
        variance13.increment((double) 2L);
        boolean boolean40 = variance13.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) (-1L));
        variance42.increment((double) (short) 100);
        boolean boolean47 = variance13.equals((java.lang.Object) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test2303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2303");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        double double2 = variance1.getResult();
        long long3 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(variance5);
    }

    @Test
    public void test2304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2304");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        variance4.clear();
    }

    @Test
    public void test2305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2305");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = variance4.copy();
        boolean boolean8 = variance4.isBiasCorrected();
        variance4.increment(1617.066666666667d);
        double double11 = variance4.getResult();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test2306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2306");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.setBiasCorrected(false);
        double double25 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance26.clear();
        double[] doubleArray28 = variance26.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNull(doubleArray28);
    }

    @Test
    public void test2307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2307");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance8.clear();
        long long10 = variance8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = variance12.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        variance25.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = variance25.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance35.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        variance39.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        double[] doubleArray54 = new double[] { (-1), 100.0f };
        variance50.incrementAll(doubleArray54);
        double double56 = variance39.evaluate(doubleArray54);
        double double57 = variance35.evaluate(doubleArray54);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance35);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance60.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        double double82 = variance60.evaluate(doubleArray79);
        double double83 = variance58.evaluate(doubleArray79);
        double double84 = variance25.evaluate(doubleArray79);
        double double87 = variance12.evaluate(doubleArray79, 0, 0);
        double double89 = variance8.evaluate(doubleArray79, (double) 100L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance90 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(variance20);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance33);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2550.25d + "'", double89 == 2550.25d);
    }

    @Test
    public void test2308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2308");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        double[] doubleArray21 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = variance1.copy();
        variance1.increment((double) '4');
        variance1.clear();
        double double26 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNotNull(variance22);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
    }

    @Test
    public void test2309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2309");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        variance8.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        variance8.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        variance14.increment(0.0d);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double71 = variance14.evaluate(doubleArray64, (double) (short) 1);
        boolean boolean72 = variance8.equals((java.lang.Object) variance14);
        variance14.increment((double) 2L);
        variance14.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        long long77 = variance76.getN();
        variance76.increment((double) 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 0L + "'", long77 == 0L);
    }

    @Test
    public void test2310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2310");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance1.copy();
        double double10 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        double double55 = variance12.evaluate(doubleArray50, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = variance12.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance56);
        double[] doubleArray58 = variance57.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance60.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        double double82 = variance60.evaluate(doubleArray79);
        variance57.incrementAll(doubleArray79);
        variance1.incrementAll(doubleArray79, 1, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance87);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertNotNull(variance56);
        org.junit.Assert.assertNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
    }

    @Test
    public void test2311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2311");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        variance14.increment(0.0d);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double71 = variance14.evaluate(doubleArray64, (double) (short) 1);
        double double72 = variance4.evaluate(doubleArray64);
        double[] doubleArray73 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        variance74.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray73);
    }

    @Test
    public void test2312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2312");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        double[] doubleArray9 = variance8.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance14.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        double double67 = variance24.evaluate(doubleArray62, (double) 100.0f);
        double double68 = variance22.evaluate(doubleArray62);
        variance20.setData(doubleArray62);
        double double71 = variance18.evaluate(doubleArray62, (double) ' ');
        variance14.setData(doubleArray62);
        variance8.incrementAll(doubleArray62);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment77);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance75, variance78);
        double double80 = variance75.getResult();
        double[] doubleArray86 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double88 = variance75.evaluate(doubleArray86, (double) (short) 1);
        double double89 = variance8.evaluate(doubleArray86);
        double double92 = variance1.evaluate(doubleArray86, 0, (int) (byte) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance93 = variance1.copy();
        double[] doubleArray94 = variance1.getData();
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1030428.01d + "'", double88 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1030428.01d + "'", double89 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertNotNull(variance93);
        org.junit.Assert.assertNull(doubleArray94);
    }

    @Test
    public void test2313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2313");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.increment((double) (byte) 10);
        variance1.increment((double) (short) 100);
        variance1.increment(5100.5d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        double[] doubleArray17 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        long long29 = variance23.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean32 = variance31.isBiasCorrected();
        double[] doubleArray34 = new double[] { 100 };
        variance31.incrementAll(doubleArray34);
        boolean boolean36 = variance23.equals((java.lang.Object) doubleArray34);
        double double38 = variance1.evaluate(doubleArray34, 1030428.01d);
        boolean boolean40 = variance1.equals((java.lang.Object) 10L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(doubleArray17);
        org.junit.Assert.assertNotNull(variance18);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 2L + "'", long29 == 2L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test2314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2314");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance4.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        double double26 = variance4.evaluate(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance29.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        variance33.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        double double50 = variance33.evaluate(doubleArray48);
        double double51 = variance29.evaluate(doubleArray48);
        double double52 = variance27.evaluate(doubleArray48);
        double double53 = variance1.evaluate(doubleArray48);
        boolean boolean54 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double double61 = variance56.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance56);
        boolean boolean63 = variance1.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2550.25d + "'", double26 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test2315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2315");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance45.clear();
        double double47 = variance45.getResult();
        variance45.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance49.clear();
        long long51 = variance49.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance49);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance49);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance55.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = variance55.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        variance60.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        double[] doubleArray75 = new double[] { (-1), 100.0f };
        variance71.incrementAll(doubleArray75);
        double double77 = variance60.evaluate(doubleArray75);
        variance55.incrementAll(doubleArray75);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = variance55.copy();
        long long80 = variance79.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = variance79.copy();
        variance81.increment(0.0d);
        variance81.setBiasCorrected(false);
        boolean boolean86 = variance49.equals((java.lang.Object) variance81);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNotNull(variance58);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertNotNull(variance79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 3L + "'", long80 == 3L);
        org.junit.Assert.assertNotNull(variance81);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test2316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2316");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) (-1L));
        variance1.increment((double) (short) 100);
        boolean boolean6 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        java.lang.Object obj26 = null;
        boolean boolean27 = variance8.equals(obj26);
        double[] doubleArray28 = variance8.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double double35 = variance30.getResult();
        double[] doubleArray41 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double43 = variance30.evaluate(doubleArray41, (double) (short) 1);
        double double44 = variance8.evaluate(doubleArray41);
        double double45 = variance1.evaluate(doubleArray41);
        boolean boolean46 = variance1.isBiasCorrected();
        // The following exception was thrown during execution in test generation
        try {
            double double47 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1030428.01d + "'", double43 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1030428.01d + "'", double44 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1030428.01d + "'", double45 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test2317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2317");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        variance1.increment((double) 2L);
        boolean boolean28 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance30.increment((double) (-1L));
        variance30.increment((double) (short) 100);
        boolean boolean35 = variance1.equals((java.lang.Object) (short) 100);
        double[] doubleArray36 = variance1.getData();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(doubleArray36);
    }

    @Test
    public void test2318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2318");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test2319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2319");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        double double51 = variance5.evaluate(doubleArray45);
        variance3.setData(doubleArray45);
        double double54 = variance1.evaluate(doubleArray45, (double) ' ');
        double double55 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        boolean boolean66 = variance60.equals((java.lang.Object) 10);
        variance60.increment((double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double double75 = variance70.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance70);
        variance70.clear();
        variance70.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment82 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment82);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance80, variance83);
        double double85 = variance80.getResult();
        double[] doubleArray91 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double93 = variance80.evaluate(doubleArray91, (double) (short) 1);
        double double95 = variance70.evaluate(doubleArray91, 100.0d);
        double double97 = variance1.evaluate(doubleArray91, 10.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(variance57);
        org.junit.Assert.assertNotNull(variance58);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1030428.01d + "'", double93 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 1030428.01d + "'", double95 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 1030428.01d + "'", double97 == 1030428.01d);
    }

    @Test
    public void test2320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2320");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        boolean boolean9 = variance1.equals((java.lang.Object) variance8);
        boolean boolean11 = variance8.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance34.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        double double56 = variance34.evaluate(doubleArray53);
        double double58 = variance15.evaluate(doubleArray53, (double) 100.0f);
        double double59 = variance13.evaluate(doubleArray53);
        double double60 = variance8.evaluate(doubleArray53);
        long long61 = variance8.getN();
        variance8.setBiasCorrected(true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
    }

    @Test
    public void test2321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2321");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        variance4.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance16.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = variance16.copy();
        boolean boolean20 = variance19.isBiasCorrected();
        double[] doubleArray21 = variance19.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance23.increment((double) (-1L));
        variance23.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance56.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        variance60.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        double[] doubleArray75 = new double[] { (-1), 100.0f };
        variance71.incrementAll(doubleArray75);
        double double77 = variance60.evaluate(doubleArray75);
        double double78 = variance56.evaluate(doubleArray75);
        double double80 = variance37.evaluate(doubleArray75, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = variance37.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance81);
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment86 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment86);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance84, variance87);
        double[] doubleArray91 = new double[] { (-1), 100.0f };
        variance87.incrementAll(doubleArray91);
        double double93 = variance82.evaluate(doubleArray91);
        variance29.setData(doubleArray91);
        double double95 = variance23.evaluate(doubleArray91);
        variance19.setData(doubleArray91);
        double double97 = variance4.evaluate(doubleArray91);
        double double98 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance99 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(variance19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertNotNull(variance81);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2550.25d + "'", double93 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 2550.25d + "'", double95 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 5100.5d + "'", double97 == 5100.5d);
        org.junit.Assert.assertTrue(Double.isNaN(double98));
    }

    @Test
    public void test2322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2322");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance25.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance47.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        double double68 = variance51.evaluate(doubleArray66);
        double double69 = variance47.evaluate(doubleArray66);
        double double71 = variance28.evaluate(doubleArray66, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = variance28.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = variance28.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = variance28.copy();
        java.lang.Class<?> wildcardClass75 = variance74.getClass();
        boolean boolean76 = variance25.equals((java.lang.Object) variance74);
        boolean boolean77 = variance25.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = variance25.copy();
        boolean boolean79 = variance78.isBiasCorrected();
        variance78.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertNotNull(variance72);
        org.junit.Assert.assertNotNull(variance73);
        org.junit.Assert.assertNotNull(variance74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(variance78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test2323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2323");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance18.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        variance28.increment(0.0d);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        variance63.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        double[] doubleArray78 = new double[] { (-1), 100.0f };
        variance74.incrementAll(doubleArray78);
        double double80 = variance63.evaluate(doubleArray78);
        double double81 = variance59.evaluate(doubleArray78);
        double double83 = variance40.evaluate(doubleArray78, (double) 100.0f);
        double double85 = variance28.evaluate(doubleArray78, (double) (short) 1);
        double double86 = variance18.evaluate(doubleArray78);
        double double87 = variance13.evaluate(doubleArray78);
        double double89 = variance6.evaluate(doubleArray78, 1347.5555555555554d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance90 = variance6.copy();
        variance90.clear();
        variance90.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2550.250000000233d + "'", double89 == 2550.250000000233d);
        org.junit.Assert.assertNotNull(variance90);
    }

    @Test
    public void test2324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2324");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        long long3 = variance1.getN();
        variance1.clear();
        variance1.increment((double) 1L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = variance1.copy();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(variance7);
    }

    @Test
    public void test2325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2325");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        variance5.increment((-1.0d));
        boolean boolean8 = variance5.isBiasCorrected();
        java.lang.Class<?> wildcardClass9 = variance5.getClass();
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test2326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2326");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double double16 = variance11.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance22.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        variance27.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        double[] doubleArray42 = new double[] { (-1), 100.0f };
        variance38.incrementAll(doubleArray42);
        double double44 = variance27.evaluate(doubleArray42);
        variance22.incrementAll(doubleArray42);
        variance20.setData(doubleArray42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance20);
        variance47.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance51.increment((double) 10);
        variance51.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance51);
        double double56 = variance51.getResult();
        double[] doubleArray57 = variance51.getData();
        variance18.setData(doubleArray57);
        boolean boolean59 = variance18.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test2327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2327");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance28.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        variance32.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance32);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
    }

    @Test
    public void test2328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2328");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = variance33.copy();
        boolean boolean37 = variance36.isBiasCorrected();
        variance36.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = variance36.copy();
        boolean boolean40 = variance36.isBiasCorrected();
        boolean boolean41 = variance36.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance36);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertNotNull(variance36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(variance39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test2329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2329");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean23 = variance8.equals((java.lang.Object) variance22);
        double[] doubleArray24 = variance22.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance22.copy();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertNotNull(variance25);
    }

    @Test
    public void test2330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2330");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance30.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        double double51 = variance34.evaluate(doubleArray49);
        double double52 = variance30.evaluate(doubleArray49);
        double double54 = variance11.evaluate(doubleArray49, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance11.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        double[] doubleArray65 = new double[] { (-1), 100.0f };
        variance61.incrementAll(doubleArray65);
        double double67 = variance56.evaluate(doubleArray65);
        variance3.setData(doubleArray65);
        variance1.incrementAll(doubleArray65, 0, (int) (short) 0);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = variance1.copy();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertNotNull(variance73);
    }

    @Test
    public void test2331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2331");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance1.copy();
        double double10 = variance1.getResult();
        variance1.setBiasCorrected(false);
        variance1.increment(2025.0d);
        long long15 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance1.copy();
        long long17 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
    }

    @Test
    public void test2332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2332");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        variance27.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        variance39.clear();
        boolean boolean46 = variance34.equals((java.lang.Object) variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean49 = variance34.equals((java.lang.Object) variance48);
        double[] doubleArray50 = variance48.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        variance52.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        double[] doubleArray68 = new double[] { (-1), 100.0f };
        variance64.incrementAll(doubleArray68);
        variance64.clear();
        boolean boolean71 = variance59.equals((java.lang.Object) variance64);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean74 = variance59.equals((java.lang.Object) variance73);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment78);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance76, variance79);
        double[] doubleArray83 = new double[] { (-1), 100.0f };
        variance79.incrementAll(doubleArray83);
        long long85 = variance79.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean88 = variance87.isBiasCorrected();
        double[] doubleArray90 = new double[] { 100 };
        variance87.incrementAll(doubleArray90);
        boolean boolean92 = variance79.equals((java.lang.Object) doubleArray90);
        variance73.incrementAll(doubleArray90);
        double double95 = variance48.evaluate(doubleArray90, (double) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray90, (int) (short) 100, 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 2L + "'", long85 == 2L);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
    }

    @Test
    public void test2333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2333");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance28.increment((double) (-1));
        double double31 = variance28.evaluate();
        double double32 = variance28.evaluate();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        double double51 = variance34.evaluate(doubleArray49);
        java.lang.Object obj52 = null;
        boolean boolean53 = variance34.equals(obj52);
        double[] doubleArray54 = variance34.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance56.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = variance56.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance61.evaluate(doubleArray76);
        variance56.incrementAll(doubleArray76);
        variance34.incrementAll(doubleArray76);
        boolean boolean81 = variance34.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance34);
        variance34.increment(25.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance34);
        double double86 = variance85.getResult();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 5100.5d + "'", double31 == 5100.5d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 5100.5d + "'", double32 == 5100.5d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(doubleArray54);
        org.junit.Assert.assertNotNull(variance59);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
    }

    @Test
    public void test2334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2334");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean15 = variance14.isBiasCorrected();
        double[] doubleArray17 = new double[] { 100 };
        variance14.incrementAll(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        double double67 = variance24.evaluate(doubleArray62, (double) 100.0f);
        double double68 = variance22.evaluate(doubleArray62);
        variance20.setData(doubleArray62);
        double double71 = variance14.evaluate(doubleArray62, (double) (byte) -1);
        double double73 = variance10.evaluate(doubleArray62, (double) 1.0f);
        double double74 = variance8.evaluate(doubleArray62);
        variance8.setBiasCorrected(false);
        double[] doubleArray83 = new double[] { 0.0f, 10L, (short) 100, (byte) 10, 0L, (byte) 100 };
        double double87 = variance8.evaluate(doubleArray83, (double) (short) 0, (int) (short) 1, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        variance8.increment((double) 1L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance91 = variance8.copy();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[0.0, 10.0, 100.0, 10.0, 0.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertNotNull(variance91);
    }

    @Test
    public void test2335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2335");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        double double55 = variance33.evaluate(doubleArray52);
        double double57 = variance14.evaluate(doubleArray52, (double) 100.0f);
        double double58 = variance12.evaluate(doubleArray52);
        variance10.setData(doubleArray52);
        double double61 = variance8.evaluate(doubleArray52, (double) ' ');
        variance4.setData(doubleArray52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = variance4.copy();
        variance63.increment((double) 'a');
        java.lang.Class<?> wildcardClass66 = variance63.getClass();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertNotNull(variance63);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2336");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        long long3 = variance1.getN();
        variance1.clear();
        variance1.increment((double) 1L);
        double[] doubleArray7 = null;
        variance1.setData(doubleArray7);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        long long19 = variance13.getN();
        long long20 = variance13.getN();
        long long21 = variance13.getN();
        variance13.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance13);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 2L + "'", long20 == 2L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2L + "'", long21 == 2L);
    }

    @Test
    public void test2337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2337");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double[] doubleArray8 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean15 = variance14.isBiasCorrected();
        double[] doubleArray17 = new double[] { 100 };
        variance14.incrementAll(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        double double67 = variance24.evaluate(doubleArray62, (double) 100.0f);
        double double68 = variance22.evaluate(doubleArray62);
        variance20.setData(doubleArray62);
        double double71 = variance14.evaluate(doubleArray62, (double) (byte) -1);
        double double73 = variance10.evaluate(doubleArray62, (double) 1.0f);
        boolean boolean74 = variance6.equals((java.lang.Object) variance10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = variance6.copy();
        variance75.setBiasCorrected(true);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(variance75);
    }

    @Test
    public void test2338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2338");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        boolean boolean32 = variance26.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = variance26.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long36 = variance35.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance38.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        double double59 = variance42.evaluate(doubleArray57);
        double double60 = variance38.evaluate(doubleArray57);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance63.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment69);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        variance67.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment77);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance75, variance78);
        double[] doubleArray82 = new double[] { (-1), 100.0f };
        variance78.incrementAll(doubleArray82);
        double double84 = variance67.evaluate(doubleArray82);
        double double85 = variance63.evaluate(doubleArray82);
        double double86 = variance61.evaluate(doubleArray82);
        double double87 = variance35.evaluate(doubleArray82);
        variance33.setData(doubleArray82);
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = variance33.copy();
        boolean boolean90 = variance24.equals((java.lang.Object) variance33);
        java.lang.Class<?> wildcardClass91 = variance24.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(variance33);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertNotNull(variance89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2339");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        double double55 = variance12.evaluate(doubleArray50, (double) 100.0f);
        double double56 = variance10.evaluate(doubleArray50);
        variance8.setData(doubleArray50);
        double double59 = variance1.evaluate(doubleArray50, (double) (-1));
        variance1.increment(0.0d);
        variance1.increment((-1.0d));
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance66.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance66.copy();
        boolean boolean70 = variance1.equals((java.lang.Object) variance69);
        boolean boolean71 = variance69.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = variance69.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance72);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(variance72);
    }

    @Test
    public void test2340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2340");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double double28 = variance23.getResult();
        double[] doubleArray34 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double36 = variance23.evaluate(doubleArray34, (double) (short) 1);
        variance1.setData(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = variance38.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance38);
        variance38.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1030428.01d + "'", double36 == 1030428.01d);
        org.junit.Assert.assertNotNull(variance38);
        org.junit.Assert.assertNotNull(variance39);
    }

    @Test
    public void test2341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2341");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        boolean boolean7 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        boolean boolean19 = variance13.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = variance13.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long23 = variance22.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance25.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        double double46 = variance29.evaluate(doubleArray44);
        double double47 = variance25.evaluate(doubleArray44);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        variance54.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        double[] doubleArray69 = new double[] { (-1), 100.0f };
        variance65.incrementAll(doubleArray69);
        double double71 = variance54.evaluate(doubleArray69);
        double double72 = variance50.evaluate(doubleArray69);
        double double73 = variance48.evaluate(doubleArray69);
        double double74 = variance22.evaluate(doubleArray69);
        variance20.setData(doubleArray69);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = variance20.copy();
        double[] doubleArray77 = variance20.getData();
        double[] doubleArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double80 = variance10.evaluate(doubleArray77, doubleArray78, 5100.5d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(variance20);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertNotNull(variance76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
    }

    @Test
    public void test2342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2342");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        double[] doubleArray13 = variance12.getData();
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        variance12.increment(1347.5555555555554d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = variance20.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        variance25.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        double double42 = variance25.evaluate(doubleArray40);
        variance20.incrementAll(doubleArray40);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = variance20.copy();
        variance20.increment((double) 2L);
        boolean boolean47 = variance20.isBiasCorrected();
        double[] doubleArray48 = variance20.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        variance50.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance50);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        variance62.clear();
        boolean boolean69 = variance57.equals((java.lang.Object) variance62);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean72 = variance57.equals((java.lang.Object) variance71);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance74, variance77);
        double[] doubleArray81 = new double[] { (-1), 100.0f };
        variance77.incrementAll(doubleArray81);
        long long83 = variance77.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean86 = variance85.isBiasCorrected();
        double[] doubleArray88 = new double[] { 100 };
        variance85.incrementAll(doubleArray88);
        boolean boolean90 = variance77.equals((java.lang.Object) doubleArray88);
        variance71.incrementAll(doubleArray88);
        variance20.setData(doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            variance12.setData(doubleArray88, (int) (byte) 10, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNotNull(variance23);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertNotNull(variance44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 2L + "'", long83 == 2L);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test2343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2343");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = variance49.copy();
        java.lang.Class<?> wildcardClass51 = variance49.getClass();
        boolean boolean52 = variance46.equals((java.lang.Object) wildcardClass51);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        variance46.increment(10.0d);
        variance46.clear();
        java.lang.Class<?> wildcardClass58 = variance46.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2344");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance11);
        variance11.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        variance46.clear();
        boolean boolean53 = variance41.equals((java.lang.Object) variance46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance46);
        boolean boolean55 = variance11.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance56);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test2345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2345");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        variance9.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        double[] doubleArray24 = new double[] { (-1), 100.0f };
        variance20.incrementAll(doubleArray24);
        double double26 = variance9.evaluate(doubleArray24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance28.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        variance32.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        double[] doubleArray47 = new double[] { (-1), 100.0f };
        variance43.incrementAll(doubleArray47);
        double double49 = variance32.evaluate(doubleArray47);
        double double50 = variance28.evaluate(doubleArray47);
        double double52 = variance9.evaluate(doubleArray47, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance9.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance54.evaluate(doubleArray63);
        variance1.setData(doubleArray63);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance70.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance70);
        variance70.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance70);
        double[] doubleArray76 = variance70.getData();
        variance70.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = variance70.copy();
        double double80 = variance70.evaluate();
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2550.25d + "'", double26 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertNotNull(variance53);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 5100.5d + "'", double80 == 5100.5d);
    }

    @Test
    public void test2346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2346");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        boolean boolean13 = variance7.equals((java.lang.Object) 10);
        variance7.increment((double) (short) 10);
        variance7.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        variance23.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        double[] doubleArray38 = new double[] { (-1), 100.0f };
        variance34.incrementAll(doubleArray38);
        double double40 = variance23.evaluate(doubleArray38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        double[] doubleArray61 = new double[] { (-1), 100.0f };
        variance57.incrementAll(doubleArray61);
        double double63 = variance46.evaluate(doubleArray61);
        double double64 = variance42.evaluate(doubleArray61);
        double double66 = variance23.evaluate(doubleArray61, (double) 100.0f);
        double double67 = variance21.evaluate(doubleArray61);
        variance19.setData(doubleArray61);
        variance7.setData(doubleArray61, (int) (byte) 1, 0);
        double[] doubleArray72 = variance7.getData();
        double double73 = variance4.evaluate(doubleArray72);
        variance4.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = variance4.copy();
        variance76.increment((double) 100);
        variance76.setBiasCorrected(true);
        // The following exception was thrown during execution in test generation
        try {
            double double81 = variance76.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2550.25d + "'", double40 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertNotNull(variance76);
    }

    @Test
    public void test2347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2347");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double double28 = variance23.getResult();
        double[] doubleArray34 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double36 = variance23.evaluate(doubleArray34, (double) (short) 1);
        variance1.setData(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = variance38.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = variance44.copy();
        double[] doubleArray53 = variance52.getData();
        variance52.setBiasCorrected(false);
        variance52.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance52);
        boolean boolean59 = variance38.equals((java.lang.Object) variance52);
        boolean boolean60 = variance38.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1030428.01d + "'", double36 == 1030428.01d);
        org.junit.Assert.assertNotNull(variance38);
        org.junit.Assert.assertNotNull(variance39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance52);
        org.junit.Assert.assertNull(doubleArray53);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test2348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2348");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        long long6 = variance4.getN();
        variance4.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance4.copy();
        boolean boolean10 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        double[] doubleArray19 = new double[] { (-1), 100.0f };
        variance15.incrementAll(doubleArray19);
        long long21 = variance15.getN();
        boolean boolean22 = variance15.isBiasCorrected();
        double double23 = variance15.getResult();
        long long24 = variance15.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) (-1L));
        variance26.increment((double) 0.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        variance32.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        variance44.clear();
        boolean boolean51 = variance39.equals((java.lang.Object) variance44);
        variance39.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        variance55.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        double[] doubleArray70 = new double[] { (-1), 100.0f };
        variance66.incrementAll(doubleArray70);
        double double72 = variance55.evaluate(doubleArray70);
        java.lang.Object obj73 = null;
        boolean boolean74 = variance55.equals(obj73);
        variance55.setBiasCorrected(true);
        double[] doubleArray83 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double85 = variance55.evaluate(doubleArray83, 100.0d);
        variance39.setData(doubleArray83, (int) (byte) 0, (int) (short) 0);
        double double91 = variance26.evaluate(doubleArray83, (int) (byte) 0, (int) (byte) 1);
        variance15.setData(doubleArray83);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance15);
        long long94 = variance15.getN();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2L + "'", long21 == 2L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1617.066666666667d + "'", double85 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 2L + "'", long94 == 2L);
    }

    @Test
    public void test2349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2349");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance1.setBiasCorrected(false);
        boolean boolean49 = variance1.equals((java.lang.Object) 100.0f);
        variance1.increment((double) (short) 100);
        long long52 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
    }

    @Test
    public void test2350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2350");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance4.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        double double26 = variance4.evaluate(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance29.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        variance33.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        double double50 = variance33.evaluate(doubleArray48);
        double double51 = variance29.evaluate(doubleArray48);
        double double52 = variance27.evaluate(doubleArray48);
        double double53 = variance1.evaluate(doubleArray48);
        double[] doubleArray54 = variance1.getData();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        variance58.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        double[] doubleArray73 = new double[] { (-1), 100.0f };
        variance69.incrementAll(doubleArray73);
        double double75 = variance58.evaluate(doubleArray73);
        java.lang.Object obj76 = null;
        boolean boolean77 = variance58.equals(obj76);
        variance58.setBiasCorrected(true);
        double[] doubleArray86 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double88 = variance58.evaluate(doubleArray86, 100.0d);
        boolean boolean89 = variance1.equals((java.lang.Object) variance58);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2550.25d + "'", double26 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1617.066666666667d + "'", double88 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test2351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2351");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double double2 = variance1.getResult();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance7.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance7.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        variance7.incrementAll(doubleArray27);
        variance5.setData(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance5);
        variance32.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance36.increment((double) 10);
        variance36.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance36);
        double double41 = variance36.getResult();
        double[] doubleArray42 = variance36.getData();
        boolean boolean43 = variance1.equals((java.lang.Object) variance36);
        double[] doubleArray44 = variance36.getData();
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
    }

    @Test
    public void test2352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2352");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        boolean boolean7 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance9.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        variance13.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        double[] doubleArray28 = new double[] { (-1), 100.0f };
        variance24.incrementAll(doubleArray28);
        double double30 = variance13.evaluate(doubleArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = variance13.equals(obj31);
        variance13.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance44.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance44.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        variance44.incrementAll(doubleArray64);
        variance13.setData(doubleArray64);
        boolean boolean69 = variance13.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = variance75.copy();
        double[] doubleArray82 = new double[] { 0.0f, 2550.25d, 1, (short) -1 };
        double double84 = variance75.evaluate(doubleArray82, (double) (byte) 0);
        variance70.incrementAll(doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            double double89 = variance9.evaluate(doubleArray82, (double) 3L, (int) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: start position (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2550.25d + "'", double30 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(variance47);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(variance77);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 2550.25, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1219458.32421875d + "'", double84 == 1219458.32421875d);
    }

    @Test
    public void test2353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2353");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        double[] doubleArray21 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance23.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance23.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        variance23.incrementAll(doubleArray43);
        variance1.incrementAll(doubleArray43);
        double[] doubleArray48 = variance1.getData();
        boolean boolean49 = variance1.isBiasCorrected();
        boolean boolean50 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test2354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2354");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        boolean boolean12 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        boolean boolean20 = variance14.equals((java.lang.Object) 10);
        variance14.increment((double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double double29 = variance24.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        variance36.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        double[] doubleArray51 = new double[] { (-1), 100.0f };
        variance47.incrementAll(doubleArray51);
        double double53 = variance36.evaluate(doubleArray51);
        double double54 = variance32.evaluate(doubleArray51);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance57.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance61.evaluate(doubleArray76);
        double double79 = variance57.evaluate(doubleArray76);
        double double80 = variance55.evaluate(doubleArray76);
        variance24.setData(doubleArray76, 1, (int) (short) 0);
        variance4.incrementAll(doubleArray76);
        double[] doubleArray85 = variance4.getData();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray85);
    }

    @Test
    public void test2355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2355");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        double double23 = variance1.getResult();
        variance1.increment((double) (short) 1);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
    }

    @Test
    public void test2356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2356");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        double[] doubleArray6 = variance4.getData();
        boolean boolean7 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        long long18 = variance12.getN();
        boolean boolean19 = variance12.isBiasCorrected();
        java.lang.Class<?> wildcardClass20 = variance12.getClass();
        boolean boolean21 = variance4.equals((java.lang.Object) variance12);
        variance12.clear();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test2357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2357");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        variance8.increment((double) 10L);
        long long23 = variance8.getN();
        double double24 = variance8.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        long long35 = variance29.getN();
        long long36 = variance29.getN();
        long long37 = variance29.getN();
        variance29.increment(1347.5555555555554d);
        long long40 = variance29.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        double double52 = variance29.evaluate(doubleArray49, (double) 1.0f);
        double double53 = variance8.evaluate(doubleArray49);
        double[] doubleArray54 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double56 = variance8.evaluate(doubleArray54, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 2L + "'", long35 == 2L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 2L + "'", long36 == 2L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 2L + "'", long37 == 2L);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 3L + "'", long40 == 3L);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
    }

    @Test
    public void test2358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2358");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.clear();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance5.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance5.copy();
        boolean boolean9 = variance8.isBiasCorrected();
        long long10 = variance8.getN();
        variance8.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = variance14.equals(obj32);
        double[] doubleArray34 = variance14.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance36.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = variance36.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        variance41.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        double[] doubleArray56 = new double[] { (-1), 100.0f };
        variance52.incrementAll(doubleArray56);
        double double58 = variance41.evaluate(doubleArray56);
        variance36.incrementAll(doubleArray56);
        variance14.incrementAll(doubleArray56);
        double double62 = variance8.evaluate(doubleArray56, (double) '4');
        variance1.incrementAll(doubleArray56, (int) (byte) 0, (int) (short) 1);
        variance1.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double[] doubleArray70 = variance69.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance69);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        double[] doubleArray80 = new double[] { (-1), 100.0f };
        variance76.incrementAll(doubleArray80);
        double double82 = variance76.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance76);
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance83);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance84);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long88 = variance87.getN();
        long long89 = variance87.getN();
        boolean boolean90 = variance84.equals((java.lang.Object) variance87);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNotNull(variance39);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 0L + "'", long88 == 0L);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 0L + "'", long89 == 0L);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test2359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2359");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        variance14.increment(0.0d);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double71 = variance14.evaluate(doubleArray64, (double) (short) 1);
        double double72 = variance4.evaluate(doubleArray64);
        double[] doubleArray73 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance74);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance75);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertNotNull(variance74);
    }

    @Test
    public void test2360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2360");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance7.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance7.copy();
        boolean boolean11 = variance10.isBiasCorrected();
        variance10.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = variance17.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance23.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance23.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        variance23.incrementAll(doubleArray43);
        variance21.setData(doubleArray43);
        double double49 = variance17.evaluate(doubleArray43, (double) (short) 10);
        variance10.setData(doubleArray43, 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance53);
        variance53.clear();
        variance53.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = variance53.copy();
        java.lang.Object obj58 = null;
        boolean boolean59 = variance53.equals(obj58);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance64);
        double[] doubleArray67 = variance66.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance69.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = variance69.copy();
        boolean boolean73 = variance72.isBiasCorrected();
        double[] doubleArray74 = variance72.getData();
        boolean boolean75 = variance72.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance76);
        boolean boolean78 = variance53.equals((java.lang.Object) variance66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance53);
        variance79.clear();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(variance19);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertNotNull(variance57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(doubleArray67);
        org.junit.Assert.assertNotNull(variance72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(doubleArray74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test2361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2361");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        double double36 = variance4.evaluate(doubleArray30, (double) (short) 10);
        variance4.clear();
        variance4.increment((double) (short) 0);
        double double40 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance44.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance44.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        variance44.incrementAll(doubleArray64);
        variance42.setData(doubleArray64);
        boolean boolean69 = variance4.equals((java.lang.Object) doubleArray64);
        double double70 = variance4.getResult();
        boolean boolean71 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(variance47);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test2362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2362");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        variance21.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = variance1.copy();
        boolean boolean32 = variance31.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = variance31.copy();
        long long34 = variance31.getN();
        boolean boolean35 = variance31.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(variance31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(variance33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test2363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2363");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance1.setBiasCorrected(false);
        variance1.increment(0.0d);
        variance1.increment((double) (byte) 10);
        variance1.setBiasCorrected(true);
        long long54 = variance1.getN();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        boolean boolean62 = variance57.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = variance57.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance57);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 2L + "'", long54 == 2L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(variance63);
    }

    @Test
    public void test2364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2364");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance1.copy();
        double double10 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance12.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = variance12.copy();
        boolean boolean16 = variance15.isBiasCorrected();
        double[] doubleArray17 = variance15.getData();
        boolean boolean18 = variance15.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        variance20.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        double[] doubleArray35 = new double[] { (-1), 100.0f };
        variance31.incrementAll(doubleArray35);
        double double37 = variance20.evaluate(doubleArray35);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance39.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        variance39.setData(doubleArray50);
        variance20.incrementAll(doubleArray50);
        double double55 = variance15.evaluate(doubleArray50, (double) (-1.0f));
        double double57 = variance1.evaluate(doubleArray50, (double) 10);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(variance15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2550.25d + "'", double37 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
    }

    @Test
    public void test2365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2365");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        double double9 = variance1.getResult();
        long long10 = variance1.getN();
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test2366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2366");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance1.setBiasCorrected(false);
        boolean boolean49 = variance1.equals((java.lang.Object) 100.0f);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance52.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance52);
        double[] doubleArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double61 = variance52.evaluate(doubleArray57, (double) (byte) 1, (int) '#', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test2367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2367");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean23 = variance8.equals((java.lang.Object) variance22);
        double[] doubleArray24 = variance22.getData();
        double double25 = variance22.getResult();
        boolean boolean26 = variance22.isBiasCorrected();
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        boolean boolean36 = variance30.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance30.copy();
        double double38 = variance30.getResult();
        double double39 = variance30.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = variance41.copy();
        variance41.increment((double) 100.0f);
        boolean boolean47 = variance41.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance41.copy();
        variance48.increment((double) 1L);
        boolean boolean51 = variance30.equals((java.lang.Object) 1L);
        double double52 = variance30.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance30);
        // The following exception was thrown during execution in test generation
        try {
            double double55 = variance22.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(variance44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
    }

    @Test
    public void test2368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2368");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double[] doubleArray8 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        boolean boolean16 = variance10.equals((java.lang.Object) 10);
        variance10.increment((double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        variance20.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        double[] doubleArray35 = new double[] { (-1), 100.0f };
        variance31.incrementAll(doubleArray35);
        double double37 = variance20.evaluate(doubleArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = variance20.equals(obj38);
        variance20.setBiasCorrected(true);
        double[] doubleArray48 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double50 = variance20.evaluate(doubleArray48, 100.0d);
        double double51 = variance10.evaluate(doubleArray48);
        boolean boolean52 = variance6.equals((java.lang.Object) double51);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long55 = variance54.getN();
        variance54.clear();
        variance54.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance54);
        variance54.increment(1030428.01d);
        boolean boolean62 = variance6.equals((java.lang.Object) variance54);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2550.25d + "'", double37 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1617.066666666667d + "'", double50 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1347.5555555555554d + "'", double51 == 1347.5555555555554d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }
}

