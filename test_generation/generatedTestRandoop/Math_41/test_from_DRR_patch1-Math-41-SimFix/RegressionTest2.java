import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        boolean boolean9 = variance8.isBiasCorrected();
        double[] doubleArray10 = null;
        variance8.setData(doubleArray10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        variance12.setBiasCorrected(false);
        boolean boolean15 = variance12.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance9.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance15.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = variance15.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        variance20.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        double[] doubleArray35 = new double[] { (-1), 100.0f };
        variance31.incrementAll(doubleArray35);
        double double37 = variance20.evaluate(doubleArray35);
        variance15.incrementAll(doubleArray35);
        variance13.setData(doubleArray35);
        double double41 = variance9.evaluate(doubleArray35, (double) (short) 10);
        long long42 = variance9.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance9);
        variance9.increment((double) 0.0f);
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertNotNull(variance18);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2550.25d + "'", double37 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        variance4.clear();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance12.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = variance12.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        variance12.incrementAll(doubleArray32);
        variance10.setData(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance10);
        variance37.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        variance41.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance41);
        double double46 = variance41.getResult();
        double[] doubleArray47 = variance41.getData();
        variance8.setData(doubleArray47);
        double double49 = variance8.evaluate();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(variance15);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.clear();
        variance4.setBiasCorrected(false);
        variance4.setBiasCorrected(true);
        boolean boolean15 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double[] doubleArray36 = new double[] { (-1), 100.0f };
        variance32.incrementAll(doubleArray36);
        double double38 = variance21.evaluate(doubleArray36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance40.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double61 = variance44.evaluate(doubleArray59);
        double double62 = variance40.evaluate(doubleArray59);
        double double64 = variance21.evaluate(doubleArray59, (double) 100.0f);
        double double65 = variance19.evaluate(doubleArray59);
        variance17.setData(doubleArray59);
        variance17.clear();
        variance17.increment((double) 100.0f);
        double[] doubleArray70 = variance17.getData();
        // The following exception was thrown during execution in test generation
        try {
            double double73 = variance4.evaluate(doubleArray70, 100, 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0]");
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        double double2 = variance1.getResult();
        long long3 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        double[] doubleArray5 = variance1.getData();
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNull(doubleArray5);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        double double55 = variance33.evaluate(doubleArray52);
        double double57 = variance14.evaluate(doubleArray52, (double) 100.0f);
        double double58 = variance12.evaluate(doubleArray52);
        variance10.setData(doubleArray52);
        double double61 = variance8.evaluate(doubleArray52, (double) ' ');
        variance4.setData(doubleArray52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance65.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = variance65.copy();
        variance65.clear();
        variance65.increment((double) (short) 1);
        variance65.increment((double) 0L);
        boolean boolean74 = variance65.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = variance65.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance76);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertNotNull(variance63);
        org.junit.Assert.assertNotNull(variance68);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(variance75);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance50.copy();
        boolean boolean54 = variance53.isBiasCorrected();
        variance53.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance60.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance66.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance66.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        variance71.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment81);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance79, variance82);
        double[] doubleArray86 = new double[] { (-1), 100.0f };
        variance82.incrementAll(doubleArray86);
        double double88 = variance71.evaluate(doubleArray86);
        variance66.incrementAll(doubleArray86);
        variance64.setData(doubleArray86);
        double double92 = variance60.evaluate(doubleArray86, (double) (short) 10);
        variance53.setData(doubleArray86, 1, 1);
        variance48.incrementAll(doubleArray86);
        boolean boolean97 = variance48.isBiasCorrected();
        variance48.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertNotNull(variance53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment6);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance7);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        double[] doubleArray19 = new double[] { (-1), 100.0f };
        variance15.incrementAll(doubleArray19);
        double double21 = variance4.evaluate(doubleArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = variance4.equals(obj22);
        variance4.setBiasCorrected(true);
        double[] doubleArray32 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double34 = variance4.evaluate(doubleArray32, 100.0d);
        variance4.setBiasCorrected(true);
        long long37 = variance4.getN();
        variance4.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        long long51 = variance45.getN();
        boolean boolean52 = variance45.isBiasCorrected();
        double double53 = variance45.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = variance45.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        variance56.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        double double73 = variance56.evaluate(doubleArray71);
        java.lang.Object obj74 = null;
        boolean boolean75 = variance56.equals(obj74);
        variance56.setBiasCorrected(true);
        double[] doubleArray84 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double86 = variance56.evaluate(doubleArray84, 100.0d);
        variance54.setData(doubleArray84, (int) (byte) 1, 0);
        boolean boolean90 = variance40.equals((java.lang.Object) doubleArray84);
        variance1.incrementAll(doubleArray84);
        java.lang.Class<?> wildcardClass92 = variance1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2550.25d + "'", double21 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1617.066666666667d + "'", double34 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(variance40);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 2L + "'", long51 == 2L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertNotNull(variance54);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1617.066666666667d + "'", double86 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        long long49 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        double double55 = variance12.evaluate(doubleArray50, (double) 100.0f);
        double double56 = variance10.evaluate(doubleArray50);
        variance8.setData(doubleArray50);
        double double59 = variance1.evaluate(doubleArray50, (double) (-1));
        variance1.increment(0.0d);
        variance1.increment((-1.0d));
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance66.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance66.copy();
        boolean boolean70 = variance1.equals((java.lang.Object) variance69);
        // The following exception was thrown during execution in test generation
        try {
            double double71 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        long long6 = variance4.getN();
        variance4.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        long long11 = variance4.getN();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean6 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean9 = variance8.isBiasCorrected();
        double[] doubleArray11 = new double[] { 100 };
        variance8.incrementAll(doubleArray11);
        double double13 = variance1.evaluate(doubleArray11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance15.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = variance15.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        variance20.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        double[] doubleArray35 = new double[] { (-1), 100.0f };
        variance31.incrementAll(doubleArray35);
        double double37 = variance20.evaluate(doubleArray35);
        variance15.incrementAll(doubleArray35);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance15);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        boolean boolean49 = variance41.equals((java.lang.Object) variance48);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = variance54.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance60.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = variance60.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment67);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance65, variance68);
        variance65.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        double[] doubleArray80 = new double[] { (-1), 100.0f };
        variance76.incrementAll(doubleArray80);
        double double82 = variance65.evaluate(doubleArray80);
        variance60.incrementAll(doubleArray80);
        variance58.setData(doubleArray80);
        double double86 = variance54.evaluate(doubleArray80, (double) (short) 10);
        variance48.incrementAll(doubleArray80);
        variance39.setData(doubleArray80, 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray80, (int) (byte) 0, (int) '#');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(variance18);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2550.25d + "'", double37 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(variance56);
        org.junit.Assert.assertNotNull(variance63);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        double double10 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance11);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = variance11.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2550.25d + "'", double10 == 2550.25d);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance46.evaluate(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = variance46.copy();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertNotNull(variance58);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance48.evaluate(doubleArray63);
        boolean boolean66 = variance48.isBiasCorrected();
        variance48.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance48);
        double[] doubleArray70 = null;
        variance46.setData(doubleArray70);
        variance46.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        variance20.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        double[] doubleArray35 = new double[] { (-1), 100.0f };
        variance31.incrementAll(doubleArray35);
        double double37 = variance20.evaluate(doubleArray35);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance39.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        variance43.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        double[] doubleArray58 = new double[] { (-1), 100.0f };
        variance54.incrementAll(doubleArray58);
        double double60 = variance43.evaluate(doubleArray58);
        double double61 = variance39.evaluate(doubleArray58);
        double double63 = variance20.evaluate(doubleArray58, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = variance20.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance64);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment69);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        double[] doubleArray74 = new double[] { (-1), 100.0f };
        variance70.incrementAll(doubleArray74);
        double double76 = variance65.evaluate(doubleArray74);
        variance12.setData(doubleArray74);
        variance10.incrementAll(doubleArray74, 0, (int) (short) 0);
        variance10.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance10);
        double double83 = variance10.getResult();
        variance10.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2550.25d + "'", double37 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertNotNull(variance64);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        double double10 = variance4.getResult();
        variance4.increment((double) 0L);
        variance4.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2550.25d + "'", double10 == 2550.25d);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        double double8 = variance1.getResult();
        variance1.setBiasCorrected(false);
        variance1.setBiasCorrected(true);
        variance1.increment((double) (-1));
        java.lang.Class<?> wildcardClass15 = variance1.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        variance9.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        double[] doubleArray24 = new double[] { (-1), 100.0f };
        variance20.incrementAll(doubleArray24);
        double double26 = variance9.evaluate(doubleArray24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance28.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        variance32.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        double[] doubleArray47 = new double[] { (-1), 100.0f };
        variance43.incrementAll(doubleArray47);
        double double49 = variance32.evaluate(doubleArray47);
        double double50 = variance28.evaluate(doubleArray47);
        double double52 = variance9.evaluate(doubleArray47, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance9.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance54.evaluate(doubleArray63);
        variance1.setData(doubleArray63);
        variance1.setBiasCorrected(true);
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2550.25d + "'", double26 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertNotNull(variance53);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        variance8.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        variance8.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        variance14.increment(0.0d);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double71 = variance14.evaluate(doubleArray64, (double) (short) 1);
        boolean boolean72 = variance8.equals((java.lang.Object) variance14);
        variance14.increment((double) 2L);
        variance14.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        boolean boolean77 = variance76.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        double double51 = variance5.evaluate(doubleArray45);
        variance3.setData(doubleArray45);
        double double54 = variance1.evaluate(doubleArray45, (double) ' ');
        long long55 = variance1.getN();
        long long56 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance24.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        double double46 = variance24.evaluate(doubleArray43);
        double double48 = variance5.evaluate(doubleArray43, (double) 100.0f);
        double double49 = variance3.evaluate(doubleArray43);
        variance1.setData(doubleArray43);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = variance1.copy();
        long long53 = variance1.getN();
        variance1.increment(2266.8888888888887d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertNotNull(variance52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) (-1L));
        variance1.increment((double) (short) 100);
        java.lang.Class<?> wildcardClass6 = variance1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance50.copy();
        boolean boolean54 = variance53.isBiasCorrected();
        variance53.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance60.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance66.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance66.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        variance71.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment81);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance79, variance82);
        double[] doubleArray86 = new double[] { (-1), 100.0f };
        variance82.incrementAll(doubleArray86);
        double double88 = variance71.evaluate(doubleArray86);
        variance66.incrementAll(doubleArray86);
        variance64.setData(doubleArray86);
        double double92 = variance60.evaluate(doubleArray86, (double) (short) 10);
        variance53.setData(doubleArray86, 1, 1);
        variance48.setData(doubleArray86);
        boolean boolean97 = variance48.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertNotNull(variance53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        variance59.incrementAll(doubleArray79);
        variance57.setData(doubleArray79);
        double double85 = variance53.evaluate(doubleArray79, (double) (short) 10);
        variance46.incrementAll(doubleArray79);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance46.copy();
        variance46.setBiasCorrected(true);
        variance46.setBiasCorrected(false);
        variance46.clear();
        variance46.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertNotNull(variance87);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        variance1.setBiasCorrected(true);
        long long34 = variance1.getN();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance38.increment((double) 10);
        variance38.clear();
        variance38.increment((double) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance47.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = variance47.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        variance52.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        double[] doubleArray67 = new double[] { (-1), 100.0f };
        variance63.incrementAll(doubleArray67);
        double double69 = variance52.evaluate(doubleArray67);
        variance47.incrementAll(doubleArray67);
        variance45.setData(doubleArray67);
        double double72 = variance38.evaluate(doubleArray67);
        variance1.incrementAll(doubleArray67);
        java.lang.Class<?> wildcardClass74 = doubleArray67.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(variance50);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean23 = variance8.equals((java.lang.Object) variance22);
        double[] doubleArray24 = variance22.getData();
        double double25 = variance22.getResult();
        boolean boolean26 = variance22.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance49.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        variance53.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        double[] doubleArray68 = new double[] { (-1), 100.0f };
        variance64.incrementAll(doubleArray68);
        double double70 = variance53.evaluate(doubleArray68);
        double double71 = variance49.evaluate(doubleArray68);
        double double73 = variance30.evaluate(doubleArray68, (double) 100.0f);
        double double74 = variance28.evaluate(doubleArray68);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = variance28.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance75);
        boolean boolean77 = variance22.equals((java.lang.Object) variance76);
        java.lang.Class<?> wildcardClass78 = variance22.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertNotNull(variance75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance1.copy();
        double double10 = variance1.getResult();
        java.lang.Class<?> wildcardClass11 = variance1.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        double[] doubleArray13 = variance12.getData();
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance20);
        double[] doubleArray23 = variance22.getData();
        double[] doubleArray24 = variance22.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        boolean boolean32 = variance26.equals((java.lang.Object) 10);
        variance26.increment((double) (short) 10);
        variance26.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        double double59 = variance42.evaluate(doubleArray57);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance61.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment67);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance65, variance68);
        variance65.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        double[] doubleArray80 = new double[] { (-1), 100.0f };
        variance76.incrementAll(doubleArray80);
        double double82 = variance65.evaluate(doubleArray80);
        double double83 = variance61.evaluate(doubleArray80);
        double double85 = variance42.evaluate(doubleArray80, (double) 100.0f);
        double double86 = variance40.evaluate(doubleArray80);
        variance38.setData(doubleArray80);
        variance26.setData(doubleArray80, (int) (byte) 1, 0);
        double[] doubleArray91 = variance26.getData();
        variance22.incrementAll(doubleArray91);
        double double93 = variance12.evaluate(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double93));
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        variance8.increment((double) 10L);
        long long23 = variance8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance24);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        double double30 = variance8.evaluate(doubleArray27);
        variance8.increment(0.0d);
        boolean boolean33 = variance4.equals((java.lang.Object) 0.0d);
        long long34 = variance4.getN();
        double double35 = variance4.getResult();
        variance4.increment((double) 1);
        java.lang.Class<?> wildcardClass38 = variance4.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2550.25d + "'", double30 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance1.setBiasCorrected(false);
        boolean boolean49 = variance1.equals((java.lang.Object) 100.0f);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance52.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance52);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance11);
        boolean boolean42 = variance4.isBiasCorrected();
        double[] doubleArray43 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance45.copy();
        variance45.increment((double) '#');
        double[] doubleArray56 = new double[] { '#', 0L, (byte) 1, (-1), (short) 1 };
        variance45.incrementAll(doubleArray56);
        // The following exception was thrown during execution in test generation
        try {
            double double61 = variance4.evaluate(doubleArray56, 10.0d, (int) (byte) -1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: start position (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(doubleArray43);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[35.0, 0.0, 1.0, -1.0, 1.0]");
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance12.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        variance45.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        double[] doubleArray60 = new double[] { (-1), 100.0f };
        variance56.incrementAll(doubleArray60);
        double double62 = variance45.evaluate(doubleArray60);
        double double63 = variance41.evaluate(doubleArray60);
        double double65 = variance22.evaluate(doubleArray60, (double) 100.0f);
        double double66 = variance20.evaluate(doubleArray60);
        variance18.setData(doubleArray60);
        double double69 = variance16.evaluate(doubleArray60, (double) ' ');
        variance12.setData(doubleArray60);
        variance6.incrementAll(doubleArray60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        double double78 = variance73.getResult();
        double[] doubleArray84 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double86 = variance73.evaluate(doubleArray84, (double) (short) 1);
        double double87 = variance6.evaluate(doubleArray84);
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance89.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance92 = variance89.copy();
        boolean boolean93 = variance92.isBiasCorrected();
        long long94 = variance92.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance92);
        variance92.clear();
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNotNull(variance14);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1030428.01d + "'", double86 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1030428.01d + "'", double87 == 1030428.01d);
        org.junit.Assert.assertNotNull(variance92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 1L + "'", long94 == 1L);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double[] doubleArray31 = new double[] { (-1), 100.0f };
        variance27.incrementAll(doubleArray31);
        variance20.setData(doubleArray31);
        variance1.incrementAll(doubleArray31);
        long long35 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double double42 = variance37.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance48.evaluate(doubleArray63);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance67.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        variance71.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment81);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance79, variance82);
        double[] doubleArray86 = new double[] { (-1), 100.0f };
        variance82.incrementAll(doubleArray86);
        double double88 = variance71.evaluate(doubleArray86);
        double double89 = variance67.evaluate(doubleArray86);
        double double91 = variance48.evaluate(doubleArray86, (double) 100.0f);
        double double92 = variance46.evaluate(doubleArray86);
        variance44.setData(doubleArray86);
        double double95 = variance37.evaluate(doubleArray86, (double) (-1));
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray86, (int) (short) 0, 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 2L + "'", long35 == 2L);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2550.25d + "'", double89 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2550.25d + "'", double91 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 2550.25d + "'", double95 == 2550.25d);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        double[] doubleArray6 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = variance4.copy();
        double[] doubleArray8 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double9 = variance4.evaluate(doubleArray8);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNotNull(variance7);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        variance13.increment((double) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance24.increment((double) (-1L));
        variance24.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance57.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance61.evaluate(doubleArray76);
        double double79 = variance57.evaluate(doubleArray76);
        double double81 = variance38.evaluate(doubleArray76, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = variance38.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance82);
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment87 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment87);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance85, variance88);
        double[] doubleArray92 = new double[] { (-1), 100.0f };
        variance88.incrementAll(doubleArray92);
        double double94 = variance83.evaluate(doubleArray92);
        variance30.setData(doubleArray92);
        double double96 = variance24.evaluate(doubleArray92);
        double[] doubleArray97 = variance24.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance98 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance24);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertNotNull(variance82);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2550.25d + "'", double94 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 2550.25d + "'", double96 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray97);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        double double11 = variance1.getResult();
        double double12 = variance1.getResult();
        boolean boolean13 = variance1.isBiasCorrected();
        variance1.increment((-1.0d));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        variance59.incrementAll(doubleArray79);
        variance57.setData(doubleArray79);
        double double85 = variance53.evaluate(doubleArray79, (double) (short) 10);
        variance46.incrementAll(doubleArray79);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance46.copy();
        variance46.setBiasCorrected(true);
        variance46.clear();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertNotNull(variance87);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.increment((double) (byte) 10);
        variance1.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance1.copy();
        variance14.increment((double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance18.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = variance18.copy();
        variance18.increment((double) '#');
        double[] doubleArray29 = new double[] { '#', 0L, (byte) 1, (-1), (short) 1 };
        variance18.incrementAll(doubleArray29);
        // The following exception was thrown during execution in test generation
        try {
            variance14.setData(doubleArray29, (int) 'a', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance14);
        org.junit.Assert.assertNotNull(variance21);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[35.0, 0.0, 1.0, -1.0, 1.0]");
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance1.copy();
        double double11 = variance10.getResult();
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance1.isBiasCorrected();
        long long6 = variance1.getN();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        double double11 = variance1.getResult();
        double double12 = variance1.getResult();
        boolean boolean13 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance11);
        double[] doubleArray42 = variance4.getData();
        variance4.setBiasCorrected(true);
        long long45 = variance4.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(doubleArray42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 2L + "'", long45 == 2L);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        double[] doubleArray39 = variance29.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance29);
        double double41 = variance40.getResult();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertNull(doubleArray39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2046.8888888888887d + "'", double41 == 2046.8888888888887d);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean23 = variance8.equals((java.lang.Object) variance22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        long long34 = variance28.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean37 = variance36.isBiasCorrected();
        double[] doubleArray39 = new double[] { 100 };
        variance36.incrementAll(doubleArray39);
        boolean boolean41 = variance28.equals((java.lang.Object) doubleArray39);
        variance22.incrementAll(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double61 = variance44.evaluate(doubleArray59);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance63.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment69);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        variance67.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment77);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance75, variance78);
        double[] doubleArray82 = new double[] { (-1), 100.0f };
        variance78.incrementAll(doubleArray82);
        double double84 = variance67.evaluate(doubleArray82);
        double double85 = variance63.evaluate(doubleArray82);
        double double87 = variance44.evaluate(doubleArray82, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = variance44.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = variance44.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance90 = variance44.copy();
        variance44.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance44);
        org.apache.commons.math.stat.descriptive.moment.Variance variance94 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance95 = variance94.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance96 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance94);
        double[] doubleArray97 = variance96.getData();
        boolean boolean98 = variance44.equals((java.lang.Object) variance96);
        variance44.clear();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 2L + "'", long34 == 2L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertNotNull(variance88);
        org.junit.Assert.assertNotNull(variance89);
        org.junit.Assert.assertNotNull(variance90);
        org.junit.Assert.assertNotNull(variance95);
        org.junit.Assert.assertNull(doubleArray97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double double34 = variance29.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        variance63.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        double[] doubleArray78 = new double[] { (-1), 100.0f };
        variance74.incrementAll(doubleArray78);
        double double80 = variance63.evaluate(doubleArray78);
        double double81 = variance59.evaluate(doubleArray78);
        double double83 = variance40.evaluate(doubleArray78, (double) 100.0f);
        double double84 = variance38.evaluate(doubleArray78);
        variance36.setData(doubleArray78);
        double double87 = variance29.evaluate(doubleArray78, (double) (-1));
        variance1.setData(doubleArray78);
        long long89 = variance1.getN();
        boolean boolean90 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 0L + "'", long89 == 0L);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean15 = variance14.isBiasCorrected();
        double[] doubleArray17 = new double[] { 100 };
        variance14.incrementAll(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        double double67 = variance24.evaluate(doubleArray62, (double) 100.0f);
        double double68 = variance22.evaluate(doubleArray62);
        variance20.setData(doubleArray62);
        double double71 = variance14.evaluate(doubleArray62, (double) (byte) -1);
        double double73 = variance10.evaluate(doubleArray62, (double) 1.0f);
        double double74 = variance8.evaluate(doubleArray62);
        variance8.setBiasCorrected(false);
        double[] doubleArray83 = new double[] { 0.0f, 10L, (short) 100, (byte) 10, 0L, (byte) 100 };
        double double87 = variance8.evaluate(doubleArray83, (double) (short) 0, (int) (short) 1, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        double[] doubleArray89 = variance8.getData();
        // The following exception was thrown during execution in test generation
        try {
            double double90 = variance8.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[0.0, 10.0, 100.0, 10.0, 0.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertNull(doubleArray89);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        long long3 = variance1.getN();
        variance1.clear();
        variance1.increment((double) 1L);
        double[] doubleArray7 = null;
        variance1.setData(doubleArray7);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance46.evaluate(doubleArray55);
        variance46.increment(Double.NaN);
        double double60 = variance46.getResult();
        variance46.setBiasCorrected(false);
        variance46.clear();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        double double51 = variance5.evaluate(doubleArray45);
        variance3.setData(doubleArray45);
        double double54 = variance1.evaluate(doubleArray45, (double) ' ');
        double double55 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment59);
        variance60.increment(10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        boolean boolean64 = variance60.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance60);
        // The following exception was thrown during execution in test generation
        try {
            double double66 = variance60.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(variance57);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        variance1.increment((double) 0L);
        boolean boolean10 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        long long23 = variance17.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        long long34 = variance28.getN();
        boolean boolean35 = variance28.isBiasCorrected();
        double double36 = variance28.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance28.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        variance39.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        double[] doubleArray54 = new double[] { (-1), 100.0f };
        variance50.incrementAll(doubleArray54);
        double double56 = variance39.evaluate(doubleArray54);
        java.lang.Object obj57 = null;
        boolean boolean58 = variance39.equals(obj57);
        variance39.setBiasCorrected(true);
        double[] doubleArray67 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double69 = variance39.evaluate(doubleArray67, 100.0d);
        variance37.setData(doubleArray67, (int) (byte) 1, 0);
        double double73 = variance17.evaluate(doubleArray67);
        // The following exception was thrown during execution in test generation
        try {
            double double76 = variance11.evaluate(doubleArray67, (int) (short) 100, 100);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 2L + "'", long34 == 2L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1617.066666666667d + "'", double69 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1347.5555555555554d + "'", double73 == 1347.5555555555554d);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = variance26.copy();
        boolean boolean30 = variance29.isBiasCorrected();
        variance29.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = variance36.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance42.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        variance42.incrementAll(doubleArray62);
        variance40.setData(doubleArray62);
        double double68 = variance36.evaluate(doubleArray62, (double) (short) 10);
        variance29.setData(doubleArray62, 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance29);
        boolean boolean73 = variance24.equals((java.lang.Object) variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment77);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance75, variance78);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = variance78.copy();
        double double81 = variance78.getResult();
        boolean boolean82 = variance24.equals((java.lang.Object) double81);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(variance38);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(variance80);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance27.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        variance31.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        double[] doubleArray46 = new double[] { (-1), 100.0f };
        variance42.incrementAll(doubleArray46);
        double double48 = variance31.evaluate(doubleArray46);
        double double49 = variance27.evaluate(doubleArray46);
        double double51 = variance8.evaluate(doubleArray46, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = variance8.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance52);
        boolean boolean54 = variance52.isBiasCorrected();
        variance52.increment(1030428.01d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance52);
        variance52.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance61.evaluate(doubleArray76);
        variance52.incrementAll(doubleArray76);
        variance1.incrementAll(doubleArray76);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertNotNull(variance52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance46.evaluate(doubleArray55);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        long long61 = variance60.getN();
        // The following exception was thrown during execution in test generation
        try {
            double double62 = variance60.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double double28 = variance23.getResult();
        double[] doubleArray34 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double36 = variance23.evaluate(doubleArray34, (double) (short) 1);
        variance1.setData(doubleArray34);
        variance1.clear();
        long long39 = variance1.getN();
        variance1.increment((double) (byte) -1);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1030428.01d + "'", double36 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double[] doubleArray31 = new double[] { (-1), 100.0f };
        variance27.incrementAll(doubleArray31);
        variance20.setData(doubleArray31);
        variance1.incrementAll(doubleArray31);
        variance1.clear();
        variance1.increment(2025.0d);
        double[] doubleArray38 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance1.setData(doubleArray38, (int) (byte) 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0]");
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        variance6.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        variance9.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        double[] doubleArray24 = new double[] { (-1), 100.0f };
        variance20.incrementAll(doubleArray24);
        double double26 = variance9.evaluate(doubleArray24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance28.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        variance32.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        double[] doubleArray47 = new double[] { (-1), 100.0f };
        variance43.incrementAll(doubleArray47);
        double double49 = variance32.evaluate(doubleArray47);
        double double50 = variance28.evaluate(doubleArray47);
        double double52 = variance9.evaluate(doubleArray47, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance9.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance53);
        double[] doubleArray55 = variance54.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance57.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance61.evaluate(doubleArray76);
        double double79 = variance57.evaluate(doubleArray76);
        variance54.incrementAll(doubleArray76);
        variance6.setData(doubleArray76, (int) (short) 0, (int) (short) 1);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2550.25d + "'", double26 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertNotNull(variance53);
        org.junit.Assert.assertNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        variance59.incrementAll(doubleArray79);
        variance57.setData(doubleArray79);
        double double85 = variance53.evaluate(doubleArray79, (double) (short) 10);
        variance46.incrementAll(doubleArray79);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance46.copy();
        boolean boolean88 = variance46.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        variance46.setBiasCorrected(true);
        long long92 = variance46.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertNotNull(variance87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 2L + "'", long92 == 2L);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance46.evaluate(doubleArray55);
        variance46.increment(Double.NaN);
        double double60 = variance46.getResult();
        long long61 = variance46.getN();
        double[] doubleArray62 = variance46.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        boolean boolean70 = variance64.equals((java.lang.Object) 10);
        variance64.increment((double) (short) 10);
        variance64.clear();
        double double74 = variance64.getResult();
        double double75 = variance64.getResult();
        boolean boolean76 = variance46.equals((java.lang.Object) double75);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1L + "'", long61 == 1L);
        org.junit.Assert.assertNull(doubleArray62);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        boolean boolean32 = variance26.equals((java.lang.Object) 10);
        variance26.increment((double) (short) 10);
        variance26.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        double double59 = variance42.evaluate(doubleArray57);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance61.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment67);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance65, variance68);
        variance65.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        double[] doubleArray80 = new double[] { (-1), 100.0f };
        variance76.incrementAll(doubleArray80);
        double double82 = variance65.evaluate(doubleArray80);
        double double83 = variance61.evaluate(doubleArray80);
        double double85 = variance42.evaluate(doubleArray80, (double) 100.0f);
        double double86 = variance40.evaluate(doubleArray80);
        variance38.setData(doubleArray80);
        variance26.setData(doubleArray80, (int) (byte) 1, 0);
        double double91 = variance24.evaluate(doubleArray80);
        boolean boolean92 = variance24.isBiasCorrected();
        double double93 = variance24.getResult();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2550.25d + "'", double91 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double93));
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        variance8.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        double[] doubleArray19 = new double[] { (-1), 100.0f };
        variance15.incrementAll(doubleArray19);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = variance15.copy();
        double[] doubleArray24 = variance23.getData();
        variance23.setBiasCorrected(false);
        variance23.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        boolean boolean36 = variance30.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance30.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long40 = variance39.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        double[] doubleArray61 = new double[] { (-1), 100.0f };
        variance57.incrementAll(doubleArray61);
        double double63 = variance46.evaluate(doubleArray61);
        double double64 = variance42.evaluate(doubleArray61);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance67.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        variance71.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment81);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance79, variance82);
        double[] doubleArray86 = new double[] { (-1), 100.0f };
        variance82.incrementAll(doubleArray86);
        double double88 = variance71.evaluate(doubleArray86);
        double double89 = variance67.evaluate(doubleArray86);
        double double90 = variance65.evaluate(doubleArray86);
        double double91 = variance39.evaluate(doubleArray86);
        variance37.setData(doubleArray86);
        variance23.incrementAll(doubleArray86);
        double[] doubleArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double95 = variance8.evaluate(doubleArray86, doubleArray94);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance23);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2550.25d + "'", double89 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2550.25d + "'", double90 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2550.25d + "'", double91 == 2550.25d);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        variance59.incrementAll(doubleArray79);
        variance57.setData(doubleArray79);
        double double85 = variance53.evaluate(doubleArray79, (double) (short) 10);
        variance46.incrementAll(doubleArray79);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance46.copy();
        variance46.setBiasCorrected(false);
        double double90 = variance46.getResult();
        // The following exception was thrown during execution in test generation
        try {
            double double91 = variance46.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertNotNull(variance87);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2550.25d + "'", double90 == 2550.25d);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        double[] doubleArray50 = new double[] { 1.0d, 10.0d, (byte) 100 };
        double double53 = variance45.evaluate(doubleArray50, 0, 0);
        double[] doubleArray54 = variance45.getData();
        double[] doubleArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance45.incrementAll(doubleArray55, 1, (int) '#');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNull(doubleArray54);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        boolean boolean13 = variance7.equals((java.lang.Object) 10);
        variance7.increment((double) (short) 10);
        variance7.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        variance23.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        double[] doubleArray38 = new double[] { (-1), 100.0f };
        variance34.incrementAll(doubleArray38);
        double double40 = variance23.evaluate(doubleArray38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        double[] doubleArray61 = new double[] { (-1), 100.0f };
        variance57.incrementAll(doubleArray61);
        double double63 = variance46.evaluate(doubleArray61);
        double double64 = variance42.evaluate(doubleArray61);
        double double66 = variance23.evaluate(doubleArray61, (double) 100.0f);
        double double67 = variance21.evaluate(doubleArray61);
        variance19.setData(doubleArray61);
        variance7.setData(doubleArray61, (int) (byte) 1, 0);
        double[] doubleArray72 = variance7.getData();
        double double73 = variance4.evaluate(doubleArray72);
        variance4.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = variance4.copy();
        // The following exception was thrown during execution in test generation
        try {
            double double77 = variance4.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2550.25d + "'", double40 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertNotNull(variance76);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        double[] doubleArray11 = variance10.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = variance16.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double70 = variance24.evaluate(doubleArray64);
        variance22.setData(doubleArray64);
        double double73 = variance20.evaluate(doubleArray64, (double) ' ');
        variance16.setData(doubleArray64);
        variance10.incrementAll(doubleArray64);
        double double77 = variance1.evaluate(doubleArray64, (double) (-1.0f));
        variance1.increment((double) 4L);
        variance1.setBiasCorrected(false);
        java.lang.Class<?> wildcardClass82 = variance1.getClass();
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNotNull(variance18);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        double double7 = variance1.getResult();
        variance1.increment((double) (short) -1);
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean23 = variance8.equals((java.lang.Object) variance22);
        double[] doubleArray24 = variance22.getData();
        double double25 = variance22.getResult();
        boolean boolean26 = variance22.isBiasCorrected();
        boolean boolean27 = variance22.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        variance5.increment((-1.0d));
        boolean boolean8 = variance5.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = variance10.copy();
        long long35 = variance34.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance37.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = variance37.copy();
        variance37.increment((double) '#');
        double[] doubleArray48 = new double[] { '#', 0L, (byte) 1, (-1), (short) 1 };
        variance37.incrementAll(doubleArray48);
        variance34.incrementAll(doubleArray48);
        // The following exception was thrown during execution in test generation
        try {
            variance5.incrementAll(doubleArray48, (int) (short) 1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: length (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertNotNull(variance34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 3L + "'", long35 == 3L);
        org.junit.Assert.assertNotNull(variance40);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[35.0, 0.0, 1.0, -1.0, 1.0]");
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        variance0.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance9);
        boolean boolean12 = variance4.equals((java.lang.Object) variance11);
        boolean boolean14 = variance11.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = variance11.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance37.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = variance37.copy();
        boolean boolean41 = variance40.isBiasCorrected();
        variance40.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = variance47.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance53.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        variance58.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        double[] doubleArray73 = new double[] { (-1), 100.0f };
        variance69.incrementAll(doubleArray73);
        double double75 = variance58.evaluate(doubleArray73);
        variance53.incrementAll(doubleArray73);
        variance51.setData(doubleArray73);
        double double79 = variance47.evaluate(doubleArray73, (double) (short) 10);
        variance40.setData(doubleArray73, 1, 1);
        double double83 = variance17.evaluate(doubleArray73);
        variance11.incrementAll(doubleArray73);
        variance0.setData(doubleArray73);
        long long86 = variance0.getN();
        variance0.increment(2550.25d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(variance15);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertNotNull(variance40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(variance49);
        org.junit.Assert.assertNotNull(variance56);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 0L + "'", long86 == 0L);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance8.clear();
        variance8.increment((double) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean14 = variance13.isBiasCorrected();
        double[] doubleArray16 = new double[] { 100 };
        variance13.incrementAll(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean20 = variance19.isBiasCorrected();
        double[] doubleArray22 = new double[] { 100 };
        variance19.incrementAll(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        double double46 = variance29.evaluate(doubleArray44);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance48.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        variance52.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        double[] doubleArray67 = new double[] { (-1), 100.0f };
        variance63.incrementAll(doubleArray67);
        double double69 = variance52.evaluate(doubleArray67);
        double double70 = variance48.evaluate(doubleArray67);
        double double72 = variance29.evaluate(doubleArray67, (double) 100.0f);
        double double73 = variance27.evaluate(doubleArray67);
        variance25.setData(doubleArray67);
        double double76 = variance19.evaluate(doubleArray67, (double) (byte) -1);
        double double77 = variance13.evaluate(doubleArray67);
        // The following exception was thrown during execution in test generation
        try {
            double double81 = variance8.evaluate(doubleArray67, 1617.066666666667d, (int) (byte) 100, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        variance13.increment((double) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double70 = variance24.evaluate(doubleArray64);
        variance13.incrementAll(doubleArray64);
        java.lang.Class<?> wildcardClass72 = doubleArray64.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) (-1L));
        variance1.increment((double) 0.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance7);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        variance19.clear();
        boolean boolean26 = variance14.equals((java.lang.Object) variance19);
        variance14.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        java.lang.Object obj48 = null;
        boolean boolean49 = variance30.equals(obj48);
        variance30.setBiasCorrected(true);
        double[] doubleArray58 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double60 = variance30.evaluate(doubleArray58, 100.0d);
        variance14.setData(doubleArray58, (int) (byte) 0, (int) (short) 0);
        double double66 = variance1.evaluate(doubleArray58, (int) (byte) 0, (int) (byte) 1);
        boolean boolean67 = variance1.isBiasCorrected();
        double[] doubleArray68 = variance1.getData();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1617.066666666667d + "'", double60 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(doubleArray68);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray2 = variance1.getData();
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance6.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance6.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance9);
        double[] doubleArray11 = variance10.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double double18 = variance13.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        double double67 = variance24.evaluate(doubleArray62, (double) 100.0f);
        double double68 = variance22.evaluate(doubleArray62);
        variance20.setData(doubleArray62);
        double double71 = variance13.evaluate(doubleArray62, (double) (-1));
        double double73 = variance10.evaluate(doubleArray62, 2046.8888888888887d);
        variance1.incrementAll(doubleArray62);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        variance29.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = variance33.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        variance33.incrementAll(doubleArray53);
        variance29.incrementAll(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        variance29.incrementAll(doubleArray66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance29.copy();
        java.lang.Class<?> wildcardClass70 = variance69.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(variance36);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        double[] doubleArray12 = new double[] { (-1), 100.0f };
        variance8.incrementAll(doubleArray12);
        long long14 = variance8.getN();
        boolean boolean15 = variance8.isBiasCorrected();
        double double16 = variance8.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = variance8.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        variance19.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        double[] doubleArray34 = new double[] { (-1), 100.0f };
        variance30.incrementAll(doubleArray34);
        double double36 = variance19.evaluate(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance38.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        variance38.setData(doubleArray49);
        variance19.incrementAll(doubleArray49);
        variance19.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        variance56.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        double double73 = variance56.evaluate(doubleArray71);
        java.lang.Object obj74 = null;
        boolean boolean75 = variance56.equals(obj74);
        variance56.setBiasCorrected(true);
        double[] doubleArray84 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double86 = variance56.evaluate(doubleArray84, 100.0d);
        double double87 = variance19.evaluate(doubleArray84);
        variance8.setData(doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            double double92 = variance3.evaluate(doubleArray84, 5100.5d, 1, 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2550.25d + "'", double16 == 2550.25d);
        org.junit.Assert.assertNotNull(variance17);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1617.066666666667d + "'", double86 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1617.0666666666664d + "'", double87 == 1617.0666666666664d);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        double[] doubleArray6 = variance1.getData();
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertNull(doubleArray6);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance28.increment((double) (-1));
        double double31 = variance28.evaluate();
        boolean boolean32 = variance28.isBiasCorrected();
        double[] doubleArray33 = null;
        variance28.setData(doubleArray33);
        java.lang.Class<?> wildcardClass35 = variance28.getClass();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 5100.5d + "'", double31 == 5100.5d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        variance1.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance1.copy();
        double double11 = variance1.getResult();
        variance1.clear();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.25d + "'", double11 == 0.25d);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        double double51 = variance5.evaluate(doubleArray45);
        variance3.setData(doubleArray45);
        double double54 = variance1.evaluate(doubleArray45, (double) ' ');
        variance1.setBiasCorrected(true);
        double double57 = variance1.getResult();
        variance1.increment((double) (-1L));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        double double55 = variance33.evaluate(doubleArray52);
        double double57 = variance14.evaluate(doubleArray52, (double) 100.0f);
        double double58 = variance12.evaluate(doubleArray52);
        variance10.setData(doubleArray52);
        double double61 = variance8.evaluate(doubleArray52, (double) ' ');
        variance4.setData(doubleArray52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        java.lang.Object obj82 = null;
        boolean boolean83 = variance64.equals(obj82);
        variance64.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment89 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance90 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment89);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance87, variance90);
        org.apache.commons.math.stat.descriptive.moment.Variance variance92 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance90);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance92);
        boolean boolean94 = variance4.equals((java.lang.Object) variance92);
        boolean boolean95 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance96 = variance4.copy();
        java.lang.Class<?> wildcardClass97 = variance4.getClass();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(variance96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        variance43.increment(0.0d);
        boolean boolean68 = variance4.equals((java.lang.Object) 0.0d);
        variance4.increment(1347.5555555555554d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = variance75.copy();
        double[] doubleArray82 = new double[] { 0.0f, 2550.25d, 1, (short) -1 };
        double double84 = variance75.evaluate(doubleArray82, (double) (byte) 0);
        variance4.incrementAll(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(variance77);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 2550.25, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1219458.32421875d + "'", double84 == 1219458.32421875d);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        double[] doubleArray13 = variance12.getData();
        variance12.setBiasCorrected(false);
        variance12.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        boolean boolean19 = variance18.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = variance18.copy();
        double double21 = variance18.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(variance20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2266.8888888888887d + "'", double21 == 2266.8888888888887d);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        boolean boolean15 = variance7.equals((java.lang.Object) variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance21);
        double[] doubleArray24 = variance23.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        variance39.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        double[] doubleArray54 = new double[] { (-1), 100.0f };
        variance50.incrementAll(doubleArray54);
        double double56 = variance39.evaluate(doubleArray54);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance58.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        variance62.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        double double79 = variance62.evaluate(doubleArray77);
        double double80 = variance58.evaluate(doubleArray77);
        double double82 = variance39.evaluate(doubleArray77, (double) 100.0f);
        double double83 = variance37.evaluate(doubleArray77);
        variance35.setData(doubleArray77);
        double double86 = variance33.evaluate(doubleArray77, (double) ' ');
        variance29.setData(doubleArray77);
        variance23.incrementAll(doubleArray77);
        double double90 = variance14.evaluate(doubleArray77, (double) (-1));
        // The following exception was thrown during execution in test generation
        try {
            double double91 = variance14.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertNotNull(variance31);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2550.25d + "'", double90 == 2550.25d);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        variance36.clear();
        boolean boolean43 = variance31.equals((java.lang.Object) variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance36);
        boolean boolean45 = variance1.isBiasCorrected();
        double[] doubleArray46 = variance1.getData();
        double[] doubleArray47 = variance1.getData();
        variance1.setBiasCorrected(true);
        double double50 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(doubleArray46);
        org.junit.Assert.assertNull(doubleArray47);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        boolean boolean21 = variance13.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance24.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = variance24.copy();
        boolean boolean28 = variance27.isBiasCorrected();
        long long29 = variance27.getN();
        variance27.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        variance33.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        double double50 = variance33.evaluate(doubleArray48);
        java.lang.Object obj51 = null;
        boolean boolean52 = variance33.equals(obj51);
        double[] doubleArray53 = variance33.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance55.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = variance55.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        variance60.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        double[] doubleArray75 = new double[] { (-1), 100.0f };
        variance71.incrementAll(doubleArray75);
        double double77 = variance60.evaluate(doubleArray75);
        variance55.incrementAll(doubleArray75);
        variance33.incrementAll(doubleArray75);
        double double81 = variance27.evaluate(doubleArray75, (double) '4');
        // The following exception was thrown during execution in test generation
        try {
            variance13.incrementAll(doubleArray75, (int) (byte) 100, 0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(variance27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(doubleArray53);
        org.junit.Assert.assertNotNull(variance58);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance11);
        double[] doubleArray42 = variance4.getData();
        double[] doubleArray43 = variance4.getData();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(doubleArray42);
        org.junit.Assert.assertNull(doubleArray43);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        double[] doubleArray21 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance23.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance23.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        variance23.incrementAll(doubleArray43);
        variance1.incrementAll(doubleArray43);
        double[] doubleArray48 = variance1.getData();
        variance1.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long53 = variance52.getN();
        long long54 = variance52.getN();
        variance52.clear();
        variance52.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance60.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = variance60.copy();
        boolean boolean64 = variance63.isBiasCorrected();
        variance63.clear();
        variance63.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = variance63.copy();
        boolean boolean68 = variance1.equals((java.lang.Object) variance67);
        long long69 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertNotNull(variance63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(variance67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 3L + "'", long69 == 3L);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance1.copy();
        double double10 = variance1.getResult();
        variance1.increment((double) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            double double13 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        double double36 = variance4.evaluate(doubleArray30, (double) (short) 10);
        long long37 = variance4.getN();
        boolean boolean38 = variance4.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        double[] doubleArray13 = variance12.getData();
        variance12.setBiasCorrected(false);
        // The following exception was thrown during execution in test generation
        try {
            double double16 = variance12.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNull(doubleArray13);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance30.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        double double51 = variance34.evaluate(doubleArray49);
        double double52 = variance30.evaluate(doubleArray49);
        double double54 = variance11.evaluate(doubleArray49, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance11.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        double[] doubleArray65 = new double[] { (-1), 100.0f };
        variance61.incrementAll(doubleArray65);
        double double67 = variance56.evaluate(doubleArray65);
        variance3.setData(doubleArray65);
        variance1.incrementAll(doubleArray65, 0, (int) (short) 0);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = variance1.copy();
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertNotNull(variance73);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        double double51 = variance5.evaluate(doubleArray45);
        variance3.setData(doubleArray45);
        double double54 = variance1.evaluate(doubleArray45, (double) ' ');
        double double55 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        boolean boolean57 = variance56.isBiasCorrected();
        double[] doubleArray58 = variance56.getData();
        variance56.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(doubleArray58);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.increment(2046.8888888888887d);
        double[] doubleArray4 = variance1.getData();
        long long5 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray9 = variance8.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance30.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        double double51 = variance34.evaluate(doubleArray49);
        double double52 = variance30.evaluate(doubleArray49);
        double double54 = variance11.evaluate(doubleArray49, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance11.copy();
        variance55.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance58.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = variance58.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        variance63.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        double[] doubleArray78 = new double[] { (-1), 100.0f };
        variance74.incrementAll(doubleArray78);
        double double80 = variance63.evaluate(doubleArray78);
        variance58.incrementAll(doubleArray78);
        variance55.setData(doubleArray78);
        variance8.incrementAll(doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            variance6.setData(doubleArray78, (int) 'a', (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance61);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance1.setBiasCorrected(false);
        variance1.increment(0.0d);
        variance1.increment((double) (byte) 0);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance1.copy();
        variance53.increment(0.25d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance53);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        variance8.increment((double) 0.0f);
        java.lang.Class<?> wildcardClass23 = variance8.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        boolean boolean15 = variance7.equals((java.lang.Object) variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance21);
        double[] doubleArray24 = variance23.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        variance39.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        double[] doubleArray54 = new double[] { (-1), 100.0f };
        variance50.incrementAll(doubleArray54);
        double double56 = variance39.evaluate(doubleArray54);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance58.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        variance62.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        double double79 = variance62.evaluate(doubleArray77);
        double double80 = variance58.evaluate(doubleArray77);
        double double82 = variance39.evaluate(doubleArray77, (double) 100.0f);
        double double83 = variance37.evaluate(doubleArray77);
        variance35.setData(doubleArray77);
        double double86 = variance33.evaluate(doubleArray77, (double) ' ');
        variance29.setData(doubleArray77);
        variance23.incrementAll(doubleArray77);
        double double90 = variance14.evaluate(doubleArray77, (double) (-1));
        variance14.clear();
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertNotNull(variance31);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2550.25d + "'", double90 == 2550.25d);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        double double11 = variance1.getResult();
        double double12 = variance1.getResult();
        long long13 = variance1.getN();
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        boolean boolean22 = variance1.equals((java.lang.Object) variance20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double[] doubleArray31 = new double[] { (-1), 100.0f };
        variance27.incrementAll(doubleArray31);
        // The following exception was thrown during execution in test generation
        try {
            double double36 = variance1.evaluate(doubleArray31, 5100.5d, 100, 0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0]");
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray6 = variance5.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance8.copy();
        boolean boolean12 = variance11.isBiasCorrected();
        variance11.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = variance18.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance24.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = variance24.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        double double46 = variance29.evaluate(doubleArray44);
        variance24.incrementAll(doubleArray44);
        variance22.setData(doubleArray44);
        double double50 = variance18.evaluate(doubleArray44, (double) (short) 10);
        variance11.setData(doubleArray44, 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = variance55.copy();
        double double57 = variance56.getResult();
        long long58 = variance56.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = variance56.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance61.evaluate(doubleArray76);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance80.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment86 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment86);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance84, variance87);
        double[] doubleArray91 = new double[] { (-1), 100.0f };
        variance87.incrementAll(doubleArray91);
        variance80.setData(doubleArray91);
        variance61.incrementAll(doubleArray91);
        variance56.incrementAll(doubleArray91);
        double double97 = variance54.evaluate(doubleArray91, 0.0d);
        variance5.incrementAll(doubleArray91);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(variance20);
        org.junit.Assert.assertNotNull(variance27);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertNotNull(variance56);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertNotNull(variance59);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 2550.25d + "'", double97 == 2550.25d);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance45.copy();
        double double47 = variance45.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance49.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = variance49.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance52);
        double double54 = variance52.getResult();
        boolean boolean55 = variance45.equals((java.lang.Object) variance52);
        double double56 = variance45.getResult();
        // The following exception was thrown during execution in test generation
        try {
            double double57 = variance45.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(variance52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double[] doubleArray8 = variance6.getData();
        boolean boolean9 = variance6.isBiasCorrected();
        double[] doubleArray10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        variance12.increment(0.0d);
        variance12.setBiasCorrected(false);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        boolean boolean33 = variance27.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = variance27.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long37 = variance36.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance39.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        variance43.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        double[] doubleArray58 = new double[] { (-1), 100.0f };
        variance54.incrementAll(doubleArray58);
        double double60 = variance43.evaluate(doubleArray58);
        double double61 = variance39.evaluate(doubleArray58);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance64.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        variance68.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment78);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance76, variance79);
        double[] doubleArray83 = new double[] { (-1), 100.0f };
        variance79.incrementAll(doubleArray83);
        double double85 = variance68.evaluate(doubleArray83);
        double double86 = variance64.evaluate(doubleArray83);
        double double87 = variance62.evaluate(doubleArray83);
        double double88 = variance36.evaluate(doubleArray83);
        variance34.setData(doubleArray83);
        variance12.setData(doubleArray83);
        // The following exception was thrown during execution in test generation
        try {
            double double91 = variance6.evaluate(doubleArray10, doubleArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(variance34);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        double[] doubleArray10 = variance1.getData();
        variance1.increment(0.0d);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        variance16.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        variance28.clear();
        boolean boolean35 = variance23.equals((java.lang.Object) variance28);
        variance23.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        variance39.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        double[] doubleArray54 = new double[] { (-1), 100.0f };
        variance50.incrementAll(doubleArray54);
        double double56 = variance39.evaluate(doubleArray54);
        java.lang.Object obj57 = null;
        boolean boolean58 = variance39.equals(obj57);
        variance39.setBiasCorrected(true);
        double[] doubleArray67 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double69 = variance39.evaluate(doubleArray67, 100.0d);
        variance23.setData(doubleArray67, (int) (byte) 0, (int) (short) 0);
        double double74 = variance1.evaluate(doubleArray67, 2550.250000000233d);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1617.066666666667d + "'", double69 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1347.5555555547278d + "'", double74 == 1347.5555555547278d);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance18.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        variance28.increment(0.0d);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        variance63.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        double[] doubleArray78 = new double[] { (-1), 100.0f };
        variance74.incrementAll(doubleArray78);
        double double80 = variance63.evaluate(doubleArray78);
        double double81 = variance59.evaluate(doubleArray78);
        double double83 = variance40.evaluate(doubleArray78, (double) 100.0f);
        double double85 = variance28.evaluate(doubleArray78, (double) (short) 1);
        double double86 = variance18.evaluate(doubleArray78);
        double double87 = variance13.evaluate(doubleArray78);
        double double89 = variance6.evaluate(doubleArray78, 1347.5555555555554d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance90 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        variance90.clear();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2550.250000000233d + "'", double89 == 2550.250000000233d);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double double28 = variance23.getResult();
        double[] doubleArray34 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double36 = variance23.evaluate(doubleArray34, (double) (short) 1);
        variance1.setData(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = variance38.copy();
        variance38.increment((double) 1);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1030428.01d + "'", double36 == 1030428.01d);
        org.junit.Assert.assertNotNull(variance38);
        org.junit.Assert.assertNotNull(variance39);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance28.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        variance32.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance32);
        double double38 = variance32.getResult();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance0);
        double[] doubleArray3 = variance2.getData();
        variance2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance9.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        variance19.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        double[] doubleArray34 = new double[] { (-1), 100.0f };
        variance30.incrementAll(doubleArray34);
        double double36 = variance19.evaluate(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance38.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        double double59 = variance42.evaluate(doubleArray57);
        double double60 = variance38.evaluate(doubleArray57);
        double double62 = variance19.evaluate(doubleArray57, (double) 100.0f);
        double double63 = variance17.evaluate(doubleArray57);
        variance15.setData(doubleArray57);
        double double66 = variance13.evaluate(doubleArray57, (double) ' ');
        variance9.setData(doubleArray57);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance71.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = variance71.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment78);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance76, variance79);
        variance76.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment86 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment86);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance84, variance87);
        double[] doubleArray91 = new double[] { (-1), 100.0f };
        variance87.incrementAll(doubleArray91);
        double double93 = variance76.evaluate(doubleArray91);
        variance71.incrementAll(doubleArray91);
        variance69.setData(doubleArray91);
        variance9.incrementAll(doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            variance2.incrementAll(doubleArray91, 100, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: length (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertNotNull(variance74);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2550.25d + "'", double93 == 2550.25d);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance46.evaluate(doubleArray55);
        variance46.increment(Double.NaN);
        boolean boolean60 = variance46.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        variance62.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        double double79 = variance62.evaluate(doubleArray77);
        java.lang.Object obj80 = null;
        boolean boolean81 = variance62.equals(obj80);
        variance62.setBiasCorrected(true);
        double[] doubleArray90 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double92 = variance62.evaluate(doubleArray90, 100.0d);
        double double93 = variance46.evaluate(doubleArray90);
        org.apache.commons.math.stat.descriptive.moment.Variance variance94 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        double[] doubleArray95 = variance94.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1617.066666666667d + "'", double92 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1347.5555555555554d + "'", double93 == 1347.5555555555554d);
        org.junit.Assert.assertNull(doubleArray95);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double double6 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(variance7);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        variance29.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = variance33.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        variance33.incrementAll(doubleArray53);
        variance29.incrementAll(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        variance29.incrementAll(doubleArray66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance29);
        long long70 = variance29.getN();
        boolean boolean71 = variance29.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance29);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(variance36);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 4L + "'", long70 == 4L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.clear();
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        variance16.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        variance28.clear();
        boolean boolean35 = variance23.equals((java.lang.Object) variance28);
        variance28.increment((double) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        variance41.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        double[] doubleArray56 = new double[] { (-1), 100.0f };
        variance52.incrementAll(doubleArray56);
        double double58 = variance41.evaluate(doubleArray56);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance60.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        double double82 = variance60.evaluate(doubleArray79);
        double double84 = variance41.evaluate(doubleArray79, (double) 100.0f);
        double double85 = variance39.evaluate(doubleArray79);
        variance28.incrementAll(doubleArray79);
        double double87 = variance13.evaluate(doubleArray79);
        variance13.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        long long32 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        double[] doubleArray6 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) (-1L));
        variance8.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        variance45.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        double[] doubleArray60 = new double[] { (-1), 100.0f };
        variance56.incrementAll(doubleArray60);
        double double62 = variance45.evaluate(doubleArray60);
        double double63 = variance41.evaluate(doubleArray60);
        double double65 = variance22.evaluate(doubleArray60, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = variance22.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance67.evaluate(doubleArray76);
        variance14.setData(doubleArray76);
        double double80 = variance8.evaluate(doubleArray76);
        variance4.setData(doubleArray76);
        boolean boolean83 = variance4.equals((java.lang.Object) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = variance4.copy();
        boolean boolean85 = variance84.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(variance66);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(variance84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean13 = variance12.isBiasCorrected();
        double[] doubleArray15 = new double[] { 100 };
        variance12.incrementAll(doubleArray15);
        boolean boolean17 = variance4.equals((java.lang.Object) doubleArray15);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double[] doubleArray36 = new double[] { (-1), 100.0f };
        variance32.incrementAll(doubleArray36);
        double double38 = variance21.evaluate(doubleArray36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance40.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double61 = variance44.evaluate(doubleArray59);
        double double62 = variance40.evaluate(doubleArray59);
        double double64 = variance21.evaluate(doubleArray59, (double) 100.0f);
        double double65 = variance19.evaluate(doubleArray59);
        variance4.incrementAll(doubleArray59);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        long long68 = variance67.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance70.increment(2046.8888888888887d);
        double[] doubleArray73 = variance70.getData();
        long long74 = variance70.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        variance70.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 4L + "'", long68 == 4L);
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1L + "'", long74 == 1L);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance1.copy();
        double double10 = variance1.getResult();
        variance1.setBiasCorrected(false);
        variance1.increment(2025.0d);
        long long15 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance1.copy();
        // The following exception was thrown during execution in test generation
        try {
            double double17 = variance16.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(variance16);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        boolean boolean21 = variance13.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance13);
        // The following exception was thrown during execution in test generation
        try {
            double double23 = variance13.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        java.lang.Class<?> wildcardClass49 = variance48.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        double double10 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        double double17 = variance12.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        variance23.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        double[] doubleArray38 = new double[] { (-1), 100.0f };
        variance34.incrementAll(doubleArray38);
        double double40 = variance23.evaluate(doubleArray38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        double[] doubleArray61 = new double[] { (-1), 100.0f };
        variance57.incrementAll(doubleArray61);
        double double63 = variance46.evaluate(doubleArray61);
        double double64 = variance42.evaluate(doubleArray61);
        double double66 = variance23.evaluate(doubleArray61, (double) 100.0f);
        double double67 = variance21.evaluate(doubleArray61);
        variance19.setData(doubleArray61);
        double double70 = variance12.evaluate(doubleArray61, (double) (-1));
        variance12.increment(0.0d);
        boolean boolean73 = variance1.equals((java.lang.Object) variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment78);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance76, variance79);
        double double81 = variance76.getResult();
        double double82 = variance76.getResult();
        boolean boolean83 = variance1.equals((java.lang.Object) variance76);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2550.25d + "'", double40 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        long long11 = variance4.getN();
        long long12 = variance4.getN();
        double[] doubleArray13 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        variance23.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        double[] doubleArray38 = new double[] { (-1), 100.0f };
        variance34.incrementAll(doubleArray38);
        double double40 = variance23.evaluate(doubleArray38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        double[] doubleArray61 = new double[] { (-1), 100.0f };
        variance57.incrementAll(doubleArray61);
        double double63 = variance46.evaluate(doubleArray61);
        double double64 = variance42.evaluate(doubleArray61);
        double double66 = variance23.evaluate(doubleArray61, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = variance23.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance67);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        double double79 = variance68.evaluate(doubleArray77);
        variance15.setData(doubleArray77);
        variance15.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance84.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance84);
        variance84.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance84);
        double[] doubleArray90 = variance84.getData();
        double[] doubleArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double93 = variance4.evaluate(doubleArray90, doubleArray91, (double) 0L);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2550.25d + "'", double40 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertNotNull(variance67);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1.0, 100.0]");
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance0);
        boolean boolean3 = variance2.isBiasCorrected();
        double[] doubleArray4 = variance2.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance6.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance6.copy();
        variance6.increment((double) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance2, variance6);
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNotNull(variance10);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        variance9.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        double[] doubleArray24 = new double[] { (-1), 100.0f };
        variance20.incrementAll(doubleArray24);
        double double26 = variance9.evaluate(doubleArray24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance28.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        variance32.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        double[] doubleArray47 = new double[] { (-1), 100.0f };
        variance43.incrementAll(doubleArray47);
        double double49 = variance32.evaluate(doubleArray47);
        double double50 = variance28.evaluate(doubleArray47);
        double double52 = variance9.evaluate(doubleArray47, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance9.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance54.evaluate(doubleArray63);
        variance1.setData(doubleArray63);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance70.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance70);
        variance70.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance70);
        double[] doubleArray76 = variance70.getData();
        variance70.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = variance70.copy();
        variance79.setBiasCorrected(false);
        variance79.clear();
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2550.25d + "'", double26 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertNotNull(variance53);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance79);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance25.copy();
        // The following exception was thrown during execution in test generation
        try {
            double double27 = variance25.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance26);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean9 = variance8.isBiasCorrected();
        double[] doubleArray11 = new double[] { 100 };
        variance8.incrementAll(doubleArray11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance8);
        variance4.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0]");
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        boolean boolean12 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        boolean boolean20 = variance14.equals((java.lang.Object) 10);
        variance14.increment((double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double double29 = variance24.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        variance36.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        double[] doubleArray51 = new double[] { (-1), 100.0f };
        variance47.incrementAll(doubleArray51);
        double double53 = variance36.evaluate(doubleArray51);
        double double54 = variance32.evaluate(doubleArray51);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance57.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance61.evaluate(doubleArray76);
        double double79 = variance57.evaluate(doubleArray76);
        double double80 = variance55.evaluate(doubleArray76);
        variance24.setData(doubleArray76, 1, (int) (short) 0);
        variance4.incrementAll(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        boolean boolean32 = variance26.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = variance26.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long36 = variance35.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance38.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        double double59 = variance42.evaluate(doubleArray57);
        double double60 = variance38.evaluate(doubleArray57);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance63.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment69);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        variance67.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment77);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance75, variance78);
        double[] doubleArray82 = new double[] { (-1), 100.0f };
        variance78.incrementAll(doubleArray82);
        double double84 = variance67.evaluate(doubleArray82);
        double double85 = variance63.evaluate(doubleArray82);
        double double86 = variance61.evaluate(doubleArray82);
        double double87 = variance35.evaluate(doubleArray82);
        variance33.setData(doubleArray82);
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = variance33.copy();
        boolean boolean90 = variance24.equals((java.lang.Object) variance33);
        org.apache.commons.math.stat.descriptive.moment.Variance variance92 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean93 = variance92.isBiasCorrected();
        double[] doubleArray95 = new double[] { 100 };
        variance92.incrementAll(doubleArray95);
        variance24.incrementAll(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(variance33);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertNotNull(variance89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[100.0]");
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        boolean boolean26 = variance25.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance25);
        java.lang.Class<?> wildcardClass28 = variance27.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean6 = variance5.isBiasCorrected();
        double[] doubleArray8 = new double[] { 100 };
        variance5.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance34.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        double double56 = variance34.evaluate(doubleArray53);
        double double58 = variance15.evaluate(doubleArray53, (double) 100.0f);
        double double59 = variance13.evaluate(doubleArray53);
        variance11.setData(doubleArray53);
        double double62 = variance5.evaluate(doubleArray53, (double) (byte) -1);
        double double64 = variance1.evaluate(doubleArray53, (double) 1.0f);
        long long65 = variance1.getN();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance68.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = variance68.copy();
        variance68.increment((double) '#');
        double[] doubleArray79 = new double[] { '#', 0L, (byte) 1, (-1), (short) 1 };
        variance68.incrementAll(doubleArray79);
        // The following exception was thrown during execution in test generation
        try {
            double double83 = variance1.evaluate(doubleArray79, (int) (short) 1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 1L + "'", long65 == 1L);
        org.junit.Assert.assertNotNull(variance71);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[35.0, 0.0, 1.0, -1.0, 1.0]");
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        double double49 = variance48.getResult();
        boolean boolean51 = variance48.equals((java.lang.Object) 'a');
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double double41 = variance36.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance66.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        variance70.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment80);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance78, variance81);
        double[] doubleArray85 = new double[] { (-1), 100.0f };
        variance81.incrementAll(doubleArray85);
        double double87 = variance70.evaluate(doubleArray85);
        double double88 = variance66.evaluate(doubleArray85);
        double double90 = variance47.evaluate(doubleArray85, (double) 100.0f);
        double double91 = variance45.evaluate(doubleArray85);
        variance43.setData(doubleArray85);
        double double94 = variance36.evaluate(doubleArray85, (double) (-1));
        variance8.setData(doubleArray85);
        variance4.setData(doubleArray85);
        variance4.clear();
        variance4.clear();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2550.25d + "'", double90 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2550.25d + "'", double91 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2550.25d + "'", double94 == 2550.25d);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        double[] doubleArray45 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        double[] doubleArray47 = variance46.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        java.lang.Object obj67 = null;
        boolean boolean68 = variance49.equals(obj67);
        double[] doubleArray69 = variance49.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        double double76 = variance71.getResult();
        double[] doubleArray82 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double84 = variance71.evaluate(doubleArray82, (double) (short) 1);
        double double85 = variance49.evaluate(doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            double double89 = variance46.evaluate(doubleArray82, (double) ' ', (int) (short) 1, 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(doubleArray69);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1030428.01d + "'", double84 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1030428.01d + "'", double85 == 1030428.01d);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        variance1.clear();
        variance1.increment((double) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance8.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        variance13.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        double[] doubleArray28 = new double[] { (-1), 100.0f };
        variance24.incrementAll(doubleArray28);
        double double30 = variance13.evaluate(doubleArray28);
        variance8.incrementAll(doubleArray28);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        variance36.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = variance36.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance47.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = variance47.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        variance52.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        double[] doubleArray67 = new double[] { (-1), 100.0f };
        variance63.incrementAll(doubleArray67);
        double double69 = variance52.evaluate(doubleArray67);
        variance47.incrementAll(doubleArray67);
        variance8.incrementAll(doubleArray67);
        variance1.setData(doubleArray67, 0, 0);
        variance1.increment((double) '4');
        double double77 = variance1.getResult();
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2550.25d + "'", double30 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance44);
        org.junit.Assert.assertNotNull(variance50);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 576.0d + "'", double77 == 576.0d);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        variance1.setBiasCorrected(false);
        double[] doubleArray8 = variance1.getData();
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertNull(doubleArray8);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        variance9.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        double[] doubleArray24 = new double[] { (-1), 100.0f };
        variance20.incrementAll(doubleArray24);
        double double26 = variance9.evaluate(doubleArray24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance28.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        variance32.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        double[] doubleArray47 = new double[] { (-1), 100.0f };
        variance43.incrementAll(doubleArray47);
        double double49 = variance32.evaluate(doubleArray47);
        double double50 = variance28.evaluate(doubleArray47);
        double double52 = variance9.evaluate(doubleArray47, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance9.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance54.evaluate(doubleArray63);
        variance1.setData(doubleArray63);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        double double68 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        boolean boolean76 = variance70.equals((java.lang.Object) 10);
        variance70.increment((double) (short) 10);
        variance70.increment((double) (byte) 10);
        variance70.increment((double) (short) 100);
        variance70.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment88 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment88);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance86, variance89);
        variance86.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance93 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance86);
        variance86.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance95 = variance86.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance96 = variance86.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance96);
        boolean boolean98 = variance1.equals((java.lang.Object) variance70);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2550.25d + "'", double26 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertNotNull(variance53);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(variance95);
        org.junit.Assert.assertNotNull(variance96);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance5.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance5.copy();
        boolean boolean9 = variance8.isBiasCorrected();
        variance8.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = variance15.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance21.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = variance21.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        variance21.incrementAll(doubleArray41);
        variance19.setData(doubleArray41);
        double double47 = variance15.evaluate(doubleArray41, (double) (short) 10);
        variance8.setData(doubleArray41, 1, 1);
        double double52 = variance1.evaluate(doubleArray41, 25.0d);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(variance17);
        org.junit.Assert.assertNotNull(variance24);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 5100.5d + "'", double52 == 5100.5d);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance5.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance5.copy();
        boolean boolean9 = variance8.isBiasCorrected();
        double[] doubleArray10 = variance8.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance12.increment((double) (-1L));
        variance12.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = variance26.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance70);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        double[] doubleArray80 = new double[] { (-1), 100.0f };
        variance76.incrementAll(doubleArray80);
        double double82 = variance71.evaluate(doubleArray80);
        variance18.setData(doubleArray80);
        double double84 = variance12.evaluate(doubleArray80);
        variance8.setData(doubleArray80);
        double double86 = variance8.evaluate();
        double[] doubleArray87 = variance8.getData();
        variance1.incrementAll(doubleArray87);
        double double89 = variance1.getResult();
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertNotNull(variance70);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2266.8888888888887d + "'", double89 == 2266.8888888888887d);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        double double2 = variance1.getResult();
        long long3 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean8 = variance7.isBiasCorrected();
        double[] doubleArray10 = new double[] { 100 };
        variance7.incrementAll(doubleArray10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance36.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        double double58 = variance36.evaluate(doubleArray55);
        double double60 = variance17.evaluate(doubleArray55, (double) 100.0f);
        double double61 = variance15.evaluate(doubleArray55);
        variance13.setData(doubleArray55);
        double double64 = variance7.evaluate(doubleArray55, (double) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            double double67 = variance4.evaluate(doubleArray55, 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: length (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        double[] doubleArray21 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double double28 = variance23.getResult();
        double[] doubleArray34 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double36 = variance23.evaluate(doubleArray34, (double) (short) 1);
        double double37 = variance1.evaluate(doubleArray34);
        java.lang.Class<?> wildcardClass38 = doubleArray34.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1030428.01d + "'", double36 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1030428.01d + "'", double37 == 1030428.01d);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        boolean boolean44 = variance26.isBiasCorrected();
        variance26.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double double53 = variance48.getResult();
        double[] doubleArray59 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double61 = variance48.evaluate(doubleArray59, (double) (short) 1);
        variance26.setData(doubleArray59);
        double double63 = variance23.evaluate(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(variance23);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1030428.01d + "'", double61 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1030428.01d + "'", double63 == 1030428.01d);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        double double2 = variance0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment6);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance7);
        double[] doubleArray11 = new double[] { (-1), 100.0f };
        variance7.incrementAll(doubleArray11);
        long long13 = variance7.getN();
        long long14 = variance7.getN();
        long long15 = variance7.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance36.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        double[] doubleArray47 = new double[] { (-1), 100.0f };
        variance43.incrementAll(doubleArray47);
        variance36.setData(doubleArray47);
        variance17.incrementAll(doubleArray47);
        double double52 = variance7.evaluate(doubleArray47, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            variance0.incrementAll(doubleArray47, (int) (short) 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: length (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2L + "'", long13 == 2L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance50.copy();
        boolean boolean54 = variance53.isBiasCorrected();
        variance53.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance60.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance66.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance66.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        variance71.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment81);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance79, variance82);
        double[] doubleArray86 = new double[] { (-1), 100.0f };
        variance82.incrementAll(doubleArray86);
        double double88 = variance71.evaluate(doubleArray86);
        variance66.incrementAll(doubleArray86);
        variance64.setData(doubleArray86);
        double double92 = variance60.evaluate(doubleArray86, (double) (short) 10);
        variance53.setData(doubleArray86, 1, 1);
        variance48.incrementAll(doubleArray86);
        boolean boolean97 = variance48.isBiasCorrected();
        double double98 = variance48.getResult();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertNotNull(variance53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 2550.25d + "'", double98 == 2550.25d);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        double double8 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        boolean boolean16 = variance10.equals((java.lang.Object) 10);
        variance10.increment((double) (short) 10);
        variance10.clear();
        double double20 = variance10.getResult();
        double double21 = variance10.getResult();
        long long22 = variance10.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance10);
        variance1.increment(0.0d);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance2.increment(10.0d);
        variance2.clear();
        // The following exception was thrown during execution in test generation
        try {
            double double6 = variance2.getResult();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        variance8.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        variance8.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        variance14.increment(0.0d);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double71 = variance14.evaluate(doubleArray64, (double) (short) 1);
        boolean boolean72 = variance8.equals((java.lang.Object) variance14);
        variance14.increment((double) 2L);
        variance14.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        variance14.increment((double) '#');
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean6 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        boolean boolean8 = variance7.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        boolean boolean29 = variance23.equals((java.lang.Object) 10);
        variance23.increment((double) (short) 10);
        variance23.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        variance39.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        double[] doubleArray54 = new double[] { (-1), 100.0f };
        variance50.incrementAll(doubleArray54);
        double double56 = variance39.evaluate(doubleArray54);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance58.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        variance62.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        double double79 = variance62.evaluate(doubleArray77);
        double double80 = variance58.evaluate(doubleArray77);
        double double82 = variance39.evaluate(doubleArray77, (double) 100.0f);
        double double83 = variance37.evaluate(doubleArray77);
        variance35.setData(doubleArray77);
        variance23.setData(doubleArray77, (int) (byte) 1, 0);
        double[] doubleArray88 = variance23.getData();
        double double89 = variance1.evaluate(doubleArray88);
        variance1.increment(1347.5555555555554d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        boolean boolean53 = variance47.equals((java.lang.Object) 10);
        variance47.increment((double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        variance57.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment67);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance65, variance68);
        double[] doubleArray72 = new double[] { (-1), 100.0f };
        variance68.incrementAll(doubleArray72);
        double double74 = variance57.evaluate(doubleArray72);
        java.lang.Object obj75 = null;
        boolean boolean76 = variance57.equals(obj75);
        variance57.setBiasCorrected(true);
        double[] doubleArray85 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double87 = variance57.evaluate(doubleArray85, 100.0d);
        double double88 = variance47.evaluate(doubleArray85);
        variance45.incrementAll(doubleArray85);
        boolean boolean90 = variance45.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1617.066666666667d + "'", double87 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1347.5555555555554d + "'", double88 == 1347.5555555555554d);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        variance4.clear();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance12.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = variance12.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        variance12.incrementAll(doubleArray32);
        variance10.setData(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance10);
        variance37.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        variance41.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance41);
        double double46 = variance41.getResult();
        double[] doubleArray47 = variance41.getData();
        variance8.setData(doubleArray47);
        variance8.clear();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(variance15);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0]");
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        java.lang.Class<?> wildcardClass24 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        double[] doubleArray50 = new double[] { 1.0d, 10.0d, (byte) 100 };
        double double53 = variance45.evaluate(doubleArray50, 0, 0);
        boolean boolean54 = variance45.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        long long65 = variance59.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean68 = variance67.isBiasCorrected();
        double[] doubleArray70 = new double[] { 100 };
        variance67.incrementAll(doubleArray70);
        boolean boolean72 = variance59.equals((java.lang.Object) doubleArray70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance59);
        long long74 = variance59.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = variance59.copy();
        long long76 = variance59.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 2L + "'", long65 == 2L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertNotNull(variance75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        variance1.increment((double) (short) 100);
        long long7 = variance1.getN();
        // The following exception was thrown during execution in test generation
        try {
            double double8 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        variance1.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance11.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance11.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        variance16.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double[] doubleArray31 = new double[] { (-1), 100.0f };
        variance27.incrementAll(doubleArray31);
        double double33 = variance16.evaluate(doubleArray31);
        variance11.incrementAll(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = variance11.copy();
        long long36 = variance35.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance35.copy();
        boolean boolean39 = variance35.equals((java.lang.Object) (short) 1);
        boolean boolean40 = variance1.equals((java.lang.Object) variance35);
        long long41 = variance35.getN();
        // The following exception was thrown during execution in test generation
        try {
            double double42 = variance35.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(variance14);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2550.25d + "'", double33 == 2550.25d);
        org.junit.Assert.assertNotNull(variance35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 3L + "'", long36 == 3L);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 3L + "'", long41 == 3L);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance46.evaluate(doubleArray55);
        variance46.increment(Double.NaN);
        boolean boolean60 = variance46.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        variance62.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        double double79 = variance62.evaluate(doubleArray77);
        java.lang.Object obj80 = null;
        boolean boolean81 = variance62.equals(obj80);
        variance62.setBiasCorrected(true);
        double[] doubleArray90 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double92 = variance62.evaluate(doubleArray90, 100.0d);
        double double93 = variance46.evaluate(doubleArray90);
        java.lang.Class<?> wildcardClass94 = variance46.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1617.066666666667d + "'", double92 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1347.5555555555554d + "'", double93 == 1347.5555555555554d);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        variance8.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        variance8.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        boolean boolean20 = variance14.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = variance14.copy();
        double double22 = variance14.getResult();
        double double23 = variance14.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance25.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = variance25.copy();
        variance25.increment((double) 100.0f);
        boolean boolean31 = variance25.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = variance25.copy();
        variance32.increment((double) 1L);
        boolean boolean35 = variance14.equals((java.lang.Object) 1L);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance14);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(variance21);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(variance28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(variance32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        long long3 = variance1.getN();
        variance1.clear();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        double[] doubleArray24 = new double[] { (-1), 100.0f };
        variance20.incrementAll(doubleArray24);
        variance20.clear();
        boolean boolean27 = variance15.equals((java.lang.Object) variance20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean30 = variance15.equals((java.lang.Object) variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        long long41 = variance35.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean44 = variance43.isBiasCorrected();
        double[] doubleArray46 = new double[] { 100 };
        variance43.incrementAll(doubleArray46);
        boolean boolean48 = variance35.equals((java.lang.Object) doubleArray46);
        variance29.incrementAll(doubleArray46);
        // The following exception was thrown during execution in test generation
        try {
            variance1.setData(doubleArray46, (int) '#', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 2L + "'", long41 == 2L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance50.copy();
        boolean boolean54 = variance53.isBiasCorrected();
        variance53.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance60.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance66.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance66.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        variance71.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment81);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance79, variance82);
        double[] doubleArray86 = new double[] { (-1), 100.0f };
        variance82.incrementAll(doubleArray86);
        double double88 = variance71.evaluate(doubleArray86);
        variance66.incrementAll(doubleArray86);
        variance64.setData(doubleArray86);
        double double92 = variance60.evaluate(doubleArray86, (double) (short) 10);
        variance53.setData(doubleArray86, 1, 1);
        variance48.incrementAll(doubleArray86);
        variance48.setBiasCorrected(false);
        boolean boolean99 = variance48.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertNotNull(variance53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance28.increment((double) (-1));
        double double31 = variance28.evaluate();
        double double32 = variance28.evaluate();
        java.lang.Class<?> wildcardClass33 = variance28.getClass();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 5100.5d + "'", double31 == 5100.5d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 5100.5d + "'", double32 == 5100.5d);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        boolean boolean15 = variance7.equals((java.lang.Object) variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance21);
        double[] doubleArray24 = variance23.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        variance39.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        double[] doubleArray54 = new double[] { (-1), 100.0f };
        variance50.incrementAll(doubleArray54);
        double double56 = variance39.evaluate(doubleArray54);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance58.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        variance62.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        double double79 = variance62.evaluate(doubleArray77);
        double double80 = variance58.evaluate(doubleArray77);
        double double82 = variance39.evaluate(doubleArray77, (double) 100.0f);
        double double83 = variance37.evaluate(doubleArray77);
        variance35.setData(doubleArray77);
        double double86 = variance33.evaluate(doubleArray77, (double) ' ');
        variance29.setData(doubleArray77);
        variance23.incrementAll(doubleArray77);
        double double90 = variance14.evaluate(doubleArray77, (double) (-1));
        variance14.increment((-1.0d));
        variance14.increment(0.0d);
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertNotNull(variance31);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2550.25d + "'", double90 == 2550.25d);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        variance59.incrementAll(doubleArray79);
        variance57.setData(doubleArray79);
        double double85 = variance53.evaluate(doubleArray79, (double) (short) 10);
        variance46.incrementAll(doubleArray79);
        variance46.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        double double89 = variance88.getResult();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance43.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance48.evaluate(doubleArray63);
        variance43.incrementAll(doubleArray63);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = variance43.copy();
        variance43.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance43);
        double[] doubleArray71 = variance43.getData();
        long long72 = variance43.getN();
        long long73 = variance43.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(variance67);
        org.junit.Assert.assertNull(doubleArray71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 2L + "'", long72 == 2L);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 2L + "'", long73 == 2L);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        variance1.setBiasCorrected(true);
        long long34 = variance1.getN();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        double[] doubleArray46 = new double[] { (-1), 100.0f };
        variance42.incrementAll(doubleArray46);
        long long48 = variance42.getN();
        boolean boolean49 = variance42.isBiasCorrected();
        double double50 = variance42.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = variance42.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        variance53.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        double[] doubleArray68 = new double[] { (-1), 100.0f };
        variance64.incrementAll(doubleArray68);
        double double70 = variance53.evaluate(doubleArray68);
        java.lang.Object obj71 = null;
        boolean boolean72 = variance53.equals(obj71);
        variance53.setBiasCorrected(true);
        double[] doubleArray81 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double83 = variance53.evaluate(doubleArray81, 100.0d);
        variance51.setData(doubleArray81, (int) (byte) 1, 0);
        boolean boolean87 = variance37.equals((java.lang.Object) doubleArray81);
        variance37.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 2L + "'", long48 == 2L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertNotNull(variance51);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1617.066666666667d + "'", double83 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        variance21.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance31);
        variance32.increment(2550.25d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(variance31);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        double[] doubleArray21 = variance1.getData();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance29);
        boolean boolean32 = variance24.equals((java.lang.Object) variance31);
        boolean boolean34 = variance31.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance57.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance61.evaluate(doubleArray76);
        double double79 = variance57.evaluate(doubleArray76);
        double double81 = variance38.evaluate(doubleArray76, (double) 100.0f);
        double double82 = variance36.evaluate(doubleArray76);
        double double83 = variance31.evaluate(doubleArray76);
        variance1.setData(doubleArray76);
        variance1.increment(576.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.setBiasCorrected(false);
        double double25 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        double double36 = variance4.evaluate(doubleArray30, (double) (short) 10);
        variance4.clear();
        long long38 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance43);
        double[] doubleArray46 = variance45.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance45);
        long long48 = variance4.getN();
        double[] doubleArray49 = variance4.getData();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNull(doubleArray46);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNull(doubleArray49);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        variance1.setBiasCorrected(true);
        double[] doubleArray24 = variance1.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(doubleArray24);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        double double55 = variance12.evaluate(doubleArray50, (double) 100.0f);
        double double56 = variance10.evaluate(doubleArray50);
        variance8.setData(doubleArray50);
        double double59 = variance1.evaluate(doubleArray50, (double) (-1));
        variance1.increment(0.0d);
        variance1.increment((-1.0d));
        boolean boolean64 = variance1.isBiasCorrected();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance24);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        boolean boolean32 = variance26.equals((java.lang.Object) 10);
        variance26.increment((double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double double41 = variance36.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance47.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = variance47.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        variance52.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        double[] doubleArray67 = new double[] { (-1), 100.0f };
        variance63.incrementAll(doubleArray67);
        double double69 = variance52.evaluate(doubleArray67);
        variance47.incrementAll(doubleArray67);
        variance45.setData(doubleArray67);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance72.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance76.increment((double) 10);
        variance76.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance76);
        double double81 = variance76.getResult();
        double[] doubleArray82 = variance76.getData();
        variance43.setData(doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            double double87 = variance1.evaluate(doubleArray82, 1.0d, (int) ' ', 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(variance50);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 100.0]");
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = variance28.copy();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertNotNull(variance29);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        variance4.setBiasCorrected(true);
        // The following exception was thrown during execution in test generation
        try {
            double double15 = variance4.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        double[] doubleArray47 = variance46.getData();
        // The following exception was thrown during execution in test generation
        try {
            double double48 = variance46.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNull(doubleArray47);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double double6 = variance5.getResult();
        long long7 = variance5.getN();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance7.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance7.copy();
        boolean boolean11 = variance10.isBiasCorrected();
        variance10.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = variance17.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance23.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance23.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        variance23.incrementAll(doubleArray43);
        variance21.setData(doubleArray43);
        double double49 = variance17.evaluate(doubleArray43, (double) (short) 10);
        variance10.setData(doubleArray43, 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance53);
        variance53.clear();
        variance53.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = variance53.copy();
        variance57.clear();
        variance57.setBiasCorrected(true);
        // The following exception was thrown during execution in test generation
        try {
            double double61 = variance57.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(variance19);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertNotNull(variance57);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        double double51 = variance5.evaluate(doubleArray45);
        variance3.setData(doubleArray45);
        double double54 = variance1.evaluate(doubleArray45, (double) ' ');
        double double55 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        boolean boolean57 = variance56.isBiasCorrected();
        double[] doubleArray58 = variance56.getData();
        // The following exception was thrown during execution in test generation
        try {
            double double59 = variance56.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(doubleArray58);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        variance1.increment((double) 0L);
        boolean boolean10 = variance1.isBiasCorrected();
        variance1.increment((double) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double[] doubleArray36 = new double[] { (-1), 100.0f };
        variance32.incrementAll(doubleArray36);
        double double38 = variance21.evaluate(doubleArray36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance40.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double61 = variance44.evaluate(doubleArray59);
        double double62 = variance40.evaluate(doubleArray59);
        double double64 = variance21.evaluate(doubleArray59, (double) 100.0f);
        double double65 = variance19.evaluate(doubleArray59);
        variance17.setData(doubleArray59);
        double double68 = variance15.evaluate(doubleArray59, (double) ' ');
        double double70 = variance13.evaluate(doubleArray59, (double) (short) 1);
        java.lang.Class<?> wildcardClass71 = variance13.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        variance8.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        boolean boolean11 = variance10.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance10);
        double double13 = variance10.getResult();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        boolean boolean9 = variance1.equals((java.lang.Object) variance8);
        double[] doubleArray10 = variance8.getData();
        long long11 = variance8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        variance13.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = variance13.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance13);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(variance21);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        double double2 = variance1.getResult();
        long long3 = variance1.getN();
        variance1.clear();
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean6 = variance1.isBiasCorrected();
        variance1.increment((double) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        variance10.setBiasCorrected(false);
        variance10.increment(0.0d);
        variance10.setBiasCorrected(false);
        variance10.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        boolean boolean31 = variance25.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = variance25.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long35 = variance34.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance37.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        variance41.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        double[] doubleArray56 = new double[] { (-1), 100.0f };
        variance52.incrementAll(doubleArray56);
        double double58 = variance41.evaluate(doubleArray56);
        double double59 = variance37.evaluate(doubleArray56);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance62.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        variance66.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance74, variance77);
        double[] doubleArray81 = new double[] { (-1), 100.0f };
        variance77.incrementAll(doubleArray81);
        double double83 = variance66.evaluate(doubleArray81);
        double double84 = variance62.evaluate(doubleArray81);
        double double85 = variance60.evaluate(doubleArray81);
        double double86 = variance34.evaluate(doubleArray81);
        variance32.setData(doubleArray81);
        variance10.setData(doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double double91 = variance1.evaluate(doubleArray81, 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(variance32);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance6.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance12.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = variance12.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        variance12.incrementAll(doubleArray32);
        variance10.setData(doubleArray32);
        double double38 = variance6.evaluate(doubleArray32, (double) (short) 10);
        variance6.clear();
        variance6.increment((double) (short) 0);
        double double42 = variance6.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance46.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = variance46.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        double double68 = variance51.evaluate(doubleArray66);
        variance46.incrementAll(doubleArray66);
        variance44.setData(doubleArray66);
        boolean boolean71 = variance6.equals((java.lang.Object) doubleArray66);
        boolean boolean72 = variance6.isBiasCorrected();
        variance6.setBiasCorrected(false);
        boolean boolean75 = variance6.isBiasCorrected();
        boolean boolean76 = variance1.equals((java.lang.Object) boolean75);
        double[] doubleArray77 = variance1.getData();
        variance1.clear();
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(variance15);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(variance49);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(doubleArray77);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.clear();
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        boolean boolean21 = variance15.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean24 = variance23.isBiasCorrected();
        double[] doubleArray26 = new double[] { 100 };
        variance23.incrementAll(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        variance33.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        double double50 = variance33.evaluate(doubleArray48);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance52.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        variance56.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        double double73 = variance56.evaluate(doubleArray71);
        double double74 = variance52.evaluate(doubleArray71);
        double double76 = variance33.evaluate(doubleArray71, (double) 100.0f);
        double double77 = variance31.evaluate(doubleArray71);
        variance29.setData(doubleArray71);
        double double80 = variance23.evaluate(doubleArray71, (double) (byte) -1);
        variance15.setData(doubleArray71, 1, (int) (short) 1);
        variance13.incrementAll(doubleArray71);
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = variance13.copy();
        long long86 = variance13.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance13.copy();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertNotNull(variance85);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 2L + "'", long86 == 2L);
        org.junit.Assert.assertNotNull(variance87);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray2 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment6);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance7);
        variance4.setBiasCorrected(false);
        double double11 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance4.copy();
        double double14 = variance4.getResult();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance28.increment((double) (-1));
        double double31 = variance28.getResult();
        double double32 = variance28.evaluate();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = variance37.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance43.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance48.evaluate(doubleArray63);
        variance43.incrementAll(doubleArray63);
        variance41.setData(doubleArray63);
        double double69 = variance37.evaluate(doubleArray63, (double) (short) 10);
        variance37.clear();
        variance37.increment((double) (short) 0);
        double double73 = variance37.getResult();
        variance37.increment(1030428.01d);
        variance37.increment(5100.5d);
        boolean boolean78 = variance28.equals((java.lang.Object) 5100.5d);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 5100.5d + "'", double32 == 5100.5d);
        org.junit.Assert.assertNotNull(variance39);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        long long11 = variance4.getN();
        long long12 = variance4.getN();
        variance4.increment(1347.5555555555554d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance16.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = variance16.copy();
        long long20 = variance16.getN();
        long long21 = variance16.getN();
        double double22 = variance16.getResult();
        variance16.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance26.increment(2046.8888888888887d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance57.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance61.evaluate(doubleArray76);
        double double79 = variance57.evaluate(doubleArray76);
        double double81 = variance38.evaluate(doubleArray76, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = variance38.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance82);
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment87 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment87);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance85, variance88);
        double[] doubleArray92 = new double[] { (-1), 100.0f };
        variance88.incrementAll(doubleArray92);
        double double94 = variance83.evaluate(doubleArray92);
        variance30.setData(doubleArray92);
        variance26.setData(doubleArray92);
        variance16.incrementAll(doubleArray92);
        double[] doubleArray98 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double99 = variance4.evaluate(doubleArray92, doubleArray98);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertNotNull(variance19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertNotNull(variance82);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2550.25d + "'", double94 == 2550.25d);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        double double8 = variance1.getResult();
        double double9 = variance1.getResult();
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        variance5.clear();
        variance5.clear();
        boolean boolean8 = variance5.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        double[] doubleArray39 = variance29.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance29);
        long long41 = variance29.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance43.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        double double48 = variance47.getResult();
        double double49 = variance47.getResult();
        boolean boolean50 = variance29.equals((java.lang.Object) double49);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertNull(doubleArray39);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 3L + "'", long41 == 3L);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        double double11 = variance1.getResult();
        double double12 = variance1.getResult();
        long long13 = variance1.getN();
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance22);
        boolean boolean25 = variance17.equals((java.lang.Object) variance24);
        boolean boolean27 = variance24.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        variance31.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        double[] doubleArray46 = new double[] { (-1), 100.0f };
        variance42.incrementAll(doubleArray46);
        double double48 = variance31.evaluate(doubleArray46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        variance54.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        double[] doubleArray69 = new double[] { (-1), 100.0f };
        variance65.incrementAll(doubleArray69);
        double double71 = variance54.evaluate(doubleArray69);
        double double72 = variance50.evaluate(doubleArray69);
        double double74 = variance31.evaluate(doubleArray69, (double) 100.0f);
        double double75 = variance29.evaluate(doubleArray69);
        double double76 = variance24.evaluate(doubleArray69);
        double double78 = variance1.evaluate(doubleArray69, (double) 10);
        java.lang.Class<?> wildcardClass79 = doubleArray69.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        variance1.increment(0.0d);
        long long26 = variance1.getN();
        double double27 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance30);
        variance1.increment((double) '#');
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        long long47 = variance1.getN();
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance29);
        long long40 = variance39.getN();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 3L + "'", long40 == 3L);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        boolean boolean11 = variance4.isBiasCorrected();
        long long12 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance14.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = variance14.copy();
        boolean boolean18 = variance17.isBiasCorrected();
        double[] doubleArray19 = variance17.getData();
        boolean boolean20 = variance17.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        long long31 = variance25.getN();
        boolean boolean32 = variance25.isBiasCorrected();
        java.lang.Class<?> wildcardClass33 = variance25.getClass();
        boolean boolean34 = variance17.equals((java.lang.Object) variance25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance17);
        long long36 = variance4.getN();
        long long37 = variance4.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertNotNull(variance17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 2L + "'", long31 == 2L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 2L + "'", long36 == 2L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 2L + "'", long37 == 2L);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        long long3 = variance1.getN();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        boolean boolean12 = variance6.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean15 = variance14.isBiasCorrected();
        double[] doubleArray17 = new double[] { 100 };
        variance14.incrementAll(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        double double67 = variance24.evaluate(doubleArray62, (double) 100.0f);
        double double68 = variance22.evaluate(doubleArray62);
        variance20.setData(doubleArray62);
        double double71 = variance14.evaluate(doubleArray62, (double) (byte) -1);
        variance6.setData(doubleArray62, 1, (int) (short) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment78);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance76, variance79);
        variance76.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance76);
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment87 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment87);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance85, variance88);
        double[] doubleArray92 = new double[] { (-1), 100.0f };
        variance88.incrementAll(doubleArray92);
        variance88.clear();
        boolean boolean95 = variance83.equals((java.lang.Object) variance88);
        double[] doubleArray96 = variance88.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance88);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance6);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNull(doubleArray96);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        boolean boolean47 = variance45.isBiasCorrected();
        variance45.increment(1030428.01d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        double double51 = variance50.getResult();
        variance50.clear();
        variance50.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance50.copy();
        double[] doubleArray56 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double58 = variance55.evaluate(doubleArray56, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(variance55);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance23);
        variance23.increment((double) 3L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance23);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(variance23);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        double[] doubleArray6 = variance4.getData();
        boolean boolean7 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance14.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        long long32 = variance26.getN();
        long long33 = variance26.getN();
        long long34 = variance26.getN();
        double double35 = variance26.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance21);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 2L + "'", long32 == 2L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 2L + "'", long33 == 2L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 2L + "'", long34 == 2L);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance47);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = variance55.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance61.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = variance61.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        variance66.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance74, variance77);
        double[] doubleArray81 = new double[] { (-1), 100.0f };
        variance77.incrementAll(doubleArray81);
        double double83 = variance66.evaluate(doubleArray81);
        variance61.incrementAll(doubleArray81);
        variance59.setData(doubleArray81);
        double double87 = variance55.evaluate(doubleArray81, (double) (short) 10);
        variance48.incrementAll(doubleArray81);
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = variance48.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance48);
        org.apache.commons.math.stat.descriptive.moment.Variance variance92 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean93 = variance92.isBiasCorrected();
        double[] doubleArray95 = new double[] { 100 };
        variance92.incrementAll(doubleArray95);
        variance48.setData(doubleArray95);
        double[] doubleArray98 = variance48.getData();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertNotNull(variance47);
        org.junit.Assert.assertNotNull(variance57);
        org.junit.Assert.assertNotNull(variance64);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertNotNull(variance89);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray98), "[100.0]");
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        double double11 = variance1.getResult();
        double double12 = variance1.getResult();
        boolean boolean13 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance36.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        double double58 = variance36.evaluate(doubleArray55);
        double double60 = variance17.evaluate(doubleArray55, (double) 100.0f);
        double double61 = variance15.evaluate(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance15.copy();
        double double63 = variance62.getResult();
        variance62.increment((double) 'a');
        boolean boolean66 = variance62.isBiasCorrected();
        double double67 = variance62.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = variance62.copy();
        double double69 = variance68.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance68);
        java.lang.Class<?> wildcardClass71 = variance68.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(variance68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance28.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        variance32.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance32);
        java.lang.Class<?> wildcardClass38 = variance37.getClass();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.increment((double) (byte) 10);
        variance1.increment((double) (short) 100);
        variance1.increment(5100.5d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        double[] doubleArray17 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        boolean boolean26 = variance20.equals((java.lang.Object) 10);
        variance20.increment((double) (short) 10);
        variance20.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        variance36.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        double[] doubleArray51 = new double[] { (-1), 100.0f };
        variance47.incrementAll(doubleArray51);
        double double53 = variance36.evaluate(doubleArray51);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance55.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        variance59.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment69);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        double[] doubleArray74 = new double[] { (-1), 100.0f };
        variance70.incrementAll(doubleArray74);
        double double76 = variance59.evaluate(doubleArray74);
        double double77 = variance55.evaluate(doubleArray74);
        double double79 = variance36.evaluate(doubleArray74, (double) 100.0f);
        double double80 = variance34.evaluate(doubleArray74);
        variance32.setData(doubleArray74);
        variance20.setData(doubleArray74, (int) (byte) 1, 0);
        double[] doubleArray85 = variance20.getData();
        variance20.clear();
        double[] doubleArray87 = variance20.getData();
        boolean boolean88 = variance18.equals((java.lang.Object) doubleArray87);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(doubleArray17);
        org.junit.Assert.assertNotNull(variance18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        variance59.incrementAll(doubleArray79);
        variance57.setData(doubleArray79);
        double double85 = variance53.evaluate(doubleArray79, (double) (short) 10);
        variance46.incrementAll(doubleArray79);
        variance46.clear();
        // The following exception was thrown during execution in test generation
        try {
            double double88 = variance46.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) (-1L));
        variance1.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance34.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        double double56 = variance34.evaluate(doubleArray53);
        double double58 = variance15.evaluate(doubleArray53, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = variance15.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance59);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        double[] doubleArray69 = new double[] { (-1), 100.0f };
        variance65.incrementAll(doubleArray69);
        double double71 = variance60.evaluate(doubleArray69);
        variance7.setData(doubleArray69);
        double double73 = variance1.evaluate(doubleArray69);
        double[] doubleArray74 = variance1.getData();
        variance1.clear();
        variance1.setBiasCorrected(false);
        long long78 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertNotNull(variance59);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray74);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        double double51 = variance5.evaluate(doubleArray45);
        variance3.setData(doubleArray45);
        double double54 = variance1.evaluate(doubleArray45, (double) ' ');
        double double55 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = variance1.copy();
        double double59 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(variance57);
        org.junit.Assert.assertNotNull(variance58);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        double[] doubleArray45 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        double double47 = variance46.getResult();
        // The following exception was thrown during execution in test generation
        try {
            double double48 = variance46.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean13 = variance12.isBiasCorrected();
        double[] doubleArray15 = new double[] { 100 };
        variance12.incrementAll(doubleArray15);
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray15, (int) ' ', (int) '4');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0]");
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        variance26.setData(doubleArray37);
        variance7.incrementAll(doubleArray37);
        variance7.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double61 = variance44.evaluate(doubleArray59);
        java.lang.Object obj62 = null;
        boolean boolean63 = variance44.equals(obj62);
        variance44.setBiasCorrected(true);
        double[] doubleArray72 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double74 = variance44.evaluate(doubleArray72, 100.0d);
        double double75 = variance7.evaluate(doubleArray72);
        double double77 = variance1.evaluate(doubleArray72, (double) 10L);
        variance1.increment((double) (byte) 0);
        double[] doubleArray80 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1617.066666666667d + "'", double74 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1617.0666666666664d + "'", double75 == 1617.0666666666664d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1347.5555555555554d + "'", double77 == 1347.5555555555554d);
        org.junit.Assert.assertNull(doubleArray80);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance6.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        variance6.clear();
        long long11 = variance6.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance6);
        java.lang.Class<?> wildcardClass13 = variance4.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        double double11 = variance1.getResult();
        double double12 = variance1.getResult();
        double[] doubleArray13 = variance1.getData();
        double[] doubleArray14 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double15 = variance1.evaluate(doubleArray14);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNull(doubleArray13);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        variance1.increment((double) 0L);
        double[] doubleArray10 = variance1.getData();
        double double11 = variance1.getResult();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.25d + "'", double11 == 0.25d);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance45.increment(100.0d);
        double[] doubleArray49 = variance45.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNull(doubleArray49);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance1.copy();
        double double10 = variance1.getResult();
        variance1.setBiasCorrected(false);
        variance1.increment(2025.0d);
        long long15 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance17);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(variance16);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        double double10 = variance4.getResult();
        long long11 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = variance14.copy();
        long long16 = variance15.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        double double35 = variance18.evaluate(doubleArray33);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance37.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        variance41.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        double[] doubleArray56 = new double[] { (-1), 100.0f };
        variance52.incrementAll(doubleArray56);
        double double58 = variance41.evaluate(doubleArray56);
        double double59 = variance37.evaluate(doubleArray56);
        double double61 = variance18.evaluate(doubleArray56, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance18.copy();
        variance62.clear();
        double double64 = variance62.getResult();
        variance62.clear();
        variance62.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean70 = variance69.isBiasCorrected();
        double[] doubleArray72 = new double[] { 100 };
        variance69.incrementAll(doubleArray72);
        variance62.setData(doubleArray72);
        double double75 = variance15.evaluate(doubleArray72);
        // The following exception was thrown during execution in test generation
        try {
            double double79 = variance4.evaluate(doubleArray13, doubleArray72, (-1.0d), (int) (short) 1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2550.25d + "'", double10 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertNotNull(variance15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance0);
        double[] doubleArray3 = variance2.getData();
        variance2.clear();
        double[] doubleArray5 = variance2.getData();
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray5);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        long long6 = variance4.getN();
        variance4.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance4.copy();
        boolean boolean10 = variance9.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance1.copy();
        long long48 = variance1.getN();
        variance1.clear();
        double double50 = variance1.getResult();
        // The following exception was thrown during execution in test generation
        try {
            double double51 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(variance47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        boolean boolean49 = variance48.isBiasCorrected();
        variance48.setBiasCorrected(true);
        long long52 = variance48.getN();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.increment((double) (byte) 10);
        variance1.increment((double) (short) 100);
        variance1.increment(5100.5d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        double[] doubleArray17 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double double24 = variance19.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance49.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        variance53.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        double[] doubleArray68 = new double[] { (-1), 100.0f };
        variance64.incrementAll(doubleArray68);
        double double70 = variance53.evaluate(doubleArray68);
        double double71 = variance49.evaluate(doubleArray68);
        double double73 = variance30.evaluate(doubleArray68, (double) 100.0f);
        double double74 = variance28.evaluate(doubleArray68);
        variance26.setData(doubleArray68);
        double double77 = variance19.evaluate(doubleArray68, (double) (-1));
        double double79 = variance1.evaluate(doubleArray68, (double) 0L);
        variance1.clear();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(doubleArray17);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        long long5 = variance4.getN();
        variance4.increment((double) (short) 1);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long8 = variance7.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        double double32 = variance10.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance35.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        variance39.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        double[] doubleArray54 = new double[] { (-1), 100.0f };
        variance50.incrementAll(doubleArray54);
        double double56 = variance39.evaluate(doubleArray54);
        double double57 = variance35.evaluate(doubleArray54);
        double double58 = variance33.evaluate(doubleArray54);
        double double59 = variance7.evaluate(doubleArray54);
        variance1.incrementAll(doubleArray54);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        boolean boolean11 = variance4.isBiasCorrected();
        double double12 = variance4.getResult();
        variance4.increment(2550.250000000233d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2550.25d + "'", double12 == 2550.25d);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance9.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance9.copy();
        long long13 = variance9.getN();
        long long14 = variance9.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance9);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance9);
        long long17 = variance16.getN();
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance45.clear();
        double double47 = variance45.getResult();
        double[] doubleArray48 = variance45.getData();
        variance45.increment((double) ' ');
        boolean boolean51 = variance45.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        double[] doubleArray50 = new double[] { 1.0d, 10.0d, (byte) 100 };
        double double53 = variance45.evaluate(doubleArray50, 0, 0);
        variance45.clear();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance43.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance48.evaluate(doubleArray63);
        variance43.incrementAll(doubleArray63);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = variance43.copy();
        variance43.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance43);
        boolean boolean71 = variance4.isBiasCorrected();
        // The following exception was thrown during execution in test generation
        try {
            double double72 = variance4.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(variance67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance9.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance9.copy();
        boolean boolean13 = variance12.isBiasCorrected();
        double[] doubleArray14 = variance12.getData();
        boolean boolean15 = variance12.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance16);
        // The following exception was thrown during execution in test generation
        try {
            double double18 = variance16.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        variance41.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        double[] doubleArray56 = new double[] { (-1), 100.0f };
        variance52.incrementAll(doubleArray56);
        double double58 = variance41.evaluate(doubleArray56);
        java.lang.Object obj59 = null;
        boolean boolean60 = variance41.equals(obj59);
        double[] doubleArray61 = variance41.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance39);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(doubleArray61);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = variance26.copy();
        boolean boolean30 = variance29.isBiasCorrected();
        variance29.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = variance36.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance42.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        variance42.incrementAll(doubleArray62);
        variance40.setData(doubleArray62);
        double double68 = variance36.evaluate(doubleArray62, (double) (short) 10);
        variance29.setData(doubleArray62, 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance29);
        boolean boolean73 = variance24.equals((java.lang.Object) variance29);
        java.lang.Class<?> wildcardClass74 = variance24.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(variance38);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance1.isBiasCorrected();
        java.lang.Class<?> wildcardClass6 = variance1.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        boolean boolean11 = variance4.isBiasCorrected();
        long long12 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance14.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = variance14.copy();
        boolean boolean18 = variance17.isBiasCorrected();
        double[] doubleArray19 = variance17.getData();
        boolean boolean20 = variance17.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        long long31 = variance25.getN();
        boolean boolean32 = variance25.isBiasCorrected();
        java.lang.Class<?> wildcardClass33 = variance25.getClass();
        boolean boolean34 = variance17.equals((java.lang.Object) variance25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance17);
        boolean boolean36 = variance17.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance17.copy();
        variance37.increment((double) 100);
        double double40 = variance37.getResult();
        long long41 = variance37.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertNotNull(variance17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 2L + "'", long31 == 2L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2266.8888888888887d + "'", double40 == 2266.8888888888887d);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 3L + "'", long41 == 3L);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double double28 = variance23.getResult();
        double[] doubleArray34 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double36 = variance23.evaluate(doubleArray34, (double) (short) 1);
        variance1.setData(doubleArray34);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance39.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1030428.01d + "'", double36 == 1030428.01d);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        double double10 = variance1.getResult();
        boolean boolean11 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance13.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        double double35 = variance18.evaluate(doubleArray33);
        variance13.incrementAll(doubleArray33);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance13.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        double[] doubleArray46 = new double[] { (-1), 100.0f };
        variance42.incrementAll(doubleArray46);
        variance37.setData(doubleArray46);
        variance1.incrementAll(doubleArray46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance51.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = variance51.copy();
        long long55 = variance51.getN();
        long long56 = variance51.getN();
        double double57 = variance51.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        long long68 = variance62.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean71 = variance70.isBiasCorrected();
        double[] doubleArray73 = new double[] { 100 };
        variance70.incrementAll(doubleArray73);
        boolean boolean75 = variance62.equals((java.lang.Object) doubleArray73);
        long long76 = variance62.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance62);
        boolean boolean78 = variance1.equals((java.lang.Object) variance51);
        long long79 = variance51.getN();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1L + "'", long55 == 1L);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 2L + "'", long68 == 2L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 2L + "'", long76 == 2L);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 1L + "'", long79 == 1L);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = variance32.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        variance32.incrementAll(doubleArray52);
        variance1.setData(doubleArray52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        variance58.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        double[] doubleArray73 = new double[] { (-1), 100.0f };
        variance69.incrementAll(doubleArray73);
        double double75 = variance58.evaluate(doubleArray73);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance77.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment83 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment83);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance81, variance84);
        double[] doubleArray88 = new double[] { (-1), 100.0f };
        variance84.incrementAll(doubleArray88);
        variance77.setData(doubleArray88);
        variance58.incrementAll(doubleArray88);
        double double94 = variance1.evaluate(doubleArray88, (int) (byte) 0, 0);
        boolean boolean95 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(variance35);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double94));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        double[] doubleArray47 = variance46.getData();
        variance46.clear();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNull(doubleArray47);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        double double13 = variance4.getResult();
        double[] doubleArray14 = variance4.getData();
        java.lang.Class<?> wildcardClass15 = variance4.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2550.25d + "'", double13 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        double[] doubleArray5 = variance1.getData();
        // The following exception was thrown during execution in test generation
        try {
            double double6 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(doubleArray5);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.increment((double) 100.0f);
        boolean boolean7 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        long long26 = variance25.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = variance25.copy();
        long long28 = variance27.getN();
        double[] doubleArray29 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double33 = variance27.evaluate(doubleArray29, (double) 100.0f, (int) (short) 0, 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 3L + "'", long26 == 3L);
        org.junit.Assert.assertNotNull(variance27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 3L + "'", long28 == 3L);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        variance1.increment(0.0d);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        variance13.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        double[] doubleArray28 = new double[] { (-1), 100.0f };
        variance24.incrementAll(doubleArray28);
        double double30 = variance13.evaluate(doubleArray28);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        variance36.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        double[] doubleArray51 = new double[] { (-1), 100.0f };
        variance47.incrementAll(doubleArray51);
        double double53 = variance36.evaluate(doubleArray51);
        double double54 = variance32.evaluate(doubleArray51);
        double double56 = variance13.evaluate(doubleArray51, (double) 100.0f);
        double double58 = variance1.evaluate(doubleArray51, (double) (short) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance62.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = variance62.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment69);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        variance67.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment77);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance75, variance78);
        double[] doubleArray82 = new double[] { (-1), 100.0f };
        variance78.incrementAll(doubleArray82);
        double double84 = variance67.evaluate(doubleArray82);
        variance62.incrementAll(doubleArray82);
        variance60.setData(doubleArray82);
        variance1.incrementAll(doubleArray82);
        java.lang.Class<?> wildcardClass88 = doubleArray82.getClass();
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2550.25d + "'", double30 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertNotNull(variance65);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance46.evaluate(doubleArray55);
        variance46.increment(Double.NaN);
        boolean boolean60 = variance46.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        variance62.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        double double79 = variance62.evaluate(doubleArray77);
        java.lang.Object obj80 = null;
        boolean boolean81 = variance62.equals(obj80);
        variance62.setBiasCorrected(true);
        double[] doubleArray90 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double92 = variance62.evaluate(doubleArray90, 100.0d);
        double double93 = variance46.evaluate(doubleArray90);
        org.apache.commons.math.stat.descriptive.moment.Variance variance94 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance95 = variance46.copy();
        variance46.increment((double) (-1));
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1617.066666666667d + "'", double92 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1347.5555555555554d + "'", double93 == 1347.5555555555554d);
        org.junit.Assert.assertNotNull(variance95);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.increment((double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        double[] doubleArray15 = new double[] { (-1), 100.0f };
        variance11.incrementAll(doubleArray15);
        long long17 = variance11.getN();
        long long18 = variance11.getN();
        long long19 = variance11.getN();
        variance11.increment(1347.5555555555554d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance11);
        double double23 = variance1.getResult();
        double[] doubleArray24 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double27 = variance1.evaluate(doubleArray24, 0, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2025.0d + "'", double23 == 2025.0d);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        variance8.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        variance8.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        variance14.increment(0.0d);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double71 = variance14.evaluate(doubleArray64, (double) (short) 1);
        boolean boolean72 = variance8.equals((java.lang.Object) variance14);
        variance14.increment((double) 2L);
        variance14.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        long long77 = variance76.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = variance78.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance78);
        double[] doubleArray81 = variance80.getData();
        variance80.clear();
        boolean boolean83 = variance76.equals((java.lang.Object) variance80);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 0L + "'", long77 == 0L);
        org.junit.Assert.assertNotNull(variance79);
        org.junit.Assert.assertNull(doubleArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        double[] doubleArray21 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = variance1.copy();
        variance1.increment((double) '4');
        // The following exception was thrown during execution in test generation
        try {
            double double25 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNotNull(variance22);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        double double2 = variance1.getResult();
        long long3 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance4.copy();
        boolean boolean6 = variance5.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance8.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        variance13.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        double[] doubleArray28 = new double[] { (-1), 100.0f };
        variance24.incrementAll(doubleArray28);
        double double30 = variance13.evaluate(doubleArray28);
        variance8.incrementAll(doubleArray28);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        variance36.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = variance36.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance36);
        double[] doubleArray46 = variance36.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance68.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        variance72.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment82 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment82);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance80, variance83);
        double[] doubleArray87 = new double[] { (-1), 100.0f };
        variance83.incrementAll(doubleArray87);
        double double89 = variance72.evaluate(doubleArray87);
        double double90 = variance68.evaluate(doubleArray87);
        double double92 = variance49.evaluate(doubleArray87, (double) 100.0f);
        double double94 = variance36.evaluate(doubleArray87, 1219458.32421875d);
        // The following exception was thrown during execution in test generation
        try {
            variance5.setData(doubleArray87, (int) (short) 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2550.25d + "'", double30 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance44);
        org.junit.Assert.assertNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2550.25d + "'", double89 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2550.25d + "'", double90 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2550.25d + "'", double94 == 2550.25d);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        double double8 = variance1.getResult();
        double double9 = variance1.getResult();
        variance1.increment(2550.25d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance12.copy();
        double double14 = variance13.getResult();
        long long15 = variance13.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance13.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        double double35 = variance18.evaluate(doubleArray33);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance37.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        variance37.setData(doubleArray48);
        variance18.incrementAll(doubleArray48);
        variance13.incrementAll(doubleArray48);
        variance1.setData(doubleArray48, (int) (byte) 1, (int) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        double double57 = variance1.getResult();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1624668.890625d + "'", double57 == 1624668.890625d);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        variance21.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        variance33.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        double double50 = variance33.evaluate(doubleArray48);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance52.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        variance56.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        double double73 = variance56.evaluate(doubleArray71);
        double double74 = variance52.evaluate(doubleArray71);
        double double76 = variance33.evaluate(doubleArray71, (double) 100.0f);
        double[] doubleArray77 = variance33.getData();
        double[] doubleArray78 = variance33.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance80.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment86 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment86);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance84, variance87);
        double[] doubleArray91 = new double[] { (-1), 100.0f };
        variance87.incrementAll(doubleArray91);
        variance80.setData(doubleArray91);
        variance33.setData(doubleArray91);
        double double95 = variance21.evaluate(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray77);
        org.junit.Assert.assertNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 2550.25d + "'", double95 == 2550.25d);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance30.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        double double51 = variance34.evaluate(doubleArray49);
        double double52 = variance30.evaluate(doubleArray49);
        double double54 = variance11.evaluate(doubleArray49, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance11.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        double[] doubleArray65 = new double[] { (-1), 100.0f };
        variance61.incrementAll(doubleArray65);
        double double67 = variance56.evaluate(doubleArray65);
        variance3.setData(doubleArray65);
        variance1.incrementAll(doubleArray65, 0, (int) (short) 0);
        variance1.clear();
        // The following exception was thrown during execution in test generation
        try {
            double double73 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        double double8 = variance1.getResult();
        long long9 = variance1.getN();
        double[] doubleArray10 = null;
        variance1.setData(doubleArray10);
        double double12 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance14.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = variance14.copy();
        variance14.increment((double) 100.0f);
        boolean boolean20 = variance14.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = variance14.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance24.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = variance24.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        double double46 = variance29.evaluate(doubleArray44);
        variance24.incrementAll(doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double double50 = variance1.evaluate(doubleArray44, (int) (short) 100, (-1));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: length (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(variance17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(variance21);
        org.junit.Assert.assertNotNull(variance27);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        double[] doubleArray7 = variance6.getData();
        variance6.clear();
        // The following exception was thrown during execution in test generation
        try {
            double double9 = variance6.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNull(doubleArray7);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        boolean boolean15 = variance7.equals((java.lang.Object) variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance14);
        variance14.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        variance18.increment((double) (short) -1);
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance46.evaluate(doubleArray55);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        double[] doubleArray69 = new double[] { (-1), 100.0f };
        variance65.incrementAll(doubleArray69);
        long long71 = variance65.getN();
        boolean boolean72 = variance65.isBiasCorrected();
        long long73 = variance65.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance75.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = variance75.copy();
        boolean boolean79 = variance78.isBiasCorrected();
        double[] doubleArray80 = variance78.getData();
        boolean boolean81 = variance78.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment85 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment85);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance83, variance86);
        double[] doubleArray90 = new double[] { (-1), 100.0f };
        variance86.incrementAll(doubleArray90);
        long long92 = variance86.getN();
        boolean boolean93 = variance86.isBiasCorrected();
        java.lang.Class<?> wildcardClass94 = variance86.getClass();
        boolean boolean95 = variance78.equals((java.lang.Object) variance86);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance65, variance78);
        boolean boolean97 = variance46.equals((java.lang.Object) variance78);
        double[] doubleArray98 = variance46.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 2L + "'", long71 == 2L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 2L + "'", long73 == 2L);
        org.junit.Assert.assertNotNull(variance78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(doubleArray80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 2L + "'", long92 == 2L);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNull(doubleArray98);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        double double10 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        boolean boolean18 = variance12.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean21 = variance20.isBiasCorrected();
        double[] doubleArray23 = new double[] { 100 };
        variance20.incrementAll(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance49.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        variance53.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        double[] doubleArray68 = new double[] { (-1), 100.0f };
        variance64.incrementAll(doubleArray68);
        double double70 = variance53.evaluate(doubleArray68);
        double double71 = variance49.evaluate(doubleArray68);
        double double73 = variance30.evaluate(doubleArray68, (double) 100.0f);
        double double74 = variance28.evaluate(doubleArray68);
        variance26.setData(doubleArray68);
        double double77 = variance20.evaluate(doubleArray68, (double) (byte) -1);
        variance12.setData(doubleArray68, 1, (int) (short) 1);
        double double82 = variance1.evaluate(doubleArray68, (double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        double[] doubleArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double87 = variance83.evaluate(doubleArray84, (int) 'a', (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean3 = variance2.isBiasCorrected();
        double[] doubleArray5 = new double[] { 100 };
        variance2.incrementAll(doubleArray5);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        double double55 = variance12.evaluate(doubleArray50, (double) 100.0f);
        double double56 = variance10.evaluate(doubleArray50);
        variance8.setData(doubleArray50);
        double double59 = variance2.evaluate(doubleArray50, (double) (byte) -1);
        double[] doubleArray60 = variance2.getData();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance0, variance2);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray60);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        double double7 = variance1.getResult();
        long long8 = variance1.getN();
        variance1.clear();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        variance5.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = variance5.copy();
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertNotNull(variance7);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance2.clear();
        double[] doubleArray4 = variance2.getData();
        double[] doubleArray5 = variance2.getData();
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean13 = variance12.isBiasCorrected();
        double[] doubleArray15 = new double[] { 100 };
        variance12.incrementAll(doubleArray15);
        boolean boolean17 = variance4.equals((java.lang.Object) doubleArray15);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double[] doubleArray36 = new double[] { (-1), 100.0f };
        variance32.incrementAll(doubleArray36);
        double double38 = variance21.evaluate(doubleArray36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance40.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double61 = variance44.evaluate(doubleArray59);
        double double62 = variance40.evaluate(doubleArray59);
        double double64 = variance21.evaluate(doubleArray59, (double) 100.0f);
        double double65 = variance19.evaluate(doubleArray59);
        variance4.incrementAll(doubleArray59);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        long long68 = variance67.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance67.copy();
        variance69.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 4L + "'", long68 == 4L);
        org.junit.Assert.assertNotNull(variance69);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        double double2 = variance0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance4.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        double double26 = variance4.evaluate(doubleArray23);
        variance4.increment(0.0d);
        long long29 = variance4.getN();
        double double30 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance33);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance38.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = variance38.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        variance43.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        double[] doubleArray58 = new double[] { (-1), 100.0f };
        variance54.incrementAll(doubleArray58);
        double double60 = variance43.evaluate(doubleArray58);
        variance38.incrementAll(doubleArray58);
        variance36.setData(doubleArray58);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance36);
        variance63.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance67.increment((double) 10);
        variance67.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance67);
        double double72 = variance67.getResult();
        double[] doubleArray73 = variance67.getData();
        double double74 = variance67.evaluate();
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance76.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment82 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment82);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance80, variance83);
        double[] doubleArray87 = new double[] { (-1), 100.0f };
        variance83.incrementAll(doubleArray87);
        variance76.setData(doubleArray87);
        double double90 = variance67.evaluate(doubleArray87);
        variance4.incrementAll(doubleArray87, 0, (int) (short) 0);
        double double95 = variance0.evaluate(doubleArray87, (double) 100L);
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2550.25d + "'", double26 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(variance41);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 5100.5d + "'", double74 == 5100.5d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 5100.5d + "'", double90 == 5100.5d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 5100.5d + "'", double95 == 5100.5d);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment6);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance7);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        double[] doubleArray19 = new double[] { (-1), 100.0f };
        variance15.incrementAll(doubleArray19);
        double double21 = variance4.evaluate(doubleArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = variance4.equals(obj22);
        variance4.setBiasCorrected(true);
        double[] doubleArray32 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double34 = variance4.evaluate(doubleArray32, 100.0d);
        variance4.setBiasCorrected(true);
        long long37 = variance4.getN();
        variance4.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        long long51 = variance45.getN();
        boolean boolean52 = variance45.isBiasCorrected();
        double double53 = variance45.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = variance45.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        variance56.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        double double73 = variance56.evaluate(doubleArray71);
        java.lang.Object obj74 = null;
        boolean boolean75 = variance56.equals(obj74);
        variance56.setBiasCorrected(true);
        double[] doubleArray84 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double86 = variance56.evaluate(doubleArray84, 100.0d);
        variance54.setData(doubleArray84, (int) (byte) 1, 0);
        boolean boolean90 = variance40.equals((java.lang.Object) doubleArray84);
        variance1.incrementAll(doubleArray84);
        boolean boolean92 = variance1.isBiasCorrected();
        double[] doubleArray94 = new double[] { 2200.222222222222d };
        variance1.incrementAll(doubleArray94);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2550.25d + "'", double21 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1617.066666666667d + "'", double34 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(variance40);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 2L + "'", long51 == 2L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertNotNull(variance54);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1617.066666666667d + "'", double86 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[2200.222222222222]");
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance5.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        variance9.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance36.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        double double58 = variance36.evaluate(doubleArray55);
        double double60 = variance17.evaluate(doubleArray55, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = variance17.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance61);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        double double73 = variance62.evaluate(doubleArray71);
        variance9.setData(doubleArray71);
        variance5.incrementAll(doubleArray71);
        variance1.setData(doubleArray71);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment80);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance78, variance81);
        variance78.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment88 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment88);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance86, variance89);
        double[] doubleArray93 = new double[] { (-1), 100.0f };
        variance89.incrementAll(doubleArray93);
        double double95 = variance78.evaluate(doubleArray93);
        // The following exception was thrown during execution in test generation
        try {
            double double98 = variance1.evaluate(doubleArray93, 100, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: length (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertNotNull(variance61);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 2550.25d + "'", double95 == 2550.25d);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.increment(2046.8888888888887d);
        double[] doubleArray4 = variance1.getData();
        long long5 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        double[] doubleArray14 = new double[] { (-1), 100.0f };
        variance10.incrementAll(doubleArray14);
        // The following exception was thrown during execution in test generation
        try {
            double double18 = variance1.evaluate(doubleArray14, (int) (short) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0]");
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance43.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance48.evaluate(doubleArray63);
        variance43.incrementAll(doubleArray63);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = variance43.copy();
        variance43.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance43);
        double[] doubleArray71 = variance43.getData();
        variance43.clear();
        double double73 = variance43.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(variance67);
        org.junit.Assert.assertNull(doubleArray71);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        variance14.increment(0.0d);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double71 = variance14.evaluate(doubleArray64, (double) (short) 1);
        double double72 = variance4.evaluate(doubleArray64);
        double[] doubleArray73 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = variance4.copy();
        // The following exception was thrown during execution in test generation
        try {
            double double75 = variance4.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertNotNull(variance74);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        double[] doubleArray12 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double14 = variance1.evaluate(doubleArray12, (double) (short) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        long long25 = variance19.getN();
        boolean boolean26 = variance19.isBiasCorrected();
        double double27 = variance19.getResult();
        boolean boolean28 = variance1.equals((java.lang.Object) variance19);
        double[] doubleArray29 = variance19.getData();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1030428.01d + "'", double14 == 1030428.01d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 2L + "'", long25 == 2L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2550.25d + "'", double27 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(doubleArray29);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        double double51 = variance5.evaluate(doubleArray45);
        // The following exception was thrown during execution in test generation
        try {
            variance1.setData(doubleArray45, (int) (byte) 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        boolean boolean11 = variance4.isBiasCorrected();
        double double12 = variance4.getResult();
        long long13 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance15.increment((double) (-1L));
        variance15.increment((double) 0.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        variance33.clear();
        boolean boolean40 = variance28.equals((java.lang.Object) variance33);
        variance28.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double61 = variance44.evaluate(doubleArray59);
        java.lang.Object obj62 = null;
        boolean boolean63 = variance44.equals(obj62);
        variance44.setBiasCorrected(true);
        double[] doubleArray72 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double74 = variance44.evaluate(doubleArray72, 100.0d);
        variance28.setData(doubleArray72, (int) (byte) 0, (int) (short) 0);
        double double80 = variance15.evaluate(doubleArray72, (int) (byte) 0, (int) (byte) 1);
        variance4.setData(doubleArray72);
        variance4.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2550.25d + "'", double12 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2L + "'", long13 == 2L);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1617.066666666667d + "'", double74 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        variance59.incrementAll(doubleArray79);
        variance57.setData(doubleArray79);
        double double85 = variance53.evaluate(doubleArray79, (double) (short) 10);
        variance46.incrementAll(doubleArray79);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance46.copy();
        variance46.increment((double) (short) 0);
        variance46.clear();
        boolean boolean91 = variance46.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertNotNull(variance87);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance29);
        variance29.clear();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance37);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        double[] doubleArray4 = new double[] { 100 };
        variance1.incrementAll(doubleArray4);
        double double6 = variance1.getResult();
        // The following exception was thrown during execution in test generation
        try {
            double double7 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance11.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance17.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = variance17.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        variance17.incrementAll(doubleArray37);
        variance15.setData(doubleArray37);
        double double43 = variance11.evaluate(doubleArray37, (double) (short) 10);
        variance4.setData(doubleArray37, 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double double48 = variance47.evaluate();
        java.lang.Class<?> wildcardClass49 = variance47.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(variance20);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance25.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance47.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        double double68 = variance51.evaluate(doubleArray66);
        double double69 = variance47.evaluate(doubleArray66);
        double double71 = variance28.evaluate(doubleArray66, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = variance28.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = variance28.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = variance28.copy();
        java.lang.Class<?> wildcardClass75 = variance74.getClass();
        boolean boolean76 = variance25.equals((java.lang.Object) variance74);
        variance74.increment(2025.0d);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertNotNull(variance72);
        org.junit.Assert.assertNotNull(variance73);
        org.junit.Assert.assertNotNull(variance74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        double double7 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        long long18 = variance12.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean21 = variance20.isBiasCorrected();
        double[] doubleArray23 = new double[] { 100 };
        variance20.incrementAll(doubleArray23);
        boolean boolean25 = variance12.equals((java.lang.Object) doubleArray23);
        long long26 = variance12.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance12);
        java.lang.Class<?> wildcardClass28 = variance1.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2L + "'", long26 == 2L);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = variance1.copy();
        java.lang.Class<?> wildcardClass33 = variance32.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertNotNull(variance32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.increment(2046.8888888888887d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        double[] doubleArray12 = new double[] { (-1), 100.0f };
        variance8.incrementAll(doubleArray12);
        long long14 = variance8.getN();
        long long15 = variance8.getN();
        boolean boolean16 = variance1.equals((java.lang.Object) long15);
        long long17 = variance1.getN();
        variance1.increment((double) 0.0f);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean23 = variance8.equals((java.lang.Object) variance22);
        double[] doubleArray24 = variance22.getData();
        double double25 = variance22.getResult();
        boolean boolean26 = variance22.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance49.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        variance53.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        double[] doubleArray68 = new double[] { (-1), 100.0f };
        variance64.incrementAll(doubleArray68);
        double double70 = variance53.evaluate(doubleArray68);
        double double71 = variance49.evaluate(doubleArray68);
        double double73 = variance30.evaluate(doubleArray68, (double) 100.0f);
        double double74 = variance28.evaluate(doubleArray68);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = variance28.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance75);
        boolean boolean77 = variance22.equals((java.lang.Object) variance76);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = variance76.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = variance76.copy();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertNotNull(variance75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(variance78);
        org.junit.Assert.assertNotNull(variance79);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        boolean boolean11 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance13.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        double double35 = variance18.evaluate(doubleArray33);
        variance13.incrementAll(doubleArray33);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance13.copy();
        variance13.increment((double) 2L);
        boolean boolean40 = variance13.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) (-1L));
        variance42.increment((double) (short) 100);
        boolean boolean47 = variance13.equals((java.lang.Object) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        double[] doubleArray13 = variance12.getData();
        variance12.setBiasCorrected(false);
        variance12.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = variance18.copy();
        variance18.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNotNull(variance19);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double double28 = variance23.getResult();
        double[] doubleArray34 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double36 = variance23.evaluate(doubleArray34, (double) (short) 1);
        variance1.setData(doubleArray34);
        variance1.clear();
        long long39 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1030428.01d + "'", double36 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        long long6 = variance4.getN();
        variance4.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance4.copy();
        boolean boolean10 = variance4.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        variance1.increment(0.0d);
        long long26 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance47.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        double double68 = variance51.evaluate(doubleArray66);
        double double69 = variance47.evaluate(doubleArray66);
        double double71 = variance28.evaluate(doubleArray66, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = variance28.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance72);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment77);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance75, variance78);
        double[] doubleArray82 = new double[] { (-1), 100.0f };
        variance78.incrementAll(doubleArray82);
        double double84 = variance73.evaluate(doubleArray82);
        variance73.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance73);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertNotNull(variance72);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        long long47 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        variance48.increment((double) 100.0f);
        double[] doubleArray51 = variance48.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertNull(doubleArray51);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = variance32.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        variance32.incrementAll(doubleArray52);
        variance1.setData(doubleArray52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        variance58.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        double[] doubleArray73 = new double[] { (-1), 100.0f };
        variance69.incrementAll(doubleArray73);
        double double75 = variance58.evaluate(doubleArray73);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance77.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment83 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment83);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance81, variance84);
        double[] doubleArray88 = new double[] { (-1), 100.0f };
        variance84.incrementAll(doubleArray88);
        variance77.setData(doubleArray88);
        variance58.incrementAll(doubleArray88);
        double double94 = variance1.evaluate(doubleArray88, (int) (byte) 0, 0);
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(variance35);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double94));
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance9.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance15.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = variance15.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        variance20.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        double[] doubleArray35 = new double[] { (-1), 100.0f };
        variance31.incrementAll(doubleArray35);
        double double37 = variance20.evaluate(doubleArray35);
        variance15.incrementAll(doubleArray35);
        variance13.setData(doubleArray35);
        double double41 = variance9.evaluate(doubleArray35, (double) (short) 10);
        long long42 = variance9.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance9);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance45.copy();
        variance45.clear();
        variance45.increment((double) (short) 1);
        double double52 = variance45.getResult();
        variance45.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        boolean boolean61 = variance56.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean64 = variance63.isBiasCorrected();
        double[] doubleArray66 = new double[] { 100 };
        variance63.incrementAll(doubleArray66);
        double double68 = variance56.evaluate(doubleArray66);
        variance45.setData(doubleArray66);
        // The following exception was thrown during execution in test generation
        try {
            double double73 = variance9.evaluate(doubleArray66, (double) 'a', (int) ' ', (int) '4');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertNotNull(variance18);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2550.25d + "'", double37 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        boolean boolean49 = variance1.isBiasCorrected();
        long long50 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = variance14.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance24.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        double double46 = variance24.evaluate(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance49.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        variance53.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        double[] doubleArray68 = new double[] { (-1), 100.0f };
        variance64.incrementAll(doubleArray68);
        double double70 = variance53.evaluate(doubleArray68);
        double double71 = variance49.evaluate(doubleArray68);
        double double72 = variance47.evaluate(doubleArray68);
        double double73 = variance14.evaluate(doubleArray68);
        double double76 = variance1.evaluate(doubleArray68, 0, 0);
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance22);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        variance1.setBiasCorrected(true);
        double double34 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance57.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance61.evaluate(doubleArray76);
        double double79 = variance57.evaluate(doubleArray76);
        double double81 = variance38.evaluate(doubleArray76, (double) 100.0f);
        double double82 = variance36.evaluate(doubleArray76);
        double double84 = variance1.evaluate(doubleArray76, (double) (short) 1);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 5100.5d + "'", double84 == 5100.5d);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        variance9.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        double[] doubleArray24 = new double[] { (-1), 100.0f };
        variance20.incrementAll(doubleArray24);
        double double26 = variance9.evaluate(doubleArray24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance28.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        variance32.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        double[] doubleArray47 = new double[] { (-1), 100.0f };
        variance43.incrementAll(doubleArray47);
        double double49 = variance32.evaluate(doubleArray47);
        double double50 = variance28.evaluate(doubleArray47);
        double double52 = variance9.evaluate(doubleArray47, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance9.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance54.evaluate(doubleArray63);
        variance1.setData(doubleArray63);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        double double68 = variance67.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance67);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2550.25d + "'", double26 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertNotNull(variance53);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double double6 = variance5.getResult();
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance14.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = variance26.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance70);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        double[] doubleArray80 = new double[] { (-1), 100.0f };
        variance76.incrementAll(doubleArray80);
        double double82 = variance71.evaluate(doubleArray80);
        variance18.setData(doubleArray80);
        variance14.incrementAll(doubleArray80);
        variance10.setData(doubleArray80);
        variance5.incrementAll(doubleArray80);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance5.copy();
        boolean boolean88 = variance5.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertNotNull(variance70);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertNotNull(variance87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        double[] doubleArray11 = variance10.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = variance16.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double70 = variance24.evaluate(doubleArray64);
        variance22.setData(doubleArray64);
        double double73 = variance20.evaluate(doubleArray64, (double) ' ');
        variance16.setData(doubleArray64);
        variance10.incrementAll(doubleArray64);
        double double77 = variance1.evaluate(doubleArray64, (double) (-1.0f));
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        boolean boolean79 = variance78.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = variance80.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance80);
        double[] doubleArray83 = variance82.getData();
        variance82.clear();
        double double85 = variance82.getResult();
        variance82.clear();
        boolean boolean87 = variance78.equals((java.lang.Object) variance82);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNotNull(variance18);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(variance81);
        org.junit.Assert.assertNull(doubleArray83);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        double[] doubleArray6 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) (-1L));
        variance8.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        variance45.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        double[] doubleArray60 = new double[] { (-1), 100.0f };
        variance56.incrementAll(doubleArray60);
        double double62 = variance45.evaluate(doubleArray60);
        double double63 = variance41.evaluate(doubleArray60);
        double double65 = variance22.evaluate(doubleArray60, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = variance22.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance67.evaluate(doubleArray76);
        variance14.setData(doubleArray76);
        double double80 = variance8.evaluate(doubleArray76);
        variance4.setData(doubleArray76);
        boolean boolean83 = variance4.equals((java.lang.Object) (byte) 100);
        variance4.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        variance86.setBiasCorrected(true);
        double[] doubleArray89 = variance86.getData();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(variance66);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-1.0, 100.0]");
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        variance21.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = variance1.copy();
        boolean boolean32 = variance31.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = variance31.copy();
        long long34 = variance31.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance31);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(variance31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(variance33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.clear();
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        variance16.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        variance28.clear();
        boolean boolean35 = variance23.equals((java.lang.Object) variance28);
        variance28.increment((double) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        variance41.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        double[] doubleArray56 = new double[] { (-1), 100.0f };
        variance52.incrementAll(doubleArray56);
        double double58 = variance41.evaluate(doubleArray56);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance60.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        double double82 = variance60.evaluate(doubleArray79);
        double double84 = variance41.evaluate(doubleArray79, (double) 100.0f);
        double double85 = variance39.evaluate(doubleArray79);
        variance28.incrementAll(doubleArray79);
        double double87 = variance13.evaluate(doubleArray79);
        java.lang.Class<?> wildcardClass88 = variance13.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        variance8.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        variance8.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        variance14.increment(0.0d);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double71 = variance14.evaluate(doubleArray64, (double) (short) 1);
        boolean boolean72 = variance8.equals((java.lang.Object) variance14);
        variance14.increment(1617.0666666666664d);
        double[] doubleArray75 = variance14.getData();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(doubleArray75);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        double double2 = variance0.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        java.lang.Object obj23 = null;
        boolean boolean24 = variance5.equals(obj23);
        double[] doubleArray25 = variance5.getData();
        variance5.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance33);
        boolean boolean36 = variance28.equals((java.lang.Object) variance35);
        boolean boolean38 = variance35.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        double double59 = variance42.evaluate(doubleArray57);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance61.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment67);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance65, variance68);
        variance65.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        double[] doubleArray80 = new double[] { (-1), 100.0f };
        variance76.incrementAll(doubleArray80);
        double double82 = variance65.evaluate(doubleArray80);
        double double83 = variance61.evaluate(doubleArray80);
        double double85 = variance42.evaluate(doubleArray80, (double) 100.0f);
        double double86 = variance40.evaluate(doubleArray80);
        double double87 = variance35.evaluate(doubleArray80);
        variance5.setData(doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double double91 = variance3.evaluate(doubleArray80, (-1), 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: start position (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(doubleArray25);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        boolean boolean31 = variance25.equals((java.lang.Object) 10);
        variance25.increment((double) (short) 10);
        variance25.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance38.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = variance38.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        variance43.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        double[] doubleArray58 = new double[] { (-1), 100.0f };
        variance54.incrementAll(doubleArray58);
        double double60 = variance43.evaluate(doubleArray58);
        variance38.incrementAll(doubleArray58);
        variance36.setData(doubleArray58);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance36);
        variance63.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance67.increment((double) 10);
        variance67.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance67);
        double double72 = variance67.getResult();
        double[] doubleArray73 = variance67.getData();
        double double75 = variance25.evaluate(doubleArray73, 1347.5555555555554d);
        variance1.setData(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(variance22);
        org.junit.Assert.assertNotNull(variance23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(variance41);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.250000000233d + "'", double75 == 2550.250000000233d);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance11);
        boolean boolean42 = variance4.isBiasCorrected();
        variance4.setBiasCorrected(true);
        variance4.increment(1617.066666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        double[] doubleArray15 = new double[] { (-1), 100.0f };
        variance11.incrementAll(doubleArray15);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = variance11.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        variance21.increment(0.0d);
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        variance33.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        double double50 = variance33.evaluate(doubleArray48);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance52.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        variance56.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        double double73 = variance56.evaluate(doubleArray71);
        double double74 = variance52.evaluate(doubleArray71);
        double double76 = variance33.evaluate(doubleArray71, (double) 100.0f);
        double double78 = variance21.evaluate(doubleArray71, (double) (short) 1);
        double double79 = variance11.evaluate(doubleArray71);
        double double80 = variance6.evaluate(doubleArray71);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment84 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment84);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance82, variance85);
        double[] doubleArray89 = new double[] { (-1), 100.0f };
        variance85.incrementAll(doubleArray89);
        variance85.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance93 = variance85.copy();
        boolean boolean94 = variance6.equals((java.lang.Object) variance93);
        java.lang.Class<?> wildcardClass95 = variance6.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance19);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        double[] doubleArray21 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        double double67 = variance24.evaluate(doubleArray62, (double) 100.0f);
        double double70 = variance22.evaluate(doubleArray62, 0, (int) (short) 1);
        double[] doubleArray71 = variance22.getData();
        variance22.clear();
        variance22.clear();
        // The following exception was thrown during execution in test generation
        try {
            double double74 = variance22.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNotNull(variance22);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNull(doubleArray71);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) (-1L));
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance7.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance7.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance10);
        double double12 = variance11.getResult();
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance16.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        variance32.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        double[] doubleArray47 = new double[] { (-1), 100.0f };
        variance43.incrementAll(doubleArray47);
        double double49 = variance32.evaluate(doubleArray47);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance51.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        variance55.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        double[] doubleArray70 = new double[] { (-1), 100.0f };
        variance66.incrementAll(doubleArray70);
        double double72 = variance55.evaluate(doubleArray70);
        double double73 = variance51.evaluate(doubleArray70);
        double double75 = variance32.evaluate(doubleArray70, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = variance32.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance76);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment81);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance79, variance82);
        double[] doubleArray86 = new double[] { (-1), 100.0f };
        variance82.incrementAll(doubleArray86);
        double double88 = variance77.evaluate(doubleArray86);
        variance24.setData(doubleArray86);
        variance20.incrementAll(doubleArray86);
        variance16.setData(doubleArray86);
        variance11.incrementAll(doubleArray86);
        double double95 = variance1.evaluate(doubleArray86, (int) (short) 1, 0);
        variance1.increment((double) 0);
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertNotNull(variance76);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double95));
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        double double8 = variance1.getResult();
        variance1.setBiasCorrected(false);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance19);
        boolean boolean22 = variance14.equals((java.lang.Object) variance21);
        boolean boolean24 = variance21.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance47.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        double double68 = variance51.evaluate(doubleArray66);
        double double69 = variance47.evaluate(doubleArray66);
        double double71 = variance28.evaluate(doubleArray66, (double) 100.0f);
        double double72 = variance26.evaluate(doubleArray66);
        double double73 = variance21.evaluate(doubleArray66);
        // The following exception was thrown during execution in test generation
        try {
            variance1.setData(doubleArray66, (int) (byte) 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        variance5.increment((-1.0d));
        long long8 = variance5.getN();
        // The following exception was thrown during execution in test generation
        try {
            double double9 = variance5.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance22.increment((double) (-1.0f));
        double double25 = variance22.getResult();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance47);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = variance55.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance61.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = variance61.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        variance66.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance74, variance77);
        double[] doubleArray81 = new double[] { (-1), 100.0f };
        variance77.incrementAll(doubleArray81);
        double double83 = variance66.evaluate(doubleArray81);
        variance61.incrementAll(doubleArray81);
        variance59.setData(doubleArray81);
        double double87 = variance55.evaluate(doubleArray81, (double) (short) 10);
        variance48.incrementAll(doubleArray81);
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = variance48.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance48);
        double[] doubleArray91 = variance1.getData();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertNotNull(variance47);
        org.junit.Assert.assertNotNull(variance57);
        org.junit.Assert.assertNotNull(variance64);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertNotNull(variance89);
        org.junit.Assert.assertNull(doubleArray91);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        long long2 = variance1.getN();
        long long3 = variance1.getN();
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        double double55 = variance12.evaluate(doubleArray50, (double) 100.0f);
        double double56 = variance10.evaluate(doubleArray50);
        variance8.setData(doubleArray50);
        double double59 = variance1.evaluate(doubleArray50, (double) (-1));
        variance1.increment(0.0d);
        variance1.increment((-1.0d));
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment67);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance65, variance68);
        variance65.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance65);
        variance65.clear();
        double double74 = variance65.getResult();
        variance65.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance65);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long80 = variance79.getN();
        boolean boolean81 = variance65.equals((java.lang.Object) long80);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 0L + "'", long80 == 0L);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        double[] doubleArray50 = new double[] { 1.0d, 10.0d, (byte) 100 };
        double double53 = variance45.evaluate(doubleArray50, 0, 0);
        boolean boolean54 = variance45.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        long long65 = variance59.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean68 = variance67.isBiasCorrected();
        double[] doubleArray70 = new double[] { 100 };
        variance67.incrementAll(doubleArray70);
        boolean boolean72 = variance59.equals((java.lang.Object) doubleArray70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance59);
        long long74 = variance59.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = variance59.copy();
        java.lang.Class<?> wildcardClass76 = variance59.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 2L + "'", long65 == 2L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertNotNull(variance75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        variance1.increment((double) 2L);
        boolean boolean28 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance30.increment((double) (-1L));
        variance30.increment((double) (short) 100);
        boolean boolean35 = variance1.equals((java.lang.Object) (short) 100);
        double[] doubleArray36 = variance1.getData();
        variance1.setBiasCorrected(true);
        long long39 = variance1.getN();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 4L + "'", long39 == 4L);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        long long47 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        variance48.clear();
        double[] doubleArray50 = variance48.getData();
        variance48.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance48.copy();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertNull(doubleArray50);
        org.junit.Assert.assertNotNull(variance53);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance0);
        boolean boolean3 = variance2.isBiasCorrected();
        variance2.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        variance6.clear();
        double double15 = variance6.getResult();
        boolean boolean16 = variance6.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance18.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = variance18.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        variance23.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        double[] doubleArray38 = new double[] { (-1), 100.0f };
        variance34.incrementAll(doubleArray38);
        double double40 = variance23.evaluate(doubleArray38);
        variance18.incrementAll(doubleArray38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = variance18.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        double[] doubleArray51 = new double[] { (-1), 100.0f };
        variance47.incrementAll(doubleArray51);
        variance42.setData(doubleArray51);
        variance6.incrementAll(doubleArray51);
        // The following exception was thrown during execution in test generation
        try {
            variance2.setData(doubleArray51, (int) (short) -1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(variance21);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2550.25d + "'", double40 == 2550.25d);
        org.junit.Assert.assertNotNull(variance42);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0]");
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        double double51 = variance5.evaluate(doubleArray45);
        variance3.setData(doubleArray45);
        double double54 = variance1.evaluate(doubleArray45, (double) ' ');
        double double55 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = variance1.copy();
        double double58 = variance1.getResult();
        java.lang.Class<?> wildcardClass59 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(variance57);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        long long6 = variance4.getN();
        variance4.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance4.copy();
        variance9.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(variance9);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean7 = variance6.isBiasCorrected();
        double[] doubleArray9 = new double[] { 100 };
        variance6.incrementAll(doubleArray9);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        variance16.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double[] doubleArray31 = new double[] { (-1), 100.0f };
        variance27.incrementAll(doubleArray31);
        double double33 = variance16.evaluate(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance35.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        variance39.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        double[] doubleArray54 = new double[] { (-1), 100.0f };
        variance50.incrementAll(doubleArray54);
        double double56 = variance39.evaluate(doubleArray54);
        double double57 = variance35.evaluate(doubleArray54);
        double double59 = variance16.evaluate(doubleArray54, (double) 100.0f);
        double double60 = variance14.evaluate(doubleArray54);
        variance12.setData(doubleArray54);
        double double63 = variance6.evaluate(doubleArray54, (double) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            variance4.setData(doubleArray54, (int) (byte) -1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2550.25d + "'", double33 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        variance25.increment((double) 4L);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        variance6.clear();
        double[] doubleArray8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        variance10.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        double[] doubleArray25 = new double[] { (-1), 100.0f };
        variance21.incrementAll(doubleArray25);
        double double27 = variance10.evaluate(doubleArray25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance29.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        variance33.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        double double50 = variance33.evaluate(doubleArray48);
        double double51 = variance29.evaluate(doubleArray48);
        double double53 = variance10.evaluate(doubleArray48, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance54);
        double[] doubleArray56 = variance55.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance58.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        variance62.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        double double79 = variance62.evaluate(doubleArray77);
        double double80 = variance58.evaluate(doubleArray77);
        variance55.incrementAll(doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            double double83 = variance6.evaluate(doubleArray8, doubleArray77, (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2550.25d + "'", double27 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertNotNull(variance54);
        org.junit.Assert.assertNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        long long6 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance11.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance18);
        double[] doubleArray21 = variance20.getData();
        double[] doubleArray22 = variance20.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        boolean boolean30 = variance24.equals((java.lang.Object) 10);
        variance24.increment((double) (short) 10);
        variance24.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        variance63.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        double[] doubleArray78 = new double[] { (-1), 100.0f };
        variance74.incrementAll(doubleArray78);
        double double80 = variance63.evaluate(doubleArray78);
        double double81 = variance59.evaluate(doubleArray78);
        double double83 = variance40.evaluate(doubleArray78, (double) 100.0f);
        double double84 = variance38.evaluate(doubleArray78);
        variance36.setData(doubleArray78);
        variance24.setData(doubleArray78, (int) (byte) 1, 0);
        double[] doubleArray89 = variance24.getData();
        variance20.incrementAll(doubleArray89);
        double double92 = variance11.evaluate(doubleArray89, (double) 10L);
        double double94 = variance4.evaluate(doubleArray89, 2550.25d);
        boolean boolean95 = variance4.isBiasCorrected();
        variance4.increment(1617.066666666667d);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double92));
        org.junit.Assert.assertTrue(Double.isNaN(double94));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance1.setBiasCorrected(false);
        variance1.increment(0.0d);
        variance1.increment((double) (byte) 0);
        variance1.clear();
        variance1.clear();
        boolean boolean54 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean15 = variance14.isBiasCorrected();
        double[] doubleArray17 = new double[] { 100 };
        variance14.incrementAll(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        double double67 = variance24.evaluate(doubleArray62, (double) 100.0f);
        double double68 = variance22.evaluate(doubleArray62);
        variance20.setData(doubleArray62);
        double double71 = variance14.evaluate(doubleArray62, (double) (byte) -1);
        double double73 = variance10.evaluate(doubleArray62, (double) 1.0f);
        double double74 = variance8.evaluate(doubleArray62);
        variance8.setBiasCorrected(false);
        double[] doubleArray83 = new double[] { 0.0f, 10L, (short) 100, (byte) 10, 0L, (byte) 100 };
        double double87 = variance8.evaluate(doubleArray83, (double) (short) 0, (int) (short) 1, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        double[] doubleArray89 = variance8.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance90 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[0.0, 10.0, 100.0, 10.0, 0.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertNull(doubleArray89);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        double[] doubleArray7 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        double[] doubleArray9 = variance8.getData();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.increment((double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        double[] doubleArray15 = new double[] { (-1), 100.0f };
        variance11.incrementAll(doubleArray15);
        long long17 = variance11.getN();
        long long18 = variance11.getN();
        long long19 = variance11.getN();
        variance11.increment(1347.5555555555554d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance11);
        double double23 = variance11.getResult();
        // The following exception was thrown during execution in test generation
        try {
            double double24 = variance11.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2025.0d + "'", double23 == 2025.0d);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double[] doubleArray8 = variance6.getData();
        java.lang.Object obj9 = null;
        boolean boolean10 = variance6.equals(obj9);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        double[] doubleArray28 = new double[] { (-1), 100.0f };
        variance24.incrementAll(doubleArray28);
        variance24.clear();
        boolean boolean31 = variance19.equals((java.lang.Object) variance24);
        variance24.increment((double) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance56.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        variance60.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        double[] doubleArray75 = new double[] { (-1), 100.0f };
        variance71.incrementAll(doubleArray75);
        double double77 = variance60.evaluate(doubleArray75);
        double double78 = variance56.evaluate(doubleArray75);
        double double80 = variance37.evaluate(doubleArray75, (double) 100.0f);
        double double81 = variance35.evaluate(doubleArray75);
        variance24.incrementAll(doubleArray75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance24);
        variance24.increment((double) '4');
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = variance24.copy();
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertNotNull(variance86);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        // The following exception was thrown during execution in test generation
        try {
            double double49 = variance46.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        double double2 = variance1.getResult();
        long long3 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance25.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double[] doubleArray36 = new double[] { (-1), 100.0f };
        variance32.incrementAll(doubleArray36);
        variance25.setData(doubleArray36);
        variance6.incrementAll(doubleArray36);
        variance1.incrementAll(doubleArray36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = variance1.copy();
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance41);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        double double36 = variance4.evaluate(doubleArray30, (double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance4.copy();
        variance37.increment(1998.0d);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertNotNull(variance37);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean23 = variance8.equals((java.lang.Object) variance22);
        double[] doubleArray24 = variance22.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        double[] doubleArray42 = new double[] { (-1), 100.0f };
        variance38.incrementAll(doubleArray42);
        variance38.clear();
        boolean boolean45 = variance33.equals((java.lang.Object) variance38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean48 = variance33.equals((java.lang.Object) variance47);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        long long59 = variance53.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean62 = variance61.isBiasCorrected();
        double[] doubleArray64 = new double[] { 100 };
        variance61.incrementAll(doubleArray64);
        boolean boolean66 = variance53.equals((java.lang.Object) doubleArray64);
        variance47.incrementAll(doubleArray64);
        double double69 = variance22.evaluate(doubleArray64, (double) (short) 0);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 2L + "'", long59 == 2L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = variance1.copy();
        variance33.increment((double) 100L);
        variance33.clear();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertNotNull(variance32);
        org.junit.Assert.assertNotNull(variance33);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean23 = variance8.equals((java.lang.Object) variance22);
        double[] doubleArray24 = variance22.getData();
        variance22.clear();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(doubleArray24);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        double[] doubleArray45 = variance1.getData();
        double[] doubleArray46 = variance1.getData();
        double double47 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        long long49 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = variance1.copy();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray45);
        org.junit.Assert.assertNull(doubleArray46);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(variance50);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        variance59.incrementAll(doubleArray79);
        variance57.setData(doubleArray79);
        double double85 = variance53.evaluate(doubleArray79, (double) (short) 10);
        variance46.incrementAll(doubleArray79);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance46.copy();
        variance46.setBiasCorrected(true);
        variance46.setBiasCorrected(false);
        variance46.increment(2046.8888888888887d);
        boolean boolean94 = variance46.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertNotNull(variance87);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = variance49.copy();
        java.lang.Class<?> wildcardClass51 = variance49.getClass();
        boolean boolean52 = variance46.equals((java.lang.Object) wildcardClass51);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        variance54.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        variance58.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance58);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = variance58.copy();
        double double67 = variance58.getResult();
        variance58.setBiasCorrected(false);
        variance58.increment(2025.0d);
        long long72 = variance58.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = variance58.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment77);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance75, variance78);
        double[] doubleArray82 = new double[] { (-1), 100.0f };
        variance78.incrementAll(doubleArray82);
        long long84 = variance78.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean87 = variance86.isBiasCorrected();
        double[] doubleArray89 = new double[] { 100 };
        variance86.incrementAll(doubleArray89);
        boolean boolean91 = variance78.equals((java.lang.Object) doubleArray89);
        double double92 = variance58.evaluate(doubleArray89);
        double double93 = variance54.evaluate(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(variance66);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1L + "'", long72 == 1L);
        org.junit.Assert.assertNotNull(variance73);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 2L + "'", long84 == 2L);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        variance1.clear();
        java.lang.Class<?> wildcardClass4 = variance1.getClass();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        long long13 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        variance16.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double[] doubleArray31 = new double[] { (-1), 100.0f };
        variance27.incrementAll(doubleArray31);
        double double33 = variance16.evaluate(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance35.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        variance39.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        double[] doubleArray54 = new double[] { (-1), 100.0f };
        variance50.incrementAll(doubleArray54);
        double double56 = variance39.evaluate(doubleArray54);
        double double57 = variance35.evaluate(doubleArray54);
        double double59 = variance16.evaluate(doubleArray54, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = variance16.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        double[] doubleArray70 = new double[] { (-1), 100.0f };
        variance66.incrementAll(doubleArray70);
        double double72 = variance61.evaluate(doubleArray70);
        variance61.increment(Double.NaN);
        double double75 = variance61.getResult();
        long long76 = variance61.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance61);
        variance14.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2L + "'", long13 == 2L);
        org.junit.Assert.assertNotNull(variance14);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2550.25d + "'", double33 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertNotNull(variance60);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1L + "'", long76 == 1L);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        double double51 = variance5.evaluate(doubleArray45);
        variance3.setData(doubleArray45);
        double double54 = variance1.evaluate(doubleArray45, (double) ' ');
        double double55 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment59);
        variance60.increment(10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance65.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = variance65.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        variance70.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment80);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance78, variance81);
        double[] doubleArray85 = new double[] { (-1), 100.0f };
        variance81.incrementAll(doubleArray85);
        double double87 = variance70.evaluate(doubleArray85);
        variance65.incrementAll(doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            variance57.incrementAll(doubleArray85, (int) (byte) 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(variance57);
        org.junit.Assert.assertNotNull(variance68);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        variance6.increment(0.0d);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        double double35 = variance18.evaluate(doubleArray33);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance37.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        variance41.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        double[] doubleArray56 = new double[] { (-1), 100.0f };
        variance52.incrementAll(doubleArray56);
        double double58 = variance41.evaluate(doubleArray56);
        double double59 = variance37.evaluate(doubleArray56);
        double double61 = variance18.evaluate(doubleArray56, (double) 100.0f);
        double double63 = variance6.evaluate(doubleArray56, (double) (short) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance67.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = variance67.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        variance72.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment82 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment82);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance80, variance83);
        double[] doubleArray87 = new double[] { (-1), 100.0f };
        variance83.incrementAll(doubleArray87);
        double double89 = variance72.evaluate(doubleArray87);
        variance67.incrementAll(doubleArray87);
        variance65.setData(doubleArray87);
        variance6.incrementAll(doubleArray87);
        double double93 = variance1.evaluate(doubleArray87);
        double[] doubleArray94 = variance1.getData();
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertNotNull(variance70);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2550.25d + "'", double89 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2550.25d + "'", double93 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray94);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        double double36 = variance4.evaluate(doubleArray30, (double) (short) 10);
        variance4.clear();
        variance4.increment((double) (short) 0);
        double double40 = variance4.getResult();
        variance4.increment(1030428.01d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = variance4.copy();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(variance43);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        boolean boolean13 = variance7.equals((java.lang.Object) 10);
        variance7.increment((double) (short) 10);
        variance7.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        variance23.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        double[] doubleArray38 = new double[] { (-1), 100.0f };
        variance34.incrementAll(doubleArray38);
        double double40 = variance23.evaluate(doubleArray38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        double[] doubleArray61 = new double[] { (-1), 100.0f };
        variance57.incrementAll(doubleArray61);
        double double63 = variance46.evaluate(doubleArray61);
        double double64 = variance42.evaluate(doubleArray61);
        double double66 = variance23.evaluate(doubleArray61, (double) 100.0f);
        double double67 = variance21.evaluate(doubleArray61);
        variance19.setData(doubleArray61);
        variance7.setData(doubleArray61, (int) (byte) 1, 0);
        double[] doubleArray72 = variance7.getData();
        double double73 = variance4.evaluate(doubleArray72);
        variance4.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = variance4.copy();
        double[] doubleArray77 = variance76.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance76);
        boolean boolean79 = variance78.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2550.25d + "'", double40 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertNotNull(variance76);
        org.junit.Assert.assertNull(doubleArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        variance1.increment(5100.5d);
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.setBiasCorrected(false);
        double double25 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance49.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        variance53.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        double[] doubleArray68 = new double[] { (-1), 100.0f };
        variance64.incrementAll(doubleArray68);
        double double70 = variance53.evaluate(doubleArray68);
        double double71 = variance49.evaluate(doubleArray68);
        double double73 = variance30.evaluate(doubleArray68, (double) 100.0f);
        double double74 = variance28.evaluate(doubleArray68);
        double double76 = variance1.evaluate(doubleArray68, (double) 0L);
        java.lang.Class<?> wildcardClass77 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance24.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        double double46 = variance24.evaluate(doubleArray43);
        double double48 = variance5.evaluate(doubleArray43, (double) 100.0f);
        double double49 = variance3.evaluate(doubleArray43);
        variance1.setData(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        variance52.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        double[] doubleArray67 = new double[] { (-1), 100.0f };
        variance63.incrementAll(doubleArray67);
        double double69 = variance52.evaluate(doubleArray67);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance71.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment77);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance75, variance78);
        variance75.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment85 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment85);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance83, variance86);
        double[] doubleArray90 = new double[] { (-1), 100.0f };
        variance86.incrementAll(doubleArray90);
        double double92 = variance75.evaluate(doubleArray90);
        double double93 = variance71.evaluate(doubleArray90);
        double double95 = variance52.evaluate(doubleArray90, (double) 100.0f);
        variance1.setData(doubleArray90);
        variance1.clear();
        long long98 = variance1.getN();
        boolean boolean99 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2550.25d + "'", double93 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 2550.25d + "'", double95 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long98 + "' != '" + 0L + "'", long98 == 0L);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        boolean boolean31 = variance25.equals((java.lang.Object) 10);
        variance25.increment((double) (short) 10);
        variance25.clear();
        double double35 = variance25.getResult();
        double double36 = variance25.getResult();
        boolean boolean37 = variance25.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance39.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = variance39.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double61 = variance44.evaluate(doubleArray59);
        variance39.incrementAll(doubleArray59);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = variance39.copy();
        long long64 = variance63.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance66.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance66.copy();
        variance66.increment((double) '#');
        double[] doubleArray77 = new double[] { '#', 0L, (byte) 1, (-1), (short) 1 };
        variance66.incrementAll(doubleArray77);
        variance63.incrementAll(doubleArray77);
        variance25.setData(doubleArray77, (int) (short) 1, (int) (short) 0);
        variance1.incrementAll(doubleArray77);
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = variance1.copy();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(variance22);
        org.junit.Assert.assertNotNull(variance23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(variance42);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertNotNull(variance63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 3L + "'", long64 == 3L);
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[35.0, 0.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(variance84);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        double double55 = variance33.evaluate(doubleArray52);
        double double57 = variance14.evaluate(doubleArray52, (double) 100.0f);
        double double58 = variance12.evaluate(doubleArray52);
        variance10.setData(doubleArray52);
        double double61 = variance8.evaluate(doubleArray52, (double) ' ');
        variance4.setData(doubleArray52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        java.lang.Object obj82 = null;
        boolean boolean83 = variance64.equals(obj82);
        variance64.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment89 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance90 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment89);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance87, variance90);
        org.apache.commons.math.stat.descriptive.moment.Variance variance92 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance90);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance92);
        boolean boolean94 = variance4.equals((java.lang.Object) variance92);
        double double95 = variance4.getResult();
        variance4.increment(1.0d);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double95));
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) (-1L));
        variance1.increment((double) 0.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance7);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        variance19.clear();
        boolean boolean26 = variance14.equals((java.lang.Object) variance19);
        variance14.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        java.lang.Object obj48 = null;
        boolean boolean49 = variance30.equals(obj48);
        variance30.setBiasCorrected(true);
        double[] doubleArray58 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double60 = variance30.evaluate(doubleArray58, 100.0d);
        variance14.setData(doubleArray58, (int) (byte) 0, (int) (short) 0);
        double double66 = variance1.evaluate(doubleArray58, (int) (byte) 0, (int) (byte) 1);
        boolean boolean67 = variance1.isBiasCorrected();
        java.lang.Class<?> wildcardClass68 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1617.066666666667d + "'", double60 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        boolean boolean16 = variance10.equals((java.lang.Object) 10);
        variance10.increment((double) (short) 10);
        variance10.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double[] doubleArray36 = new double[] { (-1), 100.0f };
        variance32.incrementAll(doubleArray36);
        double double38 = variance21.evaluate(doubleArray36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance21);
        variance21.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance21);
        variance42.increment((double) (-1.0f));
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance42);
        double[] doubleArray46 = variance42.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance48.evaluate(doubleArray63);
        java.lang.Object obj66 = null;
        boolean boolean67 = variance48.equals(obj66);
        double[] doubleArray68 = variance48.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double double75 = variance70.getResult();
        double[] doubleArray81 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double83 = variance70.evaluate(doubleArray81, (double) (short) 1);
        double double84 = variance48.evaluate(doubleArray81);
        double double85 = variance42.evaluate(doubleArray81);
        variance1.incrementAll(doubleArray81, 0, (int) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(doubleArray68);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1030428.01d + "'", double83 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1030428.01d + "'", double84 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1030428.01d + "'", double85 == 1030428.01d);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance45.copy();
        double double47 = variance45.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance49.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = variance49.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance52);
        double double54 = variance52.getResult();
        boolean boolean55 = variance45.equals((java.lang.Object) variance52);
        double[] doubleArray56 = variance52.getData();
        variance52.setBiasCorrected(true);
        double[] doubleArray59 = variance52.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(variance52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(doubleArray56);
        org.junit.Assert.assertNull(doubleArray59);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        long long13 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        variance16.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double[] doubleArray31 = new double[] { (-1), 100.0f };
        variance27.incrementAll(doubleArray31);
        double double33 = variance16.evaluate(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance35.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        variance39.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        double[] doubleArray54 = new double[] { (-1), 100.0f };
        variance50.incrementAll(doubleArray54);
        double double56 = variance39.evaluate(doubleArray54);
        double double57 = variance35.evaluate(doubleArray54);
        double double59 = variance16.evaluate(doubleArray54, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = variance16.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        double[] doubleArray70 = new double[] { (-1), 100.0f };
        variance66.incrementAll(doubleArray70);
        double double72 = variance61.evaluate(doubleArray70);
        variance61.increment(Double.NaN);
        double double75 = variance61.getResult();
        long long76 = variance61.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance61);
        boolean boolean78 = variance14.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2L + "'", long13 == 2L);
        org.junit.Assert.assertNotNull(variance14);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2550.25d + "'", double33 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertNotNull(variance60);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1L + "'", long76 == 1L);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        boolean boolean11 = variance4.isBiasCorrected();
        long long12 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance14.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = variance14.copy();
        boolean boolean18 = variance17.isBiasCorrected();
        double[] doubleArray19 = variance17.getData();
        boolean boolean20 = variance17.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        long long31 = variance25.getN();
        boolean boolean32 = variance25.isBiasCorrected();
        java.lang.Class<?> wildcardClass33 = variance25.getClass();
        boolean boolean34 = variance17.equals((java.lang.Object) variance25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance17);
        long long36 = variance4.getN();
        variance4.setBiasCorrected(true);
        double[] doubleArray39 = variance4.getData();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertNotNull(variance17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 2L + "'", long31 == 2L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 2L + "'", long36 == 2L);
        org.junit.Assert.assertNull(doubleArray39);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean23 = variance8.equals((java.lang.Object) variance22);
        double[] doubleArray24 = variance22.getData();
        double double25 = variance22.getResult();
        java.lang.Class<?> wildcardClass26 = variance22.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        double[] doubleArray13 = variance12.getData();
        variance12.setBiasCorrected(false);
        variance12.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        // The following exception was thrown during execution in test generation
        try {
            double double19 = variance12.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNull(doubleArray13);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        double double46 = variance29.evaluate(doubleArray44);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance48.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        variance52.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        double[] doubleArray67 = new double[] { (-1), 100.0f };
        variance63.incrementAll(doubleArray67);
        double double69 = variance52.evaluate(doubleArray67);
        double double70 = variance48.evaluate(doubleArray67);
        double double72 = variance29.evaluate(doubleArray67, (double) 100.0f);
        variance25.setData(doubleArray67);
        double double74 = variance8.evaluate(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        double[] doubleArray50 = new double[] { 1.0d, 10.0d, (byte) 100 };
        double double53 = variance45.evaluate(doubleArray50, 0, 0);
        boolean boolean54 = variance45.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        long long65 = variance59.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean68 = variance67.isBiasCorrected();
        double[] doubleArray70 = new double[] { 100 };
        variance67.incrementAll(doubleArray70);
        boolean boolean72 = variance59.equals((java.lang.Object) doubleArray70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance59);
        boolean boolean74 = variance45.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = variance45.copy();
        variance45.increment(2200.222222222222d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 2L + "'", long65 == 2L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(variance75);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance0);
        boolean boolean3 = variance2.isBiasCorrected();
        double[] doubleArray4 = variance2.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance6.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance6.copy();
        variance6.clear();
        variance6.increment((double) (short) 1);
        double double13 = variance6.getResult();
        double double14 = variance6.getResult();
        variance6.increment(2550.25d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = variance17.copy();
        double double19 = variance18.getResult();
        long long20 = variance18.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = variance18.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        variance23.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        double[] doubleArray38 = new double[] { (-1), 100.0f };
        variance34.incrementAll(doubleArray38);
        double double40 = variance23.evaluate(doubleArray38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        variance42.setData(doubleArray53);
        variance23.incrementAll(doubleArray53);
        variance18.incrementAll(doubleArray53);
        variance6.setData(doubleArray53, (int) (byte) 1, (int) (byte) 0);
        variance2.incrementAll(doubleArray53, (int) (byte) 1, (int) (short) 1);
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(variance18);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(variance21);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2550.25d + "'", double40 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        variance36.clear();
        boolean boolean43 = variance31.equals((java.lang.Object) variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance36);
        boolean boolean45 = variance1.isBiasCorrected();
        double[] doubleArray46 = variance1.getData();
        double[] doubleArray47 = variance1.getData();
        variance1.setBiasCorrected(true);
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(doubleArray46);
        org.junit.Assert.assertNull(doubleArray47);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance45.clear();
        double double47 = variance45.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        // The following exception was thrown during execution in test generation
        try {
            double double49 = variance48.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean23 = variance8.equals((java.lang.Object) variance22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        variance25.setBiasCorrected(false);
        variance25.increment(0.0d);
        variance25.setBiasCorrected(false);
        variance25.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.increment((double) 1.0f);
        boolean boolean42 = variance22.equals((java.lang.Object) 10L);
        long long43 = variance22.getN();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1L + "'", long43 == 1L);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        variance1.setBiasCorrected(true);
        long long34 = variance1.getN();
        variance1.setBiasCorrected(true);
        long long37 = variance1.getN();
        double[] doubleArray38 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        java.lang.Object obj58 = null;
        boolean boolean59 = variance40.equals(obj58);
        double[] doubleArray60 = variance40.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance62.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = variance62.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment69);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        variance67.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment77);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance75, variance78);
        double[] doubleArray82 = new double[] { (-1), 100.0f };
        variance78.incrementAll(doubleArray82);
        double double84 = variance67.evaluate(doubleArray82);
        variance62.incrementAll(doubleArray82);
        variance40.incrementAll(doubleArray82);
        double[] doubleArray87 = variance40.getData();
        variance40.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.Variance variance91 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long92 = variance91.getN();
        long long93 = variance91.getN();
        variance91.clear();
        variance91.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance91);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance40);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(doubleArray60);
        org.junit.Assert.assertNotNull(variance65);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray87);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 0L + "'", long92 == 0L);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 0L + "'", long93 == 0L);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance45.clear();
        double double47 = variance45.getResult();
        variance45.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance49.clear();
        long long51 = variance49.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance49);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance49);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        boolean boolean7 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance1.copy();
        variance10.increment((double) 'a');
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance10);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        variance8.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        double double11 = variance8.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance13.increment(2046.8888888888887d);
        double[] doubleArray16 = variance13.getData();
        long long17 = variance13.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        variance19.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        double[] doubleArray34 = new double[] { (-1), 100.0f };
        variance30.incrementAll(doubleArray34);
        double double36 = variance19.evaluate(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance38.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        double double59 = variance42.evaluate(doubleArray57);
        double double60 = variance38.evaluate(doubleArray57);
        double double62 = variance19.evaluate(doubleArray57, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = variance19.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance63);
        double[] doubleArray65 = variance64.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance67.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        variance71.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment81);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance79, variance82);
        double[] doubleArray86 = new double[] { (-1), 100.0f };
        variance82.incrementAll(doubleArray86);
        double double88 = variance71.evaluate(doubleArray86);
        double double89 = variance67.evaluate(doubleArray86);
        variance64.incrementAll(doubleArray86);
        variance13.incrementAll(doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            double double95 = variance8.evaluate(doubleArray86, (double) 3L, 10, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertNotNull(variance63);
        org.junit.Assert.assertNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2550.25d + "'", double89 == 2550.25d);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long11 = variance10.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        double double35 = variance13.evaluate(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance38.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        double double59 = variance42.evaluate(doubleArray57);
        double double60 = variance38.evaluate(doubleArray57);
        double double61 = variance36.evaluate(doubleArray57);
        double double62 = variance10.evaluate(doubleArray57);
        variance8.setData(doubleArray57);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = variance8.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance64);
        double[] doubleArray66 = variance64.getData();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertNotNull(variance64);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        variance1.increment((double) 2L);
        boolean boolean28 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance30.increment((double) (-1L));
        variance30.increment((double) (short) 100);
        boolean boolean35 = variance1.equals((java.lang.Object) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        double[] doubleArray37 = null;
        variance1.setData(doubleArray37);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        double double7 = variance4.getResult();
        variance4.increment((double) (-1.0f));
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double double6 = variance5.getResult();
        double double7 = variance5.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance5);
        java.lang.Class<?> wildcardClass9 = variance5.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = variance49.copy();
        java.lang.Class<?> wildcardClass51 = variance49.getClass();
        boolean boolean52 = variance46.equals((java.lang.Object) wildcardClass51);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        variance54.clear();
        double double56 = variance54.getResult();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        double[] doubleArray39 = variance29.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = variance29.copy();
        // The following exception was thrown during execution in test generation
        try {
            double double42 = variance41.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertNull(doubleArray39);
        org.junit.Assert.assertNotNull(variance41);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        double double7 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        variance12.setBiasCorrected(false);
        boolean boolean20 = variance12.isBiasCorrected();
        variance12.increment((double) (short) 10);
        double double23 = variance12.getResult();
        boolean boolean24 = variance1.equals((java.lang.Object) variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance25.copy();
        double double27 = variance26.getResult();
        long long28 = variance26.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = variance26.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = variance29.copy();
        boolean boolean31 = variance1.equals((java.lang.Object) variance30);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2046.8888888888887d + "'", double23 == 2046.8888888888887d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(variance29);
        org.junit.Assert.assertNotNull(variance30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance43.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance48.evaluate(doubleArray63);
        variance43.incrementAll(doubleArray63);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = variance43.copy();
        variance43.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance43);
        double[] doubleArray71 = variance43.getData();
        long long72 = variance43.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance43);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(variance67);
        org.junit.Assert.assertNull(doubleArray71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 2L + "'", long72 == 2L);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        double double11 = variance1.getResult();
        double double12 = variance1.getResult();
        boolean boolean13 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance36.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        double double58 = variance36.evaluate(doubleArray55);
        double double60 = variance17.evaluate(doubleArray55, (double) 100.0f);
        double double61 = variance15.evaluate(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance15.copy();
        double double63 = variance62.getResult();
        variance62.increment((double) 'a');
        boolean boolean66 = variance62.isBiasCorrected();
        double double67 = variance62.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = variance62.copy();
        double double69 = variance68.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance68);
        variance1.increment((double) (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(variance68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        variance1.increment(0.0d);
        long long26 = variance1.getN();
        double double27 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance30);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = variance36.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        double[] doubleArray61 = new double[] { (-1), 100.0f };
        variance57.incrementAll(doubleArray61);
        double double63 = variance46.evaluate(doubleArray61);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance65.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        variance69.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment79);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance77, variance80);
        double[] doubleArray84 = new double[] { (-1), 100.0f };
        variance80.incrementAll(doubleArray84);
        double double86 = variance69.evaluate(doubleArray84);
        double double87 = variance65.evaluate(doubleArray84);
        double double89 = variance46.evaluate(doubleArray84, (double) 100.0f);
        double double90 = variance44.evaluate(doubleArray84);
        variance42.setData(doubleArray84);
        double double93 = variance40.evaluate(doubleArray84, (double) ' ');
        variance36.setData(doubleArray84);
        double double96 = variance1.evaluate(doubleArray84, 2200.222222222222d);
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(variance38);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2550.25d + "'", double89 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2550.25d + "'", double90 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2550.25d + "'", double93 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 2550.2500000009313d + "'", double96 == 2550.2500000009313d);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        double double11 = variance1.getResult();
        double double12 = variance1.getResult();
        boolean boolean13 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance36.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        double double58 = variance36.evaluate(doubleArray55);
        double double60 = variance17.evaluate(doubleArray55, (double) 100.0f);
        double double61 = variance15.evaluate(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance15.copy();
        double double63 = variance62.getResult();
        variance62.increment((double) 'a');
        boolean boolean66 = variance62.isBiasCorrected();
        double double67 = variance62.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = variance62.copy();
        double double69 = variance68.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance68);
        double[] doubleArray71 = null;
        variance68.setData(doubleArray71);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(variance68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        double double7 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        long long18 = variance12.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean21 = variance20.isBiasCorrected();
        double[] doubleArray23 = new double[] { 100 };
        variance20.incrementAll(doubleArray23);
        boolean boolean25 = variance12.equals((java.lang.Object) doubleArray23);
        long long26 = variance12.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance29.increment((double) (-1L));
        double[] doubleArray32 = variance29.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        double double51 = variance34.evaluate(doubleArray49);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance53.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        variance57.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment67);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance65, variance68);
        double[] doubleArray72 = new double[] { (-1), 100.0f };
        variance68.incrementAll(doubleArray72);
        double double74 = variance57.evaluate(doubleArray72);
        double double75 = variance53.evaluate(doubleArray72);
        double double77 = variance34.evaluate(doubleArray72, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = variance34.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance78);
        variance79.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = variance82.copy();
        java.lang.Class<?> wildcardClass84 = variance82.getClass();
        boolean boolean85 = variance79.equals((java.lang.Object) wildcardClass84);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance79);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance29);
        long long88 = variance29.getN();
        long long89 = variance29.getN();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2L + "'", long26 == 2L);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertNotNull(variance78);
        org.junit.Assert.assertNotNull(variance83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 1L + "'", long88 == 1L);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 1L + "'", long89 == 1L);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double[] doubleArray8 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean15 = variance14.isBiasCorrected();
        double[] doubleArray17 = new double[] { 100 };
        variance14.incrementAll(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        double double67 = variance24.evaluate(doubleArray62, (double) 100.0f);
        double double68 = variance22.evaluate(doubleArray62);
        variance20.setData(doubleArray62);
        double double71 = variance14.evaluate(doubleArray62, (double) (byte) -1);
        double double73 = variance10.evaluate(doubleArray62, (double) 1.0f);
        boolean boolean74 = variance6.equals((java.lang.Object) variance10);
        long long75 = variance10.getN();
        double double76 = variance10.getResult();
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1L + "'", long75 == 1L);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.increment(2046.8888888888887d);
        double[] doubleArray4 = variance1.getData();
        long long5 = variance1.getN();
        variance1.clear();
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance2.clear();
        variance2.increment((double) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        boolean boolean13 = variance7.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance7.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance16.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean21 = variance20.isBiasCorrected();
        double[] doubleArray23 = new double[] { 100 };
        variance20.incrementAll(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance49.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        variance53.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        double[] doubleArray68 = new double[] { (-1), 100.0f };
        variance64.incrementAll(doubleArray68);
        double double70 = variance53.evaluate(doubleArray68);
        double double71 = variance49.evaluate(doubleArray68);
        double double73 = variance30.evaluate(doubleArray68, (double) 100.0f);
        double double74 = variance28.evaluate(doubleArray68);
        variance26.setData(doubleArray68);
        double double77 = variance20.evaluate(doubleArray68, (double) (byte) -1);
        double double79 = variance16.evaluate(doubleArray68, (double) 1.0f);
        double double80 = variance14.evaluate(doubleArray68);
        // The following exception was thrown during execution in test generation
        try {
            variance2.setData(doubleArray68, (int) 'a', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(variance14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance24.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        double double46 = variance24.evaluate(doubleArray43);
        double double48 = variance5.evaluate(doubleArray43, (double) 100.0f);
        double double49 = variance3.evaluate(doubleArray43);
        variance1.setData(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        variance52.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        double[] doubleArray67 = new double[] { (-1), 100.0f };
        variance63.incrementAll(doubleArray67);
        double double69 = variance52.evaluate(doubleArray67);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance71.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment77);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance75, variance78);
        variance75.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment85 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment85);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance83, variance86);
        double[] doubleArray90 = new double[] { (-1), 100.0f };
        variance86.incrementAll(doubleArray90);
        double double92 = variance75.evaluate(doubleArray90);
        double double93 = variance71.evaluate(doubleArray90);
        double double95 = variance52.evaluate(doubleArray90, (double) 100.0f);
        variance1.setData(doubleArray90);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance98 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2550.25d + "'", double93 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 2550.25d + "'", double95 == 2550.25d);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        long long9 = variance8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        variance23.clear();
        boolean boolean30 = variance18.equals((java.lang.Object) variance23);
        variance18.increment((double) 10L);
        long long33 = variance18.getN();
        double double34 = variance18.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        long long45 = variance39.getN();
        long long46 = variance39.getN();
        long long47 = variance39.getN();
        variance39.increment(1347.5555555555554d);
        long long50 = variance39.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double62 = variance39.evaluate(doubleArray59, (double) 1.0f);
        double double63 = variance18.evaluate(doubleArray59);
        // The following exception was thrown during execution in test generation
        try {
            variance8.setData(doubleArray59, 10, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 2L + "'", long45 == 2L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 2L + "'", long46 == 2L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 2L + "'", long47 == 2L);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 3L + "'", long50 == 3L);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        variance14.increment(0.0d);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double71 = variance14.evaluate(doubleArray64, (double) (short) 1);
        double double72 = variance4.evaluate(doubleArray64);
        double[] doubleArray73 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray75 = variance74.getData();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertNull(doubleArray75);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.clear();
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        double double55 = variance33.evaluate(doubleArray52);
        double double57 = variance14.evaluate(doubleArray52, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = variance14.copy();
        variance58.clear();
        double double60 = variance58.getResult();
        variance58.clear();
        variance58.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean66 = variance65.isBiasCorrected();
        double[] doubleArray68 = new double[] { 100 };
        variance65.incrementAll(doubleArray68);
        variance58.setData(doubleArray68);
        // The following exception was thrown during execution in test generation
        try {
            variance4.incrementAll(doubleArray68, 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: length (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertNotNull(variance58);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0]");
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        double double10 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance14.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = variance14.copy();
        long long18 = variance14.getN();
        long long19 = variance14.getN();
        double[] doubleArray20 = variance14.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance22);
        variance22.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = variance22.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        variance33.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        double double50 = variance33.evaluate(doubleArray48);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance52.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        variance56.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        double double73 = variance56.evaluate(doubleArray71);
        double double74 = variance52.evaluate(doubleArray71);
        double double76 = variance33.evaluate(doubleArray71, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = variance33.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance77);
        double[] doubleArray82 = new double[] { 1.0d, 10.0d, (byte) 100 };
        double double85 = variance77.evaluate(doubleArray82, 0, 0);
        double double87 = variance22.evaluate(doubleArray82, (double) 100.0f);
        double double88 = variance14.evaluate(doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            double double92 = variance12.evaluate(doubleArray82, (double) (byte) -1, (-1), (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: start position (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2550.25d + "'", double10 == 2550.25d);
        org.junit.Assert.assertNotNull(variance17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertNotNull(variance31);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertNotNull(variance77);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1998.0d + "'", double87 == 1998.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1998.0d + "'", double88 == 1998.0d);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double double34 = variance29.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        variance63.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        double[] doubleArray78 = new double[] { (-1), 100.0f };
        variance74.incrementAll(doubleArray78);
        double double80 = variance63.evaluate(doubleArray78);
        double double81 = variance59.evaluate(doubleArray78);
        double double83 = variance40.evaluate(doubleArray78, (double) 100.0f);
        double double84 = variance38.evaluate(doubleArray78);
        variance36.setData(doubleArray78);
        double double87 = variance29.evaluate(doubleArray78, (double) (-1));
        variance1.setData(doubleArray78);
        long long89 = variance1.getN();
        long long90 = variance1.getN();
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 0L + "'", long89 == 0L);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 0L + "'", long90 == 0L);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.increment(2046.8888888888887d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        double[] doubleArray12 = new double[] { (-1), 100.0f };
        variance8.incrementAll(doubleArray12);
        long long14 = variance8.getN();
        long long15 = variance8.getN();
        boolean boolean16 = variance1.equals((java.lang.Object) long15);
        long long17 = variance1.getN();
        boolean boolean18 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        variance8.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        variance8.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance14.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean19 = variance18.isBiasCorrected();
        double[] doubleArray21 = new double[] { 100 };
        variance18.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance47.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        double double68 = variance51.evaluate(doubleArray66);
        double double69 = variance47.evaluate(doubleArray66);
        double double71 = variance28.evaluate(doubleArray66, (double) 100.0f);
        double double72 = variance26.evaluate(doubleArray66);
        variance24.setData(doubleArray66);
        double double75 = variance18.evaluate(doubleArray66, (double) (byte) -1);
        double double77 = variance14.evaluate(doubleArray66, (double) 1.0f);
        double double78 = variance8.evaluate(doubleArray66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = variance8.copy();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertNotNull(variance79);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        double[] doubleArray6 = variance4.getData();
        boolean boolean7 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        variance4.setBiasCorrected(true);
        // The following exception was thrown during execution in test generation
        try {
            double double11 = variance4.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        boolean boolean49 = variance48.isBiasCorrected();
        // The following exception was thrown during execution in test generation
        try {
            double double50 = variance48.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        long long26 = variance25.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = variance25.copy();
        boolean boolean29 = variance25.equals((java.lang.Object) (short) 1);
        variance25.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 3L + "'", long26 == 3L);
        org.junit.Assert.assertNotNull(variance27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        variance29.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = variance33.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        variance33.incrementAll(doubleArray53);
        variance29.incrementAll(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        variance29.incrementAll(doubleArray66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance29.copy();
        double double70 = variance69.getResult();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(variance36);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 3400.3333333333335d + "'", double70 == 3400.3333333333335d);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        double[] doubleArray6 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) (-1L));
        variance8.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        variance45.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        double[] doubleArray60 = new double[] { (-1), 100.0f };
        variance56.incrementAll(doubleArray60);
        double double62 = variance45.evaluate(doubleArray60);
        double double63 = variance41.evaluate(doubleArray60);
        double double65 = variance22.evaluate(doubleArray60, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = variance22.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance67.evaluate(doubleArray76);
        variance14.setData(doubleArray76);
        double double80 = variance8.evaluate(doubleArray76);
        variance4.setData(doubleArray76);
        long long82 = variance4.getN();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(variance66);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 1L + "'", long82 == 1L);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance50.copy();
        boolean boolean54 = variance53.isBiasCorrected();
        variance53.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance60.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance66.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance66.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        variance71.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment81);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance79, variance82);
        double[] doubleArray86 = new double[] { (-1), 100.0f };
        variance82.incrementAll(doubleArray86);
        double double88 = variance71.evaluate(doubleArray86);
        variance66.incrementAll(doubleArray86);
        variance64.setData(doubleArray86);
        double double92 = variance60.evaluate(doubleArray86, (double) (short) 10);
        variance53.setData(doubleArray86, 1, 1);
        variance48.setData(doubleArray86);
        org.apache.commons.math.stat.descriptive.moment.Variance variance97 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance48);
        variance97.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertNotNull(variance53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        long long47 = variance1.getN();
        // The following exception was thrown during execution in test generation
        try {
            double double48 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance45.clear();
        double double47 = variance45.getResult();
        double[] doubleArray48 = null;
        variance45.setData(doubleArray48);
        variance45.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        double double10 = variance4.getResult();
        variance4.increment((double) (short) -1);
        double[] doubleArray13 = variance4.getData();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2550.25d + "'", double10 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray13);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        variance26.setData(doubleArray37);
        variance7.incrementAll(doubleArray37);
        variance7.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double61 = variance44.evaluate(doubleArray59);
        java.lang.Object obj62 = null;
        boolean boolean63 = variance44.equals(obj62);
        variance44.setBiasCorrected(true);
        double[] doubleArray72 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double74 = variance44.evaluate(doubleArray72, 100.0d);
        double double75 = variance7.evaluate(doubleArray72);
        double double77 = variance1.evaluate(doubleArray72, (double) 10L);
        variance1.increment((double) (byte) 0);
        boolean boolean80 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1617.066666666667d + "'", double74 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1617.0666666666664d + "'", double75 == 1617.0666666666664d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1347.5555555555554d + "'", double77 == 1347.5555555555554d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        boolean boolean47 = variance45.isBiasCorrected();
        variance45.increment(1030428.01d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        double double51 = variance50.getResult();
        variance50.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance50.copy();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(variance53);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        variance1.clear();
        long long11 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance1.copy();
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(variance12);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance14.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        double double35 = variance18.evaluate(doubleArray33);
        double double36 = variance14.evaluate(doubleArray33);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance39.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        variance43.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        double[] doubleArray58 = new double[] { (-1), 100.0f };
        variance54.incrementAll(doubleArray58);
        double double60 = variance43.evaluate(doubleArray58);
        double double61 = variance39.evaluate(doubleArray58);
        double double62 = variance37.evaluate(doubleArray58);
        double double63 = variance4.evaluate(doubleArray58);
        variance4.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        double[] doubleArray11 = variance10.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = variance16.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double70 = variance24.evaluate(doubleArray64);
        variance22.setData(doubleArray64);
        double double73 = variance20.evaluate(doubleArray64, (double) ' ');
        variance16.setData(doubleArray64);
        variance10.incrementAll(doubleArray64);
        double double77 = variance1.evaluate(doubleArray64, (double) (-1.0f));
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = variance79.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance79);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = variance1.copy();
        double[] doubleArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance82.incrementAll(doubleArray83);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNotNull(variance18);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertNotNull(variance80);
        org.junit.Assert.assertNotNull(variance82);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        double double10 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        boolean boolean18 = variance12.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean21 = variance20.isBiasCorrected();
        double[] doubleArray23 = new double[] { 100 };
        variance20.incrementAll(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance49.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        variance53.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        double[] doubleArray68 = new double[] { (-1), 100.0f };
        variance64.incrementAll(doubleArray68);
        double double70 = variance53.evaluate(doubleArray68);
        double double71 = variance49.evaluate(doubleArray68);
        double double73 = variance30.evaluate(doubleArray68, (double) 100.0f);
        double double74 = variance28.evaluate(doubleArray68);
        variance26.setData(doubleArray68);
        double double77 = variance20.evaluate(doubleArray68, (double) (byte) -1);
        variance12.setData(doubleArray68, 1, (int) (short) 1);
        double double82 = variance1.evaluate(doubleArray68, (double) ' ');
        boolean boolean83 = variance1.isBiasCorrected();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = variance1.copy();
        double[] doubleArray33 = variance1.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertNotNull(variance32);
        org.junit.Assert.assertNull(doubleArray33);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        variance1.increment((double) 2L);
        boolean boolean28 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance30.increment((double) (-1L));
        variance30.increment((double) (short) 100);
        boolean boolean35 = variance1.equals((java.lang.Object) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance36.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = variance42.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        variance50.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        double[] doubleArray65 = new double[] { (-1), 100.0f };
        variance61.incrementAll(doubleArray65);
        double double67 = variance50.evaluate(doubleArray65);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance69.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        variance73.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment83 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment83);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance81, variance84);
        double[] doubleArray88 = new double[] { (-1), 100.0f };
        variance84.incrementAll(doubleArray88);
        double double90 = variance73.evaluate(doubleArray88);
        double double91 = variance69.evaluate(doubleArray88);
        double double93 = variance50.evaluate(doubleArray88, (double) 100.0f);
        double double94 = variance48.evaluate(doubleArray88);
        variance46.setData(doubleArray88);
        variance44.incrementAll(doubleArray88);
        variance37.setData(doubleArray88);
        org.apache.commons.math.stat.descriptive.moment.Variance variance98 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertNotNull(variance44);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2550.25d + "'", double90 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2550.25d + "'", double91 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2550.25d + "'", double93 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2550.25d + "'", double94 == 2550.25d);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        double double8 = variance1.getResult();
        double double9 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        long long20 = variance14.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean23 = variance22.isBiasCorrected();
        double[] doubleArray25 = new double[] { 100 };
        variance22.incrementAll(doubleArray25);
        boolean boolean27 = variance14.equals((java.lang.Object) doubleArray25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        variance31.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        double[] doubleArray46 = new double[] { (-1), 100.0f };
        variance42.incrementAll(doubleArray46);
        double double48 = variance31.evaluate(doubleArray46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        variance54.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        double[] doubleArray69 = new double[] { (-1), 100.0f };
        variance65.incrementAll(doubleArray69);
        double double71 = variance54.evaluate(doubleArray69);
        double double72 = variance50.evaluate(doubleArray69);
        double double74 = variance31.evaluate(doubleArray69, (double) 100.0f);
        double double75 = variance29.evaluate(doubleArray69);
        variance14.incrementAll(doubleArray69);
        variance1.incrementAll(doubleArray69);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 2L + "'", long20 == 2L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        boolean boolean9 = variance1.equals((java.lang.Object) variance8);
        boolean boolean11 = variance8.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance13.copy();
        variance13.increment((double) '#');
        double[] doubleArray24 = new double[] { '#', 0L, (byte) 1, (-1), (short) 1 };
        variance13.incrementAll(doubleArray24);
        // The following exception was thrown during execution in test generation
        try {
            variance8.setData(doubleArray24, 0, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[35.0, 0.0, 1.0, -1.0, 1.0]");
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance8.copy();
        variance12.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        boolean boolean21 = variance15.equals((java.lang.Object) 10);
        variance15.increment((double) (short) 10);
        variance15.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        variance31.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        double[] doubleArray46 = new double[] { (-1), 100.0f };
        variance42.incrementAll(doubleArray46);
        double double48 = variance31.evaluate(doubleArray46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        variance54.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        double[] doubleArray69 = new double[] { (-1), 100.0f };
        variance65.incrementAll(doubleArray69);
        double double71 = variance54.evaluate(doubleArray69);
        double double72 = variance50.evaluate(doubleArray69);
        double double74 = variance31.evaluate(doubleArray69, (double) 100.0f);
        double double75 = variance29.evaluate(doubleArray69);
        variance27.setData(doubleArray69);
        variance15.setData(doubleArray69, (int) (byte) 1, 0);
        double[] doubleArray80 = variance15.getData();
        variance12.incrementAll(doubleArray80);
        variance1.incrementAll(doubleArray80);
        long long83 = variance1.getN();
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[]");
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 0L + "'", long83 == 0L);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double[] doubleArray31 = new double[] { (-1), 100.0f };
        variance27.incrementAll(doubleArray31);
        variance20.setData(doubleArray31);
        variance1.incrementAll(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0]");
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance1.copy();
        long long10 = variance1.getN();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        variance21.clear();
        variance21.clear();
        boolean boolean24 = variance21.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance25);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance48.evaluate(doubleArray63);
        boolean boolean66 = variance48.isBiasCorrected();
        variance48.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance48);
        double double70 = variance46.getResult();
        java.lang.Class<?> wildcardClass71 = variance46.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment6);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance7);
        double[] doubleArray11 = new double[] { (-1), 100.0f };
        variance7.incrementAll(doubleArray11);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = variance7.copy();
        double double16 = variance7.getResult();
        double[] doubleArray17 = variance7.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance0, variance7);
        boolean boolean19 = variance7.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2550.25d + "'", double16 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment1);
        variance2.setBiasCorrected(false);
        variance2.clear();
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        double double10 = variance4.getResult();
        variance4.increment((double) 0L);
        variance4.increment(1347.5555555555554d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        variance16.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double[] doubleArray31 = new double[] { (-1), 100.0f };
        variance27.incrementAll(doubleArray31);
        double double33 = variance16.evaluate(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance16);
        variance16.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance16);
        variance37.increment((double) (-1.0f));
        variance37.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        double double59 = variance42.evaluate(doubleArray57);
        boolean boolean60 = variance42.isBiasCorrected();
        variance42.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double double69 = variance64.getResult();
        double[] doubleArray75 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double77 = variance64.evaluate(doubleArray75, (double) (short) 1);
        variance42.setData(doubleArray75);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = variance42.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = variance79.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance79);
        double[] doubleArray82 = variance79.getData();
        variance37.incrementAll(doubleArray82, (int) (short) 1, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double88 = variance4.evaluate(doubleArray82, (-1), (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: start position (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2550.25d + "'", double10 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2550.25d + "'", double33 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1030428.01d + "'", double77 == 1030428.01d);
        org.junit.Assert.assertNotNull(variance79);
        org.junit.Assert.assertNotNull(variance80);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = variance49.copy();
        java.lang.Class<?> wildcardClass51 = variance49.getClass();
        boolean boolean52 = variance46.equals((java.lang.Object) wildcardClass51);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        long long65 = variance59.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean68 = variance67.isBiasCorrected();
        double[] doubleArray70 = new double[] { 100 };
        variance67.incrementAll(doubleArray70);
        boolean boolean72 = variance59.equals((java.lang.Object) doubleArray70);
        // The following exception was thrown during execution in test generation
        try {
            double double76 = variance46.evaluate(doubleArray70, (double) '4', 100, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 2L + "'", long65 == 2L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.clear();
        variance4.clear();
        double[] doubleArray12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        boolean boolean20 = variance14.equals((java.lang.Object) 10);
        variance14.increment((double) (short) 10);
        variance14.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance27.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = variance27.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        variance32.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        double[] doubleArray47 = new double[] { (-1), 100.0f };
        variance43.incrementAll(doubleArray47);
        double double49 = variance32.evaluate(doubleArray47);
        variance27.incrementAll(doubleArray47);
        variance25.setData(doubleArray47);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance25);
        variance52.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance56.increment((double) 10);
        variance56.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance56);
        double double61 = variance56.getResult();
        double[] doubleArray62 = variance56.getData();
        double double64 = variance14.evaluate(doubleArray62, 1347.5555555555554d);
        // The following exception was thrown during execution in test generation
        try {
            double double66 = variance4.evaluate(doubleArray12, doubleArray62, 1347.5555555555554d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(variance30);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.250000000233d + "'", double64 == 2550.250000000233d);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long11 = variance10.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        double double35 = variance13.evaluate(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance38.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        double double59 = variance42.evaluate(doubleArray57);
        double double60 = variance38.evaluate(doubleArray57);
        double double61 = variance36.evaluate(doubleArray57);
        double double62 = variance10.evaluate(doubleArray57);
        variance8.setData(doubleArray57);
        double[] doubleArray64 = variance8.getData();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        boolean boolean13 = variance7.equals((java.lang.Object) 10);
        variance7.increment((double) (short) 10);
        variance7.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        variance23.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        double[] doubleArray38 = new double[] { (-1), 100.0f };
        variance34.incrementAll(doubleArray38);
        double double40 = variance23.evaluate(doubleArray38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        double[] doubleArray61 = new double[] { (-1), 100.0f };
        variance57.incrementAll(doubleArray61);
        double double63 = variance46.evaluate(doubleArray61);
        double double64 = variance42.evaluate(doubleArray61);
        double double66 = variance23.evaluate(doubleArray61, (double) 100.0f);
        double double67 = variance21.evaluate(doubleArray61);
        variance19.setData(doubleArray61);
        variance7.setData(doubleArray61, (int) (byte) 1, 0);
        double[] doubleArray72 = variance7.getData();
        double double73 = variance4.evaluate(doubleArray72);
        variance4.setBiasCorrected(true);
        boolean boolean76 = variance4.isBiasCorrected();
        variance4.clear();
        long long78 = variance4.getN();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2550.25d + "'", double40 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        boolean boolean7 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        boolean boolean9 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        double[] doubleArray7 = variance4.getData();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = doubleArray7.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNull(doubleArray7);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        variance12.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        variance33.increment((double) (-1.0f));
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance33);
        double[] doubleArray37 = variance33.getData();
        variance33.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = variance33.copy();
        variance33.clear();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNotNull(variance40);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.increment((double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        double[] doubleArray15 = new double[] { (-1), 100.0f };
        variance11.incrementAll(doubleArray15);
        long long17 = variance11.getN();
        long long18 = variance11.getN();
        long long19 = variance11.getN();
        variance11.increment(1347.5555555555554d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = variance26.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        variance31.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        double[] doubleArray46 = new double[] { (-1), 100.0f };
        variance42.incrementAll(doubleArray46);
        double double48 = variance31.evaluate(doubleArray46);
        variance26.incrementAll(doubleArray46);
        variance24.setData(doubleArray46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance24);
        variance51.increment((double) (-1));
        double double54 = variance51.evaluate();
        boolean boolean55 = variance51.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance62);
        boolean boolean65 = variance57.equals((java.lang.Object) variance64);
        boolean boolean67 = variance64.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = variance64.copy();
        double[] doubleArray74 = new double[] { 10, Double.NaN, 100.0f, 2550.25d, 0.0d };
        variance64.setData(doubleArray74);
        double double79 = variance51.evaluate(doubleArray74, 1617.066666666667d, (int) (byte) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            variance11.setData(doubleArray74, (int) (short) -1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertNotNull(variance29);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 5100.5d + "'", double54 == 5100.5d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(variance68);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, NaN, 100.0, 2550.25, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double79));
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        variance21.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = variance1.copy();
        boolean boolean32 = variance31.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = variance31.copy();
        long long34 = variance31.getN();
        double[] doubleArray35 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance31.setData(doubleArray35, 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(variance31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(variance33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance22.increment((double) (-1.0f));
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance26);
        variance26.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = variance26.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance56.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        variance60.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        double[] doubleArray75 = new double[] { (-1), 100.0f };
        variance71.incrementAll(doubleArray75);
        double double77 = variance60.evaluate(doubleArray75);
        double double78 = variance56.evaluate(doubleArray75);
        double double80 = variance37.evaluate(doubleArray75, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = variance37.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance81);
        double[] doubleArray86 = new double[] { 1.0d, 10.0d, (byte) 100 };
        double double89 = variance81.evaluate(doubleArray86, 0, 0);
        double double91 = variance26.evaluate(doubleArray86, (double) 100.0f);
        variance22.setData(doubleArray86);
        double[] doubleArray93 = variance22.getData();
        double[] doubleArray94 = variance22.getData();
        java.lang.Class<?> wildcardClass95 = doubleArray94.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(variance35);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertNotNull(variance81);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1998.0d + "'", double91 == 1998.0d);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance12.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        variance45.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        double[] doubleArray60 = new double[] { (-1), 100.0f };
        variance56.incrementAll(doubleArray60);
        double double62 = variance45.evaluate(doubleArray60);
        double double63 = variance41.evaluate(doubleArray60);
        double double65 = variance22.evaluate(doubleArray60, (double) 100.0f);
        double double66 = variance20.evaluate(doubleArray60);
        variance18.setData(doubleArray60);
        double double69 = variance16.evaluate(doubleArray60, (double) ' ');
        variance12.setData(doubleArray60);
        variance6.incrementAll(doubleArray60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        double double78 = variance73.getResult();
        double[] doubleArray84 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double86 = variance73.evaluate(doubleArray84, (double) (short) 1);
        double double87 = variance6.evaluate(doubleArray84);
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = variance88.copy();
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNotNull(variance14);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1030428.01d + "'", double86 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1030428.01d + "'", double87 == 1030428.01d);
        org.junit.Assert.assertNotNull(variance89);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        double double55 = variance12.evaluate(doubleArray50, (double) 100.0f);
        double double56 = variance10.evaluate(doubleArray50);
        variance8.setData(doubleArray50);
        double double59 = variance1.evaluate(doubleArray50, (double) (-1));
        variance1.increment(0.0d);
        variance1.increment((-1.0d));
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance66.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance66.copy();
        boolean boolean70 = variance1.equals((java.lang.Object) variance69);
        variance69.increment((double) 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean10 = variance9.isBiasCorrected();
        double[] doubleArray12 = new double[] { 100 };
        variance9.incrementAll(doubleArray12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        variance19.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        double[] doubleArray34 = new double[] { (-1), 100.0f };
        variance30.incrementAll(doubleArray34);
        double double36 = variance19.evaluate(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance38.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        double double59 = variance42.evaluate(doubleArray57);
        double double60 = variance38.evaluate(doubleArray57);
        double double62 = variance19.evaluate(doubleArray57, (double) 100.0f);
        double double63 = variance17.evaluate(doubleArray57);
        variance15.setData(doubleArray57);
        double double66 = variance9.evaluate(doubleArray57, (double) (byte) -1);
        variance1.setData(doubleArray57, 1, (int) (short) 1);
        boolean boolean70 = variance1.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        long long3 = variance1.getN();
        variance1.clear();
        variance1.increment((double) 1L);
        double[] doubleArray7 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double10 = variance1.evaluate(doubleArray7, (int) '#', (int) '4');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        variance12.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        variance33.increment((double) (-1.0f));
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance33);
        variance1.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = variance1.copy();
        double[] doubleArray40 = variance39.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        double double59 = variance42.evaluate(doubleArray57);
        boolean boolean60 = variance42.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        variance62.setBiasCorrected(false);
        variance62.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance62);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = variance42.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance73);
        variance73.clear();
        double[] doubleArray76 = variance73.getData();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(variance39);
        org.junit.Assert.assertNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(variance72);
        org.junit.Assert.assertNull(doubleArray76);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        variance14.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance14);
        variance14.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        long long6 = variance4.getN();
        variance4.increment((double) ' ');
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        variance10.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        variance22.clear();
        boolean boolean29 = variance17.equals((java.lang.Object) variance22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean32 = variance17.equals((java.lang.Object) variance31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        variance34.increment(0.0d);
        variance34.setBiasCorrected(false);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        variance31.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance31);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment6);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance7);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        double[] doubleArray19 = new double[] { (-1), 100.0f };
        variance15.incrementAll(doubleArray19);
        double double21 = variance4.evaluate(doubleArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = variance4.equals(obj22);
        variance4.setBiasCorrected(true);
        double[] doubleArray32 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double34 = variance4.evaluate(doubleArray32, 100.0d);
        variance4.setBiasCorrected(true);
        long long37 = variance4.getN();
        variance4.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        long long51 = variance45.getN();
        boolean boolean52 = variance45.isBiasCorrected();
        double double53 = variance45.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = variance45.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        variance56.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        double double73 = variance56.evaluate(doubleArray71);
        java.lang.Object obj74 = null;
        boolean boolean75 = variance56.equals(obj74);
        variance56.setBiasCorrected(true);
        double[] doubleArray84 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double86 = variance56.evaluate(doubleArray84, 100.0d);
        variance54.setData(doubleArray84, (int) (byte) 1, 0);
        boolean boolean90 = variance40.equals((java.lang.Object) doubleArray84);
        variance1.incrementAll(doubleArray84);
        double[] doubleArray92 = null;
        double[] doubleArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = variance1.evaluate(doubleArray92, doubleArray93, (int) ' ', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2550.25d + "'", double21 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1617.066666666667d + "'", double34 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(variance40);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 2L + "'", long51 == 2L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertNotNull(variance54);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1617.066666666667d + "'", double86 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        variance1.increment((double) 0L);
        boolean boolean10 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance1.copy();
        variance11.increment(Double.NaN);
        java.lang.Class<?> wildcardClass14 = variance11.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        double double11 = variance1.getResult();
        double double12 = variance1.getResult();
        long long13 = variance1.getN();
        variance1.clear();
        boolean boolean15 = variance1.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double[] doubleArray8 = variance6.getData();
        java.lang.Object obj9 = null;
        boolean boolean10 = variance6.equals(obj9);
        double[] doubleArray11 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        double double13 = variance6.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        variance15.increment(0.0d);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        variance27.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        double[] doubleArray42 = new double[] { (-1), 100.0f };
        variance38.incrementAll(doubleArray42);
        double double44 = variance27.evaluate(doubleArray42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance46.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        variance50.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        double[] doubleArray65 = new double[] { (-1), 100.0f };
        variance61.incrementAll(doubleArray65);
        double double67 = variance50.evaluate(doubleArray65);
        double double68 = variance46.evaluate(doubleArray65);
        double double70 = variance27.evaluate(doubleArray65, (double) 100.0f);
        double double72 = variance15.evaluate(doubleArray65, (double) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double76 = variance6.evaluate(doubleArray65, (double) (-1.0f), (int) '#', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        double[] doubleArray21 = variance13.getData();
        variance13.increment((double) 100L);
        variance13.clear();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(doubleArray21);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        variance8.increment((double) 10L);
        double double23 = variance8.getResult();
        variance8.clear();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        variance1.increment((double) 0L);
        double[] doubleArray10 = variance1.getData();
        variance1.clear();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNull(doubleArray10);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        double[] doubleArray21 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = variance1.copy();
        variance1.increment((double) '4');
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        double[] doubleArray26 = variance1.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNotNull(variance22);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertNull(doubleArray26);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        double double11 = variance1.getResult();
        double double12 = variance1.getResult();
        long long13 = variance1.getN();
        boolean boolean14 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        boolean boolean22 = variance16.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = variance16.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance25.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean30 = variance29.isBiasCorrected();
        double[] doubleArray32 = new double[] { 100 };
        variance29.incrementAll(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        variance39.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        double[] doubleArray54 = new double[] { (-1), 100.0f };
        variance50.incrementAll(doubleArray54);
        double double56 = variance39.evaluate(doubleArray54);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance58.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        variance62.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        double double79 = variance62.evaluate(doubleArray77);
        double double80 = variance58.evaluate(doubleArray77);
        double double82 = variance39.evaluate(doubleArray77, (double) 100.0f);
        double double83 = variance37.evaluate(doubleArray77);
        variance35.setData(doubleArray77);
        double double86 = variance29.evaluate(doubleArray77, (double) (byte) -1);
        double double88 = variance25.evaluate(doubleArray77, (double) 1.0f);
        double double89 = variance23.evaluate(doubleArray77);
        variance23.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance92 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance23);
        boolean boolean93 = variance1.equals((java.lang.Object) variance23);
        double[] doubleArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance23.incrementAll(doubleArray94);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(variance23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2550.25d + "'", double89 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        variance5.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        boolean boolean14 = variance8.equals((java.lang.Object) 10);
        variance8.increment((double) (short) 10);
        variance8.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        double double67 = variance24.evaluate(doubleArray62, (double) 100.0f);
        double double68 = variance22.evaluate(doubleArray62);
        variance20.setData(doubleArray62);
        variance8.setData(doubleArray62, (int) (byte) 1, 0);
        double[] doubleArray73 = variance8.getData();
        variance5.incrementAll(doubleArray73);
        variance5.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        double[] doubleArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double4 = variance0.evaluate(doubleArray1, 100, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double double34 = variance29.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        variance63.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        double[] doubleArray78 = new double[] { (-1), 100.0f };
        variance74.incrementAll(doubleArray78);
        double double80 = variance63.evaluate(doubleArray78);
        double double81 = variance59.evaluate(doubleArray78);
        double double83 = variance40.evaluate(doubleArray78, (double) 100.0f);
        double double84 = variance38.evaluate(doubleArray78);
        variance36.setData(doubleArray78);
        double double87 = variance29.evaluate(doubleArray78, (double) (-1));
        variance1.setData(doubleArray78);
        long long89 = variance1.getN();
        long long90 = variance1.getN();
        variance1.setBiasCorrected(false);
        long long93 = variance1.getN();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 0L + "'", long89 == 0L);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 0L + "'", long90 == 0L);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 0L + "'", long93 == 0L);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance1.copy();
        variance1.clear();
        double[] doubleArray49 = variance1.getData();
        double[] doubleArray50 = variance1.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(variance47);
        org.junit.Assert.assertNull(doubleArray49);
        org.junit.Assert.assertNull(doubleArray50);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.increment((double) (byte) 10);
        variance1.increment((double) (short) 100);
        variance1.increment(5100.5d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        double[] doubleArray17 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = variance1.copy();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(doubleArray17);
        org.junit.Assert.assertNotNull(variance18);
        org.junit.Assert.assertNotNull(variance19);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) (-1L));
        double[] doubleArray4 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance25.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        double double46 = variance29.evaluate(doubleArray44);
        double double47 = variance25.evaluate(doubleArray44);
        double double49 = variance6.evaluate(doubleArray44, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = variance6.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance50);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance54.copy();
        java.lang.Class<?> wildcardClass56 = variance54.getClass();
        boolean boolean57 = variance51.equals((java.lang.Object) wildcardClass56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance51);
        // The following exception was thrown during execution in test generation
        try {
            double double59 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertNotNull(variance50);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        variance1.increment((double) 0L);
        boolean boolean10 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance15);
        variance15.clear();
        double[] doubleArray24 = variance15.getData();
        boolean boolean25 = variance15.isBiasCorrected();
        boolean boolean26 = variance12.equals((java.lang.Object) boolean25);
        // The following exception was thrown during execution in test generation
        try {
            double double27 = variance12.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean15 = variance14.isBiasCorrected();
        double[] doubleArray17 = new double[] { 100 };
        variance14.incrementAll(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        double double67 = variance24.evaluate(doubleArray62, (double) 100.0f);
        double double68 = variance22.evaluate(doubleArray62);
        variance20.setData(doubleArray62);
        double double71 = variance14.evaluate(doubleArray62, (double) (byte) -1);
        double double73 = variance10.evaluate(doubleArray62, (double) 1.0f);
        double double74 = variance8.evaluate(doubleArray62);
        boolean boolean75 = variance8.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment6);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance7);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        double[] doubleArray19 = new double[] { (-1), 100.0f };
        variance15.incrementAll(doubleArray19);
        double double21 = variance4.evaluate(doubleArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = variance4.equals(obj22);
        variance4.setBiasCorrected(true);
        double[] doubleArray32 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double34 = variance4.evaluate(doubleArray32, 100.0d);
        variance4.setBiasCorrected(true);
        long long37 = variance4.getN();
        variance4.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        long long51 = variance45.getN();
        boolean boolean52 = variance45.isBiasCorrected();
        double double53 = variance45.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = variance45.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        variance56.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        double double73 = variance56.evaluate(doubleArray71);
        java.lang.Object obj74 = null;
        boolean boolean75 = variance56.equals(obj74);
        variance56.setBiasCorrected(true);
        double[] doubleArray84 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double86 = variance56.evaluate(doubleArray84, 100.0d);
        variance54.setData(doubleArray84, (int) (byte) 1, 0);
        boolean boolean90 = variance40.equals((java.lang.Object) doubleArray84);
        variance1.incrementAll(doubleArray84);
        boolean boolean92 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance95 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        double double96 = variance95.getResult();
        double[] doubleArray97 = variance95.getData();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2550.25d + "'", double21 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1617.066666666667d + "'", double34 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(variance40);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 2L + "'", long51 == 2L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertNotNull(variance54);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1617.066666666667d + "'", double86 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 1347.5555555555554d + "'", double96 == 1347.5555555555554d);
        org.junit.Assert.assertNull(doubleArray97);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        variance1.clear();
        double[] doubleArray12 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance14.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = variance16.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        variance23.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        double[] doubleArray38 = new double[] { (-1), 100.0f };
        variance34.incrementAll(doubleArray38);
        double double40 = variance23.evaluate(doubleArray38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        double[] doubleArray61 = new double[] { (-1), 100.0f };
        variance57.incrementAll(doubleArray61);
        double double63 = variance46.evaluate(doubleArray61);
        double double64 = variance42.evaluate(doubleArray61);
        double double66 = variance23.evaluate(doubleArray61, (double) 100.0f);
        double double67 = variance21.evaluate(doubleArray61);
        variance19.setData(doubleArray61);
        variance19.clear();
        boolean boolean70 = variance19.isBiasCorrected();
        double double71 = variance19.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment79);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance77, variance80);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance80);
        boolean boolean83 = variance75.equals((java.lang.Object) variance82);
        boolean boolean85 = variance82.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = variance82.copy();
        double[] doubleArray92 = new double[] { 10, Double.NaN, 100.0f, 2550.25d, 0.0d };
        variance82.setData(doubleArray92);
        double[] doubleArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double95 = variance1.evaluate(doubleArray92, doubleArray94);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(doubleArray12);
        org.junit.Assert.assertNotNull(variance17);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2550.25d + "'", double40 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(variance86);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[10.0, NaN, 100.0, 2550.25, 0.0]");
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        double double36 = variance4.evaluate(doubleArray30, (double) (short) 10);
        variance4.clear();
        long long38 = variance4.getN();
        double double39 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = variance4.copy();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(variance40);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance6.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        variance6.clear();
        long long11 = variance6.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance6);
        variance4.setBiasCorrected(true);
        variance4.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        variance1.increment((double) 0);
        double double34 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance36.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = variance36.copy();
        variance36.clear();
        variance36.increment((double) (short) 1);
        double double43 = variance36.getResult();
        long long44 = variance36.getN();
        java.lang.Class<?> wildcardClass45 = variance36.getClass();
        boolean boolean46 = variance1.equals((java.lang.Object) wildcardClass45);
        // The following exception was thrown during execution in test generation
        try {
            double double47 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(variance39);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance48);
        boolean boolean50 = variance48.isBiasCorrected();
        double double51 = variance48.getResult();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double double2 = variance1.getResult();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance7.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance7.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        variance7.incrementAll(doubleArray27);
        variance5.setData(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance5);
        variance32.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance36.increment((double) 10);
        variance36.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance36);
        double double41 = variance36.getResult();
        double[] doubleArray42 = variance36.getData();
        boolean boolean43 = variance1.equals((java.lang.Object) variance36);
        // The following exception was thrown during execution in test generation
        try {
            double double44 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance1.copy();
        double double10 = variance1.getResult();
        variance1.setBiasCorrected(false);
        variance1.increment(2025.0d);
        long long15 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance1.copy();
        long long17 = variance1.getN();
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        variance59.incrementAll(doubleArray79);
        variance57.setData(doubleArray79);
        double double85 = variance53.evaluate(doubleArray79, (double) (short) 10);
        variance46.incrementAll(doubleArray79);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance46.copy();
        variance46.setBiasCorrected(true);
        double double90 = variance46.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance91 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        variance46.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertNotNull(variance87);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 5100.5d + "'", double90 == 5100.5d);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        variance14.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance14);
        // The following exception was thrown during execution in test generation
        try {
            double double39 = variance14.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance1.setBiasCorrected(false);
        double[] doubleArray48 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance50.copy();
        boolean boolean54 = variance53.isBiasCorrected();
        variance53.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance60.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance66.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance66.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        variance71.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment81);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance79, variance82);
        double[] doubleArray86 = new double[] { (-1), 100.0f };
        variance82.incrementAll(doubleArray86);
        double double88 = variance71.evaluate(doubleArray86);
        variance66.incrementAll(doubleArray86);
        variance64.setData(doubleArray86);
        double double92 = variance60.evaluate(doubleArray86, (double) (short) 10);
        variance53.setData(doubleArray86, 1, 1);
        double double97 = variance1.evaluate(doubleArray86, (double) 3L);
        long long98 = variance1.getN();
        // The following exception was thrown during execution in test generation
        try {
            double double99 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNull(doubleArray48);
        org.junit.Assert.assertNotNull(variance53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 2550.25d + "'", double97 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long98 + "' != '" + 0L + "'", long98 == 0L);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance1.copy();
        double double10 = variance1.getResult();
        variance1.setBiasCorrected(false);
        variance1.increment(2025.0d);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance1.copy();
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(variance16);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        double double39 = variance29.getResult();
        variance29.clear();
        double[] doubleArray41 = variance29.getData();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2046.8888888888887d + "'", double39 == 2046.8888888888887d);
        org.junit.Assert.assertNull(doubleArray41);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance14.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        double double35 = variance18.evaluate(doubleArray33);
        double double36 = variance14.evaluate(doubleArray33);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance39.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        variance43.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        double[] doubleArray58 = new double[] { (-1), 100.0f };
        variance54.incrementAll(doubleArray58);
        double double60 = variance43.evaluate(doubleArray58);
        double double61 = variance39.evaluate(doubleArray58);
        double double62 = variance37.evaluate(doubleArray58);
        double double63 = variance4.evaluate(doubleArray58);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = variance4.copy();
        long long65 = variance64.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertNotNull(variance64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance24.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        double double46 = variance24.evaluate(doubleArray43);
        double double48 = variance5.evaluate(doubleArray43, (double) 100.0f);
        double double49 = variance3.evaluate(doubleArray43);
        variance1.setData(doubleArray43);
        variance1.clear();
        variance1.increment((double) 100.0f);
        double[] doubleArray54 = variance1.getData();
        double[] doubleArray55 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        double double10 = variance1.getResult();
        boolean boolean11 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance13.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        double double35 = variance18.evaluate(doubleArray33);
        variance13.incrementAll(doubleArray33);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance13.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        double[] doubleArray46 = new double[] { (-1), 100.0f };
        variance42.incrementAll(doubleArray46);
        variance37.setData(doubleArray46);
        variance1.incrementAll(doubleArray46);
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0]");
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment((double) 1);
        variance1.setBiasCorrected(false);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        double[] doubleArray24 = new double[] { (-1), 100.0f };
        variance20.incrementAll(doubleArray24);
        variance20.clear();
        boolean boolean27 = variance15.equals((java.lang.Object) variance20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        double double46 = variance29.evaluate(doubleArray44);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance48.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        variance52.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        double[] doubleArray67 = new double[] { (-1), 100.0f };
        variance63.incrementAll(doubleArray67);
        double double69 = variance52.evaluate(doubleArray67);
        double double70 = variance48.evaluate(doubleArray67);
        double double72 = variance29.evaluate(doubleArray67, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance73);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment78);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance76, variance79);
        double[] doubleArray83 = new double[] { (-1), 100.0f };
        variance79.incrementAll(doubleArray83);
        double double85 = variance74.evaluate(doubleArray83);
        variance15.incrementAll(doubleArray83, (int) (byte) 1, 1);
        variance1.setData(doubleArray83);
        org.apache.commons.math.stat.descriptive.moment.Variance variance90 = variance1.copy();
        long long91 = variance1.getN();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertNotNull(variance73);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertNotNull(variance90);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 1L + "'", long91 == 1L);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean23 = variance8.equals((java.lang.Object) variance22);
        double[] doubleArray24 = variance22.getData();
        double double25 = variance22.getResult();
        boolean boolean26 = variance22.isBiasCorrected();
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        boolean boolean36 = variance30.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance30.copy();
        double double38 = variance30.getResult();
        double double39 = variance30.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = variance41.copy();
        variance41.increment((double) 100.0f);
        boolean boolean47 = variance41.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance41.copy();
        variance48.increment((double) 1L);
        boolean boolean51 = variance30.equals((java.lang.Object) 1L);
        double double52 = variance30.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance30);
        variance30.clear();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(variance44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance1.copy();
        long long48 = variance1.getN();
        // The following exception was thrown during execution in test generation
        try {
            double double49 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(variance47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        variance21.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance21);
        double double31 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance46.evaluate(doubleArray55);
        variance46.increment(Double.NaN);
        double double60 = variance46.getResult();
        double double61 = variance46.getResult();
        variance46.increment(2448.2400000000002d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = variance46.copy();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(variance64);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        variance1.increment((double) 0);
        double double34 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = variance1.copy();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(variance35);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance12.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        variance45.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        double[] doubleArray60 = new double[] { (-1), 100.0f };
        variance56.incrementAll(doubleArray60);
        double double62 = variance45.evaluate(doubleArray60);
        double double63 = variance41.evaluate(doubleArray60);
        double double65 = variance22.evaluate(doubleArray60, (double) 100.0f);
        double double66 = variance20.evaluate(doubleArray60);
        variance18.setData(doubleArray60);
        double double69 = variance16.evaluate(doubleArray60, (double) ' ');
        variance12.setData(doubleArray60);
        variance6.incrementAll(doubleArray60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        double double78 = variance73.getResult();
        double[] doubleArray84 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double86 = variance73.evaluate(doubleArray84, (double) (short) 1);
        double double87 = variance6.evaluate(doubleArray84);
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance89.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance92 = variance89.copy();
        boolean boolean93 = variance92.isBiasCorrected();
        long long94 = variance92.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance92);
        double double96 = variance6.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance97 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNotNull(variance14);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1030428.01d + "'", double86 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1030428.01d + "'", double87 == 1030428.01d);
        org.junit.Assert.assertNotNull(variance92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 1L + "'", long94 == 1L);
        org.junit.Assert.assertTrue(Double.isNaN(double96));
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        double double55 = variance12.evaluate(doubleArray50, (double) 100.0f);
        double double56 = variance10.evaluate(doubleArray50);
        variance8.setData(doubleArray50);
        variance6.incrementAll(doubleArray50);
        double double59 = variance6.getResult();
        java.lang.Class<?> wildcardClass60 = variance6.getClass();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance23);
        variance24.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(variance23);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        variance8.clear();
        variance8.clear();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        boolean boolean49 = variance48.isBiasCorrected();
        variance48.setBiasCorrected(true);
        // The following exception was thrown during execution in test generation
        try {
            double double52 = variance48.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        double double8 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance10.increment(2046.8888888888887d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance15);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double[] doubleArray31 = new double[] { (-1), 100.0f };
        variance27.incrementAll(doubleArray31);
        variance27.clear();
        boolean boolean34 = variance22.equals((java.lang.Object) variance27);
        variance27.increment((double) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        variance63.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        double[] doubleArray78 = new double[] { (-1), 100.0f };
        variance74.incrementAll(doubleArray78);
        double double80 = variance63.evaluate(doubleArray78);
        double double81 = variance59.evaluate(doubleArray78);
        double double83 = variance40.evaluate(doubleArray78, (double) 100.0f);
        double double84 = variance38.evaluate(doubleArray78);
        variance27.incrementAll(doubleArray78);
        variance10.setData(doubleArray78);
        variance1.incrementAll(doubleArray78);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.clear();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        java.lang.Class<?> wildcardClass5 = variance1.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray2 = variance1.getData();
        variance1.setBiasCorrected(false);
        variance1.clear();
        org.junit.Assert.assertNull(doubleArray2);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance49.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        variance53.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        double[] doubleArray68 = new double[] { (-1), 100.0f };
        variance64.incrementAll(doubleArray68);
        double double70 = variance53.evaluate(doubleArray68);
        double double71 = variance49.evaluate(doubleArray68);
        double double73 = variance30.evaluate(doubleArray68, (double) 100.0f);
        boolean boolean74 = variance28.equals((java.lang.Object) doubleArray68);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance36.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        double double58 = variance36.evaluate(doubleArray55);
        double double60 = variance17.evaluate(doubleArray55, (double) 100.0f);
        double double61 = variance15.evaluate(doubleArray55);
        variance13.setData(doubleArray55);
        variance1.setData(doubleArray55, (int) (byte) 1, 0);
        double[] doubleArray66 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        double[] doubleArray75 = new double[] { (-1), 100.0f };
        variance71.incrementAll(doubleArray75);
        double double77 = variance1.evaluate(doubleArray75);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance78);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        variance43.increment(0.0d);
        boolean boolean68 = variance4.equals((java.lang.Object) 0.0d);
        double[] doubleArray69 = variance4.getData();
        variance4.increment(2550.25d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(doubleArray69);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean6 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance12.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        variance20.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        double[] doubleArray35 = new double[] { (-1), 100.0f };
        variance31.incrementAll(doubleArray35);
        double double37 = variance20.evaluate(doubleArray35);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance39.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        variance43.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        double[] doubleArray58 = new double[] { (-1), 100.0f };
        variance54.incrementAll(doubleArray58);
        double double60 = variance43.evaluate(doubleArray58);
        double double61 = variance39.evaluate(doubleArray58);
        double double63 = variance20.evaluate(doubleArray58, (double) 100.0f);
        double double64 = variance18.evaluate(doubleArray58);
        variance16.setData(doubleArray58);
        variance14.incrementAll(doubleArray58);
        variance7.incrementAll(doubleArray58);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance69.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = variance69.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance74, variance77);
        variance74.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment84 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment84);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance82, variance85);
        double[] doubleArray89 = new double[] { (-1), 100.0f };
        variance85.incrementAll(doubleArray89);
        double double91 = variance74.evaluate(doubleArray89);
        variance69.incrementAll(doubleArray89);
        variance7.setData(doubleArray89);
        java.lang.Class<?> wildcardClass94 = doubleArray89.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(variance7);
        org.junit.Assert.assertNotNull(variance14);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2550.25d + "'", double37 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertNotNull(variance72);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2550.25d + "'", double91 == 2550.25d);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        boolean boolean13 = variance7.equals((java.lang.Object) 10);
        variance7.increment((double) (short) 10);
        variance7.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        variance23.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        double[] doubleArray38 = new double[] { (-1), 100.0f };
        variance34.incrementAll(doubleArray38);
        double double40 = variance23.evaluate(doubleArray38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        double[] doubleArray61 = new double[] { (-1), 100.0f };
        variance57.incrementAll(doubleArray61);
        double double63 = variance46.evaluate(doubleArray61);
        double double64 = variance42.evaluate(doubleArray61);
        double double66 = variance23.evaluate(doubleArray61, (double) 100.0f);
        double double67 = variance21.evaluate(doubleArray61);
        variance19.setData(doubleArray61);
        variance7.setData(doubleArray61, (int) (byte) 1, 0);
        double[] doubleArray72 = variance7.getData();
        double double73 = variance4.evaluate(doubleArray72);
        variance4.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = variance4.copy();
        variance76.increment((double) 100);
        java.lang.Class<?> wildcardClass79 = variance76.getClass();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2550.25d + "'", double40 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertNotNull(variance76);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        double[] doubleArray6 = variance4.getData();
        boolean boolean7 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        long long18 = variance12.getN();
        boolean boolean19 = variance12.isBiasCorrected();
        java.lang.Class<?> wildcardClass20 = variance12.getClass();
        boolean boolean21 = variance4.equals((java.lang.Object) variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = variance4.copy();
        boolean boolean23 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance27.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = variance27.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        variance32.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        double[] doubleArray47 = new double[] { (-1), 100.0f };
        variance43.incrementAll(doubleArray47);
        double double49 = variance32.evaluate(doubleArray47);
        variance27.incrementAll(doubleArray47);
        variance25.setData(doubleArray47);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance25);
        variance52.increment((double) (-1));
        double double55 = variance52.evaluate();
        boolean boolean56 = variance52.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance63);
        boolean boolean66 = variance58.equals((java.lang.Object) variance65);
        boolean boolean68 = variance65.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance65.copy();
        double[] doubleArray75 = new double[] { 10, Double.NaN, 100.0f, 2550.25d, 0.0d };
        variance65.setData(doubleArray75);
        double double80 = variance52.evaluate(doubleArray75, 1617.066666666667d, (int) (byte) 1, 0);
        boolean boolean81 = variance4.equals((java.lang.Object) double80);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(variance22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(variance30);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 5100.5d + "'", double55 == 5100.5d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, NaN, 100.0, 2550.25, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance25.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance47.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        double double68 = variance51.evaluate(doubleArray66);
        double double69 = variance47.evaluate(doubleArray66);
        double double71 = variance28.evaluate(doubleArray66, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = variance28.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = variance28.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = variance28.copy();
        java.lang.Class<?> wildcardClass75 = variance74.getClass();
        boolean boolean76 = variance25.equals((java.lang.Object) variance74);
        boolean boolean77 = variance25.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = variance25.copy();
        boolean boolean79 = variance78.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertNotNull(variance72);
        org.junit.Assert.assertNotNull(variance73);
        org.junit.Assert.assertNotNull(variance74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(variance78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance25.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance47.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        double double68 = variance51.evaluate(doubleArray66);
        double double69 = variance47.evaluate(doubleArray66);
        double double71 = variance28.evaluate(doubleArray66, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = variance28.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = variance28.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = variance28.copy();
        java.lang.Class<?> wildcardClass75 = variance74.getClass();
        boolean boolean76 = variance25.equals((java.lang.Object) variance74);
        boolean boolean77 = variance74.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertNotNull(variance72);
        org.junit.Assert.assertNotNull(variance73);
        org.junit.Assert.assertNotNull(variance74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance1.copy();
        long long48 = variance1.getN();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = variance1.copy();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(variance47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(variance50);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        double double8 = variance1.getResult();
        double double9 = variance1.getResult();
        variance1.increment(2550.25d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance12.copy();
        double double14 = variance13.getResult();
        long long15 = variance13.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance13.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        double double35 = variance18.evaluate(doubleArray33);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance37.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        variance37.setData(doubleArray48);
        variance18.incrementAll(doubleArray48);
        variance13.incrementAll(doubleArray48);
        variance1.setData(doubleArray48, (int) (byte) 1, (int) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        double[] doubleArray57 = variance1.getData();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[]");
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance1.setBiasCorrected(false);
        variance1.increment(0.0d);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        long long5 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        variance7.increment(0.0d);
        variance7.setBiasCorrected(false);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance7);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        boolean boolean28 = variance22.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = variance22.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long32 = variance31.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance34.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        double double56 = variance34.evaluate(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        variance63.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        double[] doubleArray78 = new double[] { (-1), 100.0f };
        variance74.incrementAll(doubleArray78);
        double double80 = variance63.evaluate(doubleArray78);
        double double81 = variance59.evaluate(doubleArray78);
        double double82 = variance57.evaluate(doubleArray78);
        double double83 = variance31.evaluate(doubleArray78);
        variance29.setData(doubleArray78);
        variance7.setData(doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double double88 = variance4.evaluate(doubleArray78, 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(variance29);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        variance10.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        double[] doubleArray25 = new double[] { (-1), 100.0f };
        variance21.incrementAll(doubleArray25);
        double double27 = variance10.evaluate(doubleArray25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance29.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        variance33.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        double double50 = variance33.evaluate(doubleArray48);
        double double51 = variance29.evaluate(doubleArray48);
        double double53 = variance10.evaluate(doubleArray48, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = variance10.copy();
        variance54.clear();
        double double56 = variance54.getResult();
        variance54.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance58);
        boolean boolean60 = variance8.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2550.25d + "'", double27 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertNotNull(variance54);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        double[] doubleArray13 = variance12.getData();
        variance12.setBiasCorrected(false);
        variance12.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = variance18.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean22 = variance21.isBiasCorrected();
        variance21.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNotNull(variance19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance10.copy();
        variance10.increment((double) 10.0f);
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertNotNull(variance11);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.increment(2046.8888888888887d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long6 = variance5.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        double double30 = variance8.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        double double55 = variance33.evaluate(doubleArray52);
        double double56 = variance31.evaluate(doubleArray52);
        double double57 = variance5.evaluate(doubleArray52);
        variance1.incrementAll(doubleArray52);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2550.25d + "'", double30 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        variance14.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance14);
        long long39 = variance14.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 2L + "'", long39 == 2L);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        double double11 = variance1.getResult();
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        boolean boolean9 = variance1.equals((java.lang.Object) variance8);
        boolean boolean11 = variance8.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance8.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        double double55 = variance33.evaluate(doubleArray52);
        double double57 = variance14.evaluate(doubleArray52, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = variance14.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance58);
        double[] doubleArray63 = new double[] { 1.0d, 10.0d, (byte) 100 };
        double double66 = variance58.evaluate(doubleArray63, 0, 0);
        boolean boolean67 = variance12.equals((java.lang.Object) variance58);
        double double68 = variance12.getResult();
        java.lang.Class<?> wildcardClass69 = variance12.getClass();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertNotNull(variance58);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        double double67 = variance24.evaluate(doubleArray62, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = variance24.copy();
        variance68.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance71.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = variance71.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment78);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance76, variance79);
        variance76.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment86 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment86);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance84, variance87);
        double[] doubleArray91 = new double[] { (-1), 100.0f };
        variance87.incrementAll(doubleArray91);
        double double93 = variance76.evaluate(doubleArray91);
        variance71.incrementAll(doubleArray91);
        variance68.setData(doubleArray91);
        double double97 = variance1.evaluate(doubleArray91, (double) (short) 100);
        long long98 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertNotNull(variance68);
        org.junit.Assert.assertNotNull(variance74);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2550.25d + "'", double93 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 2550.25d + "'", double97 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long98 + "' != '" + 1L + "'", long98 == 1L);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        variance1.increment((-1.0d));
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = variance1.copy();
        double[] doubleArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance1.setData(doubleArray50, (int) 'a', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(variance49);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        variance29.clear();
        variance29.increment((double) (-1));
        boolean boolean34 = variance29.isBiasCorrected();
        long long35 = variance29.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        variance14.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        variance39.increment(2046.8888888888887d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        boolean boolean13 = variance7.equals((java.lang.Object) 10);
        variance7.increment((double) (short) 10);
        variance7.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        variance23.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        double[] doubleArray38 = new double[] { (-1), 100.0f };
        variance34.incrementAll(doubleArray38);
        double double40 = variance23.evaluate(doubleArray38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        double[] doubleArray61 = new double[] { (-1), 100.0f };
        variance57.incrementAll(doubleArray61);
        double double63 = variance46.evaluate(doubleArray61);
        double double64 = variance42.evaluate(doubleArray61);
        double double66 = variance23.evaluate(doubleArray61, (double) 100.0f);
        double double67 = variance21.evaluate(doubleArray61);
        variance19.setData(doubleArray61);
        variance7.setData(doubleArray61, (int) (byte) 1, 0);
        double[] doubleArray72 = variance7.getData();
        double double73 = variance4.evaluate(doubleArray72);
        double double74 = variance4.getResult();
        variance4.increment((double) 100L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2550.25d + "'", double40 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue(Double.isNaN(double74));
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.clear();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        variance13.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        double[] doubleArray28 = new double[] { (-1), 100.0f };
        variance24.incrementAll(doubleArray28);
        double double30 = variance13.evaluate(doubleArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = variance13.equals(obj31);
        variance13.setBiasCorrected(true);
        double[] doubleArray41 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double43 = variance13.evaluate(doubleArray41, 100.0d);
        variance13.setBiasCorrected(true);
        long long46 = variance13.getN();
        variance13.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = variance13.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        double double68 = variance51.evaluate(doubleArray66);
        java.lang.Object obj69 = null;
        boolean boolean70 = variance51.equals(obj69);
        variance51.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance74, variance77);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance77);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance79);
        boolean boolean81 = variance13.equals((java.lang.Object) variance79);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance13);
        boolean boolean83 = variance13.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2550.25d + "'", double30 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1617.066666666667d + "'", double43 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNotNull(variance49);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        long long26 = variance25.getN();
        variance25.increment((double) (short) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        long long39 = variance33.getN();
        boolean boolean40 = variance33.isBiasCorrected();
        double double41 = variance33.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance33);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 3L + "'", long26 == 3L);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 2L + "'", long39 == 2L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean9 = variance8.isBiasCorrected();
        double[] doubleArray11 = new double[] { 100 };
        variance8.incrementAll(doubleArray11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance8);
        double double14 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        variance16.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double[] doubleArray31 = new double[] { (-1), 100.0f };
        variance27.incrementAll(doubleArray31);
        double double33 = variance16.evaluate(doubleArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = variance16.equals(obj34);
        variance16.setBiasCorrected(true);
        double[] doubleArray44 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double46 = variance16.evaluate(doubleArray44, 100.0d);
        variance16.setBiasCorrected(true);
        long long49 = variance16.getN();
        variance16.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance53.increment((double) 10);
        variance53.clear();
        variance53.increment((double) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance62.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = variance62.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment69);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        variance67.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment77);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance75, variance78);
        double[] doubleArray82 = new double[] { (-1), 100.0f };
        variance78.incrementAll(doubleArray82);
        double double84 = variance67.evaluate(doubleArray82);
        variance62.incrementAll(doubleArray82);
        variance60.setData(doubleArray82);
        double double87 = variance53.evaluate(doubleArray82);
        variance16.incrementAll(doubleArray82);
        double double89 = variance4.evaluate(doubleArray82);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2550.25d + "'", double33 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1617.066666666667d + "'", double46 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(variance65);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2550.25d + "'", double89 == 2550.25d);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance48);
        boolean boolean50 = variance48.isBiasCorrected();
        variance48.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        variance59.incrementAll(doubleArray79);
        variance57.setData(doubleArray79);
        double double85 = variance53.evaluate(doubleArray79, (double) (short) 10);
        variance46.incrementAll(doubleArray79);
        variance46.clear();
        double[] doubleArray88 = variance46.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray88);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        boolean boolean13 = variance7.equals((java.lang.Object) 10);
        variance7.increment((double) (short) 10);
        variance7.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        variance23.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        double[] doubleArray38 = new double[] { (-1), 100.0f };
        variance34.incrementAll(doubleArray38);
        double double40 = variance23.evaluate(doubleArray38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        double[] doubleArray61 = new double[] { (-1), 100.0f };
        variance57.incrementAll(doubleArray61);
        double double63 = variance46.evaluate(doubleArray61);
        double double64 = variance42.evaluate(doubleArray61);
        double double66 = variance23.evaluate(doubleArray61, (double) 100.0f);
        double double67 = variance21.evaluate(doubleArray61);
        variance19.setData(doubleArray61);
        variance7.setData(doubleArray61, (int) (byte) 1, 0);
        double[] doubleArray72 = variance7.getData();
        double double73 = variance4.evaluate(doubleArray72);
        variance4.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = variance4.copy();
        double[] doubleArray77 = variance4.getData();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass78 = doubleArray77.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2550.25d + "'", double40 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertNotNull(variance76);
        org.junit.Assert.assertNull(doubleArray77);
    }
}

