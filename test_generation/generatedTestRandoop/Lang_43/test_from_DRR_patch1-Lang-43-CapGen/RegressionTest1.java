import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        java.lang.String str16 = extendedMessageFormat15.toPattern();
        java.text.Format[] formatArray17 = extendedMessageFormat15.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat9.setFormatsByArgumentIndex(formatArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(formatArray17);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.Object obj11 = extendedMessageFormat10.clone();
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj11);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.String str18 = extendedMessageFormat7.format((java.lang.Object) formatArray16);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat7.setLocale(locale25);
        extendedMessageFormat3.setLocale(locale25);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        java.util.Locale locale37 = null;
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map38);
        java.text.Format[] formatArray40 = extendedMessageFormat39.getFormatsByArgumentIndex();
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        extendedMessageFormat39.setLocale(locale45);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45, map51);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45);
        java.text.Format[] formatArray54 = extendedMessageFormat53.getFormats();
        java.lang.StringBuffer stringBuffer55 = null;
        java.text.FieldPosition fieldPosition56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer57 = extendedMessageFormat32.format((java.lang.Object[]) formatArray54, stringBuffer55, fieldPosition56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray40);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray54);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        extendedMessageFormat18.setLocale(locale32);
        extendedMessageFormat18.applyPattern("hi!");
        java.text.ParsePosition parsePosition38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray39 = extendedMessageFormat18.parse("hi!", parsePosition38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormats();
        java.util.Locale locale18 = null;
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map19);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat14.setFormatByArgumentIndex((int) (short) 100, (java.text.Format) extendedMessageFormat20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4);
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.lang.Object[] objArray11 = extendedMessageFormat9.parse("hi!");
        java.util.Locale locale17 = null;
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map18);
        java.text.Format[] formatArray20 = extendedMessageFormat19.getFormatsByArgumentIndex();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map26);
        extendedMessageFormat19.setLocale(locale25);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25, map31);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25, map34);
        extendedMessageFormat9.setLocale(locale25);
        java.lang.Object obj37 = extendedMessageFormat9.clone();
        boolean boolean38 = extendedMessageFormat5.equals((java.lang.Object) extendedMessageFormat9);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.lang.String str12 = extendedMessageFormat11.toPattern();
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        extendedMessageFormat17.setLocale(locale23);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23);
        extendedMessageFormat11.setLocale(locale23);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray32 = extendedMessageFormat30.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map20);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18);
        extendedMessageFormat11.setLocale(locale18);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = extendedMessageFormat25.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        extendedMessageFormat18.setLocale(locale32);
        java.text.Format[] formatArray35 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Locale locale37 = null;
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map38);
        java.text.Format[] formatArray40 = extendedMessageFormat39.getFormatsByArgumentIndex();
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        extendedMessageFormat39.setLocale(locale45);
        java.lang.String str49 = extendedMessageFormat39.toPattern();
        java.lang.Object[] objArray51 = extendedMessageFormat39.parse("hi!");
        java.text.Format[] formatArray52 = extendedMessageFormat39.getFormats();
        java.lang.String str53 = extendedMessageFormat39.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator54 = extendedMessageFormat18.formatToCharacterIterator((java.lang.Object) str53);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray35);
        org.junit.Assert.assertNotNull(formatArray40);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        extendedMessageFormat21.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex((int) (byte) 1, (java.text.Format) extendedMessageFormat21);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map39);
        extendedMessageFormat1.setLocale(locale36);
        java.util.Locale locale42 = extendedMessageFormat1.getLocale();
        java.lang.String str43 = extendedMessageFormat1.toPattern();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        extendedMessageFormat47.applyPattern("");
        extendedMessageFormat47.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormat(1, (java.text.Format) extendedMessageFormat47);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map50);
        java.text.Format[] formatArray52 = extendedMessageFormat51.getFormats();
        java.lang.String str53 = extendedMessageFormat38.format((java.lang.Object) formatArray52);
        java.text.Format[] formatArray54 = extendedMessageFormat38.getFormats();
        extendedMessageFormat38.applyPattern("");
        extendedMessageFormat38.applyPattern("");
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map62);
        java.util.Locale locale64 = extendedMessageFormat63.getLocale();
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale64, map65);
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale64, map67);
        java.lang.String str69 = extendedMessageFormat68.toPattern();
        java.text.Format[] formatArray70 = extendedMessageFormat68.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str71 = extendedMessageFormat38.format((java.lang.Object) extendedMessageFormat68);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(formatArray54);
        org.junit.Assert.assertNotNull(locale64);
        org.junit.Assert.assertEquals(locale64.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(formatArray70);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        boolean boolean9 = extendedMessageFormat3.equals((java.lang.Object) extendedMessageFormat7);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Locale locale31 = extendedMessageFormat1.getLocale();
        java.util.Locale locale32 = extendedMessageFormat1.getLocale();
        java.text.Format[] formatArray33 = extendedMessageFormat1.getFormatsByArgumentIndex();
        java.text.ParsePosition parsePosition35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray36 = extendedMessageFormat1.parse("hi!", parsePosition35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray33);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        java.lang.Object[] objArray3 = new java.lang.Object[] {};
        java.lang.String str4 = java.text.MessageFormat.format("hi!", objArray3);
        java.lang.String str5 = java.text.MessageFormat.format("", objArray3);
        java.lang.String str6 = java.text.MessageFormat.format("", objArray3);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.String str18 = extendedMessageFormat7.format((java.lang.Object) formatArray16);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat7.setLocale(locale25);
        extendedMessageFormat2.setLocale(locale25);
        java.util.Locale locale32 = extendedMessageFormat2.getLocale();
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale37 = null;
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map38);
        java.text.Format[] formatArray40 = extendedMessageFormat39.getFormatsByArgumentIndex();
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        extendedMessageFormat39.setLocale(locale45);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map49);
        extendedMessageFormat50.applyPattern("");
        java.lang.String str53 = extendedMessageFormat50.toPattern();
        java.util.Locale locale54 = extendedMessageFormat50.getLocale();
        extendedMessageFormat2.setLocale(locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map58);
        extendedMessageFormat59.applyPattern("");
        extendedMessageFormat59.applyPattern("hi!");
        java.lang.String str64 = extendedMessageFormat59.toPattern();
        java.lang.String str65 = extendedMessageFormat59.toPattern();
        java.text.Format[] formatArray66 = extendedMessageFormat59.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str67 = extendedMessageFormat56.format((java.lang.Object) extendedMessageFormat59);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray40);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertNotNull(formatArray66);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.lang.String str8 = extendedMessageFormat2.toPattern();
        java.text.Format[] formatArray9 = extendedMessageFormat2.getFormats();
        java.text.ParsePosition parsePosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray12 = extendedMessageFormat2.parse("hi!", parsePosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(formatArray9);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        extendedMessageFormat18.setLocale(locale32);
        java.text.Format[] formatArray35 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.text.ParsePosition parsePosition37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = extendedMessageFormat18.parseObject("", parsePosition37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray35);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.String str14 = extendedMessageFormat3.toPattern();
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map21);
        java.text.Format[] formatArray23 = extendedMessageFormat22.getFormatsByArgumentIndex();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map29);
        extendedMessageFormat22.setLocale(locale28);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map34);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map41);
        java.util.Locale locale43 = extendedMessageFormat42.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43, map45);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43, map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49);
        extendedMessageFormat35.setLocale(locale49);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map58);
        java.util.Locale locale60 = extendedMessageFormat59.getLocale();
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale60, map61);
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale60, map63);
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale60, map65);
        java.text.Format[] formatArray67 = extendedMessageFormat66.getFormats();
        java.lang.String str68 = extendedMessageFormat53.format((java.lang.Object) formatArray67);
        java.text.Format[] formatArray69 = extendedMessageFormat53.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator70 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) extendedMessageFormat53);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(formatArray69);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.text.ParsePosition parsePosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = extendedMessageFormat2.parseObject("", parsePosition8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Locale locale22 = null;
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map23);
        java.text.Format[] formatArray25 = extendedMessageFormat24.getFormatsByArgumentIndex();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map31);
        extendedMessageFormat24.setLocale(locale30);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormat((int) '#', (java.text.Format) extendedMessageFormat38);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray23 = extendedMessageFormat20.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray21);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale18 = extendedMessageFormat15.getLocale();
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map22);
        java.text.Format[] formatArray24 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map30);
        extendedMessageFormat23.setLocale(locale29);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map33);
        extendedMessageFormat15.setLocale(locale29);
        java.lang.Class<?> wildcardClass36 = locale29.getClass();
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        extendedMessageFormat19.setLocale(locale33);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map36);
        java.lang.Object obj39 = extendedMessageFormat37.parseObject("hi!");
        extendedMessageFormat37.applyPattern("hi!");
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map52);
        extendedMessageFormat53.applyPattern("hi!");
        extendedMessageFormat53.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str58 = extendedMessageFormat37.format((java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map50);
        java.text.Format[] formatArray52 = extendedMessageFormat51.getFormats();
        java.lang.String str53 = extendedMessageFormat38.format((java.lang.Object) formatArray52);
        java.text.Format[] formatArray54 = extendedMessageFormat38.getFormats();
        extendedMessageFormat38.applyPattern("");
        extendedMessageFormat38.applyPattern("");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale62 = extendedMessageFormat61.getLocale();
        java.lang.Object obj64 = extendedMessageFormat61.parseObject("hi!");
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map66);
        extendedMessageFormat67.applyPattern("");
        extendedMessageFormat67.applyPattern("hi!");
        java.lang.String str72 = extendedMessageFormat67.toPattern();
        java.lang.String str73 = extendedMessageFormat67.toPattern();
        java.text.Format[] formatArray74 = extendedMessageFormat67.getFormats();
        java.lang.String str75 = extendedMessageFormat61.format((java.lang.Object) formatArray74);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat38.setFormatByArgumentIndex((int) (short) 100, (java.text.Format) extendedMessageFormat61);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(formatArray54);
        org.junit.Assert.assertNotNull(locale62);
        org.junit.Assert.assertEquals(locale62.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(formatArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        extendedMessageFormat15.setLocale(locale21);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map27);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        extendedMessageFormat28.setLocale(locale42);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42, map45);
        extendedMessageFormat7.setLocale(locale42);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map48);
        java.text.Format[] formatArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat49.setFormatsByArgumentIndex(formatArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map12);
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.lang.String str19 = extendedMessageFormat13.format((java.lang.Object) formatArray18);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatsByArgumentIndex(formatArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map7);
        extendedMessageFormat8.applyPattern("hi!");
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        extendedMessageFormat17.setLocale(locale23);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map29);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map40);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44);
        extendedMessageFormat30.setLocale(locale44);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44, map47);
        extendedMessageFormat8.setLocale(locale44);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map54);
        java.util.Locale locale56 = extendedMessageFormat55.getLocale();
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale56, map57);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale56, map59);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale56);
        java.text.Format[] formatArray62 = extendedMessageFormat61.getFormatsByArgumentIndex();
        boolean boolean63 = extendedMessageFormat8.equals((java.lang.Object) formatArray62);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat14.applyPattern("hi!");
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        extendedMessageFormat19.applyPattern("");
        java.util.Locale locale24 = null;
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        java.lang.String str27 = extendedMessageFormat26.toPattern();
        java.text.Format[] formatArray28 = extendedMessageFormat26.getFormats();
        java.lang.String str29 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray28);
        java.lang.String str30 = extendedMessageFormat19.format((java.lang.Object) formatArray28);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37);
        extendedMessageFormat19.setLocale(locale37);
        extendedMessageFormat14.setLocale(locale37);
        java.util.Locale locale44 = extendedMessageFormat14.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat10.setFormatByArgumentIndex((int) (byte) 100, (java.text.Format) extendedMessageFormat14);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(formatArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map11);
        java.lang.String str13 = extendedMessageFormat12.toPattern();
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.text.Format[] formatArray19 = extendedMessageFormat17.getFormats();
        java.util.Locale locale22 = null;
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map23);
        java.text.Format[] formatArray25 = extendedMessageFormat24.getFormatsByArgumentIndex();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map31);
        extendedMessageFormat24.setLocale(locale30);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        extendedMessageFormat17.setLocale(locale30);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale40 = extendedMessageFormat39.getLocale();
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map41);
        extendedMessageFormat17.setLocale(locale40);
        java.text.Format[] formatArray44 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer45 = null;
        java.text.FieldPosition fieldPosition46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer47 = extendedMessageFormat12.format((java.lang.Object[]) formatArray44, stringBuffer45, fieldPosition46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray44);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray6 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.lang.String str12 = extendedMessageFormat3.format((java.lang.Object) locale11);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.text.Format[] formatArray24 = extendedMessageFormat22.getFormats();
        java.lang.String str25 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray24);
        java.lang.String str26 = extendedMessageFormat15.format((java.lang.Object) formatArray24);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33);
        extendedMessageFormat15.setLocale(locale33);
        extendedMessageFormat3.setLocale(locale33);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Locale locale45 = null;
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45, map46);
        java.text.Format[] formatArray48 = extendedMessageFormat47.getFormatsByArgumentIndex();
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map54);
        extendedMessageFormat47.setLocale(locale53);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map57);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map59);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53);
        java.text.Format[] formatArray62 = extendedMessageFormat61.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator63 = extendedMessageFormat40.formatToCharacterIterator((java.lang.Object) extendedMessageFormat61);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNull(locale11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray48);
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray62);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.text.Format[] formatArray3 = extendedMessageFormat1.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray5 = extendedMessageFormat1.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(formatArray3);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.lang.Object obj7 = extendedMessageFormat5.clone();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(obj7);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        extendedMessageFormat19.setLocale(locale33);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map36);
        java.lang.Object obj39 = extendedMessageFormat37.parseObject("hi!");
        java.util.Locale locale45 = null;
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45, map46);
        java.text.Format[] formatArray48 = extendedMessageFormat47.getFormatsByArgumentIndex();
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map54);
        extendedMessageFormat47.setLocale(locale53);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map57);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map59);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map66);
        java.util.Locale locale68 = extendedMessageFormat67.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale68);
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68, map70);
        java.util.Map map72 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68, map72);
        java.util.Locale locale74 = extendedMessageFormat73.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale74);
        extendedMessageFormat60.setLocale(locale74);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale74);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale74);
        java.util.Locale locale79 = extendedMessageFormat78.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator80 = extendedMessageFormat37.formatToCharacterIterator((java.lang.Object) locale79);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(formatArray48);
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale74);
        org.junit.Assert.assertEquals(locale74.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale79);
        org.junit.Assert.assertEquals(locale79.toString(), "en_US");
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map23);
        java.lang.String str25 = extendedMessageFormat3.format((java.lang.Object) map23);
        java.lang.String str26 = extendedMessageFormat3.toPattern();
        java.util.Locale locale28 = null;
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map29);
        java.lang.Object[] objArray32 = extendedMessageFormat30.parse("hi!");
        java.text.Format[] formatArray33 = extendedMessageFormat30.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormats(formatArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(formatArray33);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.lang.String str2 = extendedMessageFormat1.toPattern();
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        extendedMessageFormat5.applyPattern("");
        extendedMessageFormat5.applyPattern("hi!");
        java.lang.String str10 = extendedMessageFormat5.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat5.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormats(formatArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(formatArray11);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map12);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormats();
        java.util.Locale locale23 = null;
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map24);
        java.text.Format[] formatArray26 = extendedMessageFormat25.getFormatsByArgumentIndex();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map32);
        extendedMessageFormat25.setLocale(locale31);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31, map37);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        extendedMessageFormat38.setLocale(locale52);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52, map57);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52, map59);
        extendedMessageFormat14.setLocale(locale52);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str65 = extendedMessageFormat64.toPattern();
        java.text.Format[] formatArray66 = extendedMessageFormat64.getFormats();
        java.lang.String str67 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray66);
        java.lang.StringBuffer stringBuffer68 = null;
        java.text.FieldPosition fieldPosition69 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer70 = extendedMessageFormat14.format((java.lang.Object[]) formatArray66, stringBuffer68, fieldPosition69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(formatArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.text.Format[] formatArray8 = extendedMessageFormat2.getFormats();
        java.text.Format format10 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat(100, format10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(formatArray8);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.lang.String str12 = extendedMessageFormat11.toPattern();
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        extendedMessageFormat17.setLocale(locale23);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23);
        extendedMessageFormat11.setLocale(locale23);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map29);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        java.util.Locale locale40 = null;
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale40, map41);
        java.text.Format[] formatArray43 = extendedMessageFormat42.getFormatsByArgumentIndex();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map49);
        extendedMessageFormat42.setLocale(locale48);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48, map54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48, map57);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map59);
        extendedMessageFormat32.setLocale(locale48);
        java.lang.StringBuffer stringBuffer62 = null;
        java.text.FieldPosition fieldPosition63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer64 = extendedMessageFormat30.format((java.lang.Object) locale48, stringBuffer62, fieldPosition63);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray43);
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray8 = extendedMessageFormat3.parse("hi!", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.ParsePosition parsePosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray13 = extendedMessageFormat10.parse("hi!", parsePosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        java.util.Locale locale15 = extendedMessageFormat3.getLocale();
        java.lang.String str16 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray17 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.lang.String str18 = extendedMessageFormat3.toPattern();
        java.util.Locale locale20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        java.util.Locale locale23 = null;
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map24);
        java.lang.String str26 = extendedMessageFormat21.format((java.lang.Object) locale23);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        extendedMessageFormat29.applyPattern("");
        extendedMessageFormat29.applyPattern("hi!");
        java.lang.Object[] objArray35 = extendedMessageFormat29.parse("hi!");
        java.text.AttributedCharacterIterator attributedCharacterIterator36 = extendedMessageFormat21.formatToCharacterIterator((java.lang.Object) objArray35);
        java.text.Format[] formatArray37 = extendedMessageFormat21.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormats(formatArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(attributedCharacterIterator36);
        org.junit.Assert.assertNotNull(formatArray37);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat13.applyPattern("");
        java.lang.String str16 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray17 = extendedMessageFormat13.getFormats();
        java.text.Format[] formatArray18 = extendedMessageFormat13.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat10.setFormatByArgumentIndex((-1), (java.text.Format) extendedMessageFormat13);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(formatArray18);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object[] objArray8 = extendedMessageFormat2.parse("hi!");
        extendedMessageFormat2.applyPattern("");
        java.text.Format[] formatArray11 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Locale locale13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        extendedMessageFormat14.applyPattern("hi!");
        java.lang.Object obj17 = extendedMessageFormat14.clone();
        boolean boolean18 = extendedMessageFormat2.equals((java.lang.Object) extendedMessageFormat14);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale6 = extendedMessageFormat3.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormat(10, (java.text.Format) extendedMessageFormat14);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map39);
        extendedMessageFormat1.setLocale(locale36);
        java.lang.String str42 = extendedMessageFormat1.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = extendedMessageFormat1.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        extendedMessageFormat4.setLocale(locale13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        extendedMessageFormat15.applyPattern("hi!");
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.text.Format[] formatArray34 = extendedMessageFormat33.getFormatsByArgumentIndex();
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41, map42);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41, map44);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41, map46);
        extendedMessageFormat33.setLocale(locale41);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat15.setFormat((int) (short) 10, (java.text.Format) extendedMessageFormat33);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray34);
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map26);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41);
        extendedMessageFormat27.setLocale(locale41);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41, map44);
        extendedMessageFormat6.setLocale(locale41);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        java.lang.String str50 = extendedMessageFormat49.toPattern();
        java.lang.Object[] objArray52 = extendedMessageFormat49.parse("hi!");
        java.text.Format[] formatArray53 = extendedMessageFormat49.getFormatsByArgumentIndex();
        java.util.Locale locale55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        java.lang.String str58 = extendedMessageFormat49.format((java.lang.Object) locale57);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map60);
        extendedMessageFormat61.applyPattern("");
        java.util.Locale locale66 = null;
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map67);
        java.lang.String str69 = extendedMessageFormat68.toPattern();
        java.text.Format[] formatArray70 = extendedMessageFormat68.getFormats();
        java.lang.String str71 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray70);
        java.lang.String str72 = extendedMessageFormat61.format((java.lang.Object) formatArray70);
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map77);
        java.util.Locale locale79 = extendedMessageFormat78.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale79);
        java.util.Map map81 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79, map81);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79);
        extendedMessageFormat61.setLocale(locale79);
        extendedMessageFormat49.setLocale(locale79);
        extendedMessageFormat6.setLocale(locale79);
        java.text.Format[] formatArray87 = extendedMessageFormat6.getFormats();
        java.util.Locale locale89 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat90 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale89);
        extendedMessageFormat90.applyPattern("hi!");
        java.util.Locale locale93 = null;
        extendedMessageFormat90.setLocale(locale93);
        java.text.Format[] formatArray95 = extendedMessageFormat90.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat6.setFormatsByArgumentIndex(formatArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(formatArray53);
        org.junit.Assert.assertNull(locale57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(formatArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(locale79);
        org.junit.Assert.assertEquals(locale79.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray87);
        org.junit.Assert.assertNotNull(formatArray95);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        java.lang.String str18 = extendedMessageFormat17.toPattern();
        java.util.Locale locale19 = extendedMessageFormat17.getLocale();
        extendedMessageFormat17.applyPattern("hi!");
        java.lang.Object obj23 = extendedMessageFormat17.parseObject("hi!");
        java.text.Format[] formatArray24 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer25 = null;
        java.text.FieldPosition fieldPosition26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer27 = extendedMessageFormat13.format((java.lang.Object[]) formatArray24, stringBuffer25, fieldPosition26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(locale19);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(formatArray24);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map7);
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.String str18 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.StringBuffer stringBuffer19 = null;
        java.text.FieldPosition fieldPosition20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer21 = extendedMessageFormat8.format((java.lang.Object[]) formatArray16, stringBuffer19, fieldPosition20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map43);
        java.text.ParsePosition parsePosition46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray47 = extendedMessageFormat44.parse("", parsePosition46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.lang.String str18 = extendedMessageFormat15.toPattern();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        java.lang.Class<?> wildcardClass27 = extendedMessageFormat25.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator28 = extendedMessageFormat15.formatToCharacterIterator((java.lang.Object) wildcardClass27);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        extendedMessageFormat11.applyPattern("hi!");
        extendedMessageFormat11.applyPattern("hi!");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map22);
        java.text.Format[] formatArray24 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map30);
        extendedMessageFormat23.setLocale(locale29);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map35);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map48);
        java.util.Locale locale50 = extendedMessageFormat49.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale50);
        extendedMessageFormat36.setLocale(locale50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map59);
        java.util.Locale locale61 = extendedMessageFormat60.getLocale();
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61, map62);
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61, map64);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61, map66);
        java.text.Format[] formatArray68 = extendedMessageFormat67.getFormats();
        java.lang.String str69 = extendedMessageFormat54.format((java.lang.Object) formatArray68);
        java.text.Format[] formatArray70 = extendedMessageFormat54.getFormats();
        extendedMessageFormat54.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator73 = extendedMessageFormat11.formatToCharacterIterator((java.lang.Object) extendedMessageFormat54);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(formatArray70);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        extendedMessageFormat23.setLocale(locale37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map42);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map44);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray48 = extendedMessageFormat46.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.lang.String str7 = extendedMessageFormat2.format((java.lang.Object) locale4);
        extendedMessageFormat2.applyPattern("");
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map19);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat(0, (java.text.Format) extendedMessageFormat20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map14);
        java.lang.StringBuffer stringBuffer16 = null;
        java.text.FieldPosition fieldPosition17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer18 = extendedMessageFormat11.format((java.lang.Object) "", stringBuffer16, fieldPosition17);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        extendedMessageFormat4.setLocale(locale13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.lang.Object obj17 = null;
        java.lang.StringBuffer stringBuffer18 = null;
        java.text.FieldPosition fieldPosition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer20 = extendedMessageFormat15.format(obj17, stringBuffer18, fieldPosition19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray7 = extendedMessageFormat3.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.lang.String str6 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = extendedMessageFormat3.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(formatArray7);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map25);
        java.lang.String str27 = extendedMessageFormat26.toPattern();
        java.lang.Object[] objArray29 = new java.lang.Object[] { formatArray16, str27, 1 };
        java.lang.String str30 = java.text.MessageFormat.format("", objArray29);
        java.lang.String str31 = java.text.MessageFormat.format("hi!", objArray29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = extendedMessageFormat6.format((java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[[], , 1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map12);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.text.Format[] formatArray22 = extendedMessageFormat21.getFormatsByArgumentIndex();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map28);
        extendedMessageFormat21.setLocale(locale27);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27, map33);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map44);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        extendedMessageFormat34.setLocale(locale48);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48, map51);
        java.lang.Object obj54 = extendedMessageFormat52.parseObject("hi!");
        extendedMessageFormat52.applyPattern("hi!");
        extendedMessageFormat52.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator59 = extendedMessageFormat14.formatToCharacterIterator((java.lang.Object) extendedMessageFormat52);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray22);
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.text.Format[] formatArray8 = extendedMessageFormat2.getFormats();
        java.util.Locale locale11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11);
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.lang.String str17 = extendedMessageFormat12.format((java.lang.Object) locale14);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        extendedMessageFormat20.applyPattern("");
        extendedMessageFormat20.applyPattern("hi!");
        java.lang.Object[] objArray26 = extendedMessageFormat20.parse("hi!");
        java.text.AttributedCharacterIterator attributedCharacterIterator27 = extendedMessageFormat12.formatToCharacterIterator((java.lang.Object) objArray26);
        java.lang.String str28 = java.text.MessageFormat.format("hi!", objArray26);
        java.lang.StringBuffer stringBuffer29 = null;
        java.text.FieldPosition fieldPosition30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer31 = extendedMessageFormat2.format(objArray26, stringBuffer29, fieldPosition30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(attributedCharacterIterator27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Locale locale5 = null;
        extendedMessageFormat2.setLocale(locale5);
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.lang.Object[] objArray12 = extendedMessageFormat10.parse("hi!");
        java.util.Locale locale18 = null;
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map19);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormatsByArgumentIndex();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        extendedMessageFormat20.setLocale(locale26);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26, map32);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26, map35);
        extendedMessageFormat10.setLocale(locale26);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = extendedMessageFormat2.format((java.lang.Object) extendedMessageFormat10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        extendedMessageFormat9.setLocale(locale18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = extendedMessageFormat2.format((java.lang.Object) locale21);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map20);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18);
        extendedMessageFormat11.setLocale(locale18);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map24);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator30 = extendedMessageFormat25.formatToCharacterIterator((java.lang.Object) locale29);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        extendedMessageFormat19.setLocale(locale33);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map36);
        java.lang.Object obj39 = extendedMessageFormat37.parseObject("hi!");
        java.lang.Object[] objArray40 = null;
        java.lang.StringBuffer stringBuffer41 = null;
        java.text.FieldPosition fieldPosition42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer43 = extendedMessageFormat37.format(objArray40, stringBuffer41, fieldPosition42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj39);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.lang.String str12 = extendedMessageFormat11.toPattern();
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        extendedMessageFormat17.setLocale(locale23);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23);
        extendedMessageFormat11.setLocale(locale23);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map29);
        java.lang.Class<?> wildcardClass31 = extendedMessageFormat30.getClass();
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Locale locale5 = null;
        extendedMessageFormat2.setLocale(locale5);
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map12);
        java.text.Format[] formatArray14 = extendedMessageFormat13.getFormatsByArgumentIndex();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        extendedMessageFormat13.setLocale(locale19);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map23);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map25);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map38);
        java.util.Locale locale40 = extendedMessageFormat39.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale40);
        extendedMessageFormat26.setLocale(locale40);
        java.util.Locale locale43 = extendedMessageFormat26.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator44 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) extendedMessageFormat26);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map39);
        extendedMessageFormat1.setLocale(locale36);
        java.util.Locale locale42 = extendedMessageFormat1.getLocale();
        java.lang.String str43 = extendedMessageFormat1.toPattern();
        java.util.Locale locale47 = null;
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47, map48);
        java.text.Format[] formatArray50 = extendedMessageFormat49.getFormatsByArgumentIndex();
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map53);
        java.util.Locale locale55 = extendedMessageFormat54.getLocale();
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map56);
        extendedMessageFormat49.setLocale(locale55);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat61.applyPattern("hi!");
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map65);
        extendedMessageFormat66.applyPattern("");
        java.util.Locale locale71 = null;
        java.util.Map map72 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale71, map72);
        java.lang.String str74 = extendedMessageFormat73.toPattern();
        java.text.Format[] formatArray75 = extendedMessageFormat73.getFormats();
        java.lang.String str76 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray75);
        java.lang.String str77 = extendedMessageFormat66.format((java.lang.Object) formatArray75);
        java.util.Map map82 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map82);
        java.util.Locale locale84 = extendedMessageFormat83.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale84);
        java.util.Map map86 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat87 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale84, map86);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat88 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale84);
        extendedMessageFormat66.setLocale(locale84);
        extendedMessageFormat61.setLocale(locale84);
        extendedMessageFormat59.setLocale(locale84);
        java.lang.String str92 = extendedMessageFormat59.toPattern();
        extendedMessageFormat59.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormat((int) '4', (java.text.Format) extendedMessageFormat59);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(formatArray50);
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(formatArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(locale84);
        org.junit.Assert.assertEquals(locale84.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!" + "'", str92, "hi!");
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.lang.Object obj14 = null;
        boolean boolean15 = extendedMessageFormat3.equals(obj14);
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map50);
        java.text.Format[] formatArray52 = extendedMessageFormat51.getFormats();
        java.lang.String str53 = extendedMessageFormat38.format((java.lang.Object) formatArray52);
        java.text.Format[] formatArray54 = extendedMessageFormat38.getFormats();
        extendedMessageFormat38.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray58 = extendedMessageFormat38.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(formatArray54);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray8 = extendedMessageFormat2.parse("hi!", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        extendedMessageFormat15.setLocale(locale21);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map27);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        extendedMessageFormat28.setLocale(locale42);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42, map45);
        extendedMessageFormat7.setLocale(locale42);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray50 = extendedMessageFormat48.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Locale locale5 = null;
        extendedMessageFormat2.setLocale(locale5);
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.lang.Object[] objArray12 = extendedMessageFormat9.parse("hi!");
        java.lang.StringBuffer stringBuffer13 = null;
        java.text.FieldPosition fieldPosition14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer15 = extendedMessageFormat2.format(objArray12, stringBuffer13, fieldPosition14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.util.Locale locale22 = null;
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = extendedMessageFormat20.format((java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map11);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormats();
        java.util.Locale locale24 = null;
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map25);
        java.text.Format[] formatArray27 = extendedMessageFormat26.getFormatsByArgumentIndex();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map33);
        extendedMessageFormat26.setLocale(locale32);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32, map38);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map45);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53);
        extendedMessageFormat39.setLocale(locale53);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map58);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map60);
        extendedMessageFormat15.setLocale(locale53);
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map63);
        java.text.Format[] formatArray65 = extendedMessageFormat64.getFormatsByArgumentIndex();
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map70);
        java.util.Locale locale72 = extendedMessageFormat71.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale72);
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale72, map74);
        java.util.Map map76 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale72, map76);
        extendedMessageFormat77.applyPattern("hi!");
        extendedMessageFormat77.applyPattern("hi!");
        java.text.Format[] formatArray82 = extendedMessageFormat77.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat64.setFormats(formatArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray65);
        org.junit.Assert.assertNotNull(locale72);
        org.junit.Assert.assertEquals(locale72.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray82);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.String str14 = extendedMessageFormat3.toPattern();
        java.util.Locale locale17 = null;
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map18);
        java.text.Format[] formatArray20 = extendedMessageFormat19.getFormatsByArgumentIndex();
        java.text.Format[] formatArray21 = extendedMessageFormat19.getFormatsByArgumentIndex();
        java.lang.String str22 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray21);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormats(formatArray21);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.text.ParsePosition parsePosition40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = extendedMessageFormat38.parseObject("", parsePosition40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.lang.String str17 = extendedMessageFormat11.format((java.lang.Object) formatArray16);
        java.lang.Object obj18 = extendedMessageFormat11.clone();
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(obj18);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        extendedMessageFormat11.applyPattern("hi!");
        extendedMessageFormat11.applyPattern("hi!");
        java.text.Format[] formatArray16 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.lang.Object obj18 = extendedMessageFormat11.parseObject("hi!");
        java.util.Locale locale20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        extendedMessageFormat21.applyPattern("hi!");
        java.util.Locale locale24 = null;
        extendedMessageFormat21.setLocale(locale24);
        java.text.Format[] formatArray26 = extendedMessageFormat21.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat11.setFormats(formatArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(formatArray26);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map14);
        java.lang.String str16 = extendedMessageFormat2.format((java.lang.Object) map14);
        java.util.Locale locale17 = extendedMessageFormat2.getLocale();
        java.lang.Object[] objArray19 = extendedMessageFormat2.parse("hi!");
        java.lang.Object obj20 = extendedMessageFormat2.clone();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        java.lang.String str28 = extendedMessageFormat10.toPattern();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        extendedMessageFormat31.applyPattern("");
        extendedMessageFormat31.applyPattern("hi!");
        java.lang.String str36 = extendedMessageFormat31.toPattern();
        java.text.Format[] formatArray37 = extendedMessageFormat31.getFormats();
        java.text.AttributedCharacterIterator attributedCharacterIterator38 = extendedMessageFormat10.formatToCharacterIterator((java.lang.Object) formatArray37);
        java.text.Format format40 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat10.setFormat((int) '#', format40);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(formatArray37);
        org.junit.Assert.assertNotNull(attributedCharacterIterator38);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.lang.Object[] objArray11 = extendedMessageFormat8.parse("hi!");
        java.text.Format[] formatArray12 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.lang.Class<?> wildcardClass13 = extendedMessageFormat8.getClass();
        boolean boolean14 = extendedMessageFormat3.equals((java.lang.Object) extendedMessageFormat8);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.lang.Class<?> wildcardClass39 = locale34.getClass();
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map14);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.lang.String str17 = extendedMessageFormat16.toPattern();
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map21);
        java.text.Format[] formatArray23 = extendedMessageFormat22.getFormatsByArgumentIndex();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map29);
        extendedMessageFormat22.setLocale(locale28);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        extendedMessageFormat16.setLocale(locale28);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        extendedMessageFormat36.applyPattern("");
        java.util.Locale locale41 = null;
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41, map42);
        java.lang.String str44 = extendedMessageFormat43.toPattern();
        java.text.Format[] formatArray45 = extendedMessageFormat43.getFormats();
        java.lang.String str46 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray45);
        java.lang.String str47 = extendedMessageFormat36.format((java.lang.Object) formatArray45);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map56);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54);
        extendedMessageFormat36.setLocale(locale54);
        extendedMessageFormat16.setLocale(locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54);
        java.text.Format[] formatArray62 = extendedMessageFormat61.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat((int) (byte) -1, (java.text.Format) extendedMessageFormat61);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(formatArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray62);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.util.Locale locale17 = null;
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map18);
        java.text.Format[] formatArray20 = extendedMessageFormat19.getFormatsByArgumentIndex();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map26);
        extendedMessageFormat19.setLocale(locale25);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat31.applyPattern("hi!");
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        extendedMessageFormat36.applyPattern("");
        java.util.Locale locale41 = null;
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41, map42);
        java.lang.String str44 = extendedMessageFormat43.toPattern();
        java.text.Format[] formatArray45 = extendedMessageFormat43.getFormats();
        java.lang.String str46 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray45);
        java.lang.String str47 = extendedMessageFormat36.format((java.lang.Object) formatArray45);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map56);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54);
        extendedMessageFormat36.setLocale(locale54);
        extendedMessageFormat31.setLocale(locale54);
        extendedMessageFormat29.setLocale(locale54);
        boolean boolean62 = extendedMessageFormat14.equals((java.lang.Object) locale54);
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(formatArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map16);
        extendedMessageFormat17.applyPattern("");
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.text.Format[] formatArray26 = extendedMessageFormat23.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat17.setFormatByArgumentIndex((int) ' ', (java.text.Format) extendedMessageFormat23);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertNotNull(formatArray26);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.lang.Object[] objArray11 = extendedMessageFormat8.parse("hi!");
        java.text.Format[] formatArray12 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) formatArray12);
        java.util.Locale locale14 = extendedMessageFormat3.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        extendedMessageFormat17.applyPattern("");
        extendedMessageFormat17.applyPattern("hi!");
        java.lang.String str22 = extendedMessageFormat17.toPattern();
        java.lang.String str23 = extendedMessageFormat17.toPattern();
        java.text.Format[] formatArray24 = extendedMessageFormat17.getFormats();
        java.lang.String str25 = extendedMessageFormat3.format((java.lang.Object) formatArray24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray27 = extendedMessageFormat3.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNull(locale14);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.lang.String str6 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.lang.String str8 = extendedMessageFormat3.toPattern();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        extendedMessageFormat11.applyPattern("");
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        java.lang.String str19 = extendedMessageFormat18.toPattern();
        java.text.Format[] formatArray20 = extendedMessageFormat18.getFormats();
        java.lang.String str21 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray20);
        java.lang.String str22 = extendedMessageFormat11.format((java.lang.Object) formatArray20);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map31);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29);
        extendedMessageFormat11.setLocale(locale29);
        boolean boolean35 = extendedMessageFormat3.equals((java.lang.Object) locale29);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.String str18 = extendedMessageFormat7.format((java.lang.Object) formatArray16);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat7.setLocale(locale25);
        extendedMessageFormat2.setLocale(locale25);
        java.util.Locale locale32 = extendedMessageFormat2.getLocale();
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale37 = null;
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map38);
        java.text.Format[] formatArray40 = extendedMessageFormat39.getFormatsByArgumentIndex();
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        extendedMessageFormat39.setLocale(locale45);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map49);
        extendedMessageFormat50.applyPattern("");
        java.lang.String str53 = extendedMessageFormat50.toPattern();
        java.util.Locale locale54 = extendedMessageFormat50.getLocale();
        extendedMessageFormat2.setLocale(locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        java.text.Format[] formatArray57 = extendedMessageFormat56.getFormats();
        java.text.ParsePosition parsePosition59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj60 = extendedMessageFormat56.parseObject("hi!", parsePosition59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray40);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray57);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        extendedMessageFormat24.applyPattern("");
        java.util.Locale locale29 = null;
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map30);
        java.lang.String str32 = extendedMessageFormat31.toPattern();
        java.text.Format[] formatArray33 = extendedMessageFormat31.getFormats();
        java.lang.String str34 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray33);
        java.lang.String str35 = extendedMessageFormat24.format((java.lang.Object) formatArray33);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map44);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42);
        extendedMessageFormat24.setLocale(locale42);
        java.lang.String str48 = extendedMessageFormat24.toPattern();
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.lang.String str52 = extendedMessageFormat51.toPattern();
        java.lang.Object[] objArray54 = extendedMessageFormat51.parse("hi!");
        java.text.AttributedCharacterIterator attributedCharacterIterator55 = extendedMessageFormat24.formatToCharacterIterator((java.lang.Object) objArray54);
        boolean boolean56 = extendedMessageFormat21.equals((java.lang.Object) attributedCharacterIterator55);
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(formatArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(attributedCharacterIterator55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer19 = null;
        java.text.FieldPosition fieldPosition20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer21 = extendedMessageFormat1.format((java.lang.Object[]) formatArray18, stringBuffer19, fieldPosition20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.lang.StringBuffer stringBuffer6 = null;
        java.text.FieldPosition fieldPosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer8 = extendedMessageFormat1.format((java.lang.Object) extendedMessageFormat5, stringBuffer6, fieldPosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map11);
        java.lang.String str13 = extendedMessageFormat12.toPattern();
        java.text.ParsePosition parsePosition15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray16 = extendedMessageFormat12.parse("hi!", parsePosition15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map12);
        java.text.Format[] formatArray14 = extendedMessageFormat13.getFormatsByArgumentIndex();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        extendedMessageFormat13.setLocale(locale19);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map23);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map25);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map28);
        extendedMessageFormat3.setLocale(locale19);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48);
        extendedMessageFormat41.setLocale(locale48);
        boolean boolean54 = extendedMessageFormat3.equals((java.lang.Object) extendedMessageFormat41);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray15 = extendedMessageFormat3.parse("hi!");
        java.lang.Object obj16 = null;
        boolean boolean17 = extendedMessageFormat3.equals(obj16);
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.text.ParsePosition parsePosition21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray22 = extendedMessageFormat18.parse("hi!", parsePosition21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map16);
        extendedMessageFormat17.applyPattern("");
        java.lang.Object obj20 = null;
        java.lang.StringBuffer stringBuffer21 = null;
        java.text.FieldPosition fieldPosition22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer23 = extendedMessageFormat17.format(obj20, stringBuffer21, fieldPosition22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map39);
        extendedMessageFormat1.setLocale(locale36);
        java.lang.String str42 = extendedMessageFormat1.toPattern();
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map45);
        java.lang.String str47 = extendedMessageFormat46.toPattern();
        java.lang.Object[] objArray49 = extendedMessageFormat46.parse("hi!");
        java.text.Format[] formatArray50 = extendedMessageFormat46.getFormatsByArgumentIndex();
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map54);
        java.util.Locale locale56 = extendedMessageFormat55.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale56);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale56, map58);
        java.lang.String str60 = extendedMessageFormat46.format((java.lang.Object) map58);
        java.util.Locale locale61 = extendedMessageFormat46.getLocale();
        java.lang.Object[] objArray63 = extendedMessageFormat46.parse("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatByArgumentIndex(0, (java.text.Format) extendedMessageFormat46);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(formatArray50);
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.text.Format[] formatArray20 = extendedMessageFormat18.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray22 = extendedMessageFormat18.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray20);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.lang.String str24 = extendedMessageFormat14.toPattern();
        java.lang.Object[] objArray26 = extendedMessageFormat14.parse("hi!");
        java.text.Format[] formatArray27 = extendedMessageFormat14.getFormats();
        java.lang.String str28 = extendedMessageFormat10.format((java.lang.Object) formatArray27);
        java.text.Format format30 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat10.setFormatByArgumentIndex(0, format30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj3 = extendedMessageFormat1.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        extendedMessageFormat1.applyPattern("");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat6.applyPattern("hi!");
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        extendedMessageFormat11.applyPattern("");
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        java.lang.String str19 = extendedMessageFormat18.toPattern();
        java.text.Format[] formatArray20 = extendedMessageFormat18.getFormats();
        java.lang.String str21 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray20);
        java.lang.String str22 = extendedMessageFormat11.format((java.lang.Object) formatArray20);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map31);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29);
        extendedMessageFormat11.setLocale(locale29);
        extendedMessageFormat6.setLocale(locale29);
        boolean boolean36 = extendedMessageFormat1.equals((java.lang.Object) extendedMessageFormat6);
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        extendedMessageFormat3.setLocale(locale16);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.lang.String str27 = extendedMessageFormat26.toPattern();
        java.lang.Object[] objArray29 = extendedMessageFormat26.parse("hi!");
        java.text.Format[] formatArray30 = extendedMessageFormat26.getFormatsByArgumentIndex();
        java.util.Locale locale32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        java.lang.String str35 = extendedMessageFormat26.format((java.lang.Object) locale34);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        extendedMessageFormat38.applyPattern("");
        java.util.Locale locale43 = null;
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43, map44);
        java.lang.String str46 = extendedMessageFormat45.toPattern();
        java.text.Format[] formatArray47 = extendedMessageFormat45.getFormats();
        java.lang.String str48 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray47);
        java.lang.String str49 = extendedMessageFormat38.format((java.lang.Object) formatArray47);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map54);
        java.util.Locale locale56 = extendedMessageFormat55.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale56);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale56, map58);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale56);
        extendedMessageFormat38.setLocale(locale56);
        extendedMessageFormat26.setLocale(locale56);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale56);
        java.util.Locale locale64 = extendedMessageFormat63.getLocale();
        java.lang.StringBuffer stringBuffer65 = null;
        java.text.FieldPosition fieldPosition66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer67 = extendedMessageFormat3.format((java.lang.Object) locale64, stringBuffer65, fieldPosition66);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertNull(locale34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(formatArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale64);
        org.junit.Assert.assertEquals(locale64.toString(), "en_US");
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.lang.Object[] objArray6 = extendedMessageFormat4.parse("hi!");
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.lang.Object[] objArray12 = extendedMessageFormat9.parse("hi!");
        java.text.Format[] formatArray13 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator14 = extendedMessageFormat4.formatToCharacterIterator((java.lang.Object) formatArray13);
        java.util.Locale locale15 = extendedMessageFormat4.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        extendedMessageFormat18.applyPattern("");
        extendedMessageFormat18.applyPattern("hi!");
        java.lang.String str23 = extendedMessageFormat18.toPattern();
        java.lang.String str24 = extendedMessageFormat18.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat18.getFormats();
        java.lang.String str26 = extendedMessageFormat4.format((java.lang.Object) formatArray25);
        java.lang.String str27 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray25);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(attributedCharacterIterator14);
        org.junit.Assert.assertNull(locale15);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map20);
        java.text.Format[] formatArray22 = extendedMessageFormat21.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat6.setFormatsByArgumentIndex(formatArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray22);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map19);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17);
        extendedMessageFormat10.setLocale(locale17);
        java.util.Locale locale25 = null;
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25, map26);
        java.text.Format[] formatArray28 = extendedMessageFormat27.getFormatsByArgumentIndex();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map34);
        extendedMessageFormat27.setLocale(locale33);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map37);
        extendedMessageFormat38.applyPattern("");
        java.util.Locale locale41 = extendedMessageFormat38.getLocale();
        extendedMessageFormat38.applyPattern("");
        java.lang.StringBuffer stringBuffer44 = null;
        java.text.FieldPosition fieldPosition45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer46 = extendedMessageFormat10.format((java.lang.Object) extendedMessageFormat38, stringBuffer44, fieldPosition45);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray28);
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.text.Format[] formatArray16 = extendedMessageFormat13.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = extendedMessageFormat1.format((java.lang.Object) extendedMessageFormat13);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(formatArray16);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        extendedMessageFormat4.setLocale(locale13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        extendedMessageFormat15.applyPattern("hi!");
        java.lang.Object obj19 = extendedMessageFormat15.parseObject("hi!");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.lang.Object[] objArray25 = extendedMessageFormat22.parse("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat15.setFormat((int) '#', (java.text.Format) extendedMessageFormat22);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        java.lang.String str13 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        java.lang.Object[] objArray16 = new java.lang.Object[] {};
        java.lang.String str17 = java.text.MessageFormat.format("hi!", objArray16);
        java.lang.String str18 = java.text.MessageFormat.format("", objArray16);
        java.lang.StringBuffer stringBuffer19 = null;
        java.text.FieldPosition fieldPosition20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer21 = extendedMessageFormat2.format(objArray16, stringBuffer19, fieldPosition20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        java.text.ParsePosition parsePosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = extendedMessageFormat9.parseObject("hi!", parsePosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale18 = extendedMessageFormat15.getLocale();
        extendedMessageFormat15.applyPattern("");
        java.text.ParsePosition parsePosition22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = extendedMessageFormat15.parseObject("", parsePosition22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        extendedMessageFormat20.applyPattern("hi!");
        java.lang.StringBuffer stringBuffer23 = null;
        java.text.FieldPosition fieldPosition24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer25 = extendedMessageFormat2.format((java.lang.Object) "hi!", stringBuffer23, fieldPosition24);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.lang.String str7 = extendedMessageFormat2.format((java.lang.Object) locale4);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        extendedMessageFormat10.applyPattern("");
        extendedMessageFormat10.applyPattern("hi!");
        java.lang.Object[] objArray16 = extendedMessageFormat10.parse("hi!");
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) objArray16);
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26, map27);
        java.text.Format[] formatArray29 = extendedMessageFormat28.getFormatsByArgumentIndex();
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map35);
        extendedMessageFormat28.setLocale(locale34);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34, map40);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map51);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map53);
        java.util.Locale locale55 = extendedMessageFormat54.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55);
        extendedMessageFormat41.setLocale(locale55);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55, map60);
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55, map62);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatByArgumentIndex((int) '#', (java.text.Format) extendedMessageFormat63);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(formatArray29);
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_US");
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map7);
        extendedMessageFormat8.applyPattern("hi!");
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        extendedMessageFormat13.applyPattern("");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map22);
        java.text.Format[] formatArray24 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map30);
        extendedMessageFormat23.setLocale(locale29);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map35);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map48);
        java.util.Locale locale50 = extendedMessageFormat49.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale50);
        extendedMessageFormat36.setLocale(locale50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map59);
        java.util.Locale locale61 = extendedMessageFormat60.getLocale();
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61, map62);
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61, map64);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61, map66);
        java.text.Format[] formatArray68 = extendedMessageFormat67.getFormats();
        java.lang.String str69 = extendedMessageFormat54.format((java.lang.Object) formatArray68);
        java.text.AttributedCharacterIterator attributedCharacterIterator70 = extendedMessageFormat13.formatToCharacterIterator((java.lang.Object) formatArray68);
        java.text.Format[] formatArray71 = extendedMessageFormat13.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer72 = null;
        java.text.FieldPosition fieldPosition73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer74 = extendedMessageFormat8.format((java.lang.Object[]) formatArray71, stringBuffer72, fieldPosition73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(attributedCharacterIterator70);
        org.junit.Assert.assertNotNull(formatArray71);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1);
        java.text.ParsePosition parsePosition4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = extendedMessageFormat2.parseObject("hi!", parsePosition4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.lang.String str21 = extendedMessageFormat20.toPattern();
        java.util.Locale locale24 = null;
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map25);
        java.lang.Object[] objArray28 = extendedMessageFormat26.parse("hi!");
        java.util.Locale locale29 = extendedMessageFormat26.getLocale();
        extendedMessageFormat26.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat20.setFormat((int) (short) 0, (java.text.Format) extendedMessageFormat26);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNull(locale29);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map39);
        extendedMessageFormat1.setLocale(locale36);
        java.util.Locale locale43 = null;
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43, map44);
        java.text.Format[] formatArray46 = extendedMessageFormat45.getFormatsByArgumentIndex();
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map49);
        java.util.Locale locale51 = extendedMessageFormat50.getLocale();
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        extendedMessageFormat45.setLocale(locale54);
        java.text.Format[] formatArray56 = extendedMessageFormat45.getFormats();
        java.lang.StringBuffer stringBuffer57 = null;
        java.text.FieldPosition fieldPosition58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer59 = extendedMessageFormat1.format((java.lang.Object[]) formatArray56, stringBuffer57, fieldPosition58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray46);
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray56);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map39);
        extendedMessageFormat1.setLocale(locale36);
        java.lang.String str42 = extendedMessageFormat1.toPattern();
        java.util.Locale locale47 = null;
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47, map48);
        java.text.Format[] formatArray50 = extendedMessageFormat49.getFormatsByArgumentIndex();
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map53);
        java.util.Locale locale55 = extendedMessageFormat54.getLocale();
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map56);
        extendedMessageFormat49.setLocale(locale55);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map59);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55, map61);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55);
        java.text.Format[] formatArray64 = extendedMessageFormat63.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormats(formatArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(formatArray50);
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray64);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map14);
        java.lang.String str16 = extendedMessageFormat2.format((java.lang.Object) map14);
        java.util.Locale locale17 = extendedMessageFormat2.getLocale();
        java.text.ParsePosition parsePosition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = extendedMessageFormat2.parseObject("hi!", parsePosition19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object[] objArray8 = extendedMessageFormat2.parse("hi!");
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        extendedMessageFormat15.setLocale(locale24);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat26.applyPattern("hi!");
        boolean boolean29 = extendedMessageFormat2.equals((java.lang.Object) extendedMessageFormat26);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.lang.String str20 = extendedMessageFormat10.toPattern();
        extendedMessageFormat10.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator23 = extendedMessageFormat5.formatToCharacterIterator((java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        extendedMessageFormat6.applyPattern("");
        java.lang.Class<?> wildcardClass9 = extendedMessageFormat6.getClass();
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        extendedMessageFormat16.setLocale(locale25);
        java.text.Format[] formatArray27 = extendedMessageFormat16.getFormats();
        java.util.Locale locale28 = extendedMessageFormat16.getLocale();
        boolean boolean29 = extendedMessageFormat11.equals((java.lang.Object) extendedMessageFormat16);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.String str18 = extendedMessageFormat7.format((java.lang.Object) formatArray16);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat7.setLocale(locale25);
        extendedMessageFormat3.setLocale(locale25);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        java.util.Locale locale36 = null;
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map37);
        java.text.Format[] formatArray39 = extendedMessageFormat38.getFormatsByArgumentIndex();
        java.text.Format[] formatArray40 = extendedMessageFormat38.getFormats();
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49, map50);
        extendedMessageFormat38.setLocale(locale49);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map53);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat32.setFormatByArgumentIndex((int) (short) -1, (java.text.Format) extendedMessageFormat54);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertNotNull(formatArray40);
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        java.lang.String str13 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        java.text.Format[] formatArray14 = extendedMessageFormat2.getFormats();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map23);
        java.lang.String str25 = extendedMessageFormat24.toPattern();
        java.text.Format[] formatArray26 = extendedMessageFormat24.getFormats();
        java.text.Format[] formatArray27 = extendedMessageFormat24.getFormatsByArgumentIndex();
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.lang.String str39 = extendedMessageFormat38.toPattern();
        java.util.Locale locale42 = null;
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42, map43);
        java.text.Format[] formatArray45 = extendedMessageFormat44.getFormatsByArgumentIndex();
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        java.util.Locale locale50 = extendedMessageFormat49.getLocale();
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map51);
        extendedMessageFormat44.setLocale(locale50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale50);
        extendedMessageFormat38.setLocale(locale50);
        extendedMessageFormat24.setLocale(locale50);
        java.lang.StringBuffer stringBuffer57 = null;
        java.text.FieldPosition fieldPosition58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer59 = extendedMessageFormat2.format((java.lang.Object) locale50, stringBuffer57, fieldPosition58);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(formatArray45);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "en_US");
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        extendedMessageFormat3.applyPattern("hi!");
        java.lang.Object obj9 = extendedMessageFormat3.parseObject("hi!");
        java.text.Format[] formatArray10 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.lang.String str11 = extendedMessageFormat3.toPattern();
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        extendedMessageFormat17.setLocale(locale23);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map29);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37);
        extendedMessageFormat30.setLocale(locale37);
        java.text.Format[] formatArray43 = extendedMessageFormat30.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str44 = extendedMessageFormat3.format((java.lang.Object) extendedMessageFormat30);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray43);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat16.applyPattern("hi!");
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        extendedMessageFormat21.applyPattern("");
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.text.Format[] formatArray30 = extendedMessageFormat28.getFormats();
        java.lang.String str31 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray30);
        java.lang.String str32 = extendedMessageFormat21.format((java.lang.Object) formatArray30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        extendedMessageFormat21.setLocale(locale39);
        extendedMessageFormat16.setLocale(locale39);
        extendedMessageFormat14.setLocale(locale39);
        java.util.Locale locale49 = null;
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49, map50);
        java.lang.Object[] objArray53 = extendedMessageFormat51.parse("hi!");
        java.util.Locale locale57 = null;
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale57, map58);
        java.text.Format[] formatArray60 = extendedMessageFormat59.getFormatsByArgumentIndex();
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map63);
        java.util.Locale locale65 = extendedMessageFormat64.getLocale();
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map66);
        extendedMessageFormat59.setLocale(locale65);
        java.util.Map map69 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map69);
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale65, map71);
        java.lang.String str73 = extendedMessageFormat51.format((java.lang.Object) map71);
        java.lang.String str74 = extendedMessageFormat51.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat14.setFormat(0, (java.text.Format) extendedMessageFormat51);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(formatArray60);
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        extendedMessageFormat11.applyPattern("hi!");
        extendedMessageFormat11.applyPattern("hi!");
        java.text.Format[] formatArray16 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.text.Format[] formatArray17 = extendedMessageFormat11.getFormats();
        java.util.Locale locale18 = extendedMessageFormat11.getLocale();
        java.util.Locale locale23 = null;
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map24);
        java.text.Format[] formatArray26 = extendedMessageFormat25.getFormatsByArgumentIndex();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map32);
        extendedMessageFormat25.setLocale(locale31);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31, map37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31);
        java.lang.String str40 = extendedMessageFormat39.toPattern();
        java.text.Format[] formatArray41 = extendedMessageFormat39.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat11.setFormatsByArgumentIndex(formatArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(formatArray41);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale6 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat8.applyPattern("hi!");
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        extendedMessageFormat13.applyPattern("");
        java.util.Locale locale18 = null;
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        java.lang.String str21 = extendedMessageFormat20.toPattern();
        java.text.Format[] formatArray22 = extendedMessageFormat20.getFormats();
        java.lang.String str23 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray22);
        java.lang.String str24 = extendedMessageFormat13.format((java.lang.Object) formatArray22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map33);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31);
        extendedMessageFormat13.setLocale(locale31);
        extendedMessageFormat8.setLocale(locale31);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator38 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) extendedMessageFormat8);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(formatArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        extendedMessageFormat18.setLocale(locale32);
        extendedMessageFormat18.applyPattern("hi!");
        java.text.ParsePosition parsePosition38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = extendedMessageFormat18.parseObject("hi!", parsePosition38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        java.lang.String str13 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        extendedMessageFormat2.setLocale(locale20);
        java.lang.Object obj26 = extendedMessageFormat2.clone();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj26);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Locale locale5 = null;
        extendedMessageFormat2.setLocale(locale5);
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.text.ParsePosition parsePosition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = extendedMessageFormat2.parseObject("hi!", parsePosition9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray15 = extendedMessageFormat3.parse("hi!");
        java.lang.String str16 = extendedMessageFormat3.toPattern();
        java.util.Locale locale18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18);
        java.lang.StringBuffer stringBuffer20 = null;
        java.text.FieldPosition fieldPosition21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer22 = extendedMessageFormat3.format((java.lang.Object) extendedMessageFormat19, stringBuffer20, fieldPosition21);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        java.lang.String str28 = extendedMessageFormat10.toPattern();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35);
        java.lang.String str40 = extendedMessageFormat39.toPattern();
        java.util.Locale locale43 = null;
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43, map44);
        java.text.Format[] formatArray46 = extendedMessageFormat45.getFormatsByArgumentIndex();
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map49);
        java.util.Locale locale51 = extendedMessageFormat50.getLocale();
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map52);
        extendedMessageFormat45.setLocale(locale51);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale51);
        extendedMessageFormat39.setLocale(locale51);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map58);
        extendedMessageFormat59.applyPattern("");
        java.util.Locale locale64 = null;
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale64, map65);
        java.lang.String str67 = extendedMessageFormat66.toPattern();
        java.text.Format[] formatArray68 = extendedMessageFormat66.getFormats();
        java.lang.String str69 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray68);
        java.lang.String str70 = extendedMessageFormat59.format((java.lang.Object) formatArray68);
        java.util.Map map75 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map75);
        java.util.Locale locale77 = extendedMessageFormat76.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale77);
        java.util.Map map79 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale77, map79);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat81 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale77);
        extendedMessageFormat59.setLocale(locale77);
        extendedMessageFormat39.setLocale(locale77);
        java.lang.Object obj84 = extendedMessageFormat39.clone();
        boolean boolean85 = extendedMessageFormat10.equals(obj84);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(formatArray46);
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(formatArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(locale77);
        org.junit.Assert.assertEquals(locale77.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormats();
        extendedMessageFormat2.applyPattern("");
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatByArgumentIndex((int) (byte) 0, (java.text.Format) extendedMessageFormat21);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map7);
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        extendedMessageFormat15.setLocale(locale21);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21);
        java.lang.String str30 = extendedMessageFormat29.toPattern();
        java.text.Format[] formatArray31 = extendedMessageFormat29.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat8.setFormatsByArgumentIndex(formatArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(formatArray31);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Locale locale18 = null;
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map19);
        java.lang.Object[] objArray22 = extendedMessageFormat20.parse("hi!");
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.lang.String str26 = extendedMessageFormat25.toPattern();
        java.lang.Object[] objArray28 = extendedMessageFormat25.parse("hi!");
        java.text.Format[] formatArray29 = extendedMessageFormat25.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator30 = extendedMessageFormat20.formatToCharacterIterator((java.lang.Object) formatArray29);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormats(formatArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(formatArray29);
        org.junit.Assert.assertNotNull(attributedCharacterIterator30);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str2 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray3 = extendedMessageFormat1.getFormats();
        extendedMessageFormat1.applyPattern("");
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray8 = extendedMessageFormat1.parse("", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(formatArray3);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map26);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41);
        extendedMessageFormat27.setLocale(locale41);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41, map44);
        extendedMessageFormat6.setLocale(locale41);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        java.lang.String str50 = extendedMessageFormat49.toPattern();
        java.lang.Object[] objArray52 = extendedMessageFormat49.parse("hi!");
        java.text.Format[] formatArray53 = extendedMessageFormat49.getFormatsByArgumentIndex();
        java.util.Locale locale55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        java.lang.String str58 = extendedMessageFormat49.format((java.lang.Object) locale57);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map60);
        extendedMessageFormat61.applyPattern("");
        java.util.Locale locale66 = null;
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map67);
        java.lang.String str69 = extendedMessageFormat68.toPattern();
        java.text.Format[] formatArray70 = extendedMessageFormat68.getFormats();
        java.lang.String str71 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray70);
        java.lang.String str72 = extendedMessageFormat61.format((java.lang.Object) formatArray70);
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map77);
        java.util.Locale locale79 = extendedMessageFormat78.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale79);
        java.util.Map map81 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79, map81);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79);
        extendedMessageFormat61.setLocale(locale79);
        extendedMessageFormat49.setLocale(locale79);
        extendedMessageFormat6.setLocale(locale79);
        java.text.Format[] formatArray87 = extendedMessageFormat6.getFormats();
        java.util.Map map90 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat91 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map90);
        java.util.Locale locale92 = extendedMessageFormat91.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat93 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale92);
        java.text.Format[] formatArray94 = extendedMessageFormat93.getFormatsByArgumentIndex();
        java.lang.String str95 = extendedMessageFormat6.format((java.lang.Object) formatArray94);
        java.lang.Class<?> wildcardClass96 = formatArray94.getClass();
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(formatArray53);
        org.junit.Assert.assertNull(locale57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(formatArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(locale79);
        org.junit.Assert.assertEquals(locale79.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray87);
        org.junit.Assert.assertNotNull(locale92);
        org.junit.Assert.assertEquals(locale92.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "" + "'", str95, "");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale6 = extendedMessageFormat3.getLocale();
        extendedMessageFormat3.applyPattern("hi!");
        java.lang.String str9 = extendedMessageFormat3.toPattern();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        extendedMessageFormat13.applyPattern("");
        extendedMessageFormat13.applyPattern("hi!");
        java.lang.Object[] objArray19 = extendedMessageFormat13.parse("hi!");
        java.lang.String str20 = java.text.MessageFormat.format("", objArray19);
        boolean boolean21 = extendedMessageFormat3.equals((java.lang.Object) "");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.lang.Object[] objArray18 = extendedMessageFormat16.parse("hi!");
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.lang.String str22 = extendedMessageFormat21.toPattern();
        java.lang.Object[] objArray24 = extendedMessageFormat21.parse("hi!");
        java.text.Format[] formatArray25 = extendedMessageFormat21.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = extendedMessageFormat16.formatToCharacterIterator((java.lang.Object) formatArray25);
        java.lang.String str27 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray25);
        java.lang.String str28 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray25);
        java.lang.Class<?> wildcardClass29 = formatArray25.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator30 = extendedMessageFormat10.formatToCharacterIterator((java.lang.Object) wildcardClass29);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map16);
        java.text.ParsePosition parsePosition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray20 = extendedMessageFormat17.parse("", parsePosition19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.lang.String str2 = extendedMessageFormat1.toPattern();
        java.util.Locale locale5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5);
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.lang.String str11 = extendedMessageFormat6.format((java.lang.Object) locale8);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        extendedMessageFormat14.applyPattern("");
        extendedMessageFormat14.applyPattern("hi!");
        java.lang.Object[] objArray20 = extendedMessageFormat14.parse("hi!");
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = extendedMessageFormat6.formatToCharacterIterator((java.lang.Object) objArray20);
        java.lang.String str22 = java.text.MessageFormat.format("hi!", objArray20);
        java.lang.StringBuffer stringBuffer23 = null;
        java.text.FieldPosition fieldPosition24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer25 = extendedMessageFormat1.format(objArray20, stringBuffer23, fieldPosition24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale6 = extendedMessageFormat3.getLocale();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormats();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.text.Format[] formatArray12 = extendedMessageFormat9.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator13 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) extendedMessageFormat9);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(formatArray12);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        java.lang.String str13 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        extendedMessageFormat2.setLocale(locale21);
        java.text.Format[] formatArray23 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatsByArgumentIndex(formatArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.lang.String str5 = extendedMessageFormat4.toPattern();
        java.lang.Object[] objArray7 = extendedMessageFormat4.parse("hi!");
        java.text.Format[] formatArray8 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Locale locale10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.lang.String str13 = extendedMessageFormat4.format((java.lang.Object) locale12);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.lang.String str26 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray25);
        java.lang.String str27 = extendedMessageFormat16.format((java.lang.Object) formatArray25);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat16.setLocale(locale34);
        extendedMessageFormat4.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map51);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map53);
        java.util.Locale locale56 = null;
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale56, map57);
        java.text.Format[] formatArray59 = extendedMessageFormat58.getFormatsByArgumentIndex();
        java.lang.String str60 = extendedMessageFormat54.format((java.lang.Object) formatArray59);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat42.setFormats(formatArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNull(locale12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map12);
        java.util.Locale locale15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat13.setFormatsByArgumentIndex(formatArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray17);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map50);
        java.text.Format[] formatArray52 = extendedMessageFormat51.getFormats();
        java.lang.String str53 = extendedMessageFormat38.format((java.lang.Object) formatArray52);
        java.text.Format[] formatArray54 = extendedMessageFormat38.getFormats();
        extendedMessageFormat38.applyPattern("");
        java.lang.String str57 = extendedMessageFormat38.toPattern();
        java.text.Format[] formatArray58 = extendedMessageFormat38.getFormats();
        java.util.Locale locale60 = null;
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale60, map61);
        java.text.Format[] formatArray63 = extendedMessageFormat62.getFormatsByArgumentIndex();
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map66);
        java.util.Locale locale68 = extendedMessageFormat67.getLocale();
        java.util.Map map69 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68, map69);
        java.util.Locale locale71 = extendedMessageFormat70.getLocale();
        extendedMessageFormat62.setLocale(locale71);
        java.text.Format[] formatArray73 = extendedMessageFormat62.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator74 = extendedMessageFormat38.formatToCharacterIterator((java.lang.Object) extendedMessageFormat62);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(formatArray54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(formatArray58);
        org.junit.Assert.assertNotNull(formatArray63);
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale71);
        org.junit.Assert.assertEquals(locale71.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray73);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormats();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.lang.String str16 = extendedMessageFormat15.toPattern();
        java.text.Format[] formatArray17 = extendedMessageFormat15.getFormats();
        java.text.Format[] formatArray18 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.lang.String str19 = extendedMessageFormat11.format((java.lang.Object) formatArray18);
        java.util.Locale locale25 = null;
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25, map26);
        java.text.Format[] formatArray28 = extendedMessageFormat27.getFormatsByArgumentIndex();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map34);
        extendedMessageFormat27.setLocale(locale33);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map39);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        extendedMessageFormat40.setLocale(locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54);
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map63);
        java.util.Locale locale65 = extendedMessageFormat64.getLocale();
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map66);
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map68);
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map70);
        java.text.Format[] formatArray72 = extendedMessageFormat71.getFormats();
        java.lang.String str73 = extendedMessageFormat58.format((java.lang.Object) formatArray72);
        java.text.Format[] formatArray74 = extendedMessageFormat58.getFormats();
        extendedMessageFormat58.applyPattern("");
        java.lang.String str77 = extendedMessageFormat58.toPattern();
        java.text.Format[] formatArray78 = extendedMessageFormat58.getFormats();
        java.text.Format[] formatArray79 = extendedMessageFormat58.getFormats();
        java.lang.StringBuffer stringBuffer80 = null;
        java.text.FieldPosition fieldPosition81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer82 = extendedMessageFormat11.format((java.lang.Object) formatArray79, stringBuffer80, fieldPosition81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(formatArray28);
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(formatArray74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(formatArray78);
        org.junit.Assert.assertNotNull(formatArray79);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        java.lang.String str4 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat1.getFormats();
        java.text.Format[] formatArray6 = extendedMessageFormat1.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray8 = extendedMessageFormat1.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray6);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        extendedMessageFormat3.applyPattern("hi!");
        java.lang.Object obj9 = extendedMessageFormat3.parseObject("hi!");
        extendedMessageFormat3.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray13 = extendedMessageFormat3.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNotNull(obj9);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        extendedMessageFormat3.applyPattern("hi!");
        java.lang.Object obj9 = extendedMessageFormat3.parseObject("hi!");
        java.text.Format[] formatArray10 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.lang.String str11 = extendedMessageFormat3.toPattern();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        extendedMessageFormat14.applyPattern("");
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        java.lang.String str22 = extendedMessageFormat21.toPattern();
        java.text.Format[] formatArray23 = extendedMessageFormat21.getFormats();
        java.lang.String str24 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray23);
        java.lang.String str25 = extendedMessageFormat14.format((java.lang.Object) formatArray23);
        java.text.Format[] formatArray26 = extendedMessageFormat14.getFormats();
        java.lang.Class<?> wildcardClass27 = formatArray26.getClass();
        java.lang.String str28 = extendedMessageFormat3.format((java.lang.Object) formatArray26);
        java.text.ParsePosition parsePosition30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = extendedMessageFormat3.parseObject("hi!", parsePosition30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale18 = extendedMessageFormat15.getLocale();
        extendedMessageFormat15.applyPattern("");
        java.lang.Object obj21 = extendedMessageFormat15.clone();
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map16);
        extendedMessageFormat17.applyPattern("");
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        extendedMessageFormat23.applyPattern("");
        extendedMessageFormat23.applyPattern("hi!");
        java.lang.String str28 = extendedMessageFormat23.toPattern();
        java.lang.String str29 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray30 = extendedMessageFormat23.getFormats();
        java.lang.String str31 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray30);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat17.setFormats(formatArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.String str18 = extendedMessageFormat7.format((java.lang.Object) formatArray16);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat7.setLocale(locale25);
        extendedMessageFormat2.setLocale(locale25);
        java.util.Locale locale32 = extendedMessageFormat2.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        java.text.ParsePosition parsePosition36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray37 = extendedMessageFormat33.parse("hi!", parsePosition36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.text.Format[] formatArray7 = extendedMessageFormat5.getFormats();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        extendedMessageFormat5.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map22);
        java.lang.Object obj24 = extendedMessageFormat23.clone();
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj24);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map12);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map23);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21);
        extendedMessageFormat14.setLocale(locale21);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map33);
        java.text.ParsePosition parsePosition36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray37 = extendedMessageFormat34.parse("", parsePosition36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.lang.String str17 = extendedMessageFormat11.format((java.lang.Object) formatArray16);
        java.text.ParsePosition parsePosition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray20 = extendedMessageFormat11.parse("hi!", parsePosition19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map7);
        extendedMessageFormat8.applyPattern("hi!");
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        extendedMessageFormat17.setLocale(locale23);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map29);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map40);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44);
        extendedMessageFormat30.setLocale(locale44);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44, map47);
        extendedMessageFormat8.setLocale(locale44);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = extendedMessageFormat8.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        extendedMessageFormat23.setLocale(locale37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map42);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map44);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        java.lang.Class<?> wildcardClass48 = extendedMessageFormat46.getClass();
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = extendedMessageFormat2.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        extendedMessageFormat1.applyPattern("");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map15);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator20 = extendedMessageFormat1.formatToCharacterIterator((java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map1);
        java.text.Format[] formatArray3 = extendedMessageFormat2.getFormats();
        java.text.Format[] formatArray4 = extendedMessageFormat2.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = extendedMessageFormat2.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertNotNull(formatArray4);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map26);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41);
        extendedMessageFormat27.setLocale(locale41);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41, map44);
        extendedMessageFormat6.setLocale(locale41);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        java.lang.String str50 = extendedMessageFormat49.toPattern();
        java.lang.Object[] objArray52 = extendedMessageFormat49.parse("hi!");
        java.text.Format[] formatArray53 = extendedMessageFormat49.getFormatsByArgumentIndex();
        java.util.Locale locale55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        java.lang.String str58 = extendedMessageFormat49.format((java.lang.Object) locale57);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map60);
        extendedMessageFormat61.applyPattern("");
        java.util.Locale locale66 = null;
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map67);
        java.lang.String str69 = extendedMessageFormat68.toPattern();
        java.text.Format[] formatArray70 = extendedMessageFormat68.getFormats();
        java.lang.String str71 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray70);
        java.lang.String str72 = extendedMessageFormat61.format((java.lang.Object) formatArray70);
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map77);
        java.util.Locale locale79 = extendedMessageFormat78.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale79);
        java.util.Map map81 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79, map81);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79);
        extendedMessageFormat61.setLocale(locale79);
        extendedMessageFormat49.setLocale(locale79);
        extendedMessageFormat6.setLocale(locale79);
        java.text.Format[] formatArray87 = extendedMessageFormat6.getFormats();
        java.util.Locale locale89 = null;
        java.util.Map map90 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat91 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale89, map90);
        extendedMessageFormat91.applyPattern("hi!");
        boolean boolean94 = extendedMessageFormat6.equals((java.lang.Object) extendedMessageFormat91);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(formatArray53);
        org.junit.Assert.assertNull(locale57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(formatArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(locale79);
        org.junit.Assert.assertEquals(locale79.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray87);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.util.Locale locale17 = null;
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map18);
        java.text.Format[] formatArray20 = extendedMessageFormat19.getFormatsByArgumentIndex();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map26);
        extendedMessageFormat19.setLocale(locale25);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25, map30);
        extendedMessageFormat31.applyPattern("");
        java.lang.StringBuffer stringBuffer34 = null;
        java.text.FieldPosition fieldPosition35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer36 = extendedMessageFormat3.format((java.lang.Object) "", stringBuffer34, fieldPosition35);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        java.lang.String str13 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        java.text.Format[] formatArray14 = extendedMessageFormat2.getFormats();
        java.util.Locale locale15 = extendedMessageFormat2.getLocale();
        java.util.Locale locale17 = null;
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map18);
        java.text.Format[] formatArray20 = extendedMessageFormat19.getFormatsByArgumentIndex();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map26);
        extendedMessageFormat19.setLocale(locale25);
        java.lang.String str29 = extendedMessageFormat19.toPattern();
        java.lang.Object[] objArray31 = extendedMessageFormat19.parse("hi!");
        java.text.Format[] formatArray32 = extendedMessageFormat19.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatsByArgumentIndex(formatArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(formatArray32);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.lang.String str8 = extendedMessageFormat2.toPattern();
        java.text.Format[] formatArray9 = extendedMessageFormat2.getFormats();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormats(formatArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(formatArray13);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        extendedMessageFormat3.applyPattern("hi!");
        java.lang.Object obj16 = extendedMessageFormat3.clone();
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(obj16);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.lang.String str8 = extendedMessageFormat2.toPattern();
        java.text.Format[] formatArray9 = extendedMessageFormat2.getFormats();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str13 = extendedMessageFormat12.toPattern();
        java.text.Format[] formatArray14 = extendedMessageFormat12.getFormats();
        java.lang.String str15 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray14);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormats(formatArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Locale locale8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.lang.String str11 = extendedMessageFormat2.format((java.lang.Object) locale10);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        extendedMessageFormat14.applyPattern("");
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        java.lang.String str22 = extendedMessageFormat21.toPattern();
        java.text.Format[] formatArray23 = extendedMessageFormat21.getFormats();
        java.lang.String str24 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray23);
        java.lang.String str25 = extendedMessageFormat14.format((java.lang.Object) formatArray23);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32);
        extendedMessageFormat14.setLocale(locale32);
        extendedMessageFormat2.setLocale(locale32);
        java.lang.Object obj39 = null;
        java.lang.String str40 = extendedMessageFormat2.format(obj39);
        java.lang.Class<?> wildcardClass41 = extendedMessageFormat2.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNull(locale10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.lang.String str8 = extendedMessageFormat2.toPattern();
        java.util.Locale locale9 = extendedMessageFormat2.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map22);
        extendedMessageFormat23.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat(0, (java.text.Format) extendedMessageFormat23);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.util.Locale locale17 = null;
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map18);
        java.text.Format[] formatArray20 = extendedMessageFormat19.getFormatsByArgumentIndex();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map26);
        extendedMessageFormat19.setLocale(locale25);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25, map31);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map38);
        java.util.Locale locale40 = extendedMessageFormat39.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale40);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map42);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46);
        extendedMessageFormat32.setLocale(locale46);
        extendedMessageFormat3.setLocale(locale46);
        java.util.Locale locale52 = null;
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52, map53);
        java.text.Format[] formatArray55 = extendedMessageFormat54.getFormatsByArgumentIndex();
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map58);
        java.util.Locale locale60 = extendedMessageFormat59.getLocale();
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale60, map61);
        extendedMessageFormat54.setLocale(locale60);
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale60, map64);
        extendedMessageFormat65.applyPattern("");
        java.lang.String str68 = extendedMessageFormat65.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator69 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) str68);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray55);
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map14);
        java.lang.String str16 = extendedMessageFormat2.format((java.lang.Object) map14);
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        java.text.Format[] formatArray22 = extendedMessageFormat21.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatByArgumentIndex((int) (short) -1, (java.text.Format) extendedMessageFormat21);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(formatArray22);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        java.lang.Class<?> wildcardClass4 = extendedMessageFormat1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale6 = extendedMessageFormat3.getLocale();
        java.lang.Object obj7 = extendedMessageFormat3.clone();
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertNotNull(obj7);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Locale locale5 = null;
        extendedMessageFormat2.setLocale(locale5);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map19);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormatsByArgumentIndex();
        java.text.Format[] formatArray22 = extendedMessageFormat20.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat((int) (byte) 10, (java.text.Format) extendedMessageFormat20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertNotNull(formatArray22);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map23);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map28);
        extendedMessageFormat1.setLocale(locale17);
        java.lang.Class<?> wildcardClass31 = locale17.getClass();
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map1);
        java.text.Format[] formatArray3 = extendedMessageFormat2.getFormats();
        java.text.Format[] formatArray4 = extendedMessageFormat2.getFormats();
        java.text.Format[] formatArray5 = extendedMessageFormat2.getFormats();
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray8 = extendedMessageFormat2.parse("hi!", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map38);
        java.util.Locale locale41 = null;
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41, map42);
        java.lang.Object[] objArray45 = extendedMessageFormat43.parse("hi!");
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        java.lang.String str49 = extendedMessageFormat48.toPattern();
        java.lang.Object[] objArray51 = extendedMessageFormat48.parse("hi!");
        java.text.Format[] formatArray52 = extendedMessageFormat48.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator53 = extendedMessageFormat43.formatToCharacterIterator((java.lang.Object) formatArray52);
        java.util.Locale locale54 = extendedMessageFormat43.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str55 = extendedMessageFormat39.format((java.lang.Object) extendedMessageFormat43);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertNotNull(attributedCharacterIterator53);
        org.junit.Assert.assertNull(locale54);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map7);
        extendedMessageFormat8.applyPattern("hi!");
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        extendedMessageFormat17.setLocale(locale23);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map29);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map40);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44);
        extendedMessageFormat30.setLocale(locale44);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44, map47);
        extendedMessageFormat8.setLocale(locale44);
        java.text.ParsePosition parsePosition51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = extendedMessageFormat8.parseObject("", parsePosition51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map12);
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.lang.String str19 = extendedMessageFormat13.format((java.lang.Object) formatArray18);
        java.lang.String str20 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray18);
        java.lang.String str21 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray18);
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.lang.String str17 = extendedMessageFormat7.toPattern();
        java.lang.Object obj19 = extendedMessageFormat7.parseObject("hi!");
        boolean boolean20 = extendedMessageFormat1.equals(obj19);
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        extendedMessageFormat4.setLocale(locale13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        extendedMessageFormat15.applyPattern("hi!");
        java.lang.Object obj19 = extendedMessageFormat15.parseObject("hi!");
        java.lang.Object[] objArray23 = new java.lang.Object[] {};
        java.lang.String str24 = java.text.MessageFormat.format("hi!", objArray23);
        java.lang.String str25 = java.text.MessageFormat.format("hi!", objArray23);
        java.lang.String str26 = java.text.MessageFormat.format("", objArray23);
        java.lang.String str27 = extendedMessageFormat15.format((java.lang.Object) objArray23);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str30 = extendedMessageFormat29.toPattern();
        java.text.Format[] formatArray31 = extendedMessageFormat29.getFormats();
        extendedMessageFormat29.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = extendedMessageFormat15.format((java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(formatArray31);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        extendedMessageFormat30.applyPattern("");
        java.util.Locale locale35 = null;
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map36);
        java.lang.String str38 = extendedMessageFormat37.toPattern();
        java.text.Format[] formatArray39 = extendedMessageFormat37.getFormats();
        java.lang.String str40 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray39);
        java.lang.String str41 = extendedMessageFormat30.format((java.lang.Object) formatArray39);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48);
        extendedMessageFormat30.setLocale(locale48);
        extendedMessageFormat10.setLocale(locale48);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = extendedMessageFormat10.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = extendedMessageFormat1.format((java.lang.Object) locale24);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        extendedMessageFormat15.setLocale(locale21);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map27);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        extendedMessageFormat28.setLocale(locale42);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42, map45);
        extendedMessageFormat7.setLocale(locale42);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map48);
        java.util.Locale locale51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        extendedMessageFormat52.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = extendedMessageFormat49.format((java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNull(locale53);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Locale locale32 = null;
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32, map33);
        java.text.Format[] formatArray35 = extendedMessageFormat34.getFormatsByArgumentIndex();
        java.text.Format[] formatArray36 = extendedMessageFormat34.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatsByArgumentIndex(formatArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray35);
        org.junit.Assert.assertNotNull(formatArray36);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.lang.Object obj4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator5 = extendedMessageFormat2.formatToCharacterIterator(obj4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: formatToCharacterIterator must be passed non-null object");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_US");
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object[] objArray8 = extendedMessageFormat2.parse("hi!");
        java.util.Locale locale10 = null;
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormatsByArgumentIndex();
        java.text.Format[] formatArray14 = extendedMessageFormat12.getFormats();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map24);
        extendedMessageFormat12.setLocale(locale23);
        java.util.Locale locale28 = null;
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map29);
        java.lang.Object[] objArray32 = extendedMessageFormat30.parse("hi!");
        java.util.Locale locale38 = null;
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38, map39);
        java.text.Format[] formatArray41 = extendedMessageFormat40.getFormatsByArgumentIndex();
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map47);
        extendedMessageFormat40.setLocale(locale46);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46, map52);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46, map55);
        extendedMessageFormat30.setLocale(locale46);
        extendedMessageFormat12.setLocale(locale46);
        java.lang.String str59 = extendedMessageFormat12.toPattern();
        boolean boolean60 = extendedMessageFormat2.equals((java.lang.Object) str59);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(formatArray41);
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        java.lang.Object[] objArray5 = new java.lang.Object[] {};
        java.lang.String str6 = java.text.MessageFormat.format("hi!", objArray5);
        java.lang.String str7 = java.text.MessageFormat.format("hi!", objArray5);
        java.lang.String str8 = java.text.MessageFormat.format("", objArray5);
        java.lang.String str9 = java.text.MessageFormat.format("", objArray5);
        java.lang.String str10 = java.text.MessageFormat.format("hi!", objArray5);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        java.util.Locale locale6 = null;
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map7);
        java.text.Format[] formatArray9 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        extendedMessageFormat8.setLocale(locale14);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map20);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        extendedMessageFormat21.setLocale(locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35, map40);
        java.lang.String str42 = extendedMessageFormat41.toPattern();
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49, map54);
        extendedMessageFormat55.applyPattern("hi!");
        java.text.Format[] formatArray58 = extendedMessageFormat55.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat41.setFormats(formatArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray58);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        java.util.Locale locale6 = null;
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map7);
        java.text.Format[] formatArray9 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        extendedMessageFormat8.setLocale(locale14);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map20);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        extendedMessageFormat21.setLocale(locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35, map40);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray43 = extendedMessageFormat41.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        extendedMessageFormat14.applyPattern("");
        extendedMessageFormat14.applyPattern("hi!");
        java.lang.String str19 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray20 = extendedMessageFormat14.getFormats();
        java.lang.StringBuffer stringBuffer21 = null;
        java.text.FieldPosition fieldPosition22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer23 = extendedMessageFormat11.format((java.lang.Object[]) formatArray20, stringBuffer21, fieldPosition22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(formatArray20);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.util.Locale locale46 = null;
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46, map47);
        java.text.Format[] formatArray49 = extendedMessageFormat48.getFormatsByArgumentIndex();
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map55);
        extendedMessageFormat48.setLocale(locale54);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map58);
        extendedMessageFormat59.applyPattern("");
        java.lang.String str62 = extendedMessageFormat59.toPattern();
        java.util.Locale locale63 = extendedMessageFormat59.getLocale();
        java.util.Locale locale64 = extendedMessageFormat59.getLocale();
        java.lang.StringBuffer stringBuffer65 = null;
        java.text.FieldPosition fieldPosition66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer67 = extendedMessageFormat43.format((java.lang.Object) locale64, stringBuffer65, fieldPosition66);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray49);
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(locale63);
        org.junit.Assert.assertEquals(locale63.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale64);
        org.junit.Assert.assertEquals(locale64.toString(), "en_US");
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.lang.String str11 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray10);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map19);
        java.lang.String str21 = extendedMessageFormat20.toPattern();
        java.lang.Object[] objArray23 = new java.lang.Object[] { formatArray10, str21, 1 };
        java.lang.String str24 = java.text.MessageFormat.format("", objArray23);
        java.lang.StringBuffer stringBuffer25 = null;
        java.text.FieldPosition fieldPosition26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer27 = extendedMessageFormat2.format(objArray23, stringBuffer25, fieldPosition26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[[], , 1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.lang.String str8 = extendedMessageFormat2.toPattern();
        java.text.ParsePosition parsePosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray11 = extendedMessageFormat2.parse("", parsePosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        extendedMessageFormat2.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray10 = extendedMessageFormat2.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale19 = extendedMessageFormat16.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19);
        java.lang.Object obj21 = extendedMessageFormat20.clone();
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.lang.String str15 = extendedMessageFormat5.toPattern();
        extendedMessageFormat5.applyPattern("hi!");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map22);
        java.text.Format[] formatArray24 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map30);
        extendedMessageFormat23.setLocale(locale29);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map35);
        extendedMessageFormat5.setLocale(locale29);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29);
        java.text.ParsePosition parsePosition41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray42 = extendedMessageFormat39.parse("", parsePosition41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.text.Format[] formatArray6 = extendedMessageFormat4.getFormats();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        extendedMessageFormat4.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map29);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Locale locale33 = null;
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map34);
        java.text.Format[] formatArray36 = extendedMessageFormat35.getFormatsByArgumentIndex();
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41, map42);
        extendedMessageFormat35.setLocale(locale41);
        java.lang.String str45 = extendedMessageFormat35.toPattern();
        java.lang.Object[] objArray47 = extendedMessageFormat35.parse("hi!");
        java.text.Format[] formatArray48 = extendedMessageFormat35.getFormats();
        java.lang.String str49 = extendedMessageFormat31.format((java.lang.Object) formatArray48);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat20.setFormatsByArgumentIndex(formatArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray36);
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(formatArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map50);
        java.text.Format[] formatArray52 = extendedMessageFormat51.getFormats();
        java.lang.String str53 = extendedMessageFormat38.format((java.lang.Object) formatArray52);
        java.text.Format[] formatArray54 = extendedMessageFormat38.getFormats();
        java.lang.Class<?> wildcardClass55 = formatArray54.getClass();
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(formatArray54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map43);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map46);
        java.text.Format[] formatArray48 = extendedMessageFormat47.getFormats();
        java.text.Format[] formatArray49 = extendedMessageFormat47.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat44.setFormats(formatArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray48);
        org.junit.Assert.assertNotNull(formatArray49);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map23);
        extendedMessageFormat3.setLocale(locale17);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        extendedMessageFormat28.applyPattern("");
        java.util.Locale locale33 = null;
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map34);
        java.lang.String str36 = extendedMessageFormat35.toPattern();
        java.text.Format[] formatArray37 = extendedMessageFormat35.getFormats();
        java.lang.String str38 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray37);
        java.lang.String str39 = extendedMessageFormat28.format((java.lang.Object) formatArray37);
        java.lang.StringBuffer stringBuffer40 = null;
        java.text.FieldPosition fieldPosition41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer42 = extendedMessageFormat3.format((java.lang.Object[]) formatArray37, stringBuffer40, fieldPosition41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(formatArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map43);
        extendedMessageFormat44.applyPattern("hi!");
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map55);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map57);
        extendedMessageFormat58.applyPattern("hi!");
        extendedMessageFormat58.applyPattern("hi!");
        java.text.Format[] formatArray63 = extendedMessageFormat58.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat44.setFormatsByArgumentIndex(formatArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray63);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map7);
        extendedMessageFormat8.applyPattern("hi!");
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        extendedMessageFormat17.setLocale(locale23);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map29);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map40);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44);
        extendedMessageFormat30.setLocale(locale44);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44, map47);
        extendedMessageFormat8.setLocale(locale44);
        java.lang.Object obj51 = extendedMessageFormat8.parseObject("hi!");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        extendedMessageFormat3.setLocale(locale14);
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.lang.Object[] objArray23 = extendedMessageFormat21.parse("hi!");
        java.util.Locale locale29 = null;
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map30);
        java.text.Format[] formatArray32 = extendedMessageFormat31.getFormatsByArgumentIndex();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map38);
        extendedMessageFormat31.setLocale(locale37);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map43);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map46);
        extendedMessageFormat21.setLocale(locale37);
        extendedMessageFormat3.setLocale(locale37);
        java.lang.String str50 = extendedMessageFormat3.toPattern();
        java.lang.Object obj51 = extendedMessageFormat3.clone();
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(formatArray32);
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map11);
        extendedMessageFormat12.applyPattern("hi!");
        java.text.Format[] formatArray15 = extendedMessageFormat12.getFormatsByArgumentIndex();
        java.text.Format[] formatArray16 = extendedMessageFormat12.getFormats();
        java.text.ParsePosition parsePosition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray19 = extendedMessageFormat12.parse("", parsePosition18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(formatArray16);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.lang.String str5 = extendedMessageFormat4.toPattern();
        java.lang.Object[] objArray7 = extendedMessageFormat4.parse("hi!");
        java.text.Format[] formatArray8 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Locale locale10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.lang.String str13 = extendedMessageFormat4.format((java.lang.Object) locale12);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.lang.String str26 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray25);
        java.lang.String str27 = extendedMessageFormat16.format((java.lang.Object) formatArray25);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat16.setLocale(locale34);
        extendedMessageFormat4.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        java.util.Locale locale47 = null;
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47, map48);
        java.text.Format[] formatArray50 = extendedMessageFormat49.getFormatsByArgumentIndex();
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map53);
        java.util.Locale locale55 = extendedMessageFormat54.getLocale();
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map56);
        extendedMessageFormat49.setLocale(locale55);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map59);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map61);
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map67);
        java.util.Locale locale69 = extendedMessageFormat68.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale69);
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69, map71);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69);
        extendedMessageFormat62.setLocale(locale69);
        java.text.Format[] formatArray75 = extendedMessageFormat62.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat43.setFormatsByArgumentIndex(formatArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNull(locale12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray50);
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray75);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.lang.Class<?> wildcardClass6 = extendedMessageFormat2.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        java.text.ParsePosition parsePosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray12 = extendedMessageFormat9.parse("hi!", parsePosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map39);
        extendedMessageFormat1.setLocale(locale36);
        java.util.Locale locale42 = extendedMessageFormat1.getLocale();
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map54);
        java.text.Format[] formatArray56 = extendedMessageFormat55.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str57 = extendedMessageFormat1.format((java.lang.Object) extendedMessageFormat55);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray56);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        extendedMessageFormat8.applyPattern("hi!");
        java.util.Locale locale11 = null;
        extendedMessageFormat8.setLocale(locale11);
        java.text.Format[] formatArray13 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer14 = null;
        java.text.FieldPosition fieldPosition15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer16 = extendedMessageFormat3.format((java.lang.Object[]) formatArray13, stringBuffer14, fieldPosition15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray13);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.text.ParsePosition parsePosition14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray15 = extendedMessageFormat3.parse("hi!", parsePosition14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.lang.String str10 = extendedMessageFormat8.toPattern();
        java.text.Format[] formatArray11 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat8.setFormatsByArgumentIndex(formatArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.String str18 = extendedMessageFormat7.format((java.lang.Object) formatArray16);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat7.setLocale(locale25);
        extendedMessageFormat2.setLocale(locale25);
        java.util.Locale locale32 = extendedMessageFormat2.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41, map43);
        java.text.Format[] formatArray45 = extendedMessageFormat44.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat33.setFormat((int) (byte) 0, (java.text.Format) extendedMessageFormat44);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray45);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        extendedMessageFormat17.setLocale(locale26);
        java.text.Format[] formatArray28 = extendedMessageFormat17.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat13.setFormatsByArgumentIndex(formatArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray28);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormatsByArgumentIndex();
        java.text.Format[] formatArray14 = extendedMessageFormat12.getFormats();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map27);
        java.util.Locale locale30 = null;
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30, map31);
        java.text.Format[] formatArray33 = extendedMessageFormat32.getFormatsByArgumentIndex();
        java.lang.String str34 = extendedMessageFormat28.format((java.lang.Object) formatArray33);
        java.lang.String str35 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray33);
        java.lang.String str36 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray33);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat12.setFormatsByArgumentIndex(formatArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object[] objArray8 = extendedMessageFormat2.parse("hi!");
        extendedMessageFormat2.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = extendedMessageFormat2.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map20);
        java.lang.String str22 = extendedMessageFormat21.toPattern();
        java.text.Format[] formatArray23 = extendedMessageFormat21.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat10.setFormatsByArgumentIndex(formatArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(formatArray23);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.lang.String str18 = extendedMessageFormat15.toPattern();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.lang.Object[] objArray25 = extendedMessageFormat22.parse("hi!");
        java.text.Format[] formatArray26 = extendedMessageFormat22.getFormatsByArgumentIndex();
        java.util.Locale locale28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.lang.String str31 = extendedMessageFormat22.format((java.lang.Object) locale30);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        extendedMessageFormat34.applyPattern("");
        java.util.Locale locale39 = null;
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map40);
        java.lang.String str42 = extendedMessageFormat41.toPattern();
        java.text.Format[] formatArray43 = extendedMessageFormat41.getFormats();
        java.lang.String str44 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray43);
        java.lang.String str45 = extendedMessageFormat34.format((java.lang.Object) formatArray43);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52);
        extendedMessageFormat34.setLocale(locale52);
        extendedMessageFormat22.setLocale(locale52);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        extendedMessageFormat15.setLocale(locale52);
        java.util.Locale locale62 = null;
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale62, map63);
        java.lang.String str65 = extendedMessageFormat64.toPattern();
        java.util.Locale locale66 = extendedMessageFormat64.getLocale();
        extendedMessageFormat64.applyPattern("hi!");
        java.lang.Object obj70 = extendedMessageFormat64.parseObject("hi!");
        java.text.Format[] formatArray71 = extendedMessageFormat64.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator72 = extendedMessageFormat15.formatToCharacterIterator((java.lang.Object) formatArray71);
        java.util.Map map75 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map75);
        java.util.Map map78 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map78);
        extendedMessageFormat79.applyPattern("");
        extendedMessageFormat79.applyPattern("hi!");
        java.lang.String str84 = extendedMessageFormat79.toPattern();
        java.text.Format[] formatArray85 = extendedMessageFormat79.getFormats();
        java.lang.String str86 = extendedMessageFormat76.format((java.lang.Object) formatArray85);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat15.setFormatByArgumentIndex((int) ' ', (java.text.Format) extendedMessageFormat76);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNull(locale30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(formatArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(locale66);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(formatArray71);
        org.junit.Assert.assertNotNull(attributedCharacterIterator72);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertNotNull(formatArray85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        java.util.Locale locale15 = extendedMessageFormat3.getLocale();
        java.lang.String str16 = extendedMessageFormat3.toPattern();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map25);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        java.lang.StringBuffer stringBuffer28 = null;
        java.text.FieldPosition fieldPosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer30 = extendedMessageFormat3.format((java.lang.Object) "hi!", stringBuffer28, fieldPosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.lang.String str14 = extendedMessageFormat4.toPattern();
        extendedMessageFormat4.applyPattern("hi!");
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map21);
        java.text.Format[] formatArray23 = extendedMessageFormat22.getFormatsByArgumentIndex();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map29);
        extendedMessageFormat22.setLocale(locale28);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map34);
        extendedMessageFormat4.setLocale(locale28);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = extendedMessageFormat37.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        extendedMessageFormat3.setLocale(locale14);
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map22);
        java.text.Format[] formatArray24 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map30);
        extendedMessageFormat23.setLocale(locale29);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29);
        java.text.Format[] formatArray34 = extendedMessageFormat33.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormat(10, (java.text.Format) extendedMessageFormat33);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray34);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        extendedMessageFormat11.applyPattern("hi!");
        extendedMessageFormat11.applyPattern("hi!");
        java.text.Format[] formatArray16 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.text.Format[] formatArray17 = extendedMessageFormat11.getFormats();
        java.util.Locale locale18 = extendedMessageFormat11.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = extendedMessageFormat11.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.util.Locale locale45 = null;
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45, map46);
        java.lang.Object[] objArray49 = extendedMessageFormat47.parse("hi!");
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map51);
        java.lang.String str53 = extendedMessageFormat52.toPattern();
        java.lang.Object[] objArray55 = extendedMessageFormat52.parse("hi!");
        java.text.Format[] formatArray56 = extendedMessageFormat52.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator57 = extendedMessageFormat47.formatToCharacterIterator((java.lang.Object) formatArray56);
        extendedMessageFormat47.applyPattern("");
        java.lang.Object obj60 = extendedMessageFormat47.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator61 = extendedMessageFormat43.formatToCharacterIterator((java.lang.Object) extendedMessageFormat47);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(formatArray56);
        org.junit.Assert.assertNotNull(attributedCharacterIterator57);
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Locale locale10 = null;
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormatsByArgumentIndex();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        extendedMessageFormat12.setLocale(locale18);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map24);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map29);
        extendedMessageFormat2.setLocale(locale18);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map32);
        java.util.Locale locale37 = null;
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map38);
        java.lang.Object[] objArray41 = extendedMessageFormat39.parse("hi!");
        java.util.Locale locale47 = null;
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47, map48);
        java.text.Format[] formatArray50 = extendedMessageFormat49.getFormatsByArgumentIndex();
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map53);
        java.util.Locale locale55 = extendedMessageFormat54.getLocale();
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map56);
        extendedMessageFormat49.setLocale(locale55);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map59);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55, map61);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55);
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55, map64);
        extendedMessageFormat39.setLocale(locale55);
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map67);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat33.setFormatByArgumentIndex((int) (byte) 10, (java.text.Format) extendedMessageFormat68);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(formatArray50);
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_US");
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map26);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41);
        extendedMessageFormat27.setLocale(locale41);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41, map44);
        extendedMessageFormat6.setLocale(locale41);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        java.lang.String str50 = extendedMessageFormat49.toPattern();
        java.lang.Object[] objArray52 = extendedMessageFormat49.parse("hi!");
        java.text.Format[] formatArray53 = extendedMessageFormat49.getFormatsByArgumentIndex();
        java.util.Locale locale55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        java.lang.String str58 = extendedMessageFormat49.format((java.lang.Object) locale57);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map60);
        extendedMessageFormat61.applyPattern("");
        java.util.Locale locale66 = null;
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map67);
        java.lang.String str69 = extendedMessageFormat68.toPattern();
        java.text.Format[] formatArray70 = extendedMessageFormat68.getFormats();
        java.lang.String str71 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray70);
        java.lang.String str72 = extendedMessageFormat61.format((java.lang.Object) formatArray70);
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map77);
        java.util.Locale locale79 = extendedMessageFormat78.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale79);
        java.util.Map map81 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79, map81);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79);
        extendedMessageFormat61.setLocale(locale79);
        extendedMessageFormat49.setLocale(locale79);
        extendedMessageFormat6.setLocale(locale79);
        java.lang.Object obj87 = extendedMessageFormat6.clone();
        java.lang.Class<?> wildcardClass88 = extendedMessageFormat6.getClass();
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(formatArray53);
        org.junit.Assert.assertNull(locale57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(formatArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(locale79);
        org.junit.Assert.assertEquals(locale79.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        java.lang.Object obj4 = extendedMessageFormat1.parseObject("hi!");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        extendedMessageFormat7.applyPattern("hi!");
        java.lang.String str12 = extendedMessageFormat7.toPattern();
        java.lang.String str13 = extendedMessageFormat7.toPattern();
        java.text.Format[] formatArray14 = extendedMessageFormat7.getFormats();
        java.lang.String str15 = extendedMessageFormat1.format((java.lang.Object) formatArray14);
        java.util.Locale locale16 = extendedMessageFormat1.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map18);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        extendedMessageFormat22.applyPattern("");
        extendedMessageFormat22.applyPattern("hi!");
        java.lang.String str27 = extendedMessageFormat22.toPattern();
        java.text.Format[] formatArray28 = extendedMessageFormat22.getFormats();
        java.lang.String str29 = extendedMessageFormat19.format((java.lang.Object) formatArray28);
        java.lang.StringBuffer stringBuffer30 = null;
        java.text.FieldPosition fieldPosition31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer32 = extendedMessageFormat1.format((java.lang.Object[]) formatArray28, stringBuffer30, fieldPosition31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(formatArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.String str18 = extendedMessageFormat7.format((java.lang.Object) formatArray16);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat7.setLocale(locale25);
        extendedMessageFormat2.setLocale(locale25);
        java.util.Locale locale32 = extendedMessageFormat2.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.text.ParsePosition parsePosition35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray36 = extendedMessageFormat33.parse("", parsePosition35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.lang.Object[] objArray6 = extendedMessageFormat4.parse("hi!");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map29);
        extendedMessageFormat4.setLocale(locale20);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map32);
        extendedMessageFormat33.applyPattern("");
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map43);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map45);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42);
        java.text.Format[] formatArray48 = extendedMessageFormat47.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer49 = null;
        java.text.FieldPosition fieldPosition50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer51 = extendedMessageFormat33.format((java.lang.Object[]) formatArray48, stringBuffer49, fieldPosition50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray48);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat15.setLocale(locale24);
        java.text.Format[] formatArray32 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat15.setFormatsByArgumentIndex(formatArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.text.Format[] formatArray12 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.text.Format[] formatArray26 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33);
        java.lang.String str38 = extendedMessageFormat37.toPattern();
        java.util.Locale locale41 = null;
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41, map42);
        java.text.Format[] formatArray44 = extendedMessageFormat43.getFormatsByArgumentIndex();
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map50);
        extendedMessageFormat43.setLocale(locale49);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49);
        extendedMessageFormat37.setLocale(locale49);
        extendedMessageFormat23.setLocale(locale49);
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map56);
        boolean boolean58 = extendedMessageFormat9.equals((java.lang.Object) "");
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(formatArray44);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        java.lang.String str28 = extendedMessageFormat10.toPattern();
        extendedMessageFormat10.applyPattern("hi!");
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.lang.String str34 = extendedMessageFormat33.toPattern();
        java.lang.Object[] objArray36 = extendedMessageFormat33.parse("hi!");
        java.text.Format[] formatArray37 = extendedMessageFormat33.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat10.setFormats(formatArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(formatArray37);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray6 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map15);
        java.lang.String str17 = extendedMessageFormat3.format((java.lang.Object) map15);
        java.util.Locale locale18 = extendedMessageFormat3.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        java.util.Locale locale23 = null;
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map24);
        java.text.Format[] formatArray26 = extendedMessageFormat25.getFormatsByArgumentIndex();
        java.text.Format[] formatArray27 = extendedMessageFormat25.getFormats();
        java.util.Locale locale30 = null;
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30, map31);
        java.text.Format[] formatArray33 = extendedMessageFormat32.getFormatsByArgumentIndex();
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map39);
        extendedMessageFormat32.setLocale(locale38);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map42);
        extendedMessageFormat25.setLocale(locale38);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat20.setFormatByArgumentIndex((int) '#', (java.text.Format) extendedMessageFormat25);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNotNull(formatArray33);
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.util.Locale locale22 = null;
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map23);
        extendedMessageFormat24.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat18.setFormatByArgumentIndex((int) (byte) 10, (java.text.Format) extendedMessageFormat24);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.lang.String str18 = extendedMessageFormat15.toPattern();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.lang.Object[] objArray25 = extendedMessageFormat22.parse("hi!");
        java.text.Format[] formatArray26 = extendedMessageFormat22.getFormatsByArgumentIndex();
        java.util.Locale locale28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.lang.String str31 = extendedMessageFormat22.format((java.lang.Object) locale30);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        extendedMessageFormat34.applyPattern("");
        java.util.Locale locale39 = null;
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map40);
        java.lang.String str42 = extendedMessageFormat41.toPattern();
        java.text.Format[] formatArray43 = extendedMessageFormat41.getFormats();
        java.lang.String str44 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray43);
        java.lang.String str45 = extendedMessageFormat34.format((java.lang.Object) formatArray43);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52);
        extendedMessageFormat34.setLocale(locale52);
        extendedMessageFormat22.setLocale(locale52);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        extendedMessageFormat15.setLocale(locale52);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj62 = extendedMessageFormat15.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNull(locale30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(formatArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        java.lang.String str13 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        extendedMessageFormat2.setLocale(locale20);
        java.lang.String str26 = extendedMessageFormat2.toPattern();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.lang.String str30 = extendedMessageFormat29.toPattern();
        java.lang.Object[] objArray32 = extendedMessageFormat29.parse("hi!");
        java.text.AttributedCharacterIterator attributedCharacterIterator33 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) objArray32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = extendedMessageFormat2.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(attributedCharacterIterator33);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.lang.Object[] objArray13 = extendedMessageFormat10.parse("hi!");
        java.text.Format[] formatArray14 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Locale locale16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        java.lang.String str19 = extendedMessageFormat10.format((java.lang.Object) locale18);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        extendedMessageFormat22.applyPattern("");
        java.util.Locale locale27 = null;
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map28);
        java.lang.String str30 = extendedMessageFormat29.toPattern();
        java.text.Format[] formatArray31 = extendedMessageFormat29.getFormats();
        java.lang.String str32 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray31);
        java.lang.String str33 = extendedMessageFormat22.format((java.lang.Object) formatArray31);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map38);
        java.util.Locale locale40 = extendedMessageFormat39.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale40);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map42);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40);
        extendedMessageFormat22.setLocale(locale40);
        extendedMessageFormat10.setLocale(locale40);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale40);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        extendedMessageFormat4.setLocale(locale48);
        java.text.Format[] formatArray51 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.lang.String str52 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray51);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNull(locale18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale18 = extendedMessageFormat15.getLocale();
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map22);
        java.text.Format[] formatArray24 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map30);
        extendedMessageFormat23.setLocale(locale29);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map33);
        extendedMessageFormat15.setLocale(locale29);
        java.text.ParsePosition parsePosition37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = extendedMessageFormat15.parseObject("hi!", parsePosition37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map1);
        java.text.Format[] formatArray3 = extendedMessageFormat2.getFormats();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormats();
        java.text.Format[] formatArray7 = extendedMessageFormat5.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormats(formatArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray7);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray6 = extendedMessageFormat3.parse("hi!");
        java.lang.String str7 = java.text.MessageFormat.format("hi!", objArray6);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.lang.String str7 = extendedMessageFormat2.format((java.lang.Object) locale4);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        extendedMessageFormat10.applyPattern("");
        extendedMessageFormat10.applyPattern("hi!");
        java.lang.Object[] objArray16 = extendedMessageFormat10.parse("hi!");
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) objArray16);
        java.text.Format[] formatArray18 = extendedMessageFormat2.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray20 = extendedMessageFormat2.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(formatArray18);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray6 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map15);
        java.lang.String str17 = extendedMessageFormat3.format((java.lang.Object) map15);
        java.util.Locale locale18 = extendedMessageFormat3.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormats();
        java.util.Locale locale27 = null;
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27, map28);
        java.text.Format[] formatArray30 = extendedMessageFormat29.getFormatsByArgumentIndex();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map36);
        extendedMessageFormat29.setLocale(locale35);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35, map41);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        java.util.Locale locale50 = extendedMessageFormat49.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map54);
        java.util.Locale locale56 = extendedMessageFormat55.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale56);
        extendedMessageFormat42.setLocale(locale56);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale56);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale56);
        java.util.Locale locale61 = extendedMessageFormat60.getLocale();
        java.text.Format[] formatArray62 = extendedMessageFormat60.getFormatsByArgumentIndex();
        java.text.Format[] formatArray63 = extendedMessageFormat60.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat20.setFormats(formatArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray62);
        org.junit.Assert.assertNotNull(formatArray63);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.lang.String str8 = extendedMessageFormat2.toPattern();
        java.text.Format[] formatArray9 = extendedMessageFormat2.getFormats();
        java.lang.Object obj10 = null;
        boolean boolean11 = extendedMessageFormat2.equals(obj10);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale18 = extendedMessageFormat15.getLocale();
        java.lang.Object obj19 = null;
        boolean boolean20 = extendedMessageFormat15.equals(obj19);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map11);
        extendedMessageFormat12.applyPattern("");
        java.util.Locale locale17 = null;
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map18);
        java.text.Format[] formatArray20 = extendedMessageFormat19.getFormatsByArgumentIndex();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        extendedMessageFormat19.setLocale(locale28);
        java.text.Format[] formatArray30 = extendedMessageFormat19.getFormats();
        extendedMessageFormat19.applyPattern("hi!");
        java.util.Locale locale33 = extendedMessageFormat19.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat12.setFormatByArgumentIndex((int) ' ', (java.text.Format) extendedMessageFormat19);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.text.Format[] formatArray5 = extendedMessageFormat2.getFormats();
        java.lang.Class<?> wildcardClass6 = extendedMessageFormat2.getClass();
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.lang.String str7 = extendedMessageFormat2.format((java.lang.Object) locale4);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        extendedMessageFormat10.applyPattern("");
        extendedMessageFormat10.applyPattern("hi!");
        java.lang.Object[] objArray16 = extendedMessageFormat10.parse("hi!");
        java.text.AttributedCharacterIterator attributedCharacterIterator17 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) objArray16);
        java.text.Format[] formatArray18 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.lang.Object[] objArray25 = extendedMessageFormat22.parse("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatByArgumentIndex((int) (short) 0, (java.text.Format) extendedMessageFormat22);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(attributedCharacterIterator17);
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map33);
        java.lang.String str35 = extendedMessageFormat34.toPattern();
        java.lang.StringBuffer stringBuffer36 = null;
        java.text.FieldPosition fieldPosition37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer38 = extendedMessageFormat23.format((java.lang.Object) extendedMessageFormat34, stringBuffer36, fieldPosition37);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray6 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map15);
        java.lang.String str17 = extendedMessageFormat3.format((java.lang.Object) map15);
        java.util.Locale locale18 = extendedMessageFormat3.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        java.text.Format[] formatArray37 = extendedMessageFormat36.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat20.setFormat((int) (byte) 1, (java.text.Format) extendedMessageFormat36);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray37);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        extendedMessageFormat3.setLocale(locale14);
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.lang.Object[] objArray23 = extendedMessageFormat21.parse("hi!");
        java.util.Locale locale29 = null;
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map30);
        java.text.Format[] formatArray32 = extendedMessageFormat31.getFormatsByArgumentIndex();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map38);
        extendedMessageFormat31.setLocale(locale37);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map43);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map46);
        extendedMessageFormat21.setLocale(locale37);
        extendedMessageFormat3.setLocale(locale37);
        java.lang.String str50 = extendedMessageFormat3.toPattern();
        java.util.Locale locale52 = null;
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52, map53);
        java.text.Format[] formatArray55 = extendedMessageFormat54.getFormatsByArgumentIndex();
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map58);
        java.util.Locale locale60 = extendedMessageFormat59.getLocale();
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale60, map61);
        java.util.Locale locale63 = extendedMessageFormat62.getLocale();
        extendedMessageFormat54.setLocale(locale63);
        java.lang.Class<?> wildcardClass65 = locale63.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator66 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) wildcardClass65);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(formatArray32);
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(formatArray55);
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale63);
        org.junit.Assert.assertEquals(locale63.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        java.text.Format[] formatArray40 = extendedMessageFormat38.getFormatsByArgumentIndex();
        java.text.Format[] formatArray41 = extendedMessageFormat38.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray43 = extendedMessageFormat38.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray40);
        org.junit.Assert.assertNotNull(formatArray41);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        extendedMessageFormat1.applyPattern("");
        java.lang.Class<?> wildcardClass5 = extendedMessageFormat1.getClass();
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("hi!");
        extendedMessageFormat2.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = extendedMessageFormat2.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        java.util.Locale locale6 = null;
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map7);
        java.text.Format[] formatArray9 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        extendedMessageFormat8.setLocale(locale14);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map20);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map23);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35, map36);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat25.setFormat((int) (short) 1, (java.text.Format) extendedMessageFormat37);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map1);
        java.text.Format[] formatArray3 = extendedMessageFormat2.getFormats();
        java.text.Format[] formatArray4 = extendedMessageFormat2.getFormats();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.lang.Object obj9 = extendedMessageFormat6.parseObject("hi!");
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        extendedMessageFormat12.applyPattern("");
        extendedMessageFormat12.applyPattern("hi!");
        java.lang.String str17 = extendedMessageFormat12.toPattern();
        java.lang.String str18 = extendedMessageFormat12.toPattern();
        java.text.Format[] formatArray19 = extendedMessageFormat12.getFormats();
        java.lang.String str20 = extendedMessageFormat6.format((java.lang.Object) formatArray19);
        java.util.Locale locale21 = extendedMessageFormat6.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator22 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) locale21);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        extendedMessageFormat15.setLocale(locale21);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map27);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        extendedMessageFormat28.setLocale(locale42);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42, map45);
        extendedMessageFormat7.setLocale(locale42);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map49);
        java.lang.String str51 = extendedMessageFormat50.toPattern();
        java.lang.Object[] objArray53 = extendedMessageFormat50.parse("hi!");
        java.text.Format[] formatArray54 = extendedMessageFormat50.getFormatsByArgumentIndex();
        java.util.Locale locale56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale56);
        java.util.Locale locale58 = extendedMessageFormat57.getLocale();
        java.lang.String str59 = extendedMessageFormat50.format((java.lang.Object) locale58);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map61);
        extendedMessageFormat62.applyPattern("");
        java.util.Locale locale67 = null;
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale67, map68);
        java.lang.String str70 = extendedMessageFormat69.toPattern();
        java.text.Format[] formatArray71 = extendedMessageFormat69.getFormats();
        java.lang.String str72 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray71);
        java.lang.String str73 = extendedMessageFormat62.format((java.lang.Object) formatArray71);
        java.util.Map map78 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map78);
        java.util.Locale locale80 = extendedMessageFormat79.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat81 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale80);
        java.util.Map map82 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale80, map82);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale80);
        extendedMessageFormat62.setLocale(locale80);
        extendedMessageFormat50.setLocale(locale80);
        extendedMessageFormat7.setLocale(locale80);
        java.util.Map map88 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat89 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale80, map88);
        java.text.Format[] formatArray90 = extendedMessageFormat89.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray92 = extendedMessageFormat89.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(formatArray54);
        org.junit.Assert.assertNull(locale58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(formatArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(locale80);
        org.junit.Assert.assertEquals(locale80.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray90);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.text.Format[] formatArray4 = extendedMessageFormat2.getFormats();
        java.lang.String str5 = extendedMessageFormat2.toPattern();
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray13 = extendedMessageFormat9.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatsByArgumentIndex(formatArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(formatArray13);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = extendedMessageFormat3.parseObject("hi!", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        extendedMessageFormat3.setLocale(locale14);
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.lang.Object[] objArray23 = extendedMessageFormat21.parse("hi!");
        java.util.Locale locale29 = null;
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map30);
        java.text.Format[] formatArray32 = extendedMessageFormat31.getFormatsByArgumentIndex();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map38);
        extendedMessageFormat31.setLocale(locale37);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map43);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map46);
        extendedMessageFormat21.setLocale(locale37);
        extendedMessageFormat3.setLocale(locale37);
        java.lang.Object obj50 = extendedMessageFormat3.clone();
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(formatArray32);
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.text.Format[] formatArray12 = extendedMessageFormat9.getFormatsByArgumentIndex();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat14.applyPattern("");
        java.lang.String str17 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray18 = extendedMessageFormat14.getFormats();
        java.lang.String str19 = extendedMessageFormat14.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = extendedMessageFormat9.format((java.lang.Object) str19);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale19 = extendedMessageFormat16.getLocale();
        java.util.Locale locale22 = null;
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map23);
        java.text.Format[] formatArray25 = extendedMessageFormat24.getFormatsByArgumentIndex();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map31);
        extendedMessageFormat24.setLocale(locale30);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        extendedMessageFormat16.setLocale(locale30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30, map37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray41 = extendedMessageFormat40.getFormats();
        java.util.Locale locale46 = null;
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46, map47);
        java.text.Format[] formatArray49 = extendedMessageFormat48.getFormatsByArgumentIndex();
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map55);
        extendedMessageFormat48.setLocale(locale54);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map58);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map60);
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map67);
        java.util.Locale locale69 = extendedMessageFormat68.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale69);
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69, map71);
        java.util.Map map73 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69, map73);
        java.util.Locale locale75 = extendedMessageFormat74.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale75);
        extendedMessageFormat61.setLocale(locale75);
        java.util.Map map78 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale75, map78);
        extendedMessageFormat40.setLocale(locale75);
        java.util.Locale locale81 = extendedMessageFormat40.getLocale();
        java.lang.StringBuffer stringBuffer82 = null;
        java.text.FieldPosition fieldPosition83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer84 = extendedMessageFormat38.format((java.lang.Object) extendedMessageFormat40, stringBuffer82, fieldPosition83);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray41);
        org.junit.Assert.assertNotNull(formatArray49);
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale75);
        org.junit.Assert.assertEquals(locale75.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale81);
        org.junit.Assert.assertEquals(locale81.toString(), "en_US");
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map26);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41);
        extendedMessageFormat27.setLocale(locale41);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41, map44);
        extendedMessageFormat6.setLocale(locale41);
        java.text.Format[] formatArray47 = extendedMessageFormat6.getFormats();
        java.util.Locale locale50 = null;
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale50, map51);
        java.lang.Object[] objArray54 = extendedMessageFormat52.parse("hi!");
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map56);
        java.lang.String str58 = extendedMessageFormat57.toPattern();
        java.lang.Object[] objArray60 = extendedMessageFormat57.parse("hi!");
        java.text.Format[] formatArray61 = extendedMessageFormat57.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator62 = extendedMessageFormat52.formatToCharacterIterator((java.lang.Object) formatArray61);
        java.lang.String str63 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray61);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat6.setFormats(formatArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray47);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(formatArray61);
        org.junit.Assert.assertNotNull(attributedCharacterIterator62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        extendedMessageFormat3.applyPattern("hi!");
        java.lang.Object obj9 = extendedMessageFormat3.parseObject("hi!");
        java.text.Format[] formatArray10 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.lang.String str11 = extendedMessageFormat3.toPattern();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        extendedMessageFormat14.applyPattern("");
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        java.lang.String str22 = extendedMessageFormat21.toPattern();
        java.text.Format[] formatArray23 = extendedMessageFormat21.getFormats();
        java.lang.String str24 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray23);
        java.lang.String str25 = extendedMessageFormat14.format((java.lang.Object) formatArray23);
        java.text.Format[] formatArray26 = extendedMessageFormat14.getFormats();
        java.lang.Class<?> wildcardClass27 = formatArray26.getClass();
        java.lang.String str28 = extendedMessageFormat3.format((java.lang.Object) formatArray26);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map48);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46);
        extendedMessageFormat39.setLocale(locale46);
        boolean boolean52 = extendedMessageFormat3.equals((java.lang.Object) locale46);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.text.Format[] formatArray6 = extendedMessageFormat4.getFormats();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        extendedMessageFormat4.setLocale(locale17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        java.text.ParsePosition parsePosition28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray29 = extendedMessageFormat25.parse("", parsePosition28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale10 = null;
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormatsByArgumentIndex();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        extendedMessageFormat12.setLocale(locale18);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map24);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        extendedMessageFormat25.setLocale(locale39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        java.util.Locale locale50 = extendedMessageFormat49.getLocale();
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map51);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map53);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map55);
        java.text.Format[] formatArray57 = extendedMessageFormat56.getFormats();
        java.lang.String str58 = extendedMessageFormat43.format((java.lang.Object) formatArray57);
        java.text.AttributedCharacterIterator attributedCharacterIterator59 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) formatArray57);
        java.text.ParsePosition parsePosition61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj62 = extendedMessageFormat2.parseObject("hi!", parsePosition61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(attributedCharacterIterator59);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map50);
        java.text.Format[] formatArray52 = extendedMessageFormat51.getFormats();
        java.lang.String str53 = extendedMessageFormat38.format((java.lang.Object) formatArray52);
        java.text.Format[] formatArray54 = extendedMessageFormat38.getFormats();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        extendedMessageFormat56.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str60 = extendedMessageFormat38.format((java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(formatArray54);
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "en_US");
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.lang.String str12 = extendedMessageFormat11.toPattern();
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        extendedMessageFormat17.setLocale(locale23);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23);
        extendedMessageFormat11.setLocale(locale23);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        extendedMessageFormat31.applyPattern("");
        java.util.Locale locale36 = null;
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map37);
        java.lang.String str39 = extendedMessageFormat38.toPattern();
        java.text.Format[] formatArray40 = extendedMessageFormat38.getFormats();
        java.lang.String str41 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray40);
        java.lang.String str42 = extendedMessageFormat31.format((java.lang.Object) formatArray40);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map51);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49);
        extendedMessageFormat31.setLocale(locale49);
        extendedMessageFormat11.setLocale(locale49);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49);
        java.text.Format[] formatArray57 = extendedMessageFormat56.getFormatsByArgumentIndex();
        java.text.Format format59 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat56.setFormatByArgumentIndex((int) (short) 100, format59);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(formatArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray57);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.lang.String str21 = extendedMessageFormat20.toPattern();
        java.util.Locale locale23 = null;
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map24);
        java.text.Format[] formatArray26 = extendedMessageFormat25.getFormatsByArgumentIndex();
        java.text.Format[] formatArray27 = extendedMessageFormat25.getFormats();
        java.util.Locale locale30 = null;
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30, map31);
        java.text.Format[] formatArray33 = extendedMessageFormat32.getFormatsByArgumentIndex();
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map39);
        extendedMessageFormat32.setLocale(locale38);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map42);
        extendedMessageFormat25.setLocale(locale38);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map49);
        extendedMessageFormat25.setLocale(locale48);
        extendedMessageFormat20.setLocale(locale48);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map54);
        extendedMessageFormat55.applyPattern("");
        java.util.Locale locale60 = null;
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale60, map61);
        java.lang.String str63 = extendedMessageFormat62.toPattern();
        java.text.Format[] formatArray64 = extendedMessageFormat62.getFormats();
        java.lang.String str65 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray64);
        java.lang.String str66 = extendedMessageFormat55.format((java.lang.Object) formatArray64);
        java.text.Format[] formatArray67 = extendedMessageFormat55.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat20.setFormatsByArgumentIndex(formatArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNotNull(formatArray33);
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(formatArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(formatArray67);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.lang.String str7 = extendedMessageFormat6.toPattern();
        java.lang.Object[] objArray9 = extendedMessageFormat6.parse("hi!");
        java.text.Format[] formatArray10 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Locale locale12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.lang.String str15 = extendedMessageFormat6.format((java.lang.Object) locale14);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        extendedMessageFormat18.applyPattern("");
        java.util.Locale locale23 = null;
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        java.lang.String str26 = extendedMessageFormat25.toPattern();
        java.text.Format[] formatArray27 = extendedMessageFormat25.getFormats();
        java.lang.String str28 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray27);
        java.lang.String str29 = extendedMessageFormat18.format((java.lang.Object) formatArray27);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map38);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36);
        extendedMessageFormat18.setLocale(locale36);
        extendedMessageFormat6.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map45);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36);
        java.text.Format format49 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat47.setFormat(1, format49);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNull(locale14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map16);
        extendedMessageFormat17.applyPattern("");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.text.Format[] formatArray24 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.lang.String str25 = extendedMessageFormat17.format((java.lang.Object) formatArray24);
        java.lang.Class<?> wildcardClass26 = extendedMessageFormat17.getClass();
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map23);
        java.lang.String str25 = extendedMessageFormat3.format((java.lang.Object) map23);
        java.util.Locale locale27 = null;
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27, map28);
        java.text.Format[] formatArray30 = extendedMessageFormat29.getFormatsByArgumentIndex();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map36);
        extendedMessageFormat29.setLocale(locale35);
        java.lang.String str39 = extendedMessageFormat29.toPattern();
        extendedMessageFormat29.applyPattern("hi!");
        java.util.Locale locale45 = null;
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45, map46);
        java.text.Format[] formatArray48 = extendedMessageFormat47.getFormatsByArgumentIndex();
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map54);
        extendedMessageFormat47.setLocale(locale53);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map57);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map59);
        extendedMessageFormat29.setLocale(locale53);
        extendedMessageFormat3.setLocale(locale53);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map66);
        java.util.Locale locale68 = extendedMessageFormat67.getLocale();
        java.util.Map map69 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68, map69);
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68, map71);
        java.lang.String str73 = extendedMessageFormat72.toPattern();
        java.text.Format[] formatArray74 = extendedMessageFormat72.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatsByArgumentIndex(formatArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(formatArray48);
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(formatArray74);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map11);
        extendedMessageFormat12.applyPattern("");
        java.util.Locale locale17 = null;
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map18);
        java.text.Format[] formatArray20 = extendedMessageFormat19.getFormatsByArgumentIndex();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map26);
        extendedMessageFormat19.setLocale(locale25);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map29);
        extendedMessageFormat30.applyPattern("");
        java.lang.String str33 = extendedMessageFormat30.toPattern();
        java.text.Format[] formatArray34 = extendedMessageFormat30.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = extendedMessageFormat12.format((java.lang.Object) extendedMessageFormat30);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(formatArray34);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        java.util.Locale locale17 = null;
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map18);
        java.text.Format[] formatArray20 = extendedMessageFormat19.getFormatsByArgumentIndex();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        extendedMessageFormat19.setLocale(locale28);
        java.text.Format[] formatArray30 = extendedMessageFormat19.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat15.setFormatsByArgumentIndex(formatArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray30);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map1);
        java.text.Format[] formatArray3 = extendedMessageFormat2.getFormats();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.lang.String str7 = extendedMessageFormat6.toPattern();
        java.lang.Object[] objArray9 = extendedMessageFormat6.parse("hi!");
        java.lang.StringBuffer stringBuffer10 = null;
        java.text.FieldPosition fieldPosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer12 = extendedMessageFormat2.format((java.lang.Object) "hi!", stringBuffer10, fieldPosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        extendedMessageFormat2.applyPattern("");
        java.text.ParsePosition parsePosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = extendedMessageFormat2.parseObject("", parsePosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        extendedMessageFormat6.applyPattern("");
        java.text.ParsePosition parsePosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = extendedMessageFormat6.parseObject("", parsePosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormats();
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map12);
        java.text.Format[] formatArray14 = extendedMessageFormat13.getFormatsByArgumentIndex();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        extendedMessageFormat13.setLocale(locale19);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map23);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = extendedMessageFormat6.format((java.lang.Object) locale27);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object[] objArray8 = extendedMessageFormat2.parse("hi!");
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.lang.String str21 = extendedMessageFormat20.toPattern();
        java.lang.Object[] objArray23 = extendedMessageFormat20.parse("hi!");
        java.text.Format[] formatArray24 = extendedMessageFormat20.getFormatsByArgumentIndex();
        java.util.Locale locale26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        java.lang.String str29 = extendedMessageFormat20.format((java.lang.Object) locale28);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        extendedMessageFormat32.applyPattern("");
        java.util.Locale locale37 = null;
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map38);
        java.lang.String str40 = extendedMessageFormat39.toPattern();
        java.text.Format[] formatArray41 = extendedMessageFormat39.getFormats();
        java.lang.String str42 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray41);
        java.lang.String str43 = extendedMessageFormat32.format((java.lang.Object) formatArray41);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        java.util.Locale locale50 = extendedMessageFormat49.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50, map52);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale50);
        extendedMessageFormat32.setLocale(locale50);
        extendedMessageFormat20.setLocale(locale50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale50);
        java.util.Locale locale58 = extendedMessageFormat57.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale58);
        extendedMessageFormat14.setLocale(locale58);
        boolean boolean61 = extendedMessageFormat2.equals((java.lang.Object) locale58);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertNull(locale28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(formatArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map11);
        extendedMessageFormat12.applyPattern("hi!");
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map24);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21);
        java.text.Format[] formatArray27 = extendedMessageFormat26.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer28 = null;
        java.text.FieldPosition fieldPosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer30 = extendedMessageFormat12.format((java.lang.Object) extendedMessageFormat26, stringBuffer28, fieldPosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray27);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.lang.String str21 = extendedMessageFormat20.toPattern();
        java.text.ParsePosition parsePosition23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray24 = extendedMessageFormat20.parse("", parsePosition23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        extendedMessageFormat15.setLocale(locale21);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map27);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        extendedMessageFormat28.setLocale(locale42);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42, map45);
        extendedMessageFormat7.setLocale(locale42);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        java.text.ParsePosition parsePosition51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = extendedMessageFormat48.parseObject("", parsePosition51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.text.Format[] formatArray6 = extendedMessageFormat4.getFormats();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        extendedMessageFormat4.setLocale(locale17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = extendedMessageFormat25.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map20);
        java.util.Locale locale24 = null;
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map25);
        java.text.Format[] formatArray27 = extendedMessageFormat26.getFormatsByArgumentIndex();
        java.lang.String str28 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray27);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat21.setFormats(formatArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.lang.Object[] objArray17 = extendedMessageFormat14.parse("hi!");
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26);
        java.lang.String str31 = extendedMessageFormat30.toPattern();
        java.util.Locale locale34 = null;
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34, map35);
        java.text.Format[] formatArray37 = extendedMessageFormat36.getFormatsByArgumentIndex();
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map43);
        extendedMessageFormat36.setLocale(locale42);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        extendedMessageFormat30.setLocale(locale42);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42, map50);
        boolean boolean52 = extendedMessageFormat14.equals((java.lang.Object) extendedMessageFormat51);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(formatArray37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.lang.Object[] objArray17 = extendedMessageFormat14.parse("hi!");
        java.text.Format[] formatArray18 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Locale locale20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.lang.String str23 = extendedMessageFormat14.format((java.lang.Object) locale22);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        extendedMessageFormat26.applyPattern("");
        java.util.Locale locale31 = null;
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map32);
        java.lang.String str34 = extendedMessageFormat33.toPattern();
        java.text.Format[] formatArray35 = extendedMessageFormat33.getFormats();
        java.lang.String str36 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray35);
        java.lang.String str37 = extendedMessageFormat26.format((java.lang.Object) formatArray35);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map46);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44);
        extendedMessageFormat26.setLocale(locale44);
        extendedMessageFormat14.setLocale(locale44);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44);
        java.lang.String str52 = extendedMessageFormat51.toPattern();
        java.util.Locale locale56 = null;
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale56, map57);
        java.text.Format[] formatArray59 = extendedMessageFormat58.getFormatsByArgumentIndex();
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map62);
        java.util.Locale locale64 = extendedMessageFormat63.getLocale();
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale64, map65);
        extendedMessageFormat58.setLocale(locale64);
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale64, map68);
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale64, map70);
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map77);
        java.util.Locale locale79 = extendedMessageFormat78.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale79);
        java.util.Map map81 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79, map81);
        java.util.Map map83 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79, map83);
        java.util.Locale locale85 = extendedMessageFormat84.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat86 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale85);
        extendedMessageFormat71.setLocale(locale85);
        extendedMessageFormat51.setLocale(locale85);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str89 = extendedMessageFormat10.format((java.lang.Object) extendedMessageFormat51);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNull(locale22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(formatArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(formatArray59);
        org.junit.Assert.assertNotNull(locale64);
        org.junit.Assert.assertEquals(locale64.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale79);
        org.junit.Assert.assertEquals(locale79.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale85);
        org.junit.Assert.assertEquals(locale85.toString(), "en_US");
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map23);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        java.text.Format[] formatArray28 = extendedMessageFormat26.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatsByArgumentIndex(formatArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray28);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4);
        extendedMessageFormat5.applyPattern("");
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map20);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15);
        java.text.Format[] formatArray23 = extendedMessageFormat22.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat5.setFormatsByArgumentIndex(formatArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray23);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        extendedMessageFormat3.setLocale(locale14);
        java.lang.Object obj18 = extendedMessageFormat3.clone();
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj18);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat5.applyPattern("hi!");
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        extendedMessageFormat10.applyPattern("");
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        java.lang.String str18 = extendedMessageFormat17.toPattern();
        java.text.Format[] formatArray19 = extendedMessageFormat17.getFormats();
        java.lang.String str20 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray19);
        java.lang.String str21 = extendedMessageFormat10.format((java.lang.Object) formatArray19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28);
        extendedMessageFormat10.setLocale(locale28);
        extendedMessageFormat5.setLocale(locale28);
        java.util.Locale locale35 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator38 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) locale37);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Locale locale45 = null;
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45, map46);
        java.text.Format[] formatArray48 = extendedMessageFormat47.getFormatsByArgumentIndex();
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map54);
        extendedMessageFormat47.setLocale(locale53);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map57);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map59);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map66);
        java.util.Locale locale68 = extendedMessageFormat67.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale68);
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68, map70);
        java.util.Map map72 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68, map72);
        java.util.Locale locale74 = extendedMessageFormat73.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale74);
        extendedMessageFormat60.setLocale(locale74);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale74);
        java.util.Map map78 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale74, map78);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat38.setFormat((int) '4', (java.text.Format) extendedMessageFormat79);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray48);
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale74);
        org.junit.Assert.assertEquals(locale74.toString(), "en_US");
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map1);
        java.lang.Object obj3 = extendedMessageFormat2.clone();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator4 = extendedMessageFormat1.formatToCharacterIterator((java.lang.Object) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Character cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.text.ParsePosition parsePosition4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray5 = extendedMessageFormat1.parse("hi!", parsePosition4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale18 = extendedMessageFormat15.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.lang.Object obj23 = extendedMessageFormat20.parseObject("hi!");
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        extendedMessageFormat26.applyPattern("");
        extendedMessageFormat26.applyPattern("hi!");
        java.lang.String str31 = extendedMessageFormat26.toPattern();
        java.lang.String str32 = extendedMessageFormat26.toPattern();
        java.text.Format[] formatArray33 = extendedMessageFormat26.getFormats();
        java.lang.String str34 = extendedMessageFormat20.format((java.lang.Object) formatArray33);
        java.util.Locale locale35 = extendedMessageFormat20.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = extendedMessageFormat15.format((java.lang.Object) locale35);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(formatArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.lang.String str2 = extendedMessageFormat1.toPattern();
        java.text.ParsePosition parsePosition4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = extendedMessageFormat1.parseObject("hi!", parsePosition4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        java.util.Locale locale6 = null;
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map7);
        java.text.Format[] formatArray9 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        extendedMessageFormat8.setLocale(locale14);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map20);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        extendedMessageFormat21.setLocale(locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35, map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        java.util.Locale locale48 = null;
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48, map49);
        java.text.Format[] formatArray51 = extendedMessageFormat50.getFormatsByArgumentIndex();
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map54);
        java.util.Locale locale56 = extendedMessageFormat55.getLocale();
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale56, map57);
        extendedMessageFormat50.setLocale(locale56);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale56, map60);
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale56, map62);
        java.util.Map map69 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map69);
        java.util.Locale locale71 = extendedMessageFormat70.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale71);
        java.util.Map map73 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale71, map73);
        java.util.Map map75 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale71, map75);
        java.util.Locale locale77 = extendedMessageFormat76.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale77);
        extendedMessageFormat63.setLocale(locale77);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale77);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat81 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale77);
        java.util.Map map86 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat87 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map86);
        java.util.Locale locale88 = extendedMessageFormat87.getLocale();
        java.util.Map map89 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat90 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale88, map89);
        java.util.Map map91 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat92 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale88, map91);
        java.util.Map map93 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat94 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale88, map93);
        java.text.Format[] formatArray95 = extendedMessageFormat94.getFormats();
        java.lang.String str96 = extendedMessageFormat81.format((java.lang.Object) formatArray95);
        java.text.Format[] formatArray97 = extendedMessageFormat81.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat41.setFormatsByArgumentIndex(formatArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray51);
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale71);
        org.junit.Assert.assertEquals(locale71.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale77);
        org.junit.Assert.assertEquals(locale77.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale88);
        org.junit.Assert.assertEquals(locale88.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "" + "'", str96, "");
        org.junit.Assert.assertNotNull(formatArray97);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.lang.String str8 = extendedMessageFormat2.toPattern();
        java.util.Locale locale9 = extendedMessageFormat2.getLocale();
        java.text.ParsePosition parsePosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = extendedMessageFormat2.parseObject("", parsePosition11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        extendedMessageFormat4.setLocale(locale13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        extendedMessageFormat19.applyPattern("");
        java.util.Locale locale24 = null;
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        java.lang.String str27 = extendedMessageFormat26.toPattern();
        java.text.Format[] formatArray28 = extendedMessageFormat26.getFormats();
        java.lang.String str29 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray28);
        java.lang.String str30 = extendedMessageFormat19.format((java.lang.Object) formatArray28);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        extendedMessageFormat19.setLocale(locale38);
        java.lang.StringBuffer stringBuffer40 = null;
        java.text.FieldPosition fieldPosition41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer42 = extendedMessageFormat15.format((java.lang.Object) extendedMessageFormat19, stringBuffer40, fieldPosition41);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(formatArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.lang.String str5 = extendedMessageFormat4.toPattern();
        java.lang.Object[] objArray7 = extendedMessageFormat4.parse("hi!");
        java.text.Format[] formatArray8 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Locale locale10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.lang.String str13 = extendedMessageFormat4.format((java.lang.Object) locale12);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.lang.String str26 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray25);
        java.lang.String str27 = extendedMessageFormat16.format((java.lang.Object) formatArray25);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat16.setLocale(locale34);
        extendedMessageFormat4.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        java.text.Format format45 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat43.setFormatByArgumentIndex((int) (byte) 10, format45);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNull(locale12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.lang.String str5 = extendedMessageFormat4.toPattern();
        java.lang.Object[] objArray7 = extendedMessageFormat4.parse("hi!");
        java.text.Format[] formatArray8 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Locale locale10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.lang.String str13 = extendedMessageFormat4.format((java.lang.Object) locale12);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.lang.String str26 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray25);
        java.lang.String str27 = extendedMessageFormat16.format((java.lang.Object) formatArray25);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat16.setLocale(locale34);
        extendedMessageFormat4.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Locale locale48 = null;
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48, map49);
        java.text.Format[] formatArray51 = extendedMessageFormat50.getFormatsByArgumentIndex();
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map54);
        java.util.Locale locale56 = extendedMessageFormat55.getLocale();
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale56, map57);
        extendedMessageFormat50.setLocale(locale56);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale56, map60);
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale56, map62);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale56);
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale56, map65);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str67 = extendedMessageFormat42.format((java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNull(locale12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray51);
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "en_US");
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.Object obj2 = null;
        boolean boolean3 = extendedMessageFormat1.equals(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.text.ParsePosition parsePosition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = extendedMessageFormat14.parseObject("hi!", parsePosition18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(formatArray16);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map43);
        java.text.Format[] formatArray45 = extendedMessageFormat44.getFormats();
        java.util.Locale locale48 = null;
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48, map49);
        java.text.Format[] formatArray51 = extendedMessageFormat50.getFormatsByArgumentIndex();
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map54);
        java.util.Locale locale56 = extendedMessageFormat55.getLocale();
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale56, map57);
        extendedMessageFormat50.setLocale(locale56);
        java.lang.String str60 = extendedMessageFormat50.toPattern();
        java.lang.Object[] objArray62 = extendedMessageFormat50.parse("hi!");
        java.text.Format[] formatArray63 = extendedMessageFormat50.getFormats();
        java.lang.String str64 = extendedMessageFormat50.toPattern();
        java.util.Locale locale65 = extendedMessageFormat50.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale65);
        java.lang.StringBuffer stringBuffer67 = null;
        java.text.FieldPosition fieldPosition68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer69 = extendedMessageFormat44.format((java.lang.Object) "hi!", stringBuffer67, fieldPosition68);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray45);
        org.junit.Assert.assertNotNull(formatArray51);
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(formatArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_US");
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = extendedMessageFormat3.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale6 = extendedMessageFormat3.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormats();
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        extendedMessageFormat17.setLocale(locale23);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map29);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map40);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44);
        extendedMessageFormat30.setLocale(locale44);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44, map47);
        extendedMessageFormat9.setLocale(locale44);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44);
        java.lang.StringBuffer stringBuffer51 = null;
        java.text.FieldPosition fieldPosition52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer53 = extendedMessageFormat3.format((java.lang.Object) "", stringBuffer51, fieldPosition52);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.util.Locale locale31 = extendedMessageFormat1.getLocale();
        extendedMessageFormat1.applyPattern("");
        java.util.Locale locale35 = null;
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35, map36);
        java.text.Format[] formatArray38 = extendedMessageFormat37.getFormatsByArgumentIndex();
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map41);
        java.util.Locale locale43 = extendedMessageFormat42.getLocale();
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43, map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        extendedMessageFormat37.setLocale(locale46);
        java.text.Format[] formatArray48 = extendedMessageFormat37.getFormats();
        extendedMessageFormat37.applyPattern("hi!");
        java.util.Locale locale51 = extendedMessageFormat37.getLocale();
        java.lang.StringBuffer stringBuffer52 = null;
        java.text.FieldPosition fieldPosition53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer54 = extendedMessageFormat1.format((java.lang.Object) extendedMessageFormat37, stringBuffer52, fieldPosition53);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray38);
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray48);
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_US");
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object[] objArray8 = extendedMessageFormat2.parse("hi!");
        extendedMessageFormat2.applyPattern("");
        java.text.Format[] formatArray11 = extendedMessageFormat2.getFormats();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        extendedMessageFormat14.applyPattern("");
        extendedMessageFormat14.applyPattern("hi!");
        java.lang.Object obj19 = null;
        java.lang.String str20 = extendedMessageFormat14.format(obj19);
        java.lang.Object obj21 = extendedMessageFormat14.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator22 = extendedMessageFormat2.formatToCharacterIterator((java.lang.Object) extendedMessageFormat14);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map11);
        java.lang.String str13 = extendedMessageFormat12.toPattern();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map21);
        java.lang.StringBuffer stringBuffer23 = null;
        java.text.FieldPosition fieldPosition24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer25 = extendedMessageFormat12.format((java.lang.Object) extendedMessageFormat22, stringBuffer23, fieldPosition24);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.lang.String str17 = extendedMessageFormat11.format((java.lang.Object) formatArray16);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map25);
        extendedMessageFormat26.applyPattern("hi!");
        java.util.Locale locale33 = null;
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map34);
        java.text.Format[] formatArray36 = extendedMessageFormat35.getFormatsByArgumentIndex();
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41, map42);
        extendedMessageFormat35.setLocale(locale41);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41, map45);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41, map47);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map54);
        java.util.Locale locale56 = extendedMessageFormat55.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale56);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale56, map58);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale56, map60);
        java.util.Locale locale62 = extendedMessageFormat61.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale62);
        extendedMessageFormat48.setLocale(locale62);
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale62, map65);
        extendedMessageFormat26.setLocale(locale62);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str68 = extendedMessageFormat11.format((java.lang.Object) extendedMessageFormat26);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray36);
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale56);
        org.junit.Assert.assertEquals(locale56.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale62);
        org.junit.Assert.assertEquals(locale62.toString(), "en_US");
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.util.Locale locale18 = null;
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18, map19);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormatsByArgumentIndex();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        extendedMessageFormat20.setLocale(locale26);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat13.setLocale(locale34);
        java.util.Locale locale39 = null;
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39, map40);
        java.text.Format[] formatArray42 = extendedMessageFormat41.getFormatsByArgumentIndex();
        java.text.Format[] formatArray43 = extendedMessageFormat41.getFormatsByArgumentIndex();
        java.util.Locale locale44 = extendedMessageFormat41.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        extendedMessageFormat47.applyPattern("");
        java.util.Locale locale52 = null;
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map53);
        java.lang.String str55 = extendedMessageFormat54.toPattern();
        java.text.Format[] formatArray56 = extendedMessageFormat54.getFormats();
        java.lang.String str57 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray56);
        java.lang.String str58 = extendedMessageFormat47.format((java.lang.Object) formatArray56);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map61);
        java.util.Locale locale63 = extendedMessageFormat62.getLocale();
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale63, map64);
        java.util.Locale locale66 = extendedMessageFormat65.getLocale();
        extendedMessageFormat47.setLocale(locale66);
        extendedMessageFormat41.setLocale(locale66);
        java.util.Map map69 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale66, map69);
        java.lang.StringBuffer stringBuffer71 = null;
        java.text.FieldPosition fieldPosition72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer73 = extendedMessageFormat13.format((java.lang.Object) extendedMessageFormat70, stringBuffer71, fieldPosition72);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray21);
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray42);
        org.junit.Assert.assertNotNull(formatArray43);
        org.junit.Assert.assertNull(locale44);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(formatArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(locale63);
        org.junit.Assert.assertEquals(locale63.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale66);
        org.junit.Assert.assertEquals(locale66.toString(), "en_US");
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map26);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map39);
        java.util.Locale locale41 = extendedMessageFormat40.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41);
        extendedMessageFormat27.setLocale(locale41);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41, map44);
        extendedMessageFormat6.setLocale(locale41);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map48);
        java.lang.String str50 = extendedMessageFormat49.toPattern();
        java.lang.Object[] objArray52 = extendedMessageFormat49.parse("hi!");
        java.text.Format[] formatArray53 = extendedMessageFormat49.getFormatsByArgumentIndex();
        java.util.Locale locale55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        java.lang.String str58 = extendedMessageFormat49.format((java.lang.Object) locale57);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map60);
        extendedMessageFormat61.applyPattern("");
        java.util.Locale locale66 = null;
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map67);
        java.lang.String str69 = extendedMessageFormat68.toPattern();
        java.text.Format[] formatArray70 = extendedMessageFormat68.getFormats();
        java.lang.String str71 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray70);
        java.lang.String str72 = extendedMessageFormat61.format((java.lang.Object) formatArray70);
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map77);
        java.util.Locale locale79 = extendedMessageFormat78.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale79);
        java.util.Map map81 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79, map81);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale79);
        extendedMessageFormat61.setLocale(locale79);
        extendedMessageFormat49.setLocale(locale79);
        extendedMessageFormat6.setLocale(locale79);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray88 = extendedMessageFormat6.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(formatArray53);
        org.junit.Assert.assertNull(locale57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(formatArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(locale79);
        org.junit.Assert.assertEquals(locale79.toString(), "en_US");
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.lang.String str21 = extendedMessageFormat20.toPattern();
        java.text.Format[] formatArray22 = extendedMessageFormat20.getFormatsByArgumentIndex();
        java.util.Locale locale24 = null;
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map25);
        java.text.Format[] formatArray27 = extendedMessageFormat26.getFormatsByArgumentIndex();
        java.text.Format[] formatArray28 = extendedMessageFormat26.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat20.setFormatsByArgumentIndex(formatArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(formatArray22);
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNotNull(formatArray28);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale6 = extendedMessageFormat3.getLocale();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        extendedMessageFormat9.applyPattern("");
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        java.lang.String str17 = extendedMessageFormat16.toPattern();
        java.text.Format[] formatArray18 = extendedMessageFormat16.getFormats();
        java.lang.String str19 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray18);
        java.lang.String str20 = extendedMessageFormat9.format((java.lang.Object) formatArray18);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        extendedMessageFormat9.setLocale(locale28);
        extendedMessageFormat3.setLocale(locale28);
        java.util.Locale locale36 = null;
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map37);
        java.text.Format[] formatArray39 = extendedMessageFormat38.getFormatsByArgumentIndex();
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map45);
        extendedMessageFormat38.setLocale(locale44);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44, map50);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map57);
        java.util.Locale locale59 = extendedMessageFormat58.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale59);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale59, map61);
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale59, map63);
        java.util.Locale locale65 = extendedMessageFormat64.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale65);
        extendedMessageFormat51.setLocale(locale65);
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale65, map68);
        java.lang.Object obj71 = extendedMessageFormat69.parseObject("hi!");
        extendedMessageFormat69.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex((int) (short) -1, (java.text.Format) extendedMessageFormat69);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj71);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat16.applyPattern("hi!");
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        extendedMessageFormat21.applyPattern("");
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.text.Format[] formatArray30 = extendedMessageFormat28.getFormats();
        java.lang.String str31 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray30);
        java.lang.String str32 = extendedMessageFormat21.format((java.lang.Object) formatArray30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        extendedMessageFormat21.setLocale(locale39);
        extendedMessageFormat16.setLocale(locale39);
        extendedMessageFormat14.setLocale(locale39);
        java.util.Locale locale49 = null;
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49, map50);
        java.text.Format[] formatArray52 = extendedMessageFormat51.getFormatsByArgumentIndex();
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map55);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57, map58);
        extendedMessageFormat51.setLocale(locale57);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale57);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat63.applyPattern("hi!");
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map67);
        extendedMessageFormat68.applyPattern("");
        java.util.Locale locale73 = null;
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale73, map74);
        java.lang.String str76 = extendedMessageFormat75.toPattern();
        java.text.Format[] formatArray77 = extendedMessageFormat75.getFormats();
        java.lang.String str78 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray77);
        java.lang.String str79 = extendedMessageFormat68.format((java.lang.Object) formatArray77);
        java.util.Map map84 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map84);
        java.util.Locale locale86 = extendedMessageFormat85.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat87 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale86);
        java.util.Map map88 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat89 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale86, map88);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat90 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale86);
        extendedMessageFormat68.setLocale(locale86);
        extendedMessageFormat63.setLocale(locale86);
        extendedMessageFormat61.setLocale(locale86);
        boolean boolean94 = extendedMessageFormat14.equals((java.lang.Object) locale86);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNotNull(formatArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNotNull(locale86);
        org.junit.Assert.assertEquals(locale86.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        extendedMessageFormat18.applyPattern("");
        java.lang.String str21 = extendedMessageFormat18.toPattern();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.lang.String str26 = extendedMessageFormat25.toPattern();
        java.lang.Object[] objArray28 = extendedMessageFormat25.parse("hi!");
        java.text.Format[] formatArray29 = extendedMessageFormat25.getFormatsByArgumentIndex();
        java.util.Locale locale31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        java.lang.String str34 = extendedMessageFormat25.format((java.lang.Object) locale33);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        extendedMessageFormat37.applyPattern("");
        java.util.Locale locale42 = null;
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map43);
        java.lang.String str45 = extendedMessageFormat44.toPattern();
        java.text.Format[] formatArray46 = extendedMessageFormat44.getFormats();
        java.lang.String str47 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray46);
        java.lang.String str48 = extendedMessageFormat37.format((java.lang.Object) formatArray46);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map53);
        java.util.Locale locale55 = extendedMessageFormat54.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map57);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55);
        extendedMessageFormat37.setLocale(locale55);
        extendedMessageFormat25.setLocale(locale55);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55);
        extendedMessageFormat18.setLocale(locale55);
        extendedMessageFormat1.setLocale(locale55);
        java.text.Format[] formatArray65 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormats(formatArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(formatArray29);
        org.junit.Assert.assertNull(locale33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(formatArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_US");
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.lang.String str2 = extendedMessageFormat1.toPattern();
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        extendedMessageFormat6.setLocale(locale15);
        java.text.Format[] formatArray17 = extendedMessageFormat6.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatsByArgumentIndex(formatArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray17);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map28);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map41);
        java.util.Locale locale43 = extendedMessageFormat42.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43);
        extendedMessageFormat29.setLocale(locale43);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43, map46);
        extendedMessageFormat8.setLocale(locale43);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.lang.String str52 = extendedMessageFormat51.toPattern();
        java.lang.Object[] objArray54 = extendedMessageFormat51.parse("hi!");
        java.text.Format[] formatArray55 = extendedMessageFormat51.getFormatsByArgumentIndex();
        java.util.Locale locale57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57);
        java.util.Locale locale59 = extendedMessageFormat58.getLocale();
        java.lang.String str60 = extendedMessageFormat51.format((java.lang.Object) locale59);
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map62);
        extendedMessageFormat63.applyPattern("");
        java.util.Locale locale68 = null;
        java.util.Map map69 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68, map69);
        java.lang.String str71 = extendedMessageFormat70.toPattern();
        java.text.Format[] formatArray72 = extendedMessageFormat70.getFormats();
        java.lang.String str73 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray72);
        java.lang.String str74 = extendedMessageFormat63.format((java.lang.Object) formatArray72);
        java.util.Map map79 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map79);
        java.util.Locale locale81 = extendedMessageFormat80.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale81);
        java.util.Map map83 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81, map83);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81);
        extendedMessageFormat63.setLocale(locale81);
        extendedMessageFormat51.setLocale(locale81);
        extendedMessageFormat8.setLocale(locale81);
        java.util.Map map89 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat90 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81, map89);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat91 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale81);
        java.util.Map map93 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat94 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map93);
        java.text.Format[] formatArray95 = extendedMessageFormat94.getFormats();
        java.text.Format[] formatArray96 = extendedMessageFormat94.getFormats();
        java.lang.StringBuffer stringBuffer97 = null;
        java.text.FieldPosition fieldPosition98 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer99 = extendedMessageFormat91.format((java.lang.Object[]) formatArray96, stringBuffer97, fieldPosition98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(formatArray55);
        org.junit.Assert.assertNull(locale59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(formatArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(locale81);
        org.junit.Assert.assertEquals(locale81.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray95);
        org.junit.Assert.assertNotNull(formatArray96);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.lang.String str18 = extendedMessageFormat15.toPattern();
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.util.Locale locale25 = extendedMessageFormat23.getLocale();
        extendedMessageFormat23.applyPattern("hi!");
        java.lang.Object obj29 = extendedMessageFormat23.parseObject("hi!");
        extendedMessageFormat23.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat15.setFormatByArgumentIndex((int) (byte) 100, (java.text.Format) extendedMessageFormat23);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(locale25);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormatsByArgumentIndex();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat16.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat12.setFormatByArgumentIndex((int) 'a', (java.text.Format) extendedMessageFormat16);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray13);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.lang.Object obj12 = extendedMessageFormat10.parseObject("hi!");
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.text.Format[] formatArray19 = extendedMessageFormat17.getFormats();
        java.util.Locale locale22 = null;
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map23);
        java.text.Format[] formatArray25 = extendedMessageFormat24.getFormatsByArgumentIndex();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map31);
        extendedMessageFormat24.setLocale(locale30);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        extendedMessageFormat17.setLocale(locale30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        java.lang.String str40 = extendedMessageFormat38.toPattern();
        java.text.Format[] formatArray41 = extendedMessageFormat38.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat10.setFormats(formatArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(formatArray41);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        extendedMessageFormat3.applyPattern("hi!");
        java.lang.Object obj9 = extendedMessageFormat3.parseObject("hi!");
        extendedMessageFormat3.applyPattern("");
        java.lang.Object obj12 = extendedMessageFormat3.clone();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        extendedMessageFormat16.applyPattern("");
        java.lang.String str19 = extendedMessageFormat16.toPattern();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.lang.Object[] objArray26 = extendedMessageFormat23.parse("hi!");
        java.text.Format[] formatArray27 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.util.Locale locale29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        java.lang.String str32 = extendedMessageFormat23.format((java.lang.Object) locale31);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        extendedMessageFormat35.applyPattern("");
        java.util.Locale locale40 = null;
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map41);
        java.lang.String str43 = extendedMessageFormat42.toPattern();
        java.text.Format[] formatArray44 = extendedMessageFormat42.getFormats();
        java.lang.String str45 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray44);
        java.lang.String str46 = extendedMessageFormat35.format((java.lang.Object) formatArray44);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map55);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53);
        extendedMessageFormat35.setLocale(locale53);
        extendedMessageFormat23.setLocale(locale53);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53);
        extendedMessageFormat16.setLocale(locale53);
        java.util.Locale locale63 = null;
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale63, map64);
        java.lang.String str66 = extendedMessageFormat65.toPattern();
        java.util.Locale locale67 = extendedMessageFormat65.getLocale();
        extendedMessageFormat65.applyPattern("hi!");
        java.lang.Object obj71 = extendedMessageFormat65.parseObject("hi!");
        java.text.Format[] formatArray72 = extendedMessageFormat65.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator73 = extendedMessageFormat16.formatToCharacterIterator((java.lang.Object) formatArray72);
        java.lang.String str74 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray72);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNull(locale31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(formatArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNull(locale67);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(formatArray72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.lang.Object[] objArray13 = extendedMessageFormat11.parse("hi!");
        java.util.Locale locale17 = null;
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map18);
        java.text.Format[] formatArray20 = extendedMessageFormat19.getFormatsByArgumentIndex();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map26);
        extendedMessageFormat19.setLocale(locale25);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25, map31);
        java.lang.String str33 = extendedMessageFormat11.format((java.lang.Object) map31);
        java.util.Locale locale35 = null;
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35, map36);
        java.text.Format[] formatArray38 = extendedMessageFormat37.getFormatsByArgumentIndex();
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map41);
        java.util.Locale locale43 = extendedMessageFormat42.getLocale();
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43, map44);
        extendedMessageFormat37.setLocale(locale43);
        java.lang.String str47 = extendedMessageFormat37.toPattern();
        extendedMessageFormat37.applyPattern("hi!");
        java.util.Locale locale53 = null;
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map54);
        java.text.Format[] formatArray56 = extendedMessageFormat55.getFormatsByArgumentIndex();
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map59);
        java.util.Locale locale61 = extendedMessageFormat60.getLocale();
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61, map62);
        extendedMessageFormat55.setLocale(locale61);
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61, map65);
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale61, map67);
        extendedMessageFormat37.setLocale(locale61);
        extendedMessageFormat11.setLocale(locale61);
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map74);
        java.util.Locale locale76 = extendedMessageFormat75.getLocale();
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale76, map77);
        java.util.Map map79 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale76, map79);
        extendedMessageFormat11.setLocale(locale76);
        extendedMessageFormat3.setLocale(locale76);
        java.util.Map map84 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map84);
        extendedMessageFormat85.applyPattern("");
        extendedMessageFormat85.applyPattern("hi!");
        java.lang.String str90 = extendedMessageFormat85.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator91 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) extendedMessageFormat85);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(formatArray38);
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(formatArray56);
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale76);
        org.junit.Assert.assertEquals(locale76.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!" + "'", str90, "hi!");
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormats();
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        extendedMessageFormat18.setLocale(locale24);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        extendedMessageFormat11.setLocale(locale32);
        java.util.Locale locale37 = null;
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map38);
        java.text.Format[] formatArray40 = extendedMessageFormat39.getFormatsByArgumentIndex();
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        extendedMessageFormat39.setLocale(locale48);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48);
        java.util.Locale locale51 = extendedMessageFormat50.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat11.setFormatByArgumentIndex((int) (byte) 0, (java.text.Format) extendedMessageFormat50);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray40);
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_US");
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        extendedMessageFormat3.applyPattern("");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat10.applyPattern("");
        java.lang.String str13 = extendedMessageFormat10.toPattern();
        java.text.Format[] formatArray14 = extendedMessageFormat10.getFormats();
        java.lang.String str15 = extendedMessageFormat10.toPattern();
        java.text.Format[] formatArray16 = extendedMessageFormat10.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex(0, (java.text.Format) extendedMessageFormat10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(formatArray16);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray6 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.lang.String str12 = extendedMessageFormat3.format((java.lang.Object) locale11);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.text.Format[] formatArray24 = extendedMessageFormat22.getFormats();
        java.lang.String str25 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray24);
        java.lang.String str26 = extendedMessageFormat15.format((java.lang.Object) formatArray24);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33);
        extendedMessageFormat15.setLocale(locale33);
        extendedMessageFormat3.setLocale(locale33);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.lang.String str41 = extendedMessageFormat40.toPattern();
        java.util.Locale locale45 = null;
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45, map46);
        java.text.Format[] formatArray48 = extendedMessageFormat47.getFormatsByArgumentIndex();
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map54);
        extendedMessageFormat47.setLocale(locale53);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map57);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map59);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map66);
        java.util.Locale locale68 = extendedMessageFormat67.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale68);
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68, map70);
        java.util.Map map72 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68, map72);
        java.util.Locale locale74 = extendedMessageFormat73.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale74);
        extendedMessageFormat60.setLocale(locale74);
        extendedMessageFormat40.setLocale(locale74);
        java.util.Map map84 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map84);
        java.util.Locale locale86 = extendedMessageFormat85.getLocale();
        java.util.Map map87 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat88 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale86, map87);
        java.util.Map map89 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat90 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale86, map89);
        java.util.Map map91 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat92 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale86, map91);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat93 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale86);
        java.text.Format[] formatArray94 = extendedMessageFormat93.getFormats();
        java.lang.String str95 = extendedMessageFormat93.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat40.setFormatByArgumentIndex((int) ' ', (java.text.Format) extendedMessageFormat93);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNull(locale11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(formatArray48);
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale74);
        org.junit.Assert.assertEquals(locale74.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale86);
        org.junit.Assert.assertEquals(locale86.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "" + "'", str95, "");
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map29);
        extendedMessageFormat30.applyPattern("hi!");
        extendedMessageFormat30.applyPattern("hi!");
        java.text.Format[] formatArray35 = extendedMessageFormat30.getFormatsByArgumentIndex();
        java.text.Format[] formatArray36 = extendedMessageFormat30.getFormats();
        java.util.Locale locale37 = extendedMessageFormat30.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = extendedMessageFormat18.format((java.lang.Object) extendedMessageFormat30);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray35);
        org.junit.Assert.assertNotNull(formatArray36);
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15);
        java.text.ParsePosition parsePosition30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = extendedMessageFormat28.parseObject("hi!", parsePosition30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormats();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map24);
        extendedMessageFormat6.setLocale(locale22);
        java.util.Locale locale30 = null;
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30, map31);
        java.text.Format[] formatArray33 = extendedMessageFormat32.getFormatsByArgumentIndex();
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map39);
        extendedMessageFormat32.setLocale(locale38);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map42);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38, map44);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map55);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map57);
        java.util.Locale locale59 = extendedMessageFormat58.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale59);
        extendedMessageFormat45.setLocale(locale59);
        java.text.Format[] formatArray62 = extendedMessageFormat45.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat6.setFormatsByArgumentIndex(formatArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray33);
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray62);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map11);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormats();
        java.util.Locale locale24 = null;
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map25);
        java.text.Format[] formatArray27 = extendedMessageFormat26.getFormatsByArgumentIndex();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map33);
        extendedMessageFormat26.setLocale(locale32);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32, map38);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map45);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53);
        extendedMessageFormat39.setLocale(locale53);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map58);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map60);
        extendedMessageFormat15.setLocale(locale53);
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map63);
        java.text.Format[] formatArray65 = extendedMessageFormat64.getFormatsByArgumentIndex();
        java.util.Locale locale68 = null;
        java.util.Map map69 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale68, map69);
        java.lang.Object[] objArray72 = extendedMessageFormat70.parse("hi!");
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map74);
        java.lang.String str76 = extendedMessageFormat75.toPattern();
        java.lang.Object[] objArray78 = extendedMessageFormat75.parse("hi!");
        java.text.Format[] formatArray79 = extendedMessageFormat75.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator80 = extendedMessageFormat70.formatToCharacterIterator((java.lang.Object) formatArray79);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat64.setFormat(100, (java.text.Format) extendedMessageFormat70);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray65);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertNotNull(formatArray79);
        org.junit.Assert.assertNotNull(attributedCharacterIterator80);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Locale locale17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17);
        java.lang.Class<?> wildcardClass19 = extendedMessageFormat18.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = extendedMessageFormat3.format((java.lang.Object) extendedMessageFormat18);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = extendedMessageFormat14.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(formatArray16);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.lang.Object[] objArray11 = extendedMessageFormat8.parse("hi!");
        java.text.Format[] formatArray12 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) formatArray12);
        java.util.Locale locale14 = extendedMessageFormat3.getLocale();
        java.text.ParsePosition parsePosition16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray17 = extendedMessageFormat3.parse("", parsePosition16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNull(locale14);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map14);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map25);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23);
        extendedMessageFormat16.setLocale(locale23);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23);
        boolean boolean30 = extendedMessageFormat3.equals((java.lang.Object) locale23);
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        extendedMessageFormat11.applyPattern("hi!");
        java.util.Locale locale14 = null;
        extendedMessageFormat11.setLocale(locale14);
        java.text.Format[] formatArray16 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer17 = null;
        java.text.FieldPosition fieldPosition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer19 = extendedMessageFormat2.format((java.lang.Object) extendedMessageFormat11, stringBuffer17, fieldPosition18);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray16);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map12);
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        extendedMessageFormat17.setLocale(locale26);
        java.util.Locale locale31 = null;
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31, map32);
        java.text.Format[] formatArray34 = extendedMessageFormat33.getFormatsByArgumentIndex();
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map40);
        extendedMessageFormat33.setLocale(locale39);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map43);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39, map45);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map56);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map58);
        java.util.Locale locale60 = extendedMessageFormat59.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale60);
        extendedMessageFormat46.setLocale(locale60);
        extendedMessageFormat17.setLocale(locale60);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator64 = extendedMessageFormat13.formatToCharacterIterator((java.lang.Object) locale60);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray34);
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "en_US");
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.String str14 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale17 = null;
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map18);
        java.text.Format[] formatArray20 = extendedMessageFormat19.getFormatsByArgumentIndex();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        extendedMessageFormat19.setLocale(locale28);
        java.text.Format[] formatArray30 = extendedMessageFormat19.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer31 = null;
        java.text.FieldPosition fieldPosition32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer33 = extendedMessageFormat3.format((java.lang.Object[]) formatArray30, stringBuffer31, fieldPosition32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray30);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        java.util.Locale locale15 = extendedMessageFormat3.getLocale();
        java.lang.String str16 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray17 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.lang.String str18 = extendedMessageFormat3.toPattern();
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map22);
        java.text.Format[] formatArray24 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.util.Locale locale29 = null;
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map30);
        java.text.Format[] formatArray32 = extendedMessageFormat31.getFormatsByArgumentIndex();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map38);
        extendedMessageFormat31.setLocale(locale37);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map43);
        extendedMessageFormat23.setLocale(locale37);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex((int) (byte) 1, (java.text.Format) extendedMessageFormat23);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertNotNull(formatArray32);
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.lang.Object[] objArray6 = extendedMessageFormat4.parse("hi!");
        java.lang.String str7 = java.text.MessageFormat.format("hi!", objArray6);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        extendedMessageFormat16.applyPattern("");
        java.lang.String str19 = extendedMessageFormat16.toPattern();
        java.util.Locale locale20 = extendedMessageFormat16.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat25.applyPattern("");
        java.lang.String str28 = extendedMessageFormat25.toPattern();
        java.text.Format[] formatArray29 = extendedMessageFormat25.getFormats();
        java.lang.String str30 = extendedMessageFormat25.toPattern();
        java.text.Format[] formatArray31 = extendedMessageFormat25.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat22.setFormat((-1), (java.text.Format) extendedMessageFormat25);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(formatArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(formatArray31);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.lang.String str5 = extendedMessageFormat4.toPattern();
        java.lang.Object[] objArray7 = extendedMessageFormat4.parse("hi!");
        java.text.Format[] formatArray8 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Locale locale10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.lang.String str13 = extendedMessageFormat4.format((java.lang.Object) locale12);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.lang.String str26 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray25);
        java.lang.String str27 = extendedMessageFormat16.format((java.lang.Object) formatArray25);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat16.setLocale(locale34);
        extendedMessageFormat4.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.lang.String str43 = extendedMessageFormat42.toPattern();
        java.lang.Object obj44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator45 = extendedMessageFormat42.formatToCharacterIterator(obj44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: formatToCharacterIterator must be passed non-null object");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNull(locale12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        java.lang.Object obj4 = extendedMessageFormat1.parseObject("hi!");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        extendedMessageFormat7.applyPattern("hi!");
        java.lang.String str12 = extendedMessageFormat7.toPattern();
        java.lang.String str13 = extendedMessageFormat7.toPattern();
        java.text.Format[] formatArray14 = extendedMessageFormat7.getFormats();
        java.lang.String str15 = extendedMessageFormat1.format((java.lang.Object) formatArray14);
        java.util.Locale locale16 = extendedMessageFormat1.getLocale();
        java.text.ParsePosition parsePosition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray19 = extendedMessageFormat1.parse("", parsePosition18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map11);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormats();
        java.util.Locale locale24 = null;
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map25);
        java.text.Format[] formatArray27 = extendedMessageFormat26.getFormatsByArgumentIndex();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map33);
        extendedMessageFormat26.setLocale(locale32);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32, map38);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map45);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53);
        extendedMessageFormat39.setLocale(locale53);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map58);
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map60);
        extendedMessageFormat15.setLocale(locale53);
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map63);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat64.setFormatByArgumentIndex((int) (short) 1, (java.text.Format) extendedMessageFormat67);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        extendedMessageFormat3.setLocale(locale16);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        extendedMessageFormat3.setLocale(locale26);
        java.text.Format[] formatArray30 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.ParsePosition parsePosition32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray33 = extendedMessageFormat3.parse("hi!", parsePosition32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray30);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.lang.Object obj20 = extendedMessageFormat18.clone();
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        java.util.Locale locale6 = null;
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map7);
        java.text.Format[] formatArray9 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.text.Format[] formatArray10 = extendedMessageFormat8.getFormats();
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        extendedMessageFormat15.setLocale(locale21);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        extendedMessageFormat8.setLocale(locale21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.lang.String str31 = extendedMessageFormat29.toPattern();
        java.text.Format[] formatArray32 = extendedMessageFormat29.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat((int) (short) 0, (java.text.Format) extendedMessageFormat29);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(formatArray32);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map7);
        extendedMessageFormat8.applyPattern("hi!");
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        extendedMessageFormat17.setLocale(locale23);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map29);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map40);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44);
        extendedMessageFormat30.setLocale(locale44);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44, map47);
        extendedMessageFormat8.setLocale(locale44);
        java.text.ParsePosition parsePosition51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray52 = extendedMessageFormat8.parse("", parsePosition51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.text.Format[] formatArray4 = extendedMessageFormat2.getFormats();
        java.text.Format[] formatArray5 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.lang.Object[] objArray11 = extendedMessageFormat8.parse("hi!");
        java.text.Format[] formatArray12 = extendedMessageFormat8.getFormats();
        java.lang.StringBuffer stringBuffer13 = null;
        java.text.FieldPosition fieldPosition14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer15 = extendedMessageFormat2.format((java.lang.Object[]) formatArray12, stringBuffer13, fieldPosition14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(formatArray12);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        extendedMessageFormat2.applyPattern("");
        java.text.Format[] formatArray9 = extendedMessageFormat2.getFormats();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.lang.String str13 = extendedMessageFormat12.toPattern();
        java.lang.Object[] objArray15 = extendedMessageFormat12.parse("hi!");
        java.lang.StringBuffer stringBuffer16 = null;
        java.text.FieldPosition fieldPosition17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer18 = extendedMessageFormat2.format(objArray15, stringBuffer16, fieldPosition17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray6 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map15);
        java.lang.String str17 = extendedMessageFormat3.format((java.lang.Object) map15);
        java.util.Locale locale18 = extendedMessageFormat3.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        java.text.Format[] formatArray21 = extendedMessageFormat20.getFormats();
        java.text.ParsePosition parsePosition23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray24 = extendedMessageFormat20.parse("", parsePosition23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray21);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.text.Format[] formatArray4 = extendedMessageFormat2.getFormats();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormats(formatArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray12);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map21);
        java.text.Format[] formatArray23 = extendedMessageFormat22.getFormatsByArgumentIndex();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map29);
        extendedMessageFormat22.setLocale(locale28);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map34);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map41);
        java.util.Locale locale43 = extendedMessageFormat42.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43, map45);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43, map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale49);
        extendedMessageFormat35.setLocale(locale49);
        extendedMessageFormat35.applyPattern("hi!");
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map60);
        java.util.Locale locale62 = extendedMessageFormat61.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale62);
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale62, map64);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale62, map66);
        java.util.Locale locale68 = extendedMessageFormat67.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale68);
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale68, map70);
        extendedMessageFormat35.setLocale(locale68);
        java.util.Locale locale73 = extendedMessageFormat35.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat15.setFormatByArgumentIndex((int) (short) -1, (java.text.Format) extendedMessageFormat35);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale62);
        org.junit.Assert.assertEquals(locale62.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale73);
        org.junit.Assert.assertEquals(locale73.toString(), "en_US");
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        java.lang.Object[] objArray4 = extendedMessageFormat1.parse("hi!");
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.lang.String str21 = extendedMessageFormat11.toPattern();
        extendedMessageFormat11.applyPattern("hi!");
        java.util.Locale locale27 = null;
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27, map28);
        java.text.Format[] formatArray30 = extendedMessageFormat29.getFormatsByArgumentIndex();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map36);
        extendedMessageFormat29.setLocale(locale35);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35, map41);
        extendedMessageFormat11.setLocale(locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormatByArgumentIndex((int) ' ', (java.text.Format) extendedMessageFormat45);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormatsByArgumentIndex();
        extendedMessageFormat12.applyPattern("hi!");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormats();
        java.text.Format[] formatArray19 = extendedMessageFormat17.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat12.setFormatsByArgumentIndex(formatArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(formatArray19);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.String str18 = extendedMessageFormat7.format((java.lang.Object) formatArray16);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat7.setLocale(locale25);
        extendedMessageFormat3.setLocale(locale25);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        java.text.ParsePosition parsePosition34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = extendedMessageFormat32.parseObject("hi!", parsePosition34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.lang.String str5 = extendedMessageFormat4.toPattern();
        java.lang.Object[] objArray7 = extendedMessageFormat4.parse("hi!");
        java.text.Format[] formatArray8 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Locale locale10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.lang.String str13 = extendedMessageFormat4.format((java.lang.Object) locale12);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.lang.String str26 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray25);
        java.lang.String str27 = extendedMessageFormat16.format((java.lang.Object) formatArray25);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat16.setLocale(locale34);
        extendedMessageFormat4.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray44 = extendedMessageFormat42.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNull(locale12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        extendedMessageFormat19.setLocale(locale33);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map36);
        java.text.Format[] formatArray38 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat37.setFormatsByArgumentIndex(formatArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat6.applyPattern("hi!");
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        extendedMessageFormat11.applyPattern("");
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        java.lang.String str19 = extendedMessageFormat18.toPattern();
        java.text.Format[] formatArray20 = extendedMessageFormat18.getFormats();
        java.lang.String str21 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray20);
        java.lang.String str22 = extendedMessageFormat11.format((java.lang.Object) formatArray20);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map31);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29);
        extendedMessageFormat11.setLocale(locale29);
        extendedMessageFormat6.setLocale(locale29);
        java.util.Locale locale36 = extendedMessageFormat6.getLocale();
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale41 = null;
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41, map42);
        java.text.Format[] formatArray44 = extendedMessageFormat43.getFormatsByArgumentIndex();
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map50);
        extendedMessageFormat43.setLocale(locale49);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map53);
        extendedMessageFormat54.applyPattern("");
        java.lang.String str57 = extendedMessageFormat54.toPattern();
        java.util.Locale locale58 = extendedMessageFormat54.getLocale();
        extendedMessageFormat6.setLocale(locale58);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale58);
        extendedMessageFormat2.setLocale(locale58);
        java.text.ParsePosition parsePosition63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray64 = extendedMessageFormat2.parse("", parsePosition63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray44);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_US");
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        java.lang.Object[] objArray4 = extendedMessageFormat1.parse("hi!");
        java.text.Format[] formatArray5 = extendedMessageFormat1.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map15);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        java.lang.String str18 = extendedMessageFormat17.toPattern();
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map22);
        java.text.Format[] formatArray24 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map30);
        extendedMessageFormat23.setLocale(locale29);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29);
        extendedMessageFormat17.setLocale(locale29);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map35);
        java.lang.StringBuffer stringBuffer37 = null;
        java.text.FieldPosition fieldPosition38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer39 = extendedMessageFormat1.format((java.lang.Object) map35, stringBuffer37, fieldPosition38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map20);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18);
        extendedMessageFormat11.setLocale(locale18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18);
        java.util.Locale locale28 = null;
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map29);
        java.text.Format[] formatArray31 = extendedMessageFormat30.getFormatsByArgumentIndex();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map37);
        extendedMessageFormat30.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat42.applyPattern("hi!");
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        extendedMessageFormat47.applyPattern("");
        java.util.Locale locale52 = null;
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map53);
        java.lang.String str55 = extendedMessageFormat54.toPattern();
        java.text.Format[] formatArray56 = extendedMessageFormat54.getFormats();
        java.lang.String str57 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray56);
        java.lang.String str58 = extendedMessageFormat47.format((java.lang.Object) formatArray56);
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map63);
        java.util.Locale locale65 = extendedMessageFormat64.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale65);
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map67);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65);
        extendedMessageFormat47.setLocale(locale65);
        extendedMessageFormat42.setLocale(locale65);
        extendedMessageFormat40.setLocale(locale65);
        java.lang.String str73 = extendedMessageFormat40.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat24.setFormat((int) (short) 0, (java.text.Format) extendedMessageFormat40);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(formatArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map22);
        java.text.ParsePosition parsePosition25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray26 = extendedMessageFormat23.parse("", parsePosition25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map14);
        java.lang.String str16 = extendedMessageFormat2.format((java.lang.Object) map14);
        java.util.Locale locale17 = extendedMessageFormat2.getLocale();
        java.lang.Object[] objArray19 = extendedMessageFormat2.parse("hi!");
        java.text.ParsePosition parsePosition21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray22 = extendedMessageFormat2.parse("hi!", parsePosition21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.lang.Object[] objArray12 = extendedMessageFormat9.parse("hi!");
        java.text.Format[] formatArray13 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Locale locale15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.lang.String str18 = extendedMessageFormat9.format((java.lang.Object) locale17);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        extendedMessageFormat21.applyPattern("");
        java.util.Locale locale26 = null;
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map27);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.text.Format[] formatArray30 = extendedMessageFormat28.getFormats();
        java.lang.String str31 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray30);
        java.lang.String str32 = extendedMessageFormat21.format((java.lang.Object) formatArray30);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map41);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39);
        extendedMessageFormat21.setLocale(locale39);
        extendedMessageFormat9.setLocale(locale39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47);
        extendedMessageFormat3.setLocale(locale47);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map51);
        extendedMessageFormat52.applyPattern("");
        extendedMessageFormat52.applyPattern("hi!");
        java.lang.String str57 = extendedMessageFormat52.toPattern();
        java.lang.String str58 = extendedMessageFormat52.toPattern();
        java.util.Locale locale59 = extendedMessageFormat52.getLocale();
        java.lang.StringBuffer stringBuffer60 = null;
        java.text.FieldPosition fieldPosition61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer62 = extendedMessageFormat3.format((java.lang.Object) locale59, stringBuffer60, fieldPosition61);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNull(locale17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_US");
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray3 = extendedMessageFormat2.getFormats();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        extendedMessageFormat23.setLocale(locale37);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map40);
        extendedMessageFormat2.setLocale(locale37);
        java.util.Locale locale43 = extendedMessageFormat2.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray46 = extendedMessageFormat44.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormat((int) (short) 100, (java.text.Format) extendedMessageFormat14);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Locale locale8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.lang.String str11 = extendedMessageFormat2.format((java.lang.Object) locale10);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        extendedMessageFormat14.applyPattern("");
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        java.lang.String str22 = extendedMessageFormat21.toPattern();
        java.text.Format[] formatArray23 = extendedMessageFormat21.getFormats();
        java.lang.String str24 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray23);
        java.lang.String str25 = extendedMessageFormat14.format((java.lang.Object) formatArray23);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32);
        extendedMessageFormat14.setLocale(locale32);
        extendedMessageFormat2.setLocale(locale32);
        java.text.Format[] formatArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormatsByArgumentIndex(formatArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNull(locale10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map23);
        java.lang.String str25 = extendedMessageFormat3.format((java.lang.Object) map23);
        java.lang.String str26 = extendedMessageFormat3.toPattern();
        java.util.Locale locale28 = null;
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map29);
        java.text.Format[] formatArray31 = extendedMessageFormat30.getFormatsByArgumentIndex();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map37);
        extendedMessageFormat30.setLocale(locale36);
        java.lang.String str40 = extendedMessageFormat30.toPattern();
        java.lang.Object[] objArray42 = extendedMessageFormat30.parse("hi!");
        java.lang.StringBuffer stringBuffer43 = null;
        java.text.FieldPosition fieldPosition44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer45 = extendedMessageFormat3.format(objArray42, stringBuffer43, fieldPosition44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.text.Format[] formatArray14 = extendedMessageFormat13.getFormats();
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.text.Format[] formatArray22 = extendedMessageFormat21.getFormatsByArgumentIndex();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map28);
        extendedMessageFormat21.setLocale(locale27);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27, map33);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27);
        java.lang.String str36 = extendedMessageFormat35.toPattern();
        java.text.Format[] formatArray37 = extendedMessageFormat35.getFormatsByArgumentIndex();
        java.lang.Object obj38 = extendedMessageFormat35.clone();
        boolean boolean39 = extendedMessageFormat13.equals((java.lang.Object) extendedMessageFormat35);
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(formatArray22);
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(formatArray37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map43);
        extendedMessageFormat44.applyPattern("hi!");
        java.lang.Object obj47 = extendedMessageFormat44.clone();
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj47);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map14);
        java.lang.String str16 = extendedMessageFormat2.format((java.lang.Object) map14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray18 = extendedMessageFormat2.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map14);
        extendedMessageFormat15.applyPattern("");
        java.lang.String str18 = extendedMessageFormat15.toPattern();
        java.text.ParsePosition parsePosition20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = extendedMessageFormat15.parseObject("", parsePosition20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map7);
        extendedMessageFormat8.applyPattern("hi!");
        java.lang.Object obj11 = extendedMessageFormat8.clone();
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj11);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map20);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18);
        extendedMessageFormat11.setLocale(locale18);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map24);
        java.util.Locale locale31 = null;
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31, map32);
        java.text.Format[] formatArray34 = extendedMessageFormat33.getFormatsByArgumentIndex();
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map37);
        java.util.Locale locale39 = extendedMessageFormat38.getLocale();
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map40);
        extendedMessageFormat33.setLocale(locale39);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale39, map43);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale39, map45);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map56);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map58);
        java.util.Locale locale60 = extendedMessageFormat59.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale60);
        extendedMessageFormat46.setLocale(locale60);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale60);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale60);
        java.util.Map map69 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map69);
        java.util.Locale locale71 = extendedMessageFormat70.getLocale();
        java.util.Map map72 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale71, map72);
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale71, map74);
        java.util.Map map76 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale71, map76);
        java.text.Format[] formatArray78 = extendedMessageFormat77.getFormats();
        java.lang.String str79 = extendedMessageFormat64.format((java.lang.Object) formatArray78);
        java.text.Format[] formatArray80 = extendedMessageFormat64.getFormats();
        extendedMessageFormat64.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator83 = extendedMessageFormat25.formatToCharacterIterator((java.lang.Object) extendedMessageFormat64);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray34);
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale71);
        org.junit.Assert.assertEquals(locale71.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNotNull(formatArray80);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.lang.Object[] objArray11 = extendedMessageFormat8.parse("hi!");
        java.text.Format[] formatArray12 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) formatArray12);
        extendedMessageFormat3.applyPattern("");
        java.text.Format[] formatArray16 = extendedMessageFormat3.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = extendedMessageFormat3.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNotNull(formatArray16);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        extendedMessageFormat3.setLocale(locale14);
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.lang.Object[] objArray23 = extendedMessageFormat21.parse("hi!");
        java.util.Locale locale29 = null;
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map30);
        java.text.Format[] formatArray32 = extendedMessageFormat31.getFormatsByArgumentIndex();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map38);
        extendedMessageFormat31.setLocale(locale37);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map43);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map46);
        extendedMessageFormat21.setLocale(locale37);
        extendedMessageFormat3.setLocale(locale37);
        java.lang.String str50 = extendedMessageFormat3.toPattern();
        java.text.ParsePosition parsePosition52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = extendedMessageFormat3.parseObject("", parsePosition52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(formatArray32);
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map22);
        java.lang.Class<?> wildcardClass24 = extendedMessageFormat23.getClass();
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        extendedMessageFormat11.applyPattern("hi!");
        extendedMessageFormat11.applyPattern("hi!");
        java.text.Format[] formatArray16 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.text.Format[] formatArray17 = extendedMessageFormat11.getFormats();
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.lang.Object[] objArray23 = extendedMessageFormat21.parse("hi!");
        java.lang.Object obj24 = extendedMessageFormat21.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator25 = extendedMessageFormat11.formatToCharacterIterator(obj24);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(obj24);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.lang.String str21 = extendedMessageFormat20.toPattern();
        java.text.Format[] formatArray22 = extendedMessageFormat20.getFormatsByArgumentIndex();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray25 = extendedMessageFormat24.getFormats();
        java.util.Locale locale28 = null;
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map29);
        java.text.Format[] formatArray31 = extendedMessageFormat30.getFormatsByArgumentIndex();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map37);
        extendedMessageFormat30.setLocale(locale36);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map40);
        extendedMessageFormat41.applyPattern("");
        java.lang.String str44 = extendedMessageFormat41.toPattern();
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        java.lang.String str49 = extendedMessageFormat48.toPattern();
        java.lang.Object[] objArray51 = extendedMessageFormat48.parse("hi!");
        java.text.Format[] formatArray52 = extendedMessageFormat48.getFormatsByArgumentIndex();
        java.util.Locale locale54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54);
        java.util.Locale locale56 = extendedMessageFormat55.getLocale();
        java.lang.String str57 = extendedMessageFormat48.format((java.lang.Object) locale56);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map59);
        extendedMessageFormat60.applyPattern("");
        java.util.Locale locale65 = null;
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map66);
        java.lang.String str68 = extendedMessageFormat67.toPattern();
        java.text.Format[] formatArray69 = extendedMessageFormat67.getFormats();
        java.lang.String str70 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray69);
        java.lang.String str71 = extendedMessageFormat60.format((java.lang.Object) formatArray69);
        java.util.Map map76 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map76);
        java.util.Locale locale78 = extendedMessageFormat77.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale78);
        java.util.Map map80 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat81 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale78, map80);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale78);
        extendedMessageFormat60.setLocale(locale78);
        extendedMessageFormat48.setLocale(locale78);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale78);
        extendedMessageFormat41.setLocale(locale78);
        extendedMessageFormat24.setLocale(locale78);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str88 = extendedMessageFormat20.format((java.lang.Object) locale78);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(formatArray22);
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertNull(locale56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(formatArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(locale78);
        org.junit.Assert.assertEquals(locale78.toString(), "en_US");
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.ParsePosition parsePosition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray7 = extendedMessageFormat3.parse("hi!", parsePosition6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.String str18 = extendedMessageFormat7.format((java.lang.Object) formatArray16);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat7.setLocale(locale25);
        extendedMessageFormat2.setLocale(locale25);
        java.util.Locale locale32 = extendedMessageFormat2.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.util.Locale locale43 = null;
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43, map44);
        java.text.Format[] formatArray46 = extendedMessageFormat45.getFormatsByArgumentIndex();
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map49);
        java.util.Locale locale51 = extendedMessageFormat50.getLocale();
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map52);
        extendedMessageFormat45.setLocale(locale51);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map55);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale51, map57);
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map64);
        java.util.Locale locale66 = extendedMessageFormat65.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale66);
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map68);
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map70);
        java.util.Locale locale72 = extendedMessageFormat71.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale72);
        extendedMessageFormat58.setLocale(locale72);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale72);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale72);
        java.util.Map map77 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale72, map77);
        java.util.Map map79 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale72, map79);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat81 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale72);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat33.setFormat(0, (java.text.Format) extendedMessageFormat81);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray46);
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale66);
        org.junit.Assert.assertEquals(locale66.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale72);
        org.junit.Assert.assertEquals(locale72.toString(), "en_US");
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat2.applyPattern("hi!");
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale10 = null;
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10, map11);
        java.text.Format[] formatArray13 = extendedMessageFormat12.getFormatsByArgumentIndex();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map16);
        java.util.Locale locale18 = extendedMessageFormat17.getLocale();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map19);
        extendedMessageFormat12.setLocale(locale18);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale18, map22);
        extendedMessageFormat23.applyPattern("");
        java.util.Locale locale26 = extendedMessageFormat23.getLocale();
        java.util.Locale locale29 = null;
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map30);
        java.text.Format[] formatArray32 = extendedMessageFormat31.getFormatsByArgumentIndex();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map38);
        extendedMessageFormat31.setLocale(locale37);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map41);
        extendedMessageFormat23.setLocale(locale37);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map44);
        java.lang.String str46 = extendedMessageFormat2.format((java.lang.Object) map44);
        java.text.Format[] formatArray47 = extendedMessageFormat2.getFormats();
        java.lang.String str48 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray47);
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray32);
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(formatArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        java.util.Locale locale1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1);
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Locale locale5 = null;
        extendedMessageFormat2.setLocale(locale5);
        java.text.Format[] formatArray7 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.text.Format[] formatArray8 = extendedMessageFormat2.getFormats();
        java.lang.Class<?> wildcardClass9 = extendedMessageFormat2.getClass();
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.lang.String str15 = extendedMessageFormat5.toPattern();
        extendedMessageFormat5.applyPattern("hi!");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map22);
        java.text.Format[] formatArray24 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map30);
        extendedMessageFormat23.setLocale(locale29);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map35);
        extendedMessageFormat5.setLocale(locale29);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29);
        java.util.Locale locale43 = null;
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43, map44);
        java.text.Format[] formatArray46 = extendedMessageFormat45.getFormatsByArgumentIndex();
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map49);
        java.util.Locale locale51 = extendedMessageFormat50.getLocale();
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map52);
        extendedMessageFormat45.setLocale(locale51);
        java.lang.String str55 = extendedMessageFormat45.toPattern();
        extendedMessageFormat45.applyPattern("hi!");
        java.util.Locale locale61 = null;
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale61, map62);
        java.text.Format[] formatArray64 = extendedMessageFormat63.getFormatsByArgumentIndex();
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map67);
        java.util.Locale locale69 = extendedMessageFormat68.getLocale();
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69, map70);
        extendedMessageFormat63.setLocale(locale69);
        java.util.Map map73 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69, map73);
        java.util.Map map75 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale69, map75);
        extendedMessageFormat45.setLocale(locale69);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale69);
        extendedMessageFormat39.setLocale(locale69);
        java.text.ParsePosition parsePosition82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj83 = extendedMessageFormat39.parseObject("", parsePosition82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray46);
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(formatArray64);
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "en_US");
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object[] objArray8 = extendedMessageFormat2.parse("hi!");
        extendedMessageFormat2.applyPattern("");
        java.text.Format[] formatArray11 = extendedMessageFormat2.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = extendedMessageFormat2.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(formatArray11);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.lang.Object[] objArray17 = extendedMessageFormat14.parse("hi!");
        java.text.Format[] formatArray18 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer19 = null;
        java.text.FieldPosition fieldPosition20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer21 = extendedMessageFormat11.format((java.lang.Object[]) formatArray18, stringBuffer19, fieldPosition20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(formatArray18);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        java.util.Locale locale15 = extendedMessageFormat3.getLocale();
        java.text.Format[] formatArray16 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.lang.Object obj17 = extendedMessageFormat3.clone();
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(obj17);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        java.lang.String str13 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        java.text.Format[] formatArray14 = extendedMessageFormat2.getFormats();
        java.util.Locale locale15 = extendedMessageFormat2.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormats();
        java.lang.StringBuffer stringBuffer20 = null;
        java.text.FieldPosition fieldPosition21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer22 = extendedMessageFormat2.format((java.lang.Object[]) formatArray19, stringBuffer20, fieldPosition21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray19);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.text.ParsePosition parsePosition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray6 = extendedMessageFormat2.parse("", parsePosition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_US");
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map12);
        java.text.Format[] formatArray14 = extendedMessageFormat13.getFormatsByArgumentIndex();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        extendedMessageFormat13.setLocale(locale19);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map23);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map25);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map28);
        extendedMessageFormat3.setLocale(locale19);
        java.util.Locale locale34 = null;
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34, map35);
        java.text.Format[] formatArray37 = extendedMessageFormat36.getFormatsByArgumentIndex();
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map43);
        extendedMessageFormat36.setLocale(locale42);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42, map48);
        java.text.Format[] formatArray50 = extendedMessageFormat49.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormats(formatArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray50);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        extendedMessageFormat18.setLocale(locale32);
        java.util.Locale locale35 = extendedMessageFormat18.getLocale();
        java.text.Format[] formatArray36 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.text.ParsePosition parsePosition38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray39 = extendedMessageFormat18.parse("", parsePosition38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray36);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map14);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormats();
        java.util.Locale locale25 = null;
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25, map26);
        java.text.Format[] formatArray28 = extendedMessageFormat27.getFormatsByArgumentIndex();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map34);
        extendedMessageFormat27.setLocale(locale33);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map39);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        extendedMessageFormat40.setLocale(locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map59);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map61);
        extendedMessageFormat16.setLocale(locale54);
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map64);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map66);
        java.util.Map map75 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map75);
        java.util.Locale locale77 = extendedMessageFormat76.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale77);
        java.util.Map map79 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale77, map79);
        java.util.Map map81 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale77, map81);
        java.util.Locale locale83 = extendedMessageFormat82.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale83);
        java.util.Map map85 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat86 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale83, map85);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat67.setFormatByArgumentIndex((int) (short) -1, (java.text.Format) extendedMessageFormat86);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(formatArray28);
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale77);
        org.junit.Assert.assertEquals(locale77.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale83);
        org.junit.Assert.assertEquals(locale83.toString(), "en_US");
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map12);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormats();
        java.text.Format[] formatArray18 = extendedMessageFormat16.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat14.setFormatsByArgumentIndex(formatArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(formatArray18);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormats();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map24);
        extendedMessageFormat6.setLocale(locale22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31);
        java.text.Format[] formatArray33 = extendedMessageFormat32.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat6.setFormatsByArgumentIndex(formatArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray33);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.ParsePosition parsePosition3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj4 = extendedMessageFormat1.parseObject("", parsePosition3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.lang.String str3 = extendedMessageFormat2.toPattern();
        java.lang.Object[] objArray5 = extendedMessageFormat2.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat2.getFormatsByArgumentIndex();
        java.util.Locale locale8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.lang.String str11 = extendedMessageFormat2.format((java.lang.Object) locale10);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map24);
        extendedMessageFormat25.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat((int) (byte) -1, (java.text.Format) extendedMessageFormat25);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNull(locale10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        java.util.Locale locale15 = extendedMessageFormat3.getLocale();
        java.text.Format[] formatArray16 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.lang.Class<?> wildcardClass17 = formatArray16.getClass();
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.text.Format[] formatArray30 = extendedMessageFormat28.getFormatsByArgumentIndex();
        java.lang.String str31 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray30);
        java.lang.String str32 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray30);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatsByArgumentIndex(formatArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.lang.String str5 = extendedMessageFormat2.toPattern();
        java.lang.Object obj6 = extendedMessageFormat2.clone();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(obj6);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.Object obj15 = extendedMessageFormat3.parseObject("hi!");
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        java.lang.String str29 = extendedMessageFormat28.toPattern();
        java.util.Locale locale32 = null;
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32, map33);
        java.text.Format[] formatArray35 = extendedMessageFormat34.getFormatsByArgumentIndex();
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map38);
        java.util.Locale locale40 = extendedMessageFormat39.getLocale();
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map41);
        extendedMessageFormat34.setLocale(locale40);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale40);
        extendedMessageFormat28.setLocale(locale40);
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        extendedMessageFormat48.applyPattern("");
        java.util.Locale locale53 = null;
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map54);
        java.lang.String str56 = extendedMessageFormat55.toPattern();
        java.text.Format[] formatArray57 = extendedMessageFormat55.getFormats();
        java.lang.String str58 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray57);
        java.lang.String str59 = extendedMessageFormat48.format((java.lang.Object) formatArray57);
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map64);
        java.util.Locale locale66 = extendedMessageFormat65.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale66);
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66, map68);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale66);
        extendedMessageFormat48.setLocale(locale66);
        extendedMessageFormat28.setLocale(locale66);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale66);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale66);
        extendedMessageFormat3.setLocale(locale66);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj77 = extendedMessageFormat3.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(formatArray35);
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(formatArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(locale66);
        org.junit.Assert.assertEquals(locale66.toString(), "en_US");
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormats();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map24);
        extendedMessageFormat6.setLocale(locale22);
        java.lang.Object obj27 = extendedMessageFormat6.clone();
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map21);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19);
        extendedMessageFormat12.setLocale(locale19);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map27);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.lang.String str33 = extendedMessageFormat32.toPattern();
        java.lang.Object[] objArray35 = extendedMessageFormat32.parse("hi!");
        java.text.Format[] formatArray36 = extendedMessageFormat32.getFormatsByArgumentIndex();
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map44);
        java.lang.String str46 = extendedMessageFormat32.format((java.lang.Object) map44);
        java.util.Locale locale47 = extendedMessageFormat32.getLocale();
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map48);
        java.text.Format[] formatArray50 = extendedMessageFormat49.getFormats();
        java.lang.StringBuffer stringBuffer51 = null;
        java.text.FieldPosition fieldPosition52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer53 = extendedMessageFormat28.format((java.lang.Object) formatArray50, stringBuffer51, fieldPosition52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(formatArray36);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray50);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        java.lang.String str4 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat1.getFormats();
        java.lang.String str6 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray7 = extendedMessageFormat1.getFormats();
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        extendedMessageFormat15.setLocale(locale21);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map27);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        extendedMessageFormat28.setLocale(locale42);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map54);
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map56);
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map58);
        java.text.Format[] formatArray60 = extendedMessageFormat59.getFormats();
        java.lang.String str61 = extendedMessageFormat46.format((java.lang.Object) formatArray60);
        java.lang.StringBuffer stringBuffer62 = null;
        java.text.FieldPosition fieldPosition63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer64 = extendedMessageFormat1.format((java.lang.Object[]) formatArray60, stringBuffer62, fieldPosition63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map43);
        java.util.Locale locale47 = null;
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47, map48);
        java.text.Format[] formatArray50 = extendedMessageFormat49.getFormatsByArgumentIndex();
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map53);
        java.util.Locale locale55 = extendedMessageFormat54.getLocale();
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map56);
        extendedMessageFormat49.setLocale(locale55);
        java.lang.String str59 = extendedMessageFormat49.toPattern();
        java.lang.Object[] objArray61 = extendedMessageFormat49.parse("hi!");
        java.lang.String str62 = java.text.MessageFormat.format("hi!", objArray61);
        java.lang.StringBuffer stringBuffer63 = null;
        java.text.FieldPosition fieldPosition64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer65 = extendedMessageFormat44.format((java.lang.Object) str62, stringBuffer63, fieldPosition64);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray50);
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.lang.Object[] objArray6 = extendedMessageFormat4.parse("hi!");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map29);
        extendedMessageFormat4.setLocale(locale20);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map32);
        java.util.Locale locale36 = null;
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map37);
        java.text.Format[] formatArray39 = extendedMessageFormat38.getFormatsByArgumentIndex();
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map45);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        extendedMessageFormat38.setLocale(locale47);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47);
        extendedMessageFormat49.applyPattern("hi!");
        java.lang.Object obj53 = extendedMessageFormat49.parseObject("hi!");
        java.lang.Object[] objArray57 = new java.lang.Object[] {};
        java.lang.String str58 = java.text.MessageFormat.format("hi!", objArray57);
        java.lang.String str59 = java.text.MessageFormat.format("hi!", objArray57);
        java.lang.String str60 = java.text.MessageFormat.format("", objArray57);
        java.lang.String str61 = extendedMessageFormat49.format((java.lang.Object) objArray57);
        java.lang.StringBuffer stringBuffer62 = null;
        java.text.FieldPosition fieldPosition63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer64 = extendedMessageFormat33.format(objArray57, stringBuffer62, fieldPosition63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map12);
        java.text.Format[] formatArray14 = extendedMessageFormat13.getFormatsByArgumentIndex();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        extendedMessageFormat13.setLocale(locale19);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map23);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map25);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map28);
        extendedMessageFormat3.setLocale(locale19);
        java.util.Locale locale32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        extendedMessageFormat33.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator37 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNull(locale34);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.lang.String str21 = extendedMessageFormat20.toPattern();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map34);
        extendedMessageFormat35.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat20.setFormat((int) 'a', (java.text.Format) extendedMessageFormat35);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat6.applyPattern("hi!");
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        extendedMessageFormat11.applyPattern("");
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        java.lang.String str19 = extendedMessageFormat18.toPattern();
        java.text.Format[] formatArray20 = extendedMessageFormat18.getFormats();
        java.lang.String str21 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray20);
        java.lang.String str22 = extendedMessageFormat11.format((java.lang.Object) formatArray20);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map31);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29);
        extendedMessageFormat11.setLocale(locale29);
        extendedMessageFormat6.setLocale(locale29);
        java.util.Locale locale36 = extendedMessageFormat6.getLocale();
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale41 = null;
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale41, map42);
        java.text.Format[] formatArray44 = extendedMessageFormat43.getFormatsByArgumentIndex();
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map47);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map50);
        extendedMessageFormat43.setLocale(locale49);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale49, map53);
        extendedMessageFormat54.applyPattern("");
        java.lang.String str57 = extendedMessageFormat54.toPattern();
        java.util.Locale locale58 = extendedMessageFormat54.getLocale();
        extendedMessageFormat6.setLocale(locale58);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale58);
        extendedMessageFormat2.setLocale(locale58);
        java.text.ParsePosition parsePosition63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = extendedMessageFormat2.parseObject("", parsePosition63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray44);
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_US");
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        extendedMessageFormat16.applyPattern("");
        java.lang.String str19 = extendedMessageFormat16.toPattern();
        java.util.Locale locale20 = extendedMessageFormat16.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        java.util.Locale locale24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat25.applyPattern("hi!");
        java.text.Format[] formatArray28 = extendedMessageFormat25.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat22.setFormats(formatArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray28);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map24);
        java.util.Locale locale26 = extendedMessageFormat25.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale26, map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        extendedMessageFormat18.setLocale(locale32);
        java.text.Format[] formatArray35 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.text.Format[] formatArray36 = extendedMessageFormat18.getFormats();
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44, map46);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44);
        java.lang.String str49 = extendedMessageFormat48.toPattern();
        java.util.Locale locale52 = null;
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52, map53);
        java.text.Format[] formatArray55 = extendedMessageFormat54.getFormatsByArgumentIndex();
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map58);
        java.util.Locale locale60 = extendedMessageFormat59.getLocale();
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale60, map61);
        extendedMessageFormat54.setLocale(locale60);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale60);
        extendedMessageFormat48.setLocale(locale60);
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map67);
        extendedMessageFormat68.applyPattern("");
        java.util.Locale locale73 = null;
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale73, map74);
        java.lang.String str76 = extendedMessageFormat75.toPattern();
        java.text.Format[] formatArray77 = extendedMessageFormat75.getFormats();
        java.lang.String str78 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray77);
        java.lang.String str79 = extendedMessageFormat68.format((java.lang.Object) formatArray77);
        java.util.Map map84 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map84);
        java.util.Locale locale86 = extendedMessageFormat85.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat87 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale86);
        java.util.Map map88 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat89 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale86, map88);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat90 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale86);
        extendedMessageFormat68.setLocale(locale86);
        extendedMessageFormat48.setLocale(locale86);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat18.setFormat((-1), (java.text.Format) extendedMessageFormat48);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale26);
        org.junit.Assert.assertEquals(locale26.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray35);
        org.junit.Assert.assertNotNull(formatArray36);
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(formatArray55);
        org.junit.Assert.assertNotNull(locale60);
        org.junit.Assert.assertEquals(locale60.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNotNull(formatArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNotNull(locale86);
        org.junit.Assert.assertEquals(locale86.toString(), "en_US");
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray18 = extendedMessageFormat14.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(formatArray16);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray15 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray16 = extendedMessageFormat3.getFormats();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map29);
        java.lang.String str31 = extendedMessageFormat30.toPattern();
        java.lang.String str32 = extendedMessageFormat30.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormat((int) (byte) 10, (java.text.Format) extendedMessageFormat30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.util.Locale locale17 = null;
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale17, map18);
        java.text.Format[] formatArray20 = extendedMessageFormat19.getFormatsByArgumentIndex();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map26);
        extendedMessageFormat19.setLocale(locale25);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25, map31);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map38);
        java.util.Locale locale40 = extendedMessageFormat39.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale40);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map42);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46);
        extendedMessageFormat32.setLocale(locale46);
        extendedMessageFormat3.setLocale(locale46);
        java.text.ParsePosition parsePosition51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = extendedMessageFormat3.parseObject("hi!", parsePosition51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        extendedMessageFormat11.applyPattern("hi!");
        extendedMessageFormat11.applyPattern("hi!");
        java.text.Format[] formatArray16 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map25);
        java.lang.String str27 = extendedMessageFormat26.toPattern();
        java.text.Format[] formatArray28 = extendedMessageFormat26.getFormats();
        java.text.Format[] formatArray29 = extendedMessageFormat26.getFormatsByArgumentIndex();
        boolean boolean30 = extendedMessageFormat11.equals((java.lang.Object) formatArray29);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(formatArray28);
        org.junit.Assert.assertNotNull(formatArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        extendedMessageFormat3.setLocale(locale12);
        java.text.Format[] formatArray14 = extendedMessageFormat3.getFormats();
        java.util.Locale locale15 = extendedMessageFormat3.getLocale();
        java.lang.String str16 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray17 = extendedMessageFormat3.getFormatsByArgumentIndex();
        boolean boolean19 = extendedMessageFormat3.equals((java.lang.Object) 0);
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map23);
        extendedMessageFormat3.setLocale(locale17);
        java.util.Locale locale27 = null;
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27, map28);
        java.text.Format[] formatArray30 = extendedMessageFormat29.getFormatsByArgumentIndex();
        java.text.Format[] formatArray31 = extendedMessageFormat29.getFormatsByArgumentIndex();
        java.lang.StringBuffer stringBuffer32 = null;
        java.text.FieldPosition fieldPosition33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer34 = extendedMessageFormat3.format((java.lang.Object[]) formatArray31, stringBuffer32, fieldPosition33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertNotNull(formatArray31);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        extendedMessageFormat4.setLocale(locale10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.lang.Object obj16 = extendedMessageFormat14.clone();
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(obj16);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale3, map4);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        extendedMessageFormat17.setLocale(locale23);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map29);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map34);
        extendedMessageFormat7.setLocale(locale23);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator37 = extendedMessageFormat5.formatToCharacterIterator((java.lang.Object) locale23);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.lang.String str8 = extendedMessageFormat7.toPattern();
        java.lang.Object[] objArray10 = extendedMessageFormat7.parse("hi!");
        java.text.Format[] formatArray11 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Locale locale13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.lang.String str16 = extendedMessageFormat7.format((java.lang.Object) locale15);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        extendedMessageFormat19.applyPattern("");
        java.util.Locale locale24 = null;
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        java.lang.String str27 = extendedMessageFormat26.toPattern();
        java.text.Format[] formatArray28 = extendedMessageFormat26.getFormats();
        java.lang.String str29 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray28);
        java.lang.String str30 = extendedMessageFormat19.format((java.lang.Object) formatArray28);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map39);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37);
        extendedMessageFormat19.setLocale(locale37);
        extendedMessageFormat7.setLocale(locale37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map46);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map49);
        java.text.ParsePosition parsePosition52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray53 = extendedMessageFormat50.parse("hi!", parsePosition52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNull(locale15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(formatArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale11, map12);
        java.text.Format[] formatArray14 = extendedMessageFormat13.getFormatsByArgumentIndex();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map20);
        extendedMessageFormat13.setLocale(locale19);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map23);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map25);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map28);
        extendedMessageFormat3.setLocale(locale19);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.text.Format[] formatArray34 = extendedMessageFormat33.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex((-1), (java.text.Format) extendedMessageFormat33);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray34);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map50);
        java.text.Format[] formatArray52 = extendedMessageFormat51.getFormats();
        java.lang.String str53 = extendedMessageFormat38.format((java.lang.Object) formatArray52);
        java.text.Format[] formatArray54 = extendedMessageFormat38.getFormats();
        extendedMessageFormat38.applyPattern("");
        extendedMessageFormat38.applyPattern("");
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map60);
        extendedMessageFormat61.applyPattern("");
        extendedMessageFormat61.applyPattern("hi!");
        java.lang.Object[] objArray67 = extendedMessageFormat61.parse("hi!");
        java.lang.Object obj68 = extendedMessageFormat61.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str69 = extendedMessageFormat38.format(obj68);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(formatArray54);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        extendedMessageFormat6.applyPattern("hi!");
        java.lang.Object[] objArray12 = extendedMessageFormat6.parse("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator13 = extendedMessageFormat1.formatToCharacterIterator((java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map28);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map41);
        java.util.Locale locale43 = extendedMessageFormat42.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43);
        extendedMessageFormat29.setLocale(locale43);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43, map46);
        extendedMessageFormat8.setLocale(locale43);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.lang.String str52 = extendedMessageFormat51.toPattern();
        java.lang.Object[] objArray54 = extendedMessageFormat51.parse("hi!");
        java.text.Format[] formatArray55 = extendedMessageFormat51.getFormatsByArgumentIndex();
        java.util.Locale locale57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57);
        java.util.Locale locale59 = extendedMessageFormat58.getLocale();
        java.lang.String str60 = extendedMessageFormat51.format((java.lang.Object) locale59);
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map62);
        extendedMessageFormat63.applyPattern("");
        java.util.Locale locale68 = null;
        java.util.Map map69 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68, map69);
        java.lang.String str71 = extendedMessageFormat70.toPattern();
        java.text.Format[] formatArray72 = extendedMessageFormat70.getFormats();
        java.lang.String str73 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray72);
        java.lang.String str74 = extendedMessageFormat63.format((java.lang.Object) formatArray72);
        java.util.Map map79 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map79);
        java.util.Locale locale81 = extendedMessageFormat80.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale81);
        java.util.Map map83 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81, map83);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81);
        extendedMessageFormat63.setLocale(locale81);
        extendedMessageFormat51.setLocale(locale81);
        extendedMessageFormat8.setLocale(locale81);
        java.util.Map map89 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat90 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81, map89);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat91 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale81);
        extendedMessageFormat91.applyPattern("");
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(formatArray55);
        org.junit.Assert.assertNull(locale59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(formatArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(locale81);
        org.junit.Assert.assertEquals(locale81.toString(), "en_US");
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat2.applyPattern("hi!");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        extendedMessageFormat7.applyPattern("");
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        java.lang.String str15 = extendedMessageFormat14.toPattern();
        java.text.Format[] formatArray16 = extendedMessageFormat14.getFormats();
        java.lang.String str17 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray16);
        java.lang.String str18 = extendedMessageFormat7.format((java.lang.Object) formatArray16);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25);
        extendedMessageFormat7.setLocale(locale25);
        extendedMessageFormat2.setLocale(locale25);
        java.util.Locale locale32 = extendedMessageFormat2.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        extendedMessageFormat37.applyPattern("");
        java.util.Locale locale45 = null;
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45, map46);
        java.text.Format[] formatArray48 = extendedMessageFormat47.getFormatsByArgumentIndex();
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map54);
        extendedMessageFormat47.setLocale(locale53);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map57);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map59);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map66);
        java.util.Locale locale68 = extendedMessageFormat67.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale68);
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68, map70);
        java.util.Map map72 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68, map72);
        java.util.Locale locale74 = extendedMessageFormat73.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale74);
        extendedMessageFormat60.setLocale(locale74);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale74);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat78 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale74);
        java.util.Map map83 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map83);
        java.util.Locale locale85 = extendedMessageFormat84.getLocale();
        java.util.Map map86 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat87 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale85, map86);
        java.util.Map map88 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat89 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale85, map88);
        java.util.Map map90 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat91 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale85, map90);
        java.text.Format[] formatArray92 = extendedMessageFormat91.getFormats();
        java.lang.String str93 = extendedMessageFormat78.format((java.lang.Object) formatArray92);
        java.text.AttributedCharacterIterator attributedCharacterIterator94 = extendedMessageFormat37.formatToCharacterIterator((java.lang.Object) formatArray92);
        java.text.Format[] formatArray95 = extendedMessageFormat37.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat33.setFormatByArgumentIndex((int) (short) -1, (java.text.Format) extendedMessageFormat37);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray48);
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale74);
        org.junit.Assert.assertEquals(locale74.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale85);
        org.junit.Assert.assertEquals(locale85.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
        org.junit.Assert.assertNotNull(attributedCharacterIterator94);
        org.junit.Assert.assertNotNull(formatArray95);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map21);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19);
        extendedMessageFormat12.setLocale(locale19);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map27);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map38);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        java.lang.Object obj42 = extendedMessageFormat40.parseObject("hi!");
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat28.setFormatByArgumentIndex(1, (java.text.Format) extendedMessageFormat40);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj42);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map12);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map14);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormats();
        java.util.Locale locale25 = null;
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25, map26);
        java.text.Format[] formatArray28 = extendedMessageFormat27.getFormatsByArgumentIndex();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map34);
        extendedMessageFormat27.setLocale(locale33);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map39);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        extendedMessageFormat40.setLocale(locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map59);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54, map61);
        extendedMessageFormat16.setLocale(locale54);
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map64);
        java.text.Format[] formatArray66 = extendedMessageFormat65.getFormatsByArgumentIndex();
        java.lang.String str67 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray66);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(formatArray28);
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        extendedMessageFormat16.applyPattern("");
        java.lang.String str19 = extendedMessageFormat16.toPattern();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.lang.Object[] objArray26 = extendedMessageFormat23.parse("hi!");
        java.text.Format[] formatArray27 = extendedMessageFormat23.getFormatsByArgumentIndex();
        java.util.Locale locale29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        java.lang.String str32 = extendedMessageFormat23.format((java.lang.Object) locale31);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        extendedMessageFormat35.applyPattern("");
        java.util.Locale locale40 = null;
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale40, map41);
        java.lang.String str43 = extendedMessageFormat42.toPattern();
        java.text.Format[] formatArray44 = extendedMessageFormat42.getFormats();
        java.lang.String str45 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray44);
        java.lang.String str46 = extendedMessageFormat35.format((java.lang.Object) formatArray44);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map55);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53);
        extendedMessageFormat35.setLocale(locale53);
        extendedMessageFormat23.setLocale(locale53);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53);
        extendedMessageFormat16.setLocale(locale53);
        java.util.Locale locale63 = null;
        java.util.Map map64 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat65 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale63, map64);
        java.lang.String str66 = extendedMessageFormat65.toPattern();
        java.util.Locale locale67 = extendedMessageFormat65.getLocale();
        extendedMessageFormat65.applyPattern("hi!");
        java.lang.Object obj71 = extendedMessageFormat65.parseObject("hi!");
        java.text.Format[] formatArray72 = extendedMessageFormat65.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator73 = extendedMessageFormat16.formatToCharacterIterator((java.lang.Object) formatArray72);
        java.util.Locale locale74 = extendedMessageFormat16.getLocale();
        java.util.Map map75 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale74, map75);
        java.text.ParsePosition parsePosition78 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray79 = extendedMessageFormat76.parse("", parsePosition78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNull(locale31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(formatArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNull(locale67);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(formatArray72);
        org.junit.Assert.assertNotNull(attributedCharacterIterator73);
        org.junit.Assert.assertNotNull(locale74);
        org.junit.Assert.assertEquals(locale74.toString(), "en_US");
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.lang.String str2 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray3 = extendedMessageFormat1.getFormats();
        extendedMessageFormat1.applyPattern("");
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.lang.Object[] objArray13 = extendedMessageFormat11.parse("hi!");
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.lang.String str17 = extendedMessageFormat16.toPattern();
        java.lang.Object[] objArray19 = extendedMessageFormat16.parse("hi!");
        java.text.Format[] formatArray20 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator21 = extendedMessageFormat11.formatToCharacterIterator((java.lang.Object) formatArray20);
        java.lang.String str22 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray20);
        java.lang.String str23 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray20);
        java.lang.StringBuffer stringBuffer24 = null;
        java.text.FieldPosition fieldPosition25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer26 = extendedMessageFormat1.format((java.lang.Object[]) formatArray20, stringBuffer24, fieldPosition25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(formatArray20);
        org.junit.Assert.assertNotNull(attributedCharacterIterator21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Locale locale12 = null;
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        extendedMessageFormat14.setLocale(locale20);
        java.lang.String str24 = extendedMessageFormat14.toPattern();
        java.lang.Object[] objArray26 = extendedMessageFormat14.parse("hi!");
        java.text.Format[] formatArray27 = extendedMessageFormat14.getFormats();
        java.lang.String str28 = extendedMessageFormat10.format((java.lang.Object) formatArray27);
        java.text.ParsePosition parsePosition30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = extendedMessageFormat10.parseObject("", parsePosition30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray6 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.lang.String str12 = extendedMessageFormat3.format((java.lang.Object) locale11);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.text.Format[] formatArray24 = extendedMessageFormat22.getFormats();
        java.lang.String str25 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray24);
        java.lang.String str26 = extendedMessageFormat15.format((java.lang.Object) formatArray24);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33);
        extendedMessageFormat15.setLocale(locale33);
        extendedMessageFormat3.setLocale(locale33);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.lang.String str41 = extendedMessageFormat40.toPattern();
        java.util.Locale locale45 = null;
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45, map46);
        java.text.Format[] formatArray48 = extendedMessageFormat47.getFormatsByArgumentIndex();
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map54);
        extendedMessageFormat47.setLocale(locale53);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map57);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map59);
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map66);
        java.util.Locale locale68 = extendedMessageFormat67.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale68);
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68, map70);
        java.util.Map map72 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68, map72);
        java.util.Locale locale74 = extendedMessageFormat73.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale74);
        extendedMessageFormat60.setLocale(locale74);
        extendedMessageFormat40.setLocale(locale74);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj79 = extendedMessageFormat40.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNull(locale11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(formatArray48);
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale74);
        org.junit.Assert.assertEquals(locale74.toString(), "en_US");
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale6 = extendedMessageFormat3.getLocale();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        extendedMessageFormat9.applyPattern("");
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        java.lang.String str17 = extendedMessageFormat16.toPattern();
        java.text.Format[] formatArray18 = extendedMessageFormat16.getFormats();
        java.lang.String str19 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray18);
        java.lang.String str20 = extendedMessageFormat9.format((java.lang.Object) formatArray18);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.util.Locale locale25 = extendedMessageFormat24.getLocale();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale25, map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        extendedMessageFormat9.setLocale(locale28);
        extendedMessageFormat3.setLocale(locale28);
        java.util.Locale locale34 = null;
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34, map35);
        java.text.Format[] formatArray37 = extendedMessageFormat36.getFormatsByArgumentIndex();
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map43);
        extendedMessageFormat36.setLocale(locale42);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42, map48);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map55);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale57);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57, map59);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57, map61);
        java.util.Locale locale63 = extendedMessageFormat62.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale63);
        extendedMessageFormat49.setLocale(locale63);
        extendedMessageFormat49.applyPattern("hi!");
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map74);
        java.util.Locale locale76 = extendedMessageFormat75.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale76);
        java.util.Map map78 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat79 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale76, map78);
        java.util.Map map80 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat81 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale76, map80);
        java.util.Locale locale82 = extendedMessageFormat81.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale82);
        java.util.Map map84 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale82, map84);
        extendedMessageFormat49.setLocale(locale82);
        java.util.Locale locale87 = extendedMessageFormat49.getLocale();
        extendedMessageFormat3.setLocale(locale87);
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(locale25);
        org.junit.Assert.assertEquals(locale25.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale63);
        org.junit.Assert.assertEquals(locale63.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale76);
        org.junit.Assert.assertEquals(locale76.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale82);
        org.junit.Assert.assertEquals(locale82.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale87);
        org.junit.Assert.assertEquals(locale87.toString(), "en_US");
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        extendedMessageFormat10.setLocale(locale22);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        extendedMessageFormat30.applyPattern("");
        java.util.Locale locale35 = null;
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map36);
        java.lang.String str38 = extendedMessageFormat37.toPattern();
        java.text.Format[] formatArray39 = extendedMessageFormat37.getFormats();
        java.lang.String str40 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray39);
        java.lang.String str41 = extendedMessageFormat30.format((java.lang.Object) formatArray39);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48);
        extendedMessageFormat30.setLocale(locale48);
        extendedMessageFormat10.setLocale(locale48);
        extendedMessageFormat10.applyPattern("");
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(formatArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        extendedMessageFormat5.setLocale(locale14);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14);
        extendedMessageFormat16.applyPattern("hi!");
        java.lang.Object obj20 = extendedMessageFormat16.parseObject("hi!");
        java.lang.Object[] objArray24 = new java.lang.Object[] {};
        java.lang.String str25 = java.text.MessageFormat.format("hi!", objArray24);
        java.lang.String str26 = java.text.MessageFormat.format("hi!", objArray24);
        java.lang.String str27 = java.text.MessageFormat.format("", objArray24);
        java.lang.String str28 = extendedMessageFormat16.format((java.lang.Object) objArray24);
        java.lang.String str29 = java.text.MessageFormat.format("hi!", objArray24);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.String str7 = extendedMessageFormat2.toPattern();
        java.lang.String str8 = extendedMessageFormat2.toPattern();
        java.lang.Object obj9 = extendedMessageFormat2.clone();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(obj9);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object[] objArray8 = extendedMessageFormat2.parse("hi!");
        extendedMessageFormat2.applyPattern("");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat13.applyPattern("");
        java.lang.String str16 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray17 = extendedMessageFormat13.getFormats();
        java.lang.String str18 = extendedMessageFormat13.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat2.setFormat((int) (short) 10, (java.text.Format) extendedMessageFormat13);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.lang.String str21 = extendedMessageFormat20.toPattern();
        java.text.Format[] formatArray22 = extendedMessageFormat20.getFormatsByArgumentIndex();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map41);
        java.util.Locale locale43 = extendedMessageFormat42.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43, map45);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43);
        extendedMessageFormat36.setLocale(locale43);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43, map49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale43, map51);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43);
        extendedMessageFormat20.setLocale(locale43);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale58 = extendedMessageFormat57.getLocale();
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale58, map59);
        java.text.Format[] formatArray61 = extendedMessageFormat60.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat20.setFormats(formatArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(formatArray22);
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray61);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.lang.String str5 = extendedMessageFormat4.toPattern();
        java.lang.Object[] objArray7 = extendedMessageFormat4.parse("hi!");
        java.text.Format[] formatArray8 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Locale locale10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.lang.String str13 = extendedMessageFormat4.format((java.lang.Object) locale12);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.lang.String str26 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray25);
        java.lang.String str27 = extendedMessageFormat16.format((java.lang.Object) formatArray25);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat16.setLocale(locale34);
        extendedMessageFormat4.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34, map42);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = extendedMessageFormat43.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNull(locale12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6);
        java.lang.String str12 = extendedMessageFormat11.toPattern();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.lang.Object[] objArray18 = extendedMessageFormat16.parse("hi!");
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.lang.String str22 = extendedMessageFormat21.toPattern();
        java.lang.Object[] objArray24 = extendedMessageFormat21.parse("hi!");
        java.text.Format[] formatArray25 = extendedMessageFormat21.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator26 = extendedMessageFormat16.formatToCharacterIterator((java.lang.Object) formatArray25);
        java.util.Locale locale27 = extendedMessageFormat16.getLocale();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        extendedMessageFormat30.applyPattern("");
        extendedMessageFormat30.applyPattern("hi!");
        java.lang.String str35 = extendedMessageFormat30.toPattern();
        java.lang.String str36 = extendedMessageFormat30.toPattern();
        java.text.Format[] formatArray37 = extendedMessageFormat30.getFormats();
        java.lang.String str38 = extendedMessageFormat16.format((java.lang.Object) formatArray37);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat11.setFormatsByArgumentIndex(formatArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertNotNull(attributedCharacterIterator26);
        org.junit.Assert.assertNull(locale27);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(formatArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.text.ParsePosition parsePosition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray7 = extendedMessageFormat2.parse("hi!", parsePosition6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        extendedMessageFormat2.applyPattern("hi!");
        java.lang.Object[] objArray8 = extendedMessageFormat2.parse("hi!");
        extendedMessageFormat2.applyPattern("");
        java.text.ParsePosition parsePosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray13 = extendedMessageFormat2.parse("hi!", parsePosition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map11);
        extendedMessageFormat12.applyPattern("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = extendedMessageFormat12.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.util.Locale locale5 = extendedMessageFormat3.getLocale();
        extendedMessageFormat3.applyPattern("hi!");
        java.lang.Object obj9 = extendedMessageFormat3.parseObject("hi!");
        extendedMessageFormat3.applyPattern("");
        java.text.ParsePosition parsePosition13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = extendedMessageFormat3.parseObject("hi!", parsePosition13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNotNull(obj9);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale1, map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.text.ParsePosition parsePosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = extendedMessageFormat3.parseObject("hi!", parsePosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map7);
        java.text.Format[] formatArray9 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.util.Locale locale16 = null;
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        java.text.Format[] formatArray19 = extendedMessageFormat18.getFormatsByArgumentIndex();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map25);
        extendedMessageFormat18.setLocale(locale24);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map30);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        java.lang.String str33 = extendedMessageFormat32.toPattern();
        java.text.Format[] formatArray34 = extendedMessageFormat32.getFormatsByArgumentIndex();
        java.lang.String str35 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray34);
        java.lang.String str36 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray34);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat8.setFormats(formatArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(formatArray19);
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(formatArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Locale locale15 = null;
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map16);
        java.text.Format[] formatArray18 = extendedMessageFormat17.getFormatsByArgumentIndex();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        java.util.Locale locale23 = extendedMessageFormat22.getLocale();
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map24);
        extendedMessageFormat17.setLocale(locale23);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale23, map27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map29);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map36);
        java.util.Locale locale38 = extendedMessageFormat37.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map40);
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map42);
        java.util.Locale locale44 = extendedMessageFormat43.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44);
        extendedMessageFormat30.setLocale(locale44);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale44);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44, map49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44, map51);
        boolean boolean53 = extendedMessageFormat6.equals((java.lang.Object) "hi!");
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertNotNull(locale23);
        org.junit.Assert.assertEquals(locale23.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale38);
        org.junit.Assert.assertEquals(locale38.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.lang.String str4 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray6 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray7 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.lang.String str12 = extendedMessageFormat3.format((java.lang.Object) locale11);
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        extendedMessageFormat15.applyPattern("");
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map21);
        java.lang.String str23 = extendedMessageFormat22.toPattern();
        java.text.Format[] formatArray24 = extendedMessageFormat22.getFormats();
        java.lang.String str25 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray24);
        java.lang.String str26 = extendedMessageFormat15.format((java.lang.Object) formatArray24);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33);
        extendedMessageFormat15.setLocale(locale33);
        extendedMessageFormat3.setLocale(locale33);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        java.lang.String str41 = extendedMessageFormat40.toPattern();
        java.util.Locale locale44 = null;
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale44, map45);
        java.text.Format[] formatArray47 = extendedMessageFormat46.getFormatsByArgumentIndex();
        java.text.Format[] formatArray48 = extendedMessageFormat46.getFormatsByArgumentIndex();
        java.lang.String str49 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray48);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat40.setFormats(formatArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNull(locale11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(formatArray47);
        org.junit.Assert.assertNotNull(formatArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormatsByArgumentIndex();
        java.text.ParsePosition parsePosition17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = extendedMessageFormat14.parseObject("", parsePosition17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.String str14 = extendedMessageFormat3.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.text.Format[] formatArray22 = extendedMessageFormat21.getFormatsByArgumentIndex();
        java.text.Format[] formatArray23 = extendedMessageFormat21.getFormats();
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32, map33);
        extendedMessageFormat21.setLocale(locale32);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32);
        boolean boolean39 = extendedMessageFormat3.equals((java.lang.Object) locale32);
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(formatArray22);
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = extendedMessageFormat2.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15);
        java.lang.Object obj29 = extendedMessageFormat28.clone();
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.lang.String str11 = extendedMessageFormat10.toPattern();
        java.text.Format[] formatArray12 = extendedMessageFormat10.getFormats();
        java.text.Format[] formatArray13 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        java.lang.String str25 = extendedMessageFormat24.toPattern();
        java.util.Locale locale28 = null;
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map29);
        java.text.Format[] formatArray31 = extendedMessageFormat30.getFormatsByArgumentIndex();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map37);
        extendedMessageFormat30.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat24.setLocale(locale36);
        extendedMessageFormat10.setLocale(locale36);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map43);
        java.lang.Class<?> wildcardClass45 = extendedMessageFormat44.getClass();
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(formatArray13);
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        java.util.Locale locale7 = extendedMessageFormat6.getLocale();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map10);
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map12);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7);
        java.text.Format[] formatArray15 = extendedMessageFormat14.getFormats();
        java.lang.String str16 = extendedMessageFormat14.toPattern();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.lang.String str22 = extendedMessageFormat21.toPattern();
        java.lang.Object[] objArray24 = extendedMessageFormat21.parse("hi!");
        java.text.Format[] formatArray25 = extendedMessageFormat21.getFormatsByArgumentIndex();
        java.util.Locale locale27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        java.lang.String str30 = extendedMessageFormat21.format((java.lang.Object) locale29);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        extendedMessageFormat33.applyPattern("");
        java.util.Locale locale38 = null;
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale38, map39);
        java.lang.String str41 = extendedMessageFormat40.toPattern();
        java.text.Format[] formatArray42 = extendedMessageFormat40.getFormats();
        java.lang.String str43 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray42);
        java.lang.String str44 = extendedMessageFormat33.format((java.lang.Object) formatArray42);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map49);
        java.util.Locale locale51 = extendedMessageFormat50.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale51);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map53);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51);
        extendedMessageFormat33.setLocale(locale51);
        extendedMessageFormat21.setLocale(locale51);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale51);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map61);
        java.text.Format[] formatArray63 = extendedMessageFormat62.getFormats();
        java.text.AttributedCharacterIterator attributedCharacterIterator64 = extendedMessageFormat59.formatToCharacterIterator((java.lang.Object) formatArray63);
        java.lang.String str65 = extendedMessageFormat59.toPattern();
        java.text.Format[] formatArray66 = extendedMessageFormat59.getFormats();
        java.lang.StringBuffer stringBuffer67 = null;
        java.text.FieldPosition fieldPosition68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer69 = extendedMessageFormat14.format((java.lang.Object[]) formatArray66, stringBuffer67, fieldPosition68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale7);
        org.junit.Assert.assertEquals(locale7.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertNull(locale29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(formatArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray63);
        org.junit.Assert.assertNotNull(attributedCharacterIterator64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(formatArray66);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map43);
        java.lang.Class<?> wildcardClass45 = locale36.getClass();
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map23);
        extendedMessageFormat3.setLocale(locale17);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map38);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Locale locale45 = null;
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale45, map46);
        java.text.Format[] formatArray48 = extendedMessageFormat47.getFormatsByArgumentIndex();
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map54);
        extendedMessageFormat47.setLocale(locale53);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale53, map57);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53, map59);
        java.util.Locale locale61 = extendedMessageFormat60.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale61);
        extendedMessageFormat40.setLocale(locale61);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex((int) (short) 1, (java.text.Format) extendedMessageFormat40);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray48);
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_US");
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5);
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.util.Locale locale10 = extendedMessageFormat8.getLocale();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        java.lang.Class<?> wildcardClass31 = extendedMessageFormat29.getClass();
        boolean boolean32 = extendedMessageFormat8.equals((java.lang.Object) wildcardClass31);
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map2);
        java.util.Locale locale4 = extendedMessageFormat3.getLocale();
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormats();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map24);
        extendedMessageFormat6.setLocale(locale22);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map38);
        java.util.Locale locale40 = extendedMessageFormat39.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale40);
        java.lang.Object obj43 = extendedMessageFormat41.parseObject("hi!");
        java.text.AttributedCharacterIterator attributedCharacterIterator44 = extendedMessageFormat6.formatToCharacterIterator(obj43);
        java.text.Format[] formatArray45 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.text.ParsePosition parsePosition47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray48 = extendedMessageFormat6.parse("", parsePosition47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale40);
        org.junit.Assert.assertEquals(locale40.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(attributedCharacterIterator44);
        org.junit.Assert.assertNotNull(formatArray45);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.text.Format[] formatArray7 = extendedMessageFormat5.getFormats();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        extendedMessageFormat5.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray25 = extendedMessageFormat23.parse("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.util.Locale locale15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15);
        extendedMessageFormat16.applyPattern("hi!");
        java.util.Locale locale19 = null;
        extendedMessageFormat16.setLocale(locale19);
        java.lang.String str21 = extendedMessageFormat16.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat3.setFormatByArgumentIndex((int) ' ', (java.text.Format) extendedMessageFormat16);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormats();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.lang.String str16 = extendedMessageFormat15.toPattern();
        java.text.Format[] formatArray17 = extendedMessageFormat15.getFormats();
        java.text.Format[] formatArray18 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.lang.String str19 = extendedMessageFormat11.format((java.lang.Object) formatArray18);
        java.util.Locale locale23 = null;
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale23, map24);
        java.text.Format[] formatArray26 = extendedMessageFormat25.getFormatsByArgumentIndex();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map29);
        java.util.Locale locale31 = extendedMessageFormat30.getLocale();
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map32);
        extendedMessageFormat25.setLocale(locale31);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale31, map35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale31, map37);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        extendedMessageFormat38.setLocale(locale52);
        java.lang.Object[] objArray56 = extendedMessageFormat38.parse("hi!");
        java.lang.StringBuffer stringBuffer57 = null;
        java.text.FieldPosition fieldPosition58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer59 = extendedMessageFormat11.format(objArray56, stringBuffer57, fieldPosition58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(formatArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(formatArray26);
        org.junit.Assert.assertNotNull(locale31);
        org.junit.Assert.assertEquals(locale31.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.text.Format[] formatArray6 = extendedMessageFormat4.getFormats();
        java.util.Locale locale9 = null;
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9, map10);
        java.text.Format[] formatArray12 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        java.util.Locale locale17 = extendedMessageFormat16.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map18);
        extendedMessageFormat11.setLocale(locale17);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map21);
        extendedMessageFormat4.setLocale(locale17);
        java.util.Map map24 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale17, map24);
        java.util.Locale locale28 = null;
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map29);
        java.text.Format[] formatArray31 = extendedMessageFormat30.getFormatsByArgumentIndex();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map37);
        extendedMessageFormat30.setLocale(locale36);
        java.lang.String str40 = extendedMessageFormat30.toPattern();
        java.lang.Object[] objArray42 = extendedMessageFormat30.parse("hi!");
        java.lang.String str43 = java.text.MessageFormat.format("hi!", objArray42);
        java.lang.StringBuffer stringBuffer44 = null;
        java.text.FieldPosition fieldPosition45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer46 = extendedMessageFormat25.format(objArray42, stringBuffer44, fieldPosition45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(locale17);
        org.junit.Assert.assertEquals(locale17.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray31);
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        extendedMessageFormat5.setLocale(locale11);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale19 = extendedMessageFormat16.getLocale();
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map21);
        extendedMessageFormat22.applyPattern("");
        extendedMessageFormat22.applyPattern("hi!");
        java.lang.String str27 = extendedMessageFormat22.toPattern();
        java.lang.String str28 = extendedMessageFormat22.toPattern();
        java.util.Locale locale30 = null;
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30, map31);
        java.lang.Object[] objArray34 = extendedMessageFormat32.parse("hi!");
        java.util.Locale locale38 = null;
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale38, map39);
        java.text.Format[] formatArray41 = extendedMessageFormat40.getFormatsByArgumentIndex();
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        java.util.Map map47 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map47);
        extendedMessageFormat40.setLocale(locale46);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46, map52);
        java.lang.String str54 = extendedMessageFormat32.format((java.lang.Object) map52);
        java.lang.String str55 = extendedMessageFormat32.toPattern();
        java.lang.Object obj56 = extendedMessageFormat32.clone();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale62 = extendedMessageFormat61.getLocale();
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale62, map63);
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale62, map65);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale62);
        java.lang.Object obj69 = extendedMessageFormat67.parseObject("hi!");
        java.util.Locale locale73 = null;
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale73, map74);
        java.text.Format[] formatArray76 = extendedMessageFormat75.getFormatsByArgumentIndex();
        java.util.Map map79 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map79);
        java.util.Locale locale81 = extendedMessageFormat80.getLocale();
        java.util.Map map82 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat83 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81, map82);
        extendedMessageFormat75.setLocale(locale81);
        java.util.Map map85 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat86 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81, map85);
        java.util.Map map87 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat88 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81, map87);
        java.util.Locale locale89 = extendedMessageFormat88.getLocale();
        java.lang.Object[] objArray90 = new java.lang.Object[] { extendedMessageFormat16, str28, extendedMessageFormat32, "hi!", locale89 };
        java.lang.String str91 = java.text.MessageFormat.format("", objArray90);
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(formatArray41);
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(locale62);
        org.junit.Assert.assertEquals(locale62.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(formatArray76);
        org.junit.Assert.assertNotNull(locale81);
        org.junit.Assert.assertEquals(locale81.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale89);
        org.junit.Assert.assertEquals(locale89.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map11);
        extendedMessageFormat12.applyPattern("hi!");
        java.text.Format[] formatArray15 = extendedMessageFormat12.getFormatsByArgumentIndex();
        java.text.Format[] formatArray16 = extendedMessageFormat12.getFormats();
        extendedMessageFormat12.applyPattern("");
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map23);
        java.lang.String str25 = extendedMessageFormat24.toPattern();
        java.lang.Object[] objArray27 = extendedMessageFormat24.parse("hi!");
        java.text.Format[] formatArray28 = extendedMessageFormat24.getFormatsByArgumentIndex();
        java.util.Locale locale30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        java.lang.String str33 = extendedMessageFormat24.format((java.lang.Object) locale32);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        extendedMessageFormat36.applyPattern("");
        java.util.Locale locale41 = null;
        java.util.Map map42 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale41, map42);
        java.lang.String str44 = extendedMessageFormat43.toPattern();
        java.text.Format[] formatArray45 = extendedMessageFormat43.getFormats();
        java.lang.String str46 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray45);
        java.lang.String str47 = extendedMessageFormat36.format((java.lang.Object) formatArray45);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54, map56);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54);
        extendedMessageFormat36.setLocale(locale54);
        extendedMessageFormat24.setLocale(locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        java.util.Locale locale62 = extendedMessageFormat61.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale62);
        java.util.Map map65 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat66 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map65);
        java.lang.String str67 = extendedMessageFormat63.format((java.lang.Object) map65);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat12.setFormatByArgumentIndex((int) (short) 100, (java.text.Format) extendedMessageFormat63);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(formatArray28);
        org.junit.Assert.assertNull(locale32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(formatArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale62);
        org.junit.Assert.assertEquals(locale62.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.text.Format[] formatArray22 = extendedMessageFormat21.getFormatsByArgumentIndex();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map28);
        extendedMessageFormat21.setLocale(locale27);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27, map33);
        extendedMessageFormat3.setLocale(locale27);
        java.text.Format[] formatArray36 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.lang.String str37 = extendedMessageFormat3.toPattern();
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(formatArray22);
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.lang.String str5 = extendedMessageFormat4.toPattern();
        java.lang.Object[] objArray7 = extendedMessageFormat4.parse("hi!");
        java.text.Format[] formatArray8 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Locale locale10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.lang.String str13 = extendedMessageFormat4.format((java.lang.Object) locale12);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.lang.String str26 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray25);
        java.lang.String str27 = extendedMessageFormat16.format((java.lang.Object) formatArray25);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat16.setLocale(locale34);
        extendedMessageFormat4.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        java.lang.Class<?> wildcardClass44 = extendedMessageFormat43.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNull(locale12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        extendedMessageFormat3.applyPattern("hi!");
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.text.Format[] formatArray22 = extendedMessageFormat21.getFormatsByArgumentIndex();
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map28);
        extendedMessageFormat21.setLocale(locale27);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27, map33);
        extendedMessageFormat3.setLocale(locale27);
        java.text.Format[] formatArray36 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map38);
        extendedMessageFormat39.applyPattern("");
        extendedMessageFormat39.applyPattern("hi!");
        java.lang.String str44 = extendedMessageFormat39.toPattern();
        java.text.Format[] formatArray45 = extendedMessageFormat39.getFormats();
        boolean boolean46 = extendedMessageFormat3.equals((java.lang.Object) formatArray45);
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(formatArray22);
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray36);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(formatArray45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.lang.String str9 = extendedMessageFormat8.toPattern();
        java.lang.Object[] objArray11 = extendedMessageFormat8.parse("hi!");
        java.text.Format[] formatArray12 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator13 = extendedMessageFormat3.formatToCharacterIterator((java.lang.Object) formatArray12);
        java.util.Locale locale14 = extendedMessageFormat3.getLocale();
        java.lang.Object obj15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator16 = extendedMessageFormat3.formatToCharacterIterator(obj15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: formatToCharacterIterator must be passed non-null object");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(formatArray12);
        org.junit.Assert.assertNotNull(attributedCharacterIterator13);
        org.junit.Assert.assertNull(locale14);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        extendedMessageFormat4.setLocale(locale13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        extendedMessageFormat15.applyPattern("hi!");
        java.lang.Object obj19 = extendedMessageFormat15.parseObject("hi!");
        java.util.Locale locale25 = null;
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale25, map26);
        java.text.Format[] formatArray28 = extendedMessageFormat27.getFormatsByArgumentIndex();
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map34);
        extendedMessageFormat27.setLocale(locale33);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale33, map37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map39);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map46);
        java.util.Locale locale48 = extendedMessageFormat47.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map50);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale48, map52);
        java.util.Locale locale54 = extendedMessageFormat53.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        extendedMessageFormat40.setLocale(locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale54);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale54);
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map63);
        java.util.Locale locale65 = extendedMessageFormat64.getLocale();
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map66);
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map68);
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map70);
        java.text.Format[] formatArray72 = extendedMessageFormat71.getFormats();
        java.lang.String str73 = extendedMessageFormat58.format((java.lang.Object) formatArray72);
        java.text.Format[] formatArray74 = extendedMessageFormat58.getFormats();
        extendedMessageFormat58.applyPattern("");
        java.lang.String str77 = extendedMessageFormat58.toPattern();
        java.text.Format[] formatArray78 = extendedMessageFormat58.getFormats();
        java.text.Format[] formatArray79 = extendedMessageFormat58.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat15.setFormats(formatArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(formatArray28);
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale54);
        org.junit.Assert.assertEquals(locale54.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(formatArray74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(formatArray78);
        org.junit.Assert.assertNotNull(formatArray79);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        extendedMessageFormat11.applyPattern("hi!");
        extendedMessageFormat11.applyPattern("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray17 = extendedMessageFormat11.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.lang.String str5 = extendedMessageFormat4.toPattern();
        java.lang.Object[] objArray7 = extendedMessageFormat4.parse("hi!");
        java.text.Format[] formatArray8 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Locale locale10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.lang.String str13 = extendedMessageFormat4.format((java.lang.Object) locale12);
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map15);
        extendedMessageFormat16.applyPattern("");
        java.util.Locale locale21 = null;
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        java.lang.String str24 = extendedMessageFormat23.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat23.getFormats();
        java.lang.String str26 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray25);
        java.lang.String str27 = extendedMessageFormat16.format((java.lang.Object) formatArray25);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34, map36);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        extendedMessageFormat16.setLocale(locale34);
        extendedMessageFormat4.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map44);
        java.text.Format[] formatArray46 = extendedMessageFormat45.getFormats();
        java.text.AttributedCharacterIterator attributedCharacterIterator47 = extendedMessageFormat42.formatToCharacterIterator((java.lang.Object) formatArray46);
        java.lang.String str48 = extendedMessageFormat42.toPattern();
        java.util.Locale locale51 = null;
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map52);
        java.text.Format[] formatArray54 = extendedMessageFormat53.getFormatsByArgumentIndex();
        java.lang.String str55 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray54);
        java.lang.StringBuffer stringBuffer56 = null;
        java.text.FieldPosition fieldPosition57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer58 = extendedMessageFormat42.format((java.lang.Object) "hi!", stringBuffer56, fieldPosition57);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNull(locale12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(formatArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray46);
        org.junit.Assert.assertNotNull(attributedCharacterIterator47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(formatArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        java.util.Locale locale3 = null;
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale3, map4);
        java.text.Format[] formatArray6 = extendedMessageFormat5.getFormatsByArgumentIndex();
        java.text.Format[] formatArray7 = extendedMessageFormat5.getFormats();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale16, map17);
        extendedMessageFormat5.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map22);
        extendedMessageFormat23.applyPattern("");
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35, map37);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35);
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map48);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46);
        extendedMessageFormat39.setLocale(locale46);
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map54);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat23.setFormatByArgumentIndex((int) (short) 1, (java.text.Format) extendedMessageFormat55);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        extendedMessageFormat13.setLocale(locale20);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map30);
        java.util.Locale locale34 = null;
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34, map35);
        java.text.Format[] formatArray37 = extendedMessageFormat36.getFormatsByArgumentIndex();
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        extendedMessageFormat36.setLocale(locale45);
        java.text.Format[] formatArray47 = extendedMessageFormat36.getFormats();
        extendedMessageFormat36.applyPattern("hi!");
        java.util.Locale locale50 = extendedMessageFormat36.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat31.setFormat(0, (java.text.Format) extendedMessageFormat36);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray47);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "en_US");
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map50);
        java.text.Format[] formatArray52 = extendedMessageFormat51.getFormats();
        java.lang.String str53 = extendedMessageFormat38.format((java.lang.Object) formatArray52);
        java.lang.String str54 = extendedMessageFormat38.toPattern();
        java.util.Locale locale61 = null;
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale61, map62);
        java.text.Format[] formatArray64 = extendedMessageFormat63.getFormatsByArgumentIndex();
        java.util.Map map67 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat68 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map67);
        java.util.Locale locale69 = extendedMessageFormat68.getLocale();
        java.util.Map map70 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69, map70);
        extendedMessageFormat63.setLocale(locale69);
        java.util.Map map73 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat74 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69, map73);
        java.util.Map map75 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat76 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale69, map75);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale69);
        java.lang.String str78 = extendedMessageFormat77.toPattern();
        java.text.Format[] formatArray79 = extendedMessageFormat77.getFormatsByArgumentIndex();
        java.lang.String str80 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray79);
        java.lang.String str81 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray79);
        java.lang.StringBuffer stringBuffer82 = null;
        java.text.FieldPosition fieldPosition83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer84 = extendedMessageFormat38.format((java.lang.Object[]) formatArray79, stringBuffer82, fieldPosition83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(formatArray64);
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertNotNull(formatArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale2 = extendedMessageFormat1.getLocale();
        java.lang.Object[] objArray4 = extendedMessageFormat1.parse("hi!");
        java.text.Format[] formatArray5 = extendedMessageFormat1.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray7 = extendedMessageFormat1.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale2);
        org.junit.Assert.assertEquals(locale2.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(formatArray5);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        extendedMessageFormat1.applyPattern("hi!");
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map5);
        extendedMessageFormat6.applyPattern("");
        java.util.Locale locale11 = null;
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.lang.String str14 = extendedMessageFormat13.toPattern();
        java.text.Format[] formatArray15 = extendedMessageFormat13.getFormats();
        java.lang.String str16 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray15);
        java.lang.String str17 = extendedMessageFormat6.format((java.lang.Object) formatArray15);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        java.util.Locale locale24 = extendedMessageFormat23.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat25 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24, map26);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale24);
        extendedMessageFormat6.setLocale(locale24);
        extendedMessageFormat1.setLocale(locale24);
        java.lang.Object obj32 = extendedMessageFormat1.parseObject("hi!");
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.lang.String str36 = extendedMessageFormat35.toPattern();
        java.lang.Object[] objArray38 = extendedMessageFormat35.parse("hi!");
        java.text.Format[] formatArray39 = extendedMessageFormat35.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat1.setFormats(formatArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(formatArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(locale24);
        org.junit.Assert.assertEquals(locale24.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(formatArray39);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat1.applyPattern("");
        java.lang.String str4 = extendedMessageFormat1.toPattern();
        java.text.Format[] formatArray5 = extendedMessageFormat1.getFormats();
        java.lang.String str6 = extendedMessageFormat1.toPattern();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        extendedMessageFormat10.setLocale(locale19);
        java.util.Locale locale24 = null;
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale24, map25);
        java.text.Format[] formatArray27 = extendedMessageFormat26.getFormatsByArgumentIndex();
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map30);
        java.util.Locale locale32 = extendedMessageFormat31.getLocale();
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map33);
        extendedMessageFormat26.setLocale(locale32);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale32, map36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale32, map38);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map45);
        java.util.Locale locale47 = extendedMessageFormat46.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47);
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map49);
        java.util.Map map51 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale47, map51);
        java.util.Locale locale53 = extendedMessageFormat52.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale53);
        extendedMessageFormat39.setLocale(locale53);
        extendedMessageFormat10.setLocale(locale53);
        java.lang.Object obj57 = extendedMessageFormat10.clone();
        boolean boolean58 = extendedMessageFormat1.equals(obj57);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray27);
        org.junit.Assert.assertNotNull(locale32);
        org.junit.Assert.assertEquals(locale32.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale53);
        org.junit.Assert.assertEquals(locale53.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        java.util.Locale locale3 = extendedMessageFormat2.getLocale();
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale3, map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.lang.Class<?> wildcardClass7 = extendedMessageFormat5.getClass();
        org.junit.Assert.assertNotNull(locale3);
        org.junit.Assert.assertEquals(locale3.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        extendedMessageFormat11.applyPattern("hi!");
        extendedMessageFormat11.applyPattern("hi!");
        java.text.Format[] formatArray16 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.lang.Object obj18 = extendedMessageFormat11.parseObject("hi!");
        java.lang.Object obj19 = null;
        boolean boolean20 = extendedMessageFormat11.equals(obj19);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        java.util.Locale locale5 = null;
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale5, map6);
        java.text.Format[] formatArray8 = extendedMessageFormat7.getFormatsByArgumentIndex();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map14);
        extendedMessageFormat7.setLocale(locale13);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13, map17);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map19);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28);
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Locale locale34 = extendedMessageFormat33.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        extendedMessageFormat20.setLocale(locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale34);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map43);
        java.util.Locale locale45 = extendedMessageFormat44.getLocale();
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale45, map50);
        java.text.Format[] formatArray52 = extendedMessageFormat51.getFormats();
        java.lang.String str53 = extendedMessageFormat38.format((java.lang.Object) formatArray52);
        java.text.Format[] formatArray54 = extendedMessageFormat38.getFormats();
        extendedMessageFormat38.applyPattern("");
        extendedMessageFormat38.applyPattern("");
        extendedMessageFormat38.applyPattern("");
        java.text.ParsePosition parsePosition62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray63 = extendedMessageFormat38.parse("", parsePosition62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray8);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale34);
        org.junit.Assert.assertEquals(locale34.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale45);
        org.junit.Assert.assertEquals(locale45.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(formatArray54);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat1 = new org.apache.commons.lang.text.ExtendedMessageFormat("");
        java.text.Format[] formatArray2 = extendedMessageFormat1.getFormats();
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36, map39);
        extendedMessageFormat1.setLocale(locale36);
        java.util.Locale locale42 = extendedMessageFormat1.getLocale();
        java.util.Locale locale43 = extendedMessageFormat1.getLocale();
        java.util.Map map49 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat50 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map49);
        java.util.Locale locale51 = extendedMessageFormat50.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat52 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale51);
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map53);
        java.util.Map map55 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat56 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale51, map55);
        java.util.Locale locale57 = extendedMessageFormat56.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale57);
        java.text.Format[] formatArray59 = extendedMessageFormat58.getFormats();
        boolean boolean60 = extendedMessageFormat1.equals((java.lang.Object) extendedMessageFormat58);
        org.junit.Assert.assertNotNull(formatArray2);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale57);
        org.junit.Assert.assertEquals(locale57.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Locale locale14 = null;
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        java.text.Format[] formatArray17 = extendedMessageFormat16.getFormatsByArgumentIndex();
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map20);
        java.util.Locale locale22 = extendedMessageFormat21.getLocale();
        java.util.Map map23 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map23);
        extendedMessageFormat16.setLocale(locale22);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale22, map26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale22, map28);
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37);
        java.util.Map map39 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat40 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map39);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map41);
        java.util.Locale locale43 = extendedMessageFormat42.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43);
        extendedMessageFormat29.setLocale(locale43);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale43, map46);
        extendedMessageFormat8.setLocale(locale43);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map50);
        java.lang.String str52 = extendedMessageFormat51.toPattern();
        java.lang.Object[] objArray54 = extendedMessageFormat51.parse("hi!");
        java.text.Format[] formatArray55 = extendedMessageFormat51.getFormatsByArgumentIndex();
        java.util.Locale locale57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale57);
        java.util.Locale locale59 = extendedMessageFormat58.getLocale();
        java.lang.String str60 = extendedMessageFormat51.format((java.lang.Object) locale59);
        java.util.Map map62 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat63 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map62);
        extendedMessageFormat63.applyPattern("");
        java.util.Locale locale68 = null;
        java.util.Map map69 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale68, map69);
        java.lang.String str71 = extendedMessageFormat70.toPattern();
        java.text.Format[] formatArray72 = extendedMessageFormat70.getFormats();
        java.lang.String str73 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray72);
        java.lang.String str74 = extendedMessageFormat63.format((java.lang.Object) formatArray72);
        java.util.Map map79 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat80 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map79);
        java.util.Locale locale81 = extendedMessageFormat80.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat82 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale81);
        java.util.Map map83 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat84 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81, map83);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat85 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81);
        extendedMessageFormat63.setLocale(locale81);
        extendedMessageFormat51.setLocale(locale81);
        extendedMessageFormat8.setLocale(locale81);
        java.util.Map map89 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat90 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale81, map89);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat91 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale81);
        java.lang.Object obj92 = null;
        boolean boolean93 = extendedMessageFormat91.equals(obj92);
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray17);
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale43);
        org.junit.Assert.assertEquals(locale43.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(formatArray55);
        org.junit.Assert.assertNull(locale59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(formatArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(locale81);
        org.junit.Assert.assertEquals(locale81.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        java.util.Locale locale2 = null;
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale2, map3);
        java.text.Format[] formatArray5 = extendedMessageFormat4.getFormatsByArgumentIndex();
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map8);
        java.util.Locale locale10 = extendedMessageFormat9.getLocale();
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale10, map11);
        java.util.Locale locale13 = extendedMessageFormat12.getLocale();
        extendedMessageFormat4.setLocale(locale13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale13);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.lang.Object[] objArray23 = extendedMessageFormat21.parse("hi!");
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.lang.String str27 = extendedMessageFormat26.toPattern();
        java.lang.Object[] objArray29 = extendedMessageFormat26.parse("hi!");
        java.text.Format[] formatArray30 = extendedMessageFormat26.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = extendedMessageFormat21.formatToCharacterIterator((java.lang.Object) formatArray30);
        java.lang.String str32 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray30);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat15.setFormatsByArgumentIndex(formatArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale10);
        org.junit.Assert.assertEquals(locale10.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Locale locale8 = null;
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8, map9);
        java.text.Format[] formatArray11 = extendedMessageFormat10.getFormatsByArgumentIndex();
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map14);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map17);
        extendedMessageFormat10.setLocale(locale16);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale16, map20);
        extendedMessageFormat3.setLocale(locale16);
        java.lang.Class<?> wildcardClass23 = locale16.getClass();
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        extendedMessageFormat15.setLocale(locale21);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map27);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        extendedMessageFormat28.setLocale(locale42);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42, map45);
        extendedMessageFormat7.setLocale(locale42);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat48 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42);
        java.util.Locale locale49 = extendedMessageFormat48.getLocale();
        java.util.Locale locale51 = null;
        java.util.Map map52 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale51, map52);
        java.text.Format[] formatArray54 = extendedMessageFormat53.getFormatsByArgumentIndex();
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map57);
        java.util.Locale locale59 = extendedMessageFormat58.getLocale();
        java.util.Map map60 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat61 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale59, map60);
        java.util.Locale locale62 = extendedMessageFormat61.getLocale();
        extendedMessageFormat53.setLocale(locale62);
        java.text.Format[] formatArray64 = extendedMessageFormat53.getFormats();
        java.util.Locale locale65 = extendedMessageFormat53.getLocale();
        java.lang.String str66 = extendedMessageFormat53.toPattern();
        boolean boolean67 = extendedMessageFormat48.equals((java.lang.Object) str66);
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale49);
        org.junit.Assert.assertEquals(locale49.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray54);
        org.junit.Assert.assertNotNull(locale59);
        org.junit.Assert.assertEquals(locale59.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale62);
        org.junit.Assert.assertEquals(locale62.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray64);
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map11);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        java.util.Locale locale20 = extendedMessageFormat19.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map22);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat24 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        extendedMessageFormat13.setLocale(locale20);
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20, map26);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map28);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = extendedMessageFormat30.parseObject("hi!");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale20);
        org.junit.Assert.assertEquals(locale20.toString(), "en_US");
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("", map1);
        java.text.Format[] formatArray3 = extendedMessageFormat2.getFormats();
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale7, map8);
        java.text.Format[] formatArray10 = extendedMessageFormat9.getFormatsByArgumentIndex();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map13);
        java.util.Locale locale15 = extendedMessageFormat14.getLocale();
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map16);
        extendedMessageFormat9.setLocale(locale15);
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale15, map19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale15, map21);
        java.util.Map map28 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat29 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map28);
        java.util.Locale locale30 = extendedMessageFormat29.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale30);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale30, map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        extendedMessageFormat22.setLocale(locale36);
        java.util.Locale locale39 = extendedMessageFormat22.getLocale();
        boolean boolean40 = extendedMessageFormat2.equals((java.lang.Object) extendedMessageFormat22);
        org.junit.Assert.assertNotNull(formatArray3);
        org.junit.Assert.assertNotNull(formatArray10);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale30);
        org.junit.Assert.assertEquals(locale30.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map13);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8);
        java.util.Locale locale16 = extendedMessageFormat15.getLocale();
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map18);
        extendedMessageFormat19.applyPattern("");
        extendedMessageFormat19.applyPattern("hi!");
        java.lang.String str24 = extendedMessageFormat19.toPattern();
        java.text.Format[] formatArray25 = extendedMessageFormat19.getFormats();
        java.lang.StringBuffer stringBuffer26 = null;
        java.text.FieldPosition fieldPosition27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer28 = extendedMessageFormat15.format((java.lang.Object) formatArray25, stringBuffer26, fieldPosition27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(formatArray25);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        extendedMessageFormat15.setLocale(locale21);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map27);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        extendedMessageFormat28.setLocale(locale42);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42, map45);
        extendedMessageFormat7.setLocale(locale42);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map48);
        java.text.Format[] formatArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat49.setFormats(formatArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8, map10);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale8);
        java.util.Map map17 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat18 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map17);
        java.util.Locale locale19 = extendedMessageFormat18.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19);
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map21);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19);
        extendedMessageFormat12.setLocale(locale19);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale19, map27);
        java.lang.Class<?> wildcardClass29 = extendedMessageFormat28.getClass();
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale19);
        org.junit.Assert.assertEquals(locale19.toString(), "en_US");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        extendedMessageFormat19.setLocale(locale33);
        java.util.Map map36 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33, map36);
        java.lang.Object obj39 = extendedMessageFormat37.parseObject("hi!");
        extendedMessageFormat37.applyPattern("hi!");
        extendedMessageFormat37.applyPattern("");
        java.util.Locale locale47 = null;
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale47, map48);
        java.text.Format[] formatArray50 = extendedMessageFormat49.getFormatsByArgumentIndex();
        java.util.Map map53 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat54 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map53);
        java.util.Locale locale55 = extendedMessageFormat54.getLocale();
        java.util.Map map56 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat57 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map56);
        extendedMessageFormat49.setLocale(locale55);
        java.util.Map map59 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat60 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale55, map59);
        java.util.Map map61 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat62 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale55, map61);
        java.util.Map map68 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat69 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map68);
        java.util.Locale locale70 = extendedMessageFormat69.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat71 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale70);
        java.util.Map map72 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale70, map72);
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale70, map74);
        java.util.Locale locale76 = extendedMessageFormat75.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale76);
        extendedMessageFormat62.setLocale(locale76);
        java.lang.Object[] objArray80 = extendedMessageFormat62.parse("hi!");
        java.text.Format[] formatArray81 = extendedMessageFormat62.getFormatsByArgumentIndex();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat37.setFormats(formatArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(formatArray50);
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale70);
        org.junit.Assert.assertEquals(locale70.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale76);
        org.junit.Assert.assertEquals(locale76.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertNotNull(formatArray81);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12);
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map22);
        extendedMessageFormat23.applyPattern("");
        java.util.Locale locale28 = null;
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map29);
        java.lang.String str31 = extendedMessageFormat30.toPattern();
        java.text.Format[] formatArray32 = extendedMessageFormat30.getFormats();
        java.lang.String str33 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray32);
        java.lang.String str34 = extendedMessageFormat23.format((java.lang.Object) formatArray32);
        java.text.Format[] formatArray35 = extendedMessageFormat23.getFormats();
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat20.setFormatsByArgumentIndex(formatArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(formatArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(formatArray35);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        java.util.Map map3 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat4 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map3);
        java.util.Locale locale5 = extendedMessageFormat4.getLocale();
        java.util.Map map6 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale5, map6);
        java.util.Locale locale8 = extendedMessageFormat7.getLocale();
        java.util.Locale locale13 = null;
        java.util.Map map14 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat15 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale13, map14);
        java.text.Format[] formatArray16 = extendedMessageFormat15.getFormatsByArgumentIndex();
        java.util.Map map19 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map19);
        java.util.Locale locale21 = extendedMessageFormat20.getLocale();
        java.util.Map map22 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat23 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map22);
        extendedMessageFormat15.setLocale(locale21);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale21, map25);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale21, map27);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map34);
        java.util.Locale locale36 = extendedMessageFormat35.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat37 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale36);
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map38);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale36, map40);
        java.util.Locale locale42 = extendedMessageFormat41.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat43 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42);
        extendedMessageFormat28.setLocale(locale42);
        java.util.Map map45 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat46 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale42, map45);
        extendedMessageFormat7.setLocale(locale42);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale42, map48);
        java.util.Locale locale57 = null;
        java.util.Map map58 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat59 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale57, map58);
        java.text.Format[] formatArray60 = extendedMessageFormat59.getFormatsByArgumentIndex();
        java.util.Map map63 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat64 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map63);
        java.util.Locale locale65 = extendedMessageFormat64.getLocale();
        java.util.Map map66 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat67 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map66);
        extendedMessageFormat59.setLocale(locale65);
        java.util.Map map69 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat70 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map69);
        java.util.Map map71 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat72 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale65, map71);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat73 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65);
        java.util.Map map74 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat75 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale65, map74);
        java.util.Map map76 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat77 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale65, map76);
        // The following exception was thrown during execution in test generation
        try {
            extendedMessageFormat49.setFormatByArgumentIndex((int) (short) 0, (java.text.Format) extendedMessageFormat77);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale5);
        org.junit.Assert.assertEquals(locale5.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale8);
        org.junit.Assert.assertEquals(locale8.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(locale21);
        org.junit.Assert.assertEquals(locale21.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale36);
        org.junit.Assert.assertEquals(locale36.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray60);
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_US");
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        java.util.Locale locale6 = null;
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6, map7);
        java.text.Format[] formatArray9 = extendedMessageFormat8.getFormatsByArgumentIndex();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map15);
        extendedMessageFormat8.setLocale(locale14);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale14, map18);
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map20);
        java.util.Map map27 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map27);
        java.util.Locale locale29 = extendedMessageFormat28.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map31);
        java.util.Map map33 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale29, map33);
        java.util.Locale locale35 = extendedMessageFormat34.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        extendedMessageFormat21.setLocale(locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale35);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale35, map40);
        java.text.Format[] formatArray42 = extendedMessageFormat41.getFormats();
        java.text.ParsePosition parsePosition44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = extendedMessageFormat41.parseObject("", parsePosition44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray9);
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale29);
        org.junit.Assert.assertEquals(locale29.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray42);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat7 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale6);
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map8);
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map10);
        extendedMessageFormat11.applyPattern("hi!");
        extendedMessageFormat11.applyPattern("hi!");
        java.text.Format[] formatArray16 = extendedMessageFormat11.getFormatsByArgumentIndex();
        java.lang.Object obj18 = extendedMessageFormat11.parseObject("hi!");
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat20 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!");
        extendedMessageFormat20.applyPattern("");
        java.lang.String str23 = extendedMessageFormat20.toPattern();
        java.text.Format[] formatArray24 = extendedMessageFormat20.getFormats();
        java.lang.String str25 = extendedMessageFormat20.toPattern();
        extendedMessageFormat20.applyPattern("");
        java.lang.StringBuffer stringBuffer28 = null;
        java.text.FieldPosition fieldPosition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer30 = extendedMessageFormat11.format((java.lang.Object) extendedMessageFormat20, stringBuffer28, fieldPosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.commons.lang.text.ExtendedMessageFormat cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertNotNull(formatArray16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(formatArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        java.util.Map map1 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat2 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map1);
        extendedMessageFormat2.applyPattern("");
        java.util.Locale locale7 = null;
        java.util.Map map8 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat9 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale7, map8);
        java.lang.String str10 = extendedMessageFormat9.toPattern();
        java.text.Format[] formatArray11 = extendedMessageFormat9.getFormats();
        java.lang.String str12 = java.text.MessageFormat.format("", (java.lang.Object[]) formatArray11);
        java.lang.String str13 = extendedMessageFormat2.format((java.lang.Object) formatArray11);
        java.text.Format[] formatArray14 = extendedMessageFormat2.getFormats();
        java.util.Locale locale15 = extendedMessageFormat2.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = extendedMessageFormat2.parseObject("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: Format.parseObject(String) failed");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(formatArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(formatArray14);
        org.junit.Assert.assertNotNull(locale15);
        org.junit.Assert.assertEquals(locale15.toString(), "en_US");
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.text.Format[] formatArray5 = extendedMessageFormat3.getFormats();
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map9);
        java.util.Locale locale11 = extendedMessageFormat10.getLocale();
        java.util.Map map12 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat13 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale11, map12);
        java.util.Locale locale14 = extendedMessageFormat13.getLocale();
        java.util.Map map15 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat16 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale14, map15);
        extendedMessageFormat3.setLocale(locale14);
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.lang.Object[] objArray23 = extendedMessageFormat21.parse("hi!");
        java.util.Locale locale29 = null;
        java.util.Map map30 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat31 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale29, map30);
        java.text.Format[] formatArray32 = extendedMessageFormat31.getFormatsByArgumentIndex();
        java.util.Map map35 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map35);
        java.util.Locale locale37 = extendedMessageFormat36.getLocale();
        java.util.Map map38 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat39 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map38);
        extendedMessageFormat31.setLocale(locale37);
        java.util.Map map41 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat42 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37, map41);
        java.util.Map map43 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat44 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map43);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale37);
        java.util.Map map46 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale37, map46);
        extendedMessageFormat21.setLocale(locale37);
        extendedMessageFormat3.setLocale(locale37);
        java.lang.String str50 = extendedMessageFormat3.toPattern();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray52 = extendedMessageFormat3.parse("");
            org.junit.Assert.fail("Expected exception of type java.text.ParseException; message: MessageFormat parse error!");
        } catch (java.text.ParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(formatArray5);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale14);
        org.junit.Assert.assertEquals(locale14.toString(), "en_US");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(formatArray32);
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.lang.Object[] objArray5 = extendedMessageFormat3.parse("hi!");
        java.text.Format[] formatArray6 = extendedMessageFormat3.getFormats();
        java.lang.String str7 = extendedMessageFormat3.toPattern();
        java.util.Locale locale10 = null;
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale10, map11);
        java.lang.Object[] objArray14 = extendedMessageFormat12.parse("hi!");
        java.util.Locale locale20 = null;
        java.util.Map map21 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat22 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale20, map21);
        java.text.Format[] formatArray23 = extendedMessageFormat22.getFormatsByArgumentIndex();
        java.util.Map map26 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat27 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map26);
        java.util.Locale locale28 = extendedMessageFormat27.getLocale();
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map29);
        extendedMessageFormat22.setLocale(locale28);
        java.util.Map map32 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat33 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28, map32);
        java.util.Map map34 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat35 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map34);
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat36 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale28);
        java.util.Map map37 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat38 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map37);
        extendedMessageFormat12.setLocale(locale28);
        java.util.Map map40 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat41 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale28, map40);
        extendedMessageFormat41.applyPattern("");
        boolean boolean44 = extendedMessageFormat3.equals((java.lang.Object) "");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(formatArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(formatArray23);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_US");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        java.util.Map map4 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat5 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map4);
        java.util.Locale locale6 = extendedMessageFormat5.getLocale();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map7);
        java.util.Map map9 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat10 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map9);
        java.util.Map map11 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat12 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale6, map11);
        java.lang.String str13 = extendedMessageFormat12.toPattern();
        java.lang.String str14 = extendedMessageFormat12.toPattern();
        java.lang.Object obj15 = extendedMessageFormat12.clone();
        org.junit.Assert.assertNotNull(locale6);
        org.junit.Assert.assertEquals(locale6.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(obj15);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        java.util.Locale locale4 = null;
        java.util.Map map5 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat6 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale4, map5);
        java.text.Format[] formatArray7 = extendedMessageFormat6.getFormatsByArgumentIndex();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map10);
        java.util.Locale locale12 = extendedMessageFormat11.getLocale();
        java.util.Map map13 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat14 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map13);
        extendedMessageFormat6.setLocale(locale12);
        java.util.Map map16 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat17 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale12, map16);
        java.util.Map map18 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat19 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale12, map18);
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.util.Locale locale27 = extendedMessageFormat26.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat28 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale27);
        java.util.Map map29 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat30 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map29);
        java.util.Map map31 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat32 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale27, map31);
        java.util.Locale locale33 = extendedMessageFormat32.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat34 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale33);
        extendedMessageFormat19.setLocale(locale33);
        extendedMessageFormat19.applyPattern("hi!");
        java.util.Map map44 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat45 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map44);
        java.util.Locale locale46 = extendedMessageFormat45.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat47 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale46);
        java.util.Map map48 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat49 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map48);
        java.util.Map map50 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat51 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale46, map50);
        java.util.Locale locale52 = extendedMessageFormat51.getLocale();
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat53 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52);
        java.util.Map map54 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat55 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale52, map54);
        extendedMessageFormat19.setLocale(locale52);
        java.util.Map map57 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat58 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale52, map57);
        java.text.ParsePosition parsePosition60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray61 = extendedMessageFormat58.parse("hi!", parsePosition60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray7);
        org.junit.Assert.assertNotNull(locale12);
        org.junit.Assert.assertEquals(locale12.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale46);
        org.junit.Assert.assertEquals(locale46.toString(), "en_US");
        org.junit.Assert.assertNotNull(locale52);
        org.junit.Assert.assertEquals(locale52.toString(), "en_US");
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        java.util.Locale locale1 = null;
        java.util.Map map2 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat3 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale1, map2);
        java.text.Format[] formatArray4 = extendedMessageFormat3.getFormatsByArgumentIndex();
        java.util.Map map7 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat8 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map7);
        java.util.Locale locale9 = extendedMessageFormat8.getLocale();
        java.util.Map map10 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat11 = new org.apache.commons.lang.text.ExtendedMessageFormat("", locale9, map10);
        extendedMessageFormat3.setLocale(locale9);
        java.lang.String str13 = extendedMessageFormat3.toPattern();
        java.lang.Object[] objArray15 = extendedMessageFormat3.parse("hi!");
        java.lang.String str16 = extendedMessageFormat3.toPattern();
        java.util.Locale locale19 = null;
        java.util.Map map20 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat21 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", locale19, map20);
        java.lang.Object[] objArray23 = extendedMessageFormat21.parse("hi!");
        java.util.Map map25 = null;
        org.apache.commons.lang.text.ExtendedMessageFormat extendedMessageFormat26 = new org.apache.commons.lang.text.ExtendedMessageFormat("hi!", map25);
        java.lang.String str27 = extendedMessageFormat26.toPattern();
        java.lang.Object[] objArray29 = extendedMessageFormat26.parse("hi!");
        java.text.Format[] formatArray30 = extendedMessageFormat26.getFormatsByArgumentIndex();
        java.text.AttributedCharacterIterator attributedCharacterIterator31 = extendedMessageFormat21.formatToCharacterIterator((java.lang.Object) formatArray30);
        java.lang.String str32 = java.text.MessageFormat.format("hi!", (java.lang.Object[]) formatArray30);
        java.lang.StringBuffer stringBuffer33 = null;
        java.text.FieldPosition fieldPosition34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer35 = extendedMessageFormat3.format((java.lang.Object[]) formatArray30, stringBuffer33, fieldPosition34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(formatArray4);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_US");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(formatArray30);
        org.junit.Assert.assertNotNull(attributedCharacterIterator31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
    }
}

