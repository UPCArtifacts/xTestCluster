import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        double[] doubleArray4 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray17, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator23, true, pointValuePairConvergenceChecker25);
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator44 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker46 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer47 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray38, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator44, true, pointValuePairConvergenceChecker46);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray17, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator44, true, pointValuePairConvergenceChecker49);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator65 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker67 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer68 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray59, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator65, true, pointValuePairConvergenceChecker67);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray59);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = cMAESOptimizer69.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray4, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator44, false, pointValuePairConvergenceChecker70);
        int int72 = cMAESOptimizer71.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = cMAESOptimizer71.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList74 = cMAESOptimizer71.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType75 = cMAESOptimizer71.getGoalType();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray76 = cMAESOptimizer71.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator23);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator44);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator65);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNull(goalType75);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        double[] doubleArray7 = new double[] { 0 };
        double[] doubleArray17 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator36 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker38 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer39 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray30, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator36, true, pointValuePairConvergenceChecker38);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator57 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker59 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer60 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray51, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator57, true, pointValuePairConvergenceChecker59);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker62 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer63 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray30, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator57, true, pointValuePairConvergenceChecker62);
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator78 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker80 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray72, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator78, true, pointValuePairConvergenceChecker80);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray72);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker83 = cMAESOptimizer82.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray17, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator57, false, pointValuePairConvergenceChecker83);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray7, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator57, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray7);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer88 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray7);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100, doubleArray7);
        org.apache.commons.math3.random.RandomGenerator randomGenerator96 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer98 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray7, (int) (short) 1, 10.0d, false, (int) (short) 10, 0, randomGenerator96, false);
        java.lang.Class<?> wildcardClass99 = cMAESOptimizer98.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator36);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator57);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator78);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker83);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        double[] doubleArray1 = null;
        double[] doubleArray8 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator14 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray8, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator14, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray1, 1, (double) (-1L), false, 0, (int) (byte) 0, randomGenerator14, false);
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer18.getStatisticsSigmaHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray20 = cMAESOptimizer18.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(randomGenerator14);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker2 = cMAESOptimizer1.getConvergenceChecker();
        int int3 = cMAESOptimizer1.getEvaluations();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(doubleList4);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction4 = null;
        org.apache.commons.math3.optimization.GoalType goalType5 = null;
        double[] doubleArray15 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair19 = cMAESOptimizer1.optimize((int) (byte) 100, multivariateFunction4, goalType5, doubleArray15);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        double[] doubleArray3 = new double[] { 0 };
        double[] doubleArray13 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator32 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray26, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator32, true, pointValuePairConvergenceChecker34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator53 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker55 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray47, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator53, true, pointValuePairConvergenceChecker55);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray26, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator53, true, pointValuePairConvergenceChecker58);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator74 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray68, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator74, true, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray13, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator53, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray3, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator53, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray3);
        org.apache.commons.math3.optimization.GoalType goalType84 = cMAESOptimizer83.getGoalType();
        int int85 = cMAESOptimizer83.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType86 = cMAESOptimizer83.getGoalType();
        int int87 = cMAESOptimizer83.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList88 = cMAESOptimizer83.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList89 = cMAESOptimizer83.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator32);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertNull(goalType84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNull(goalType86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(realMatrixList89);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker2 = cMAESOptimizer1.getConvergenceChecker();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction4 = null;
        org.apache.commons.math3.optimization.GoalType goalType5 = null;
        double[] doubleArray11 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator29 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker31 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer32 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray23, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator29, true, pointValuePairConvergenceChecker31);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer34 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray11, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator29, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer36 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair37 = cMAESOptimizer1.optimize((int) '#', multivariateFunction4, goalType5, doubleArray11);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker2);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator29);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        double[] doubleArray5 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray17, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator23, true, pointValuePairConvergenceChecker25);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray5, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator23, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray5);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray5);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray31 = cMAESOptimizer30.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator23);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray26 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray39, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator66, true, pointValuePairConvergenceChecker71);
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator87 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker89 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray81, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator87, true, pointValuePairConvergenceChecker89);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray81);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker92 = cMAESOptimizer91.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray26, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator66, false, pointValuePairConvergenceChecker92);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray7, (int) ' ', (double) 100.0f, false, 0, (int) (short) 100, randomGenerator66, false);
        int int96 = cMAESOptimizer95.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList97 = cMAESOptimizer95.getStatisticsSigmaHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray98 = cMAESOptimizer95.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator87);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker92);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertNotNull(doubleList97);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList18 = cMAESOptimizer17.getStatisticsDHistory();
        int int19 = cMAESOptimizer17.getEvaluations();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer17.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker21 = cMAESOptimizer17.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList22 = cMAESOptimizer17.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(realMatrixList18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker21);
        org.junit.Assert.assertNotNull(realMatrixList22);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer15.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList21 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList22 = cMAESOptimizer15.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList23 = cMAESOptimizer15.getStatisticsSigmaHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray24 = cMAESOptimizer15.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(realMatrixList22);
        org.junit.Assert.assertNotNull(doubleList23);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        double[] doubleArray9 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator15 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker17 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray9, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator15, true, pointValuePairConvergenceChecker17);
        org.apache.commons.math3.random.RandomGenerator randomGenerator24 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray9, 100, (double) (byte) 10, false, (int) (byte) 0, (int) (byte) 10, randomGenerator24, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray9);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray9);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray29 = cMAESOptimizer28.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator15);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        double[] doubleArray2 = new double[] { 0 };
        double[] doubleArray12 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator31 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker33 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer34 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray25, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator31, true, pointValuePairConvergenceChecker33);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator52 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray46, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator52, true, pointValuePairConvergenceChecker54);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker57 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer58 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray25, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator52, true, pointValuePairConvergenceChecker57);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator73 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker75 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray67, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator73, true, pointValuePairConvergenceChecker75);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray67);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer77.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray12, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator52, false, pointValuePairConvergenceChecker78);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray2, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator52, true);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker82 = cMAESOptimizer81.getConvergenceChecker();
        org.apache.commons.math3.optimization.GoalType goalType83 = cMAESOptimizer81.getGoalType();
        java.util.List<java.lang.Double> doubleList84 = cMAESOptimizer81.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator31);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator52);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator73);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker82);
        org.junit.Assert.assertNull(goalType83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100);
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer1.getStatisticsSigmaHistory();
        int int4 = cMAESOptimizer1.getEvaluations();
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer15.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList21 = cMAESOptimizer15.getStatisticsDHistory();
        int int22 = cMAESOptimizer15.getEvaluations();
        int int23 = cMAESOptimizer15.getMaxEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray24 = cMAESOptimizer15.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(realMatrixList21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        double[] doubleArray7 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer8 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray7);
        java.util.List<java.lang.Double> doubleList9 = cMAESOptimizer8.getStatisticsFitnessHistory();
        int int10 = cMAESOptimizer8.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList11 = cMAESOptimizer8.getStatisticsDHistory();
        org.apache.commons.math3.optimization.GoalType goalType12 = cMAESOptimizer8.getGoalType();
        int int13 = cMAESOptimizer8.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = cMAESOptimizer8.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList15 = cMAESOptimizer8.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer8.getStatisticsFitnessHistory();
        int int17 = cMAESOptimizer8.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(realMatrixList11);
        org.junit.Assert.assertNull(goalType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer17.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList19 = cMAESOptimizer17.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer17.getStatisticsSigmaHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray21 = cMAESOptimizer17.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(realMatrixList19);
        org.junit.Assert.assertNotNull(doubleList20);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer0 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        int int1 = cMAESOptimizer0.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType2 = cMAESOptimizer0.getGoalType();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer0.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList4 = cMAESOptimizer0.getStatisticsMeanHistory();
        java.lang.Class<?> wildcardClass5 = realMatrixList4.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(goalType2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertNotNull(realMatrixList4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        double[] doubleArray1 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator7 = null;
        double[] doubleArray13 = new double[] { 0 };
        double[] doubleArray23 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator42 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker44 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer45 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray36, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator42, true, pointValuePairConvergenceChecker44);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator63 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker65 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer66 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray57, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator63, true, pointValuePairConvergenceChecker65);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray36, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator63, true, pointValuePairConvergenceChecker68);
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator84 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker86 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray78, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator84, true, pointValuePairConvergenceChecker86);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer88 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray78);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker89 = cMAESOptimizer88.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray23, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator63, false, pointValuePairConvergenceChecker89);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray13, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator63, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray13);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray13);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker95 = cMAESOptimizer94.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer96 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray1, 1, (double) (short) 1, false, (int) (short) 0, 100, randomGenerator7, true, pointValuePairConvergenceChecker95);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator42);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator63);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator84);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker89);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker95);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        double[] doubleArray8 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator14 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker16 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray8, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator14, true, pointValuePairConvergenceChecker16);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray8);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer19 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray8);
        org.apache.commons.math3.optimization.GoalType goalType20 = cMAESOptimizer19.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator14);
        org.junit.Assert.assertNull(goalType20);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        double[] doubleArray3 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer4 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray3);
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer4.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList6 = cMAESOptimizer4.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(realMatrixList6);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        double[] doubleArray1 = new double[] {};
        double[] doubleArray12 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer13 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray12);
        org.apache.commons.math3.random.RandomGenerator randomGenerator19 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer21 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray12, (int) (byte) 100, (double) 0.0f, true, (int) (byte) -1, (int) 'a', randomGenerator19, false);
        double[] doubleArray28 = null;
        double[] doubleArray42 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer43 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator70 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker72 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray64, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator70, true, pointValuePairConvergenceChecker72);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray52, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator70, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray42, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator70, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker80 = cMAESOptimizer79.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray28, (int) 'a', (double) (byte) 100, false, (int) 'a', 10, randomGenerator70, true, pointValuePairConvergenceChecker80);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray12, 0, (double) (-1.0f), true, (int) (byte) 10, (int) (byte) 0, randomGenerator70, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray1, 1, (double) (-1.0f), false, (int) (short) 100, (int) '4', randomGenerator70, true);
        java.util.List<java.lang.Double> doubleList86 = cMAESOptimizer85.getStatisticsSigmaHistory();
        int int87 = cMAESOptimizer85.getEvaluations();
        java.lang.Class<?> wildcardClass88 = cMAESOptimizer85.getClass();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator70);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker80);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        double[] doubleArray3 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator21 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker23 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray15, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator21, true, pointValuePairConvergenceChecker23);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray3, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator21, true);
        java.util.List<java.lang.Double> doubleList27 = cMAESOptimizer26.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType28 = cMAESOptimizer26.getGoalType();
        java.util.List<java.lang.Double> doubleList29 = cMAESOptimizer26.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator21);
        org.junit.Assert.assertNotNull(doubleList27);
        org.junit.Assert.assertNull(goalType28);
        org.junit.Assert.assertNotNull(doubleList29);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        double[] doubleArray4 = new double[] { 0 };
        double[] doubleArray14 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator33 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker35 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer36 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray27, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator33, true, pointValuePairConvergenceChecker35);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator54 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker56 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer57 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray48, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator54, true, pointValuePairConvergenceChecker56);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker59 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer60 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray27, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator54, true, pointValuePairConvergenceChecker59);
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator75 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker77 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray69, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator75, true, pointValuePairConvergenceChecker77);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray69);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker80 = cMAESOptimizer79.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray14, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator54, false, pointValuePairConvergenceChecker80);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray4, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator54, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray4);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10, doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator33);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator54);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator75);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker80);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        double[] doubleArray5 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator24 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray18, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator24, true, pointValuePairConvergenceChecker26);
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray18, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator45, true, pointValuePairConvergenceChecker50);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray60);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = cMAESOptimizer70.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray5, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator45, false, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray5);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList74 = cMAESOptimizer73.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList75 = cMAESOptimizer73.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList76 = cMAESOptimizer73.getStatisticsMeanHistory();
        java.lang.Class<?> wildcardClass77 = cMAESOptimizer73.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator24);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker71);
        org.junit.Assert.assertNotNull(realMatrixList74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(realMatrixList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        double[] doubleArray5 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer6 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5);
        double[] doubleArray13 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator19 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer21 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray13, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator19, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer23 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray5, (int) (short) 1, (double) ' ', true, (int) 'a', 1, randomGenerator19, true);
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator42 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker44 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer45 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray36, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator42, true, pointValuePairConvergenceChecker44);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator63 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker65 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer66 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray57, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator63, true, pointValuePairConvergenceChecker65);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray36, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator63, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = cMAESOptimizer72.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10, doubleArray5, (int) (byte) 10, (double) (short) -1, true, 100, 10, randomGenerator63, false, pointValuePairConvergenceChecker73);
        java.util.List<java.lang.Double> doubleList75 = cMAESOptimizer74.getStatisticsSigmaHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray76 = cMAESOptimizer74.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(randomGenerator19);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator42);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator63);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker73);
        org.junit.Assert.assertNotNull(doubleList75);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer1.getStatisticsDHistory();
        int int3 = cMAESOptimizer1.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer1.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(doubleList5);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        double[] doubleArray3 = new double[] { 0 };
        double[] doubleArray13 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator32 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray26, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator32, true, pointValuePairConvergenceChecker34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator53 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker55 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray47, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator53, true, pointValuePairConvergenceChecker55);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray26, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator53, true, pointValuePairConvergenceChecker58);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator74 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray68, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator74, true, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray13, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator53, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray3, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator53, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray3);
        int int84 = cMAESOptimizer83.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType85 = cMAESOptimizer83.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker86 = cMAESOptimizer83.getConvergenceChecker();
        org.apache.commons.math3.optimization.GoalType goalType87 = cMAESOptimizer83.getGoalType();
        java.util.List<java.lang.Double> doubleList88 = cMAESOptimizer83.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList89 = cMAESOptimizer83.getStatisticsDHistory();
        java.lang.Class<?> wildcardClass90 = realMatrixList89.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator32);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNull(goalType85);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker86);
        org.junit.Assert.assertNull(goalType87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(realMatrixList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        double[] doubleArray8 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer9 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray8);
        double[] doubleArray16 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator22 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray16, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator22, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray8, (int) (short) 1, (double) ' ', true, (int) 'a', 1, randomGenerator22, true);
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray39, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator66, true, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = cMAESOptimizer75.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10, doubleArray8, (int) (byte) 10, (double) (short) -1, true, 100, 10, randomGenerator66, false, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray8);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray8);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray8);
        int int81 = cMAESOptimizer80.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(randomGenerator22);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker76);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker43 = cMAESOptimizer40.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray44 = cMAESOptimizer40.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker43);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        double[] doubleArray3 = new double[] { 0 };
        double[] doubleArray13 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator32 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray26, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator32, true, pointValuePairConvergenceChecker34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator53 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker55 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray47, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator53, true, pointValuePairConvergenceChecker55);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray26, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator53, true, pointValuePairConvergenceChecker58);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator74 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray68, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator74, true, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray13, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator53, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray3, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator53, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray3);
        int int84 = cMAESOptimizer83.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType85 = cMAESOptimizer83.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker86 = cMAESOptimizer83.getConvergenceChecker();
        java.lang.Class<?> wildcardClass87 = cMAESOptimizer83.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator32);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNull(goalType85);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer15.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray21 = cMAESOptimizer15.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker20);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray7);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList18 = cMAESOptimizer17.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer17.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(realMatrixList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray26 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray39, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator66, true, pointValuePairConvergenceChecker71);
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator87 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker89 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray81, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator87, true, pointValuePairConvergenceChecker89);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray81);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker92 = cMAESOptimizer91.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray26, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator66, false, pointValuePairConvergenceChecker92);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray7, (int) ' ', (double) 100.0f, false, 0, (int) (short) 100, randomGenerator66, false);
        int int96 = cMAESOptimizer95.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList97 = cMAESOptimizer95.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker98 = cMAESOptimizer95.getConvergenceChecker();
        org.apache.commons.math3.optimization.GoalType goalType99 = cMAESOptimizer95.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator87);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker92);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertNotNull(doubleList97);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker98);
        org.junit.Assert.assertNull(goalType99);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        double[] doubleArray7 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator26 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker28 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray20, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator26, true, pointValuePairConvergenceChecker28);
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator47 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray41, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator47, true, pointValuePairConvergenceChecker49);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker52 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer53 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray20, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator47, true, pointValuePairConvergenceChecker52);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator68 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray62, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator68, true, pointValuePairConvergenceChecker70);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray62);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = cMAESOptimizer72.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray7, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator47, false, pointValuePairConvergenceChecker73);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.random.RandomGenerator randomGenerator81 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray7, 0, (-1.0d), true, (int) ' ', (int) 'a', randomGenerator81, true);
        org.apache.commons.math3.random.RandomGenerator randomGenerator89 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray7, (int) (short) 10, (double) 0L, false, (int) (short) 0, (int) '#', randomGenerator89, false);
        java.util.List<java.lang.Double> doubleList92 = cMAESOptimizer91.getStatisticsSigmaHistory();
        int int93 = cMAESOptimizer91.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray94 = cMAESOptimizer91.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator26);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator47);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator68);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker73);
        org.junit.Assert.assertNotNull(randomGenerator81);
        org.junit.Assert.assertNotNull(randomGenerator89);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        double[] doubleArray5 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator24 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray18, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator24, true, pointValuePairConvergenceChecker26);
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray18, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator45, true, pointValuePairConvergenceChecker50);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray60);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = cMAESOptimizer70.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray5, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator45, false, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray5);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList74 = cMAESOptimizer73.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList75 = cMAESOptimizer73.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList76 = cMAESOptimizer73.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList77 = cMAESOptimizer73.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList78 = cMAESOptimizer73.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator24);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker71);
        org.junit.Assert.assertNotNull(realMatrixList74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(realMatrixList76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleList78);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100);
        org.apache.commons.math3.optimization.GoalType goalType2 = cMAESOptimizer1.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList4 = cMAESOptimizer1.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer1.getConvergenceChecker();
        org.junit.Assert.assertNull(goalType2);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertNotNull(realMatrixList4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        double[] doubleArray5 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer6 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5);
        double[] doubleArray18 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator37 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray31, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator37, true, pointValuePairConvergenceChecker39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator58 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer61 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray52, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator58, true, pointValuePairConvergenceChecker60);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker63 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray31, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator58, true, pointValuePairConvergenceChecker63);
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator79 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker81 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray73, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator79, true, pointValuePairConvergenceChecker81);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray73);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker84 = cMAESOptimizer83.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray18, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator58, false, pointValuePairConvergenceChecker84);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray18);
        org.apache.commons.math3.random.RandomGenerator randomGenerator92 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray18, 0, (-1.0d), true, (int) ' ', (int) 'a', randomGenerator92, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer96 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5, (int) (short) 0, 100.0d, true, (-1), (int) '#', randomGenerator92, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer97 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray5);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList98 = cMAESOptimizer97.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker99 = cMAESOptimizer97.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator37);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator58);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator79);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker84);
        org.junit.Assert.assertNotNull(randomGenerator92);
        org.junit.Assert.assertNotNull(realMatrixList98);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker99);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        double[] doubleArray4 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator22 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker24 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray16, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator22, true, pointValuePairConvergenceChecker24);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray4, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator22, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray4);
        int int29 = cMAESOptimizer28.getEvaluations();
        java.util.List<java.lang.Double> doubleList30 = cMAESOptimizer28.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList31 = cMAESOptimizer28.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList32 = cMAESOptimizer28.getStatisticsFitnessHistory();
        int int33 = cMAESOptimizer28.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator22);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(doubleList30);
        org.junit.Assert.assertNotNull(doubleList31);
        org.junit.Assert.assertNotNull(doubleList32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        org.apache.commons.math3.optimization.GoalType goalType2 = cMAESOptimizer1.getGoalType();
        int int3 = cMAESOptimizer1.getMaxEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList4 = cMAESOptimizer1.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.junit.Assert.assertNull(goalType2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(realMatrixList4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
        org.junit.Assert.assertNotNull(doubleList6);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        double[] doubleArray11 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator30 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker32 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer33 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray24, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator30, true, pointValuePairConvergenceChecker32);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator51 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer54 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray45, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator51, true, pointValuePairConvergenceChecker53);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker56 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer57 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray24, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator51, true, pointValuePairConvergenceChecker56);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator72 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker74 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray66, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator72, true, pointValuePairConvergenceChecker74);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray66);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker77 = cMAESOptimizer76.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray11, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator51, false, pointValuePairConvergenceChecker77);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray11);
        org.apache.commons.math3.random.RandomGenerator randomGenerator85 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray11, 0, (-1.0d), true, (int) ' ', (int) 'a', randomGenerator85, true);
        org.apache.commons.math3.random.RandomGenerator randomGenerator93 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray11, (int) (short) 10, (double) 0L, false, (int) (short) 0, (int) '#', randomGenerator93, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer96 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer97 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer98 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer99 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator30);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator51);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator72);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker77);
        org.junit.Assert.assertNotNull(randomGenerator85);
        org.junit.Assert.assertNotNull(randomGenerator93);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        double[] doubleArray9 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator15 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker17 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray9, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator15, true, pointValuePairConvergenceChecker17);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer19 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray9);
        double[] doubleArray26 = null;
        double[] doubleArray40 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer41 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator68 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray62, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator68, true, pointValuePairConvergenceChecker70);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray50, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator68, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray40, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator68, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer77.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer77.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray26, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator68, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray9, 10, (double) 10, true, (int) '4', 100, randomGenerator68, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray9);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList84 = cMAESOptimizer83.getStatisticsMeanHistory();
        int int85 = cMAESOptimizer83.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator15);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator68);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertNotNull(realMatrixList84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer15.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList21 = cMAESOptimizer15.getStatisticsDHistory();
        int int22 = cMAESOptimizer15.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType23 = cMAESOptimizer15.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList24 = cMAESOptimizer15.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(realMatrixList21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(goalType23);
        org.junit.Assert.assertNotNull(realMatrixList24);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1);
        int int2 = cMAESOptimizer1.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList4 = cMAESOptimizer1.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer1.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertNotNull(realMatrixList4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray26 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray39, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator66, true, pointValuePairConvergenceChecker71);
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator87 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker89 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray81, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator87, true, pointValuePairConvergenceChecker89);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray81);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker92 = cMAESOptimizer91.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray26, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator66, false, pointValuePairConvergenceChecker92);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray7, (int) ' ', (double) 100.0f, false, 0, (int) (short) 100, randomGenerator66, false);
        int int96 = cMAESOptimizer95.getMaxEvaluations();
        int int97 = cMAESOptimizer95.getMaxEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList98 = cMAESOptimizer95.getStatisticsDHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray99 = cMAESOptimizer95.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator87);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker92);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
        org.junit.Assert.assertNotNull(realMatrixList98);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        double[] doubleArray1 = null;
        double[] doubleArray15 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray15);
        double[] doubleArray25 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator43 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer46 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray37, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator43, true, pointValuePairConvergenceChecker45);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray25, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray15, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = cMAESOptimizer52.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = cMAESOptimizer52.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray1, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator43, false, pointValuePairConvergenceChecker54);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker56 = cMAESOptimizer55.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList57 = cMAESOptimizer55.getStatisticsFitnessHistory();
        int int58 = cMAESOptimizer55.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker59 = cMAESOptimizer55.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList60 = cMAESOptimizer55.getStatisticsMeanHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList61 = cMAESOptimizer55.getStatisticsDHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray62 = cMAESOptimizer55.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator43);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker53);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker54);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker56);
        org.junit.Assert.assertNotNull(doubleList57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker59);
        org.junit.Assert.assertNotNull(realMatrixList60);
        org.junit.Assert.assertNotNull(realMatrixList61);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList18 = cMAESOptimizer17.getStatisticsDHistory();
        int int19 = cMAESOptimizer17.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray20 = cMAESOptimizer17.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(realMatrixList18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1);
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsSigmaHistory();
        int int3 = cMAESOptimizer1.getEvaluations();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList5 = cMAESOptimizer1.getStatisticsDHistory();
        int int6 = cMAESOptimizer1.getEvaluations();
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(realMatrixList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        double[] doubleArray8 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator14 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker16 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray8, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator14, true, pointValuePairConvergenceChecker16);
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator35 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker37 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer38 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray29, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator35, true, pointValuePairConvergenceChecker37);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker40 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer41 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray8, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator35, true, pointValuePairConvergenceChecker40);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer42 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray8);
        int int43 = cMAESOptimizer42.getEvaluations();
        int int44 = cMAESOptimizer42.getMaxEvaluations();
        java.lang.Class<?> wildcardClass45 = cMAESOptimizer42.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator14);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        int int2 = cMAESOptimizer1.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList3 = cMAESOptimizer1.getStatisticsMeanHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList4 = cMAESOptimizer1.getStatisticsDHistory();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(realMatrixList3);
        org.junit.Assert.assertNotNull(realMatrixList4);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        double[] doubleArray7 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer8 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray7);
        java.util.List<java.lang.Double> doubleList9 = cMAESOptimizer8.getStatisticsFitnessHistory();
        int int10 = cMAESOptimizer8.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList11 = cMAESOptimizer8.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList12 = cMAESOptimizer8.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(realMatrixList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        double[] doubleArray2 = new double[] { 0 };
        double[] doubleArray12 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator31 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker33 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer34 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray25, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator31, true, pointValuePairConvergenceChecker33);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator52 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray46, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator52, true, pointValuePairConvergenceChecker54);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker57 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer58 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray25, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator52, true, pointValuePairConvergenceChecker57);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator73 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker75 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray67, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator73, true, pointValuePairConvergenceChecker75);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray67);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer77.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray12, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator52, false, pointValuePairConvergenceChecker78);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray2, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator52, true);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList82 = cMAESOptimizer81.getStatisticsDHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList83 = cMAESOptimizer81.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList84 = cMAESOptimizer81.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType85 = cMAESOptimizer81.getGoalType();
        java.util.List<java.lang.Double> doubleList86 = cMAESOptimizer81.getStatisticsSigmaHistory();
        int int87 = cMAESOptimizer81.getEvaluations();
        int int88 = cMAESOptimizer81.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray89 = cMAESOptimizer81.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator31);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator52);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator73);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
        org.junit.Assert.assertNotNull(realMatrixList82);
        org.junit.Assert.assertNotNull(realMatrixList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNull(goalType85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker2 = cMAESOptimizer1.getConvergenceChecker();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction4 = null;
        org.apache.commons.math3.optimization.GoalType goalType5 = null;
        double[] doubleArray6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair7 = cMAESOptimizer1.optimize((int) (byte) 10, multivariateFunction4, goalType5, doubleArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker2);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        double[] doubleArray10 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer11 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer12 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer13 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray10);
        double[] doubleArray20 = null;
        double[] doubleArray34 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray34);
        double[] doubleArray44 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator62 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker64 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer65 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray56, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator62, true, pointValuePairConvergenceChecker64);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer67 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray44, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator62, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray34, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator62, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker72 = cMAESOptimizer71.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray20, (int) 'a', (double) (byte) 100, false, (int) 'a', 10, randomGenerator62, true, pointValuePairConvergenceChecker72);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList77 = cMAESOptimizer76.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer76.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray10, 100, (double) (byte) 100, true, 0, (int) (short) 0, randomGenerator62, false, pointValuePairConvergenceChecker78);
        int int80 = cMAESOptimizer79.getEvaluations();
        java.util.List<java.lang.Double> doubleList81 = cMAESOptimizer79.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator62);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker72);
        org.junit.Assert.assertNotNull(realMatrixList77);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(doubleList81);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray26 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray39, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator66, true, pointValuePairConvergenceChecker71);
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator87 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker89 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray81, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator87, true, pointValuePairConvergenceChecker89);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray81);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker92 = cMAESOptimizer91.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray26, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator66, false, pointValuePairConvergenceChecker92);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10, doubleArray7, (int) '#', (double) (short) 100, false, (int) (byte) 10, 1, randomGenerator66, false);
        java.util.List<java.lang.Double> doubleList96 = cMAESOptimizer95.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker97 = cMAESOptimizer95.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator87);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker92);
        org.junit.Assert.assertNotNull(doubleList96);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker97);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.optimization.GoalType goalType18 = cMAESOptimizer17.getGoalType();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer17.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer17.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList21 = cMAESOptimizer17.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList22 = cMAESOptimizer17.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNull(goalType18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        double[] doubleArray3 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer4 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray3);
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer4.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer4.getStatisticsSigmaHistory();
        int int7 = cMAESOptimizer4.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        double[] doubleArray10 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator16 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer19 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray10, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator16, true, pointValuePairConvergenceChecker18);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer20 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray10);
        double[] doubleArray27 = null;
        double[] doubleArray41 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer42 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray41);
        double[] doubleArray51 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator69 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray63, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator69, true, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray51, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator69, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray41, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator69, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker80 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray27, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator69, false, pointValuePairConvergenceChecker80);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray10, 10, (double) 10, true, (int) '4', 100, randomGenerator69, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator16);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator69);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker80);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        double[] doubleArray8 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator14 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker16 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray8, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator14, true, pointValuePairConvergenceChecker16);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray8);
        double[] doubleArray27 = new double[] {};
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray27);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray27);
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator47 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray41, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator47, true, pointValuePairConvergenceChecker49);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker52 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer53 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray27, (int) '4', (double) (short) 10, false, (int) 'a', (int) (short) 10, randomGenerator47, false, pointValuePairConvergenceChecker52);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray8, (int) (byte) 100, (double) '#', false, (int) (short) 100, 0, randomGenerator47, true);
        int int56 = cMAESOptimizer55.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator14);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator47);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        double[] doubleArray3 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer4 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray3);
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer4.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer4.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList7 = cMAESOptimizer4.getStatisticsMeanHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList8 = cMAESOptimizer4.getStatisticsMeanHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList9 = cMAESOptimizer4.getStatisticsDHistory();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(realMatrixList7);
        org.junit.Assert.assertNotNull(realMatrixList8);
        org.junit.Assert.assertNotNull(realMatrixList9);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType43 = cMAESOptimizer40.getGoalType();
        int int44 = cMAESOptimizer40.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = cMAESOptimizer40.getConvergenceChecker();
        org.apache.commons.math3.optimization.GoalType goalType46 = cMAESOptimizer40.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(goalType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker45);
        org.junit.Assert.assertNull(goalType46);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        double[] doubleArray10 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer11 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer12 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer13 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray10);
        double[] doubleArray20 = null;
        double[] doubleArray34 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray34);
        double[] doubleArray44 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator62 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker64 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer65 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray56, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator62, true, pointValuePairConvergenceChecker64);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer67 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray44, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator62, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray34, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator62, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker72 = cMAESOptimizer71.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray20, (int) 'a', (double) (byte) 100, false, (int) 'a', 10, randomGenerator62, true, pointValuePairConvergenceChecker72);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList77 = cMAESOptimizer76.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer76.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray10, 100, (double) (byte) 100, true, 0, (int) (short) 0, randomGenerator62, false, pointValuePairConvergenceChecker78);
        int int80 = cMAESOptimizer79.getEvaluations();
        int int81 = cMAESOptimizer79.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator62);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker72);
        org.junit.Assert.assertNotNull(realMatrixList77);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        double[] doubleArray10 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator16 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer19 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray10, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator16, true, pointValuePairConvergenceChecker18);
        org.apache.commons.math3.random.RandomGenerator randomGenerator25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray10, 100, (double) (byte) 10, false, (int) (byte) 0, (int) (byte) 10, randomGenerator25, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray31 = cMAESOptimizer30.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator16);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer0 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        int int1 = cMAESOptimizer0.getEvaluations();
        java.lang.Class<?> wildcardClass2 = cMAESOptimizer0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer0 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker1 = cMAESOptimizer0.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer0.getStatisticsDHistory();
        int int3 = cMAESOptimizer0.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType4 = cMAESOptimizer0.getGoalType();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction6 = null;
        org.apache.commons.math3.optimization.GoalType goalType7 = null;
        double[] doubleArray14 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray14);
        double[] doubleArray22 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator28 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray22, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator28, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer32 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray14, (int) (short) 1, (double) ' ', true, (int) 'a', 1, randomGenerator28, true);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator51 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer54 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray45, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator51, true, pointValuePairConvergenceChecker53);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator72 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker74 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray66, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator72, true, pointValuePairConvergenceChecker74);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker77 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray45, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator72, true, pointValuePairConvergenceChecker77);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker82 = cMAESOptimizer81.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10, doubleArray14, (int) (byte) 10, (double) (short) -1, true, 100, 10, randomGenerator72, false, pointValuePairConvergenceChecker82);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair85 = cMAESOptimizer0.optimize((int) '4', multivariateFunction6, goalType7, doubleArray14);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker1);
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(goalType4);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(randomGenerator28);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator51);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator72);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker82);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        double[] doubleArray7 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer8 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray7);
        java.util.List<java.lang.Double> doubleList9 = cMAESOptimizer8.getStatisticsFitnessHistory();
        int int10 = cMAESOptimizer8.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList11 = cMAESOptimizer8.getStatisticsDHistory();
        org.apache.commons.math3.optimization.GoalType goalType12 = cMAESOptimizer8.getGoalType();
        int int13 = cMAESOptimizer8.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = cMAESOptimizer8.getConvergenceChecker();
        int int15 = cMAESOptimizer8.getEvaluations();
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer8.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(realMatrixList11);
        org.junit.Assert.assertNull(goalType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType18 = cMAESOptimizer15.getGoalType();
        int int19 = cMAESOptimizer15.getEvaluations();
        java.lang.Class<?> wildcardClass20 = cMAESOptimizer15.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(goalType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker2 = cMAESOptimizer1.getConvergenceChecker();
        int int3 = cMAESOptimizer1.getEvaluations();
        int int4 = cMAESOptimizer1.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer1.getConvergenceChecker();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction7 = null;
        org.apache.commons.math3.optimization.GoalType goalType8 = null;
        double[] doubleArray21 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator40 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker42 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer43 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray34, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator40, true, pointValuePairConvergenceChecker42);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator61 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker63 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray55, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator61, true, pointValuePairConvergenceChecker63);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker66 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer67 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray34, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator61, true, pointValuePairConvergenceChecker66);
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator82 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker84 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray76, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator82, true, pointValuePairConvergenceChecker84);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray76);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker87 = cMAESOptimizer86.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer88 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray21, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator61, false, pointValuePairConvergenceChecker87);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray21);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray21);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray21);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray21);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray21);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10, doubleArray21);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray21);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer96 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray21);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair97 = cMAESOptimizer1.optimize((int) (short) 1, multivariateFunction7, goalType8, doubleArray21);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator40);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator61);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator82);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker87);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0);
        int int2 = cMAESOptimizer1.getEvaluations();
        int int3 = cMAESOptimizer1.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType4 = cMAESOptimizer1.getGoalType();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(goalType4);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.optimization.GoalType goalType18 = cMAESOptimizer17.getGoalType();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer17.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer17.getStatisticsSigmaHistory();
        int int21 = cMAESOptimizer17.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNull(goalType18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        double[] doubleArray5 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer6 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5);
        double[] doubleArray13 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator19 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer21 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray13, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator19, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer23 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray5, (int) (short) 1, (double) ' ', true, (int) 'a', 1, randomGenerator19, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5);
        org.apache.commons.math3.optimization.GoalType goalType25 = cMAESOptimizer24.getGoalType();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray26 = cMAESOptimizer24.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(randomGenerator19);
        org.junit.Assert.assertNull(goalType25);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer0 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        int int1 = cMAESOptimizer0.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType2 = cMAESOptimizer0.getGoalType();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer0.getStatisticsSigmaHistory();
        java.lang.Class<?> wildcardClass4 = doubleList3.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(goalType2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray1);
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer2.getGoalType();
        org.junit.Assert.assertNull(goalType3);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        double[] doubleArray8 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer9 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray8);
        double[] doubleArray16 = null;
        double[] doubleArray30 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer31 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray30);
        double[] doubleArray40 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator58 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer61 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray52, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator58, true, pointValuePairConvergenceChecker60);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer63 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray40, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator58, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer65 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray30, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator58, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer67 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = cMAESOptimizer67.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker69 = cMAESOptimizer67.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray16, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator58, false, pointValuePairConvergenceChecker69);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100);
        java.util.List<java.lang.Double> doubleList74 = cMAESOptimizer73.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker75 = cMAESOptimizer73.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray8, (int) '#', (double) (short) 10, false, (int) (byte) 1, 0, randomGenerator58, true, pointValuePairConvergenceChecker75);
        java.util.List<java.lang.Double> doubleList77 = cMAESOptimizer76.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator58);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker68);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker69);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker75);
        org.junit.Assert.assertNotNull(doubleList77);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer1.getStatisticsDHistory();
        int int3 = cMAESOptimizer1.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType4 = cMAESOptimizer1.getGoalType();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer1.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(goalType4);
        org.junit.Assert.assertNotNull(doubleList5);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        double[] doubleArray9 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator15 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker17 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray9, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator15, true, pointValuePairConvergenceChecker17);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer19 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray9);
        double[] doubleArray26 = null;
        double[] doubleArray40 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer41 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator68 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray62, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator68, true, pointValuePairConvergenceChecker70);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray50, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator68, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray40, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator68, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer77.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer77.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray26, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator68, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray9, 10, (double) 10, true, (int) '4', 100, randomGenerator68, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray9);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker84 = cMAESOptimizer83.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList85 = cMAESOptimizer83.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator15);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator68);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker84);
        org.junit.Assert.assertNotNull(doubleList85);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        double[] doubleArray11 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator30 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker32 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer33 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray24, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator30, true, pointValuePairConvergenceChecker32);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator51 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer54 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray45, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator51, true, pointValuePairConvergenceChecker53);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker56 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer57 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray24, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator51, true, pointValuePairConvergenceChecker56);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator72 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker74 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray66, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator72, true, pointValuePairConvergenceChecker74);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray66);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker77 = cMAESOptimizer76.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray11, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator51, false, pointValuePairConvergenceChecker77);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray11);
        org.apache.commons.math3.random.RandomGenerator randomGenerator85 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray11, 0, (-1.0d), true, (int) ' ', (int) 'a', randomGenerator85, true);
        org.apache.commons.math3.random.RandomGenerator randomGenerator93 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray11, (int) (short) 10, (double) 0L, false, (int) (short) 0, (int) '#', randomGenerator93, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer96 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer97 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer98 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer99 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator30);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator51);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator72);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker77);
        org.junit.Assert.assertNotNull(randomGenerator85);
        org.junit.Assert.assertNotNull(randomGenerator93);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray1);
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer2.getGoalType();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction5 = null;
        org.apache.commons.math3.optimization.GoalType goalType6 = null;
        double[] doubleArray17 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray17);
        double[] doubleArray25 = null;
        double[] doubleArray39 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray39);
        double[] doubleArray49 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator67 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker69 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray61, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator67, true, pointValuePairConvergenceChecker69);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray49, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator67, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray39, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator67, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker77 = cMAESOptimizer76.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray25, (int) 'a', (double) (byte) 100, false, (int) 'a', 10, randomGenerator67, true, pointValuePairConvergenceChecker77);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker82 = cMAESOptimizer81.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray17, (int) '4', (double) '4', true, (int) (short) 1, (int) (short) 100, randomGenerator67, true, pointValuePairConvergenceChecker82);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray17);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair86 = cMAESOptimizer2.optimize((-1), multivariateFunction5, goalType6, doubleArray17);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator67);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker77);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker82);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList16 = cMAESOptimizer15.getStatisticsDHistory();
        int int17 = cMAESOptimizer15.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType18 = cMAESOptimizer15.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer15.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(realMatrixList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(goalType18);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker19);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0);
        org.apache.commons.math3.optimization.GoalType goalType2 = cMAESOptimizer1.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        int int4 = cMAESOptimizer1.getEvaluations();
        int int5 = cMAESOptimizer1.getMaxEvaluations();
        int int6 = cMAESOptimizer1.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType7 = cMAESOptimizer1.getGoalType();
        org.junit.Assert.assertNull(goalType2);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(goalType7);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer15.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList21 = cMAESOptimizer15.getStatisticsDHistory();
        int int22 = cMAESOptimizer15.getEvaluations();
        int int23 = cMAESOptimizer15.getMaxEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList24 = cMAESOptimizer15.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(realMatrixList21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(realMatrixList24);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        double[] doubleArray3 = new double[] { 0 };
        double[] doubleArray13 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator32 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray26, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator32, true, pointValuePairConvergenceChecker34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator53 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker55 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray47, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator53, true, pointValuePairConvergenceChecker55);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray26, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator53, true, pointValuePairConvergenceChecker58);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator74 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray68, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator74, true, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray13, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator53, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray3, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator53, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray3);
        org.apache.commons.math3.optimization.GoalType goalType84 = cMAESOptimizer83.getGoalType();
        java.util.List<java.lang.Double> doubleList85 = cMAESOptimizer83.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList86 = cMAESOptimizer83.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator32);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertNull(goalType84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        double[] doubleArray8 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator14 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker16 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray8, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator14, true, pointValuePairConvergenceChecker16);
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray8, 100, (double) (byte) 10, false, (int) (byte) 0, (int) (byte) 10, randomGenerator23, false);
        double[] doubleArray39 = new double[] { (-1.0f), 100L, 100.0d, '4', 1, (byte) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray39);
        double[] doubleArray54 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray54);
        double[] doubleArray64 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator82 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker84 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray76, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator82, true, pointValuePairConvergenceChecker84);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray64, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator82, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray54, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator82, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray39, 100, (double) (byte) -1, true, (int) '4', (int) (short) 10, randomGenerator82, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10, doubleArray8, 10, (double) 10L, false, (int) 'a', (int) (short) 0, randomGenerator82, false);
        java.util.List<java.lang.Double> doubleList94 = cMAESOptimizer93.getStatisticsSigmaHistory();
        int int95 = cMAESOptimizer93.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator14);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0, 100.0, 52.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator82);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker2 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList3 = cMAESOptimizer1.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer1.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType5 = cMAESOptimizer1.getGoalType();
        int int6 = cMAESOptimizer1.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType7 = cMAESOptimizer1.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList8 = cMAESOptimizer1.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker2);
        org.junit.Assert.assertNotNull(realMatrixList3);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNull(goalType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(goalType7);
        org.junit.Assert.assertNotNull(realMatrixList8);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1);
        int int2 = cMAESOptimizer1.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker3 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList4 = cMAESOptimizer1.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer1.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker3);
        org.junit.Assert.assertNotNull(realMatrixList4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray1);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer1.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer1.getStatisticsSigmaHistory();
        int int4 = cMAESOptimizer1.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(doubleList5);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer17.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList19 = cMAESOptimizer17.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer17.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList21 = cMAESOptimizer17.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker22 = cMAESOptimizer17.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(realMatrixList19);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker22);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        double[] doubleArray11 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer12 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer13 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer14 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray11);
        double[] doubleArray25 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator43 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer46 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray37, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator43, true, pointValuePairConvergenceChecker45);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray25, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer49 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray25);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator67 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker69 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray61, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator67, true, pointValuePairConvergenceChecker69);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray25, (-1), (double) (-1L), false, (int) (byte) 1, 0, randomGenerator67, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray11, 0, (double) (short) 10, false, (int) (byte) -1, 0, randomGenerator67, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray11);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = cMAESOptimizer75.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator43);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator67);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker76);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        double[] doubleArray9 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator15 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker17 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray9, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator15, true, pointValuePairConvergenceChecker17);
        double[] doubleArray28 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator47 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray41, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator47, true, pointValuePairConvergenceChecker49);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator68 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray62, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator68, true, pointValuePairConvergenceChecker70);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray41, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator68, true, pointValuePairConvergenceChecker73);
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator89 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker91 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray83, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator89, true, pointValuePairConvergenceChecker91);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray83);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker94 = cMAESOptimizer93.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray28, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator68, false, pointValuePairConvergenceChecker94);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer97 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10, doubleArray9, (int) '#', (double) (short) 100, false, (int) (byte) 10, 1, randomGenerator68, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer98 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray9);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer99 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator15);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator47);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator68);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator89);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker94);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray26 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray39, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator66, true, pointValuePairConvergenceChecker71);
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator87 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker89 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray81, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator87, true, pointValuePairConvergenceChecker89);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray81);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker92 = cMAESOptimizer91.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray26, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator66, false, pointValuePairConvergenceChecker92);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray7, (int) ' ', (double) 100.0f, false, 0, (int) (short) 100, randomGenerator66, false);
        int int96 = cMAESOptimizer95.getMaxEvaluations();
        int int97 = cMAESOptimizer95.getMaxEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList98 = cMAESOptimizer95.getStatisticsDHistory();
        int int99 = cMAESOptimizer95.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator87);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker92);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
        org.junit.Assert.assertNotNull(realMatrixList98);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 0 + "'", int99 == 0);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        double[] doubleArray5 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator24 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray18, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator24, true, pointValuePairConvergenceChecker26);
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray18, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator45, true, pointValuePairConvergenceChecker50);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray60);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = cMAESOptimizer70.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray5, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator45, false, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList74 = cMAESOptimizer73.getStatisticsDHistory();
        java.lang.Class<?> wildcardClass75 = cMAESOptimizer73.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator24);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker71);
        org.junit.Assert.assertNotNull(realMatrixList74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        double[] doubleArray2 = new double[] {};
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer3 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray2);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer4 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray2);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList5 = cMAESOptimizer4.getStatisticsDHistory();
        org.apache.commons.math3.optimization.GoalType goalType6 = cMAESOptimizer4.getGoalType();
        java.util.List<java.lang.Double> doubleList7 = cMAESOptimizer4.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertNotNull(realMatrixList5);
        org.junit.Assert.assertNull(goalType6);
        org.junit.Assert.assertNotNull(doubleList7);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        double[] doubleArray4 = new double[] { 0 };
        double[] doubleArray14 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator33 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker35 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer36 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray27, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator33, true, pointValuePairConvergenceChecker35);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator54 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker56 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer57 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray48, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator54, true, pointValuePairConvergenceChecker56);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker59 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer60 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray27, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator54, true, pointValuePairConvergenceChecker59);
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator75 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker77 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray69, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator75, true, pointValuePairConvergenceChecker77);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray69);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker80 = cMAESOptimizer79.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray14, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator54, false, pointValuePairConvergenceChecker80);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray4, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator54, true);
        org.apache.commons.math3.random.RandomGenerator randomGenerator89 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker92 = cMAESOptimizer91.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray4, (int) '4', 0.0d, true, (int) (byte) 1, (int) ' ', randomGenerator89, true, pointValuePairConvergenceChecker92);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray4);
        java.util.List<java.lang.Double> doubleList95 = cMAESOptimizer94.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker96 = cMAESOptimizer94.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker97 = cMAESOptimizer94.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList98 = cMAESOptimizer94.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker99 = cMAESOptimizer94.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator33);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator54);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator75);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker80);
        org.junit.Assert.assertNotNull(randomGenerator89);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker92);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker96);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker97);
        org.junit.Assert.assertNotNull(realMatrixList98);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker99);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray26 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray39, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator66, true, pointValuePairConvergenceChecker71);
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator87 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker89 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray81, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator87, true, pointValuePairConvergenceChecker89);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray81);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker92 = cMAESOptimizer91.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray26, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator66, false, pointValuePairConvergenceChecker92);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray7, (int) ' ', (double) 100.0f, false, 0, (int) (short) 100, randomGenerator66, false);
        int int96 = cMAESOptimizer95.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList97 = cMAESOptimizer95.getStatisticsSigmaHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray98 = cMAESOptimizer95.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator87);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker92);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertNotNull(doubleList97);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#');
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer1.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer1.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertNotNull(doubleList3);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        int int20 = cMAESOptimizer15.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker21 = cMAESOptimizer15.getConvergenceChecker();
        int int22 = cMAESOptimizer15.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList23 = cMAESOptimizer15.getStatisticsFitnessHistory();
        int int24 = cMAESOptimizer15.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        double[] doubleArray8 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator14 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker16 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray8, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator14, true, pointValuePairConvergenceChecker16);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray8);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer19 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray8);
        int int20 = cMAESOptimizer19.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator14);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        double[] doubleArray3 = new double[] { 0 };
        double[] doubleArray13 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator32 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray26, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator32, true, pointValuePairConvergenceChecker34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator53 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker55 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray47, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator53, true, pointValuePairConvergenceChecker55);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray26, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator53, true, pointValuePairConvergenceChecker58);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator74 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray68, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator74, true, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray13, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator53, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray3, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator53, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray3);
        int int84 = cMAESOptimizer83.getEvaluations();
        int int85 = cMAESOptimizer83.getEvaluations();
        int int86 = cMAESOptimizer83.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator32);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        double[] doubleArray6 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator25 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker27 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray19, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator25, true, pointValuePairConvergenceChecker27);
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator46 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker48 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer49 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray40, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator46, true, pointValuePairConvergenceChecker48);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker51 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray19, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator46, true, pointValuePairConvergenceChecker51);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator67 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker69 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray61, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator67, true, pointValuePairConvergenceChecker69);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray61);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker72 = cMAESOptimizer71.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray6, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator46, false, pointValuePairConvergenceChecker72);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray6);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray6);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList76 = cMAESOptimizer75.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator25);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator46);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator67);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker72);
        org.junit.Assert.assertNotNull(realMatrixList76);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4');
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer1.getStatisticsDHistory();
        java.lang.Class<?> wildcardClass3 = realMatrixList2.getClass();
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0);
        org.apache.commons.math3.optimization.GoalType goalType2 = cMAESOptimizer1.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList3 = cMAESOptimizer1.getStatisticsMeanHistory();
        org.junit.Assert.assertNull(goalType2);
        org.junit.Assert.assertNotNull(realMatrixList3);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        double[] doubleArray5 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator24 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray18, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator24, true, pointValuePairConvergenceChecker26);
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray18, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator45, true, pointValuePairConvergenceChecker50);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray60);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = cMAESOptimizer70.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray5, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator45, false, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList74 = cMAESOptimizer73.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList75 = cMAESOptimizer73.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator24);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker71);
        org.junit.Assert.assertNotNull(realMatrixList74);
        org.junit.Assert.assertNotNull(doubleList75);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        double[] doubleArray5 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer6 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5);
        double[] doubleArray18 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator37 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray31, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator37, true, pointValuePairConvergenceChecker39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator58 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer61 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray52, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator58, true, pointValuePairConvergenceChecker60);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker63 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray31, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator58, true, pointValuePairConvergenceChecker63);
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator79 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker81 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray73, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator79, true, pointValuePairConvergenceChecker81);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray73);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker84 = cMAESOptimizer83.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray18, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator58, false, pointValuePairConvergenceChecker84);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray18);
        org.apache.commons.math3.random.RandomGenerator randomGenerator92 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray18, 0, (-1.0d), true, (int) ' ', (int) 'a', randomGenerator92, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer96 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5, (int) (short) 0, 100.0d, true, (-1), (int) '#', randomGenerator92, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer97 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray5);
        int int98 = cMAESOptimizer97.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator37);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator58);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator79);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker84);
        org.junit.Assert.assertNotNull(randomGenerator92);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray1);
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer2.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleList3);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        double[] doubleArray8 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator27 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker29 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray21, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator27, true, pointValuePairConvergenceChecker29);
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator48 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray42, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator48, true, pointValuePairConvergenceChecker50);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer54 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray21, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator48, true, pointValuePairConvergenceChecker53);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator69 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray63, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator69, true, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray63);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker74 = cMAESOptimizer73.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray8, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator48, false, pointValuePairConvergenceChecker74);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray8);
        org.apache.commons.math3.random.RandomGenerator randomGenerator82 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray8, 0, (-1.0d), true, (int) ' ', (int) 'a', randomGenerator82, true);
        org.apache.commons.math3.random.RandomGenerator randomGenerator90 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray8, (int) (short) 10, (double) 0L, false, (int) (short) 0, (int) '#', randomGenerator90, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator27);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator48);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator69);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker74);
        org.junit.Assert.assertNotNull(randomGenerator82);
        org.junit.Assert.assertNotNull(randomGenerator90);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        double[] doubleArray4 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer5 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray4);
        double[] doubleArray15 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator55 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker57 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer58 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray49, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator55, true, pointValuePairConvergenceChecker57);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer61 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray28, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator55, true, pointValuePairConvergenceChecker60);
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator76 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray70, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator76, true, pointValuePairConvergenceChecker78);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray70);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker81 = cMAESOptimizer80.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray15, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator55, false, pointValuePairConvergenceChecker81);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker85 = cMAESOptimizer84.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker86 = cMAESOptimizer84.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray4, 100, (double) (byte) 100, true, (int) '#', (int) '#', randomGenerator55, true, pointValuePairConvergenceChecker86);
        int int88 = cMAESOptimizer87.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList89 = cMAESOptimizer87.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator55);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator76);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker81);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker85);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(doubleList89);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        double[] doubleArray4 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray17, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator23, true, pointValuePairConvergenceChecker25);
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator44 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker46 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer47 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray38, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator44, true, pointValuePairConvergenceChecker46);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray17, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator44, true, pointValuePairConvergenceChecker49);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator65 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker67 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer68 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray59, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator65, true, pointValuePairConvergenceChecker67);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray59);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = cMAESOptimizer69.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray4, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator44, false, pointValuePairConvergenceChecker70);
        int int72 = cMAESOptimizer71.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = cMAESOptimizer71.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList74 = cMAESOptimizer71.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList75 = cMAESOptimizer71.getStatisticsDHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList76 = cMAESOptimizer71.getStatisticsMeanHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray77 = cMAESOptimizer71.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator23);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator44);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator65);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(realMatrixList75);
        org.junit.Assert.assertNotNull(realMatrixList76);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0);
        int int2 = cMAESOptimizer1.getEvaluations();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer1.getStatisticsFitnessHistory();
        int int4 = cMAESOptimizer1.getEvaluations();
        java.lang.Class<?> wildcardClass5 = cMAESOptimizer1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        double[] doubleArray1 = null;
        double[] doubleArray15 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray15);
        double[] doubleArray25 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator43 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer46 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray37, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator43, true, pointValuePairConvergenceChecker45);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray25, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray15, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = cMAESOptimizer52.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = cMAESOptimizer52.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray1, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator43, false, pointValuePairConvergenceChecker54);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker56 = cMAESOptimizer55.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList57 = cMAESOptimizer55.getStatisticsFitnessHistory();
        int int58 = cMAESOptimizer55.getEvaluations();
        int int59 = cMAESOptimizer55.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList60 = cMAESOptimizer55.getStatisticsDHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList61 = cMAESOptimizer55.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList62 = cMAESOptimizer55.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator43);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker53);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker54);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker56);
        org.junit.Assert.assertNotNull(doubleList57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(realMatrixList60);
        org.junit.Assert.assertNotNull(realMatrixList61);
        org.junit.Assert.assertNotNull(doubleList62);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        double[] doubleArray7 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator26 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker28 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray20, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator26, true, pointValuePairConvergenceChecker28);
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator47 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray41, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator47, true, pointValuePairConvergenceChecker49);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker52 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer53 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray20, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator47, true, pointValuePairConvergenceChecker52);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator68 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray62, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator68, true, pointValuePairConvergenceChecker70);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray62);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = cMAESOptimizer72.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray7, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator47, false, pointValuePairConvergenceChecker73);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.random.RandomGenerator randomGenerator81 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray7, 0, (-1.0d), true, (int) ' ', (int) 'a', randomGenerator81, true);
        org.apache.commons.math3.random.RandomGenerator randomGenerator89 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray7, (int) (short) 10, (double) 0L, false, (int) (short) 0, (int) '#', randomGenerator89, false);
        java.util.List<java.lang.Double> doubleList92 = cMAESOptimizer91.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker93 = cMAESOptimizer91.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray94 = cMAESOptimizer91.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator26);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator47);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator68);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker73);
        org.junit.Assert.assertNotNull(randomGenerator81);
        org.junit.Assert.assertNotNull(randomGenerator89);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker93);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer15.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList21 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList22 = cMAESOptimizer15.getStatisticsMeanHistory();
        int int23 = cMAESOptimizer15.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType24 = cMAESOptimizer15.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType25 = cMAESOptimizer15.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType26 = cMAESOptimizer15.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(realMatrixList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(goalType24);
        org.junit.Assert.assertNull(goalType25);
        org.junit.Assert.assertNull(goalType26);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0);
        int int2 = cMAESOptimizer1.getEvaluations();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer1.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList4 = cMAESOptimizer1.getStatisticsDHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList5 = cMAESOptimizer1.getStatisticsDHistory();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertNotNull(realMatrixList4);
        org.junit.Assert.assertNotNull(realMatrixList5);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        double[] doubleArray1 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator7 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer9 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray1, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator7, false);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker10 = cMAESOptimizer9.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker11 = cMAESOptimizer9.getConvergenceChecker();
        int int12 = cMAESOptimizer9.getMaxEvaluations();
        org.junit.Assert.assertNotNull(randomGenerator7);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker10);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType18 = cMAESOptimizer15.getGoalType();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer15.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(goalType18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1);
        int int2 = cMAESOptimizer1.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker3 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList4 = cMAESOptimizer1.getStatisticsDHistory();
        int int5 = cMAESOptimizer1.getEvaluations();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker3);
        org.junit.Assert.assertNotNull(realMatrixList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        double[] doubleArray3 = new double[] { 0 };
        double[] doubleArray13 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator32 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray26, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator32, true, pointValuePairConvergenceChecker34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator53 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker55 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray47, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator53, true, pointValuePairConvergenceChecker55);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray26, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator53, true, pointValuePairConvergenceChecker58);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator74 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray68, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator74, true, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray13, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator53, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray3, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator53, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray3);
        org.apache.commons.math3.optimization.GoalType goalType84 = cMAESOptimizer83.getGoalType();
        int int85 = cMAESOptimizer83.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType86 = cMAESOptimizer83.getGoalType();
        int int87 = cMAESOptimizer83.getMaxEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray88 = cMAESOptimizer83.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator32);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertNull(goalType84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNull(goalType86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker42 = cMAESOptimizer40.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray43 = cMAESOptimizer40.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker42);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        double[] doubleArray5 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator24 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray18, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator24, true, pointValuePairConvergenceChecker26);
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray18, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator45, true, pointValuePairConvergenceChecker50);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray60);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = cMAESOptimizer70.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray5, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator45, false, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray5);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList74 = cMAESOptimizer73.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList75 = cMAESOptimizer73.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList76 = cMAESOptimizer73.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList77 = cMAESOptimizer73.getStatisticsDHistory();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator24);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker71);
        org.junit.Assert.assertNotNull(realMatrixList74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(realMatrixList77);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        double[] doubleArray1 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator7 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer9 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray1, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator7, false);
        java.lang.Class<?> wildcardClass10 = cMAESOptimizer9.getClass();
        org.junit.Assert.assertNotNull(randomGenerator7);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList18 = cMAESOptimizer17.getStatisticsDHistory();
        int int19 = cMAESOptimizer17.getEvaluations();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer17.getStatisticsFitnessHistory();
        int int21 = cMAESOptimizer17.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(realMatrixList18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        double[] doubleArray9 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator15 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker17 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray9, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator15, true, pointValuePairConvergenceChecker17);
        double[] doubleArray28 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator47 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray41, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator47, true, pointValuePairConvergenceChecker49);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator68 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray62, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator68, true, pointValuePairConvergenceChecker70);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray41, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator68, true, pointValuePairConvergenceChecker73);
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator89 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker91 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray83, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator89, true, pointValuePairConvergenceChecker91);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray83);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker94 = cMAESOptimizer93.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray28, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator68, false, pointValuePairConvergenceChecker94);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer97 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray9, (int) ' ', (double) 100.0f, false, 0, (int) (short) 100, randomGenerator68, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer98 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray9);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer99 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator15);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator47);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator68);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator89);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker94);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList17 = cMAESOptimizer15.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList18 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType19 = cMAESOptimizer15.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList20 = cMAESOptimizer15.getStatisticsMeanHistory();
        java.lang.Class<?> wildcardClass21 = cMAESOptimizer15.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(realMatrixList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNull(goalType19);
        org.junit.Assert.assertNotNull(realMatrixList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        double[] doubleArray11 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer12 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer13 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer14 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray11);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker17 = cMAESOptimizer16.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList18 = cMAESOptimizer16.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker17);
        org.junit.Assert.assertNotNull(realMatrixList18);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker2 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList3 = cMAESOptimizer1.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer1.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType5 = cMAESOptimizer1.getGoalType();
        int int6 = cMAESOptimizer1.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList7 = cMAESOptimizer1.getStatisticsFitnessHistory();
        java.lang.Class<?> wildcardClass8 = cMAESOptimizer1.getClass();
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker2);
        org.junit.Assert.assertNotNull(realMatrixList3);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNull(goalType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(doubleList7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<java.lang.Double> doubleList41 = cMAESOptimizer40.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(doubleList41);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        double[] doubleArray11 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer12 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer13 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer14 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray11);
        double[] doubleArray25 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator43 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer46 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray37, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator43, true, pointValuePairConvergenceChecker45);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray25, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer49 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray25);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator67 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker69 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray61, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator67, true, pointValuePairConvergenceChecker69);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray25, (-1), (double) (-1L), false, (int) (byte) 1, 0, randomGenerator67, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray11, 0, (double) (short) 10, false, (int) (byte) -1, 0, randomGenerator67, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray11);
        java.util.List<java.lang.Double> doubleList76 = cMAESOptimizer75.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList77 = cMAESOptimizer75.getStatisticsDHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray78 = cMAESOptimizer75.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator43);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator67);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(realMatrixList77);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        double[] doubleArray5 = new double[] { 0 };
        double[] doubleArray15 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator55 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker57 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer58 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray49, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator55, true, pointValuePairConvergenceChecker57);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer61 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray28, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator55, true, pointValuePairConvergenceChecker60);
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator76 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray70, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator76, true, pointValuePairConvergenceChecker78);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray70);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker81 = cMAESOptimizer80.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray15, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator55, false, pointValuePairConvergenceChecker81);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray5, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator55, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray5);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100, doubleArray5);
        int int88 = cMAESOptimizer87.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker89 = cMAESOptimizer87.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker90 = cMAESOptimizer87.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator55);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator76);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker81);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker89);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker90);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        double[] doubleArray5 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray17, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator23, true, pointValuePairConvergenceChecker25);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray5, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator23, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray5);
        double[] doubleArray40 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator58 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer61 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray52, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator58, true, pointValuePairConvergenceChecker60);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer63 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray40, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator58, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray40);
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator82 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker84 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray76, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator82, true, pointValuePairConvergenceChecker84);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray40, (-1), (double) (-1L), false, (int) (byte) 1, 0, randomGenerator82, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray5, (int) (byte) 10, (-1.0d), true, (int) (short) 0, (int) '#', randomGenerator82, true);
        int int90 = cMAESOptimizer89.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray91 = cMAESOptimizer89.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator23);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator58);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator82);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        double[] doubleArray4 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator22 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker24 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray16, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator22, true, pointValuePairConvergenceChecker24);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray4, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator22, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray4);
        int int29 = cMAESOptimizer28.getEvaluations();
        java.util.List<java.lang.Double> doubleList30 = cMAESOptimizer28.getStatisticsFitnessHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray31 = cMAESOptimizer28.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator22);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(doubleList30);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        double[] doubleArray10 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer11 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray10);
        double[] doubleArray18 = null;
        double[] doubleArray32 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer33 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray32);
        double[] doubleArray42 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator60 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker62 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer63 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray54, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator60, true, pointValuePairConvergenceChecker62);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer65 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray42, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator60, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer67 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray32, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator60, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = cMAESOptimizer69.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray18, (int) 'a', (double) (byte) 100, false, (int) 'a', 10, randomGenerator60, true, pointValuePairConvergenceChecker70);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker75 = cMAESOptimizer74.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray10, (int) '4', (double) '4', true, (int) (short) 1, (int) (short) 100, randomGenerator60, true, pointValuePairConvergenceChecker75);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray10);
        double[] doubleArray84 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator90 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray84, 100, (double) 0, false, (-1), (int) (short) 1, randomGenerator90, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray10, (int) '4', (double) 10, false, 0, 100, randomGenerator90, true);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator60);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker70);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker75);
        org.junit.Assert.assertNotNull(randomGenerator90);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer1.getStatisticsDHistory();
        int int3 = cMAESOptimizer1.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer1.getConvergenceChecker();
        org.apache.commons.math3.optimization.GoalType goalType5 = cMAESOptimizer1.getGoalType();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer1.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker7 = cMAESOptimizer1.getConvergenceChecker();
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNull(goalType5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker7);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        double[] doubleArray8 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator27 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker29 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray21, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator27, true, pointValuePairConvergenceChecker29);
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator48 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray42, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator48, true, pointValuePairConvergenceChecker50);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer54 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray21, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator48, true, pointValuePairConvergenceChecker53);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator69 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray63, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator69, true, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray63);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker74 = cMAESOptimizer73.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray8, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator48, false, pointValuePairConvergenceChecker74);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray8);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray8);
        double[] doubleArray84 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator90 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray84, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator90, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray8, (int) (short) 10, (double) ' ', false, (int) (byte) -1, (int) (byte) 0, randomGenerator90, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray8);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList96 = cMAESOptimizer95.getStatisticsDHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList97 = cMAESOptimizer95.getStatisticsDHistory();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator27);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator48);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator69);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker74);
        org.junit.Assert.assertNotNull(randomGenerator90);
        org.junit.Assert.assertNotNull(realMatrixList96);
        org.junit.Assert.assertNotNull(realMatrixList97);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType43 = cMAESOptimizer40.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker44 = cMAESOptimizer40.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList45 = cMAESOptimizer40.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList46 = cMAESOptimizer40.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList47 = cMAESOptimizer40.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(goalType43);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker44);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer1.getStatisticsMeanHistory();
        int int3 = cMAESOptimizer1.getMaxEvaluations();
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        double[] doubleArray5 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray17, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator23, true, pointValuePairConvergenceChecker25);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray5, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator23, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray5);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray5);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList31 = cMAESOptimizer30.getStatisticsDHistory();
        int int32 = cMAESOptimizer30.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator23);
        org.junit.Assert.assertNotNull(realMatrixList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        double[] doubleArray5 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray17, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator23, true, pointValuePairConvergenceChecker25);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray5, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator23, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray5);
        double[] doubleArray40 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator58 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer61 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray52, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator58, true, pointValuePairConvergenceChecker60);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer63 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray40, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator58, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray40);
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator82 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker84 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray76, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator82, true, pointValuePairConvergenceChecker84);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray40, (-1), (double) (-1L), false, (int) (byte) 1, 0, randomGenerator82, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray5, (int) (byte) 10, (-1.0d), true, (int) (short) 0, (int) '#', randomGenerator82, true);
        java.util.List<java.lang.Double> doubleList90 = cMAESOptimizer89.getStatisticsSigmaHistory();
        int int91 = cMAESOptimizer89.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator23);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator58);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator82);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100);
        org.apache.commons.math3.optimization.GoalType goalType2 = cMAESOptimizer1.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList4 = cMAESOptimizer1.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList6 = cMAESOptimizer1.getStatisticsDHistory();
        int int7 = cMAESOptimizer1.getMaxEvaluations();
        org.junit.Assert.assertNull(goalType2);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertNotNull(realMatrixList4);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(realMatrixList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1);
        int int2 = cMAESOptimizer1.getMaxEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList3 = cMAESOptimizer1.getStatisticsDHistory();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(realMatrixList3);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1);
        int int2 = cMAESOptimizer1.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList3 = cMAESOptimizer1.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.GoalType goalType4 = cMAESOptimizer1.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType5 = cMAESOptimizer1.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker6 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList7 = cMAESOptimizer1.getStatisticsSigmaHistory();
        int int8 = cMAESOptimizer1.getMaxEvaluations();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(realMatrixList3);
        org.junit.Assert.assertNull(goalType4);
        org.junit.Assert.assertNull(goalType5);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker6);
        org.junit.Assert.assertNotNull(doubleList7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList19 = cMAESOptimizer15.getStatisticsDHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList20 = cMAESOptimizer15.getStatisticsDHistory();
        java.lang.Class<?> wildcardClass21 = realMatrixList20.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(realMatrixList19);
        org.junit.Assert.assertNotNull(realMatrixList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer0 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker1 = cMAESOptimizer0.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker2 = cMAESOptimizer0.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer0.getStatisticsSigmaHistory();
        int int4 = cMAESOptimizer0.getEvaluations();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer0.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList6 = cMAESOptimizer0.getStatisticsDHistory();
        int int7 = cMAESOptimizer0.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList8 = cMAESOptimizer0.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList9 = cMAESOptimizer0.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker1);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(realMatrixList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(doubleList8);
        org.junit.Assert.assertNotNull(doubleList9);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100);
        int int2 = cMAESOptimizer1.getEvaluations();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(doubleList3);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray26 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray39, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator66, true, pointValuePairConvergenceChecker71);
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator87 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker89 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray81, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator87, true, pointValuePairConvergenceChecker89);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray81);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker92 = cMAESOptimizer91.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray26, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator66, false, pointValuePairConvergenceChecker92);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10, doubleArray7, (int) '#', (double) (short) 100, false, (int) (byte) 10, 1, randomGenerator66, false);
        java.util.List<java.lang.Double> doubleList96 = cMAESOptimizer95.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType97 = cMAESOptimizer95.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker98 = cMAESOptimizer95.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray99 = cMAESOptimizer95.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator87);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker92);
        org.junit.Assert.assertNotNull(doubleList96);
        org.junit.Assert.assertNull(goalType97);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker98);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        double[] doubleArray7 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer8 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray7);
        java.util.List<java.lang.Double> doubleList9 = cMAESOptimizer8.getStatisticsFitnessHistory();
        int int10 = cMAESOptimizer8.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType11 = cMAESOptimizer8.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList12 = cMAESOptimizer8.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(goalType11);
        org.junit.Assert.assertNotNull(realMatrixList12);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer0 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        int int1 = cMAESOptimizer0.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType2 = cMAESOptimizer0.getGoalType();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer0.getStatisticsFitnessHistory();
        int int4 = cMAESOptimizer0.getEvaluations();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(goalType2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        double[] doubleArray5 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator24 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray18, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator24, true, pointValuePairConvergenceChecker26);
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray18, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator45, true, pointValuePairConvergenceChecker50);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray60);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = cMAESOptimizer70.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray5, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator45, false, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray5);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList74 = cMAESOptimizer73.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList75 = cMAESOptimizer73.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList76 = cMAESOptimizer73.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList77 = cMAESOptimizer73.getStatisticsFitnessHistory();
        java.lang.Class<?> wildcardClass78 = cMAESOptimizer73.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator24);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker71);
        org.junit.Assert.assertNotNull(realMatrixList74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(realMatrixList76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1);
        int int2 = cMAESOptimizer1.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList3 = cMAESOptimizer1.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.GoalType goalType4 = cMAESOptimizer1.getGoalType();
        int int5 = cMAESOptimizer1.getMaxEvaluations();
        int int6 = cMAESOptimizer1.getMaxEvaluations();
        java.lang.Class<?> wildcardClass7 = cMAESOptimizer1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(realMatrixList3);
        org.junit.Assert.assertNull(goalType4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        double[] doubleArray5 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray17, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator23, true, pointValuePairConvergenceChecker25);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray5, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator23, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray5);
        org.apache.commons.math3.random.RandomGenerator randomGenerator35 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray5, (int) (short) 100, (double) (byte) 1, true, (int) ' ', 0, randomGenerator35, true);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator23);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        double[] doubleArray5 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray17, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator23, true, pointValuePairConvergenceChecker25);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray5, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator23, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray5);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray5);
        org.apache.commons.math3.optimization.GoalType goalType31 = cMAESOptimizer30.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType32 = cMAESOptimizer30.getGoalType();
        int int33 = cMAESOptimizer30.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType34 = cMAESOptimizer30.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator23);
        org.junit.Assert.assertNull(goalType31);
        org.junit.Assert.assertNull(goalType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(goalType34);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker2 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer1.getStatisticsSigmaHistory();
        int int5 = cMAESOptimizer1.getEvaluations();
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        double[] doubleArray4 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer5 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray4);
        double[] doubleArray15 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator55 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker57 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer58 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray49, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator55, true, pointValuePairConvergenceChecker57);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer61 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray28, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator55, true, pointValuePairConvergenceChecker60);
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator76 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray70, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator76, true, pointValuePairConvergenceChecker78);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray70);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker81 = cMAESOptimizer80.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray15, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator55, false, pointValuePairConvergenceChecker81);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker85 = cMAESOptimizer84.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker86 = cMAESOptimizer84.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray4, 100, (double) (byte) 100, true, (int) '#', (int) '#', randomGenerator55, true, pointValuePairConvergenceChecker86);
        java.util.List<java.lang.Double> doubleList88 = cMAESOptimizer87.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator55);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator76);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker81);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker85);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker86);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        double[] doubleArray3 = new double[] { 0 };
        double[] doubleArray13 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator32 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray26, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator32, true, pointValuePairConvergenceChecker34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator53 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker55 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray47, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator53, true, pointValuePairConvergenceChecker55);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray26, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator53, true, pointValuePairConvergenceChecker58);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator74 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray68, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator74, true, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray13, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator53, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray3, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator53, true);
        org.apache.commons.math3.random.RandomGenerator randomGenerator88 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker91 = cMAESOptimizer90.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray3, (int) '4', 0.0d, true, (int) (byte) 1, (int) ' ', randomGenerator88, true, pointValuePairConvergenceChecker91);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker93 = cMAESOptimizer92.getConvergenceChecker();
        java.lang.Class<?> wildcardClass94 = pointValuePairConvergenceChecker93.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator32);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertNotNull(randomGenerator88);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker91);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        double[] doubleArray9 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator28 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker30 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer31 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray22, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator28, true, pointValuePairConvergenceChecker30);
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator49 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker51 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray43, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator49, true, pointValuePairConvergenceChecker51);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray22, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator49, true, pointValuePairConvergenceChecker54);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator70 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker72 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray64, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator70, true, pointValuePairConvergenceChecker72);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray64);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker75 = cMAESOptimizer74.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray9, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator49, false, pointValuePairConvergenceChecker75);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray9);
        org.apache.commons.math3.random.RandomGenerator randomGenerator83 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray9, 0, (-1.0d), true, (int) ' ', (int) 'a', randomGenerator83, true);
        org.apache.commons.math3.random.RandomGenerator randomGenerator91 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray9, (int) (short) 10, (double) 0L, false, (int) (short) 0, (int) '#', randomGenerator91, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray9);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray9);
        org.apache.commons.math3.optimization.GoalType goalType96 = cMAESOptimizer95.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList97 = cMAESOptimizer95.getStatisticsDHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray98 = cMAESOptimizer95.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator28);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator49);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator70);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker75);
        org.junit.Assert.assertNotNull(randomGenerator83);
        org.junit.Assert.assertNotNull(randomGenerator91);
        org.junit.Assert.assertNull(goalType96);
        org.junit.Assert.assertNotNull(realMatrixList97);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100);
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsSigmaHistory();
        int int3 = cMAESOptimizer1.getEvaluations();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer1.getConvergenceChecker();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction7 = null;
        org.apache.commons.math3.optimization.GoalType goalType8 = null;
        double[] doubleArray17 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator36 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker38 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer39 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray30, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator36, true, pointValuePairConvergenceChecker38);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator57 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker59 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer60 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray51, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator57, true, pointValuePairConvergenceChecker59);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker62 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer63 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray30, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator57, true, pointValuePairConvergenceChecker62);
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator78 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker80 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray72, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator78, true, pointValuePairConvergenceChecker80);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray72);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker83 = cMAESOptimizer82.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray17, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator57, false, pointValuePairConvergenceChecker83);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray17);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray17);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray17);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer88 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair89 = cMAESOptimizer1.optimize((int) (byte) 1, multivariateFunction7, goalType8, doubleArray17);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator36);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator57);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator78);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker83);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        double[] doubleArray9 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator15 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker17 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray9, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator15, true, pointValuePairConvergenceChecker17);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer19 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray9);
        double[] doubleArray26 = null;
        double[] doubleArray40 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer41 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator68 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray62, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator68, true, pointValuePairConvergenceChecker70);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray50, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator68, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray40, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator68, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer77.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer77.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray26, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator68, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray9, 10, (double) 10, true, (int) '4', 100, randomGenerator68, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray9);
        int int84 = cMAESOptimizer83.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray85 = cMAESOptimizer83.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator15);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator68);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        double[] doubleArray7 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer8 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray7);
        java.util.List<java.lang.Double> doubleList9 = cMAESOptimizer8.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList10 = cMAESOptimizer8.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList11 = cMAESOptimizer8.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(realMatrixList11);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        double[] doubleArray4 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer5 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray4);
        double[] doubleArray17 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator36 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker38 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer39 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray30, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator36, true, pointValuePairConvergenceChecker38);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator57 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker59 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer60 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray51, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator57, true, pointValuePairConvergenceChecker59);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker62 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer63 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray30, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator57, true, pointValuePairConvergenceChecker62);
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator78 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker80 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray72, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator78, true, pointValuePairConvergenceChecker80);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray72);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker83 = cMAESOptimizer82.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray17, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator57, false, pointValuePairConvergenceChecker83);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray17);
        org.apache.commons.math3.random.RandomGenerator randomGenerator91 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray17, 0, (-1.0d), true, (int) ' ', (int) 'a', randomGenerator91, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray4, (int) (short) 0, 100.0d, true, (-1), (int) '#', randomGenerator91, false);
        java.util.List<java.lang.Double> doubleList96 = cMAESOptimizer95.getStatisticsFitnessHistory();
        int int97 = cMAESOptimizer95.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList98 = cMAESOptimizer95.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList99 = cMAESOptimizer95.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator36);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator57);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator78);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker83);
        org.junit.Assert.assertNotNull(randomGenerator91);
        org.junit.Assert.assertNotNull(doubleList96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
        org.junit.Assert.assertNotNull(realMatrixList98);
        org.junit.Assert.assertNotNull(doubleList99);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList18 = cMAESOptimizer15.getStatisticsMeanHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList19 = cMAESOptimizer15.getStatisticsDHistory();
        int int20 = cMAESOptimizer15.getEvaluations();
        int int21 = cMAESOptimizer15.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray22 = cMAESOptimizer15.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(realMatrixList18);
        org.junit.Assert.assertNotNull(realMatrixList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer0 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker1 = cMAESOptimizer0.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker2 = cMAESOptimizer0.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer0.getStatisticsSigmaHistory();
        int int4 = cMAESOptimizer0.getEvaluations();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer0.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer0.getStatisticsSigmaHistory();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction8 = null;
        org.apache.commons.math3.optimization.GoalType goalType9 = null;
        double[] doubleArray21 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer22 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray21);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer23 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray21);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray21);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray21);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray21);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair27 = cMAESOptimizer0.optimize(30000, multivariateFunction8, goalType9, doubleArray21);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker1);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType43 = cMAESOptimizer40.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker44 = cMAESOptimizer40.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = cMAESOptimizer40.getConvergenceChecker();
        int int46 = cMAESOptimizer40.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList47 = cMAESOptimizer40.getStatisticsFitnessHistory();
        java.lang.Class<?> wildcardClass48 = cMAESOptimizer40.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(goalType43);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker44);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        double[] doubleArray7 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator25 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker27 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray19, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator25, true, pointValuePairConvergenceChecker27);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray7, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator25, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer31 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray7);
        double[] doubleArray38 = null;
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator57 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker59 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer60 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray51, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator57, true, pointValuePairConvergenceChecker59);
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator78 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker80 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray72, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator78, true, pointValuePairConvergenceChecker80);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker83 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray51, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator78, true, pointValuePairConvergenceChecker83);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker86 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray38, 10, 10.0d, true, (int) (short) 0, 0, randomGenerator78, true, pointValuePairConvergenceChecker86);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) (short) 10, 1.0d, true, (int) (short) 10, (int) '#', randomGenerator78, true);
        org.apache.commons.math3.random.RandomGenerator randomGenerator95 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer97 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray7, (int) '#', (double) 10.0f, false, (int) '4', (int) '#', randomGenerator95, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer98 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator25);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator57);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator78);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        double[] doubleArray9 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator15 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker17 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray9, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator15, true, pointValuePairConvergenceChecker17);
        double[] doubleArray28 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator47 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray41, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator47, true, pointValuePairConvergenceChecker49);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator68 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray62, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator68, true, pointValuePairConvergenceChecker70);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray41, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator68, true, pointValuePairConvergenceChecker73);
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator89 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker91 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray83, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator89, true, pointValuePairConvergenceChecker91);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray83);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker94 = cMAESOptimizer93.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray28, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator68, false, pointValuePairConvergenceChecker94);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer97 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray9, (int) ' ', (double) 100.0f, false, 0, (int) (short) 100, randomGenerator68, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer98 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray9);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer99 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10, doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator15);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator47);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator68);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator89);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker94);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        double[] doubleArray8 = new double[] { 0 };
        double[] doubleArray18 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator37 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray31, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator37, true, pointValuePairConvergenceChecker39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator58 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer61 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray52, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator58, true, pointValuePairConvergenceChecker60);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker63 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray31, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator58, true, pointValuePairConvergenceChecker63);
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator79 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker81 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray73, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator79, true, pointValuePairConvergenceChecker81);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray73);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker84 = cMAESOptimizer83.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray18, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator58, false, pointValuePairConvergenceChecker84);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray8, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator58, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer88 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray8);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray8);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray8);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray8);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100, doubleArray8);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator37);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator58);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator79);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker84);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        double[] doubleArray5 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray17, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator23, true, pointValuePairConvergenceChecker25);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray5, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator23, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray5);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray5);
        org.apache.commons.math3.optimization.GoalType goalType31 = cMAESOptimizer30.getGoalType();
        java.util.List<java.lang.Double> doubleList32 = cMAESOptimizer30.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType33 = cMAESOptimizer30.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator23);
        org.junit.Assert.assertNull(goalType31);
        org.junit.Assert.assertNotNull(doubleList32);
        org.junit.Assert.assertNull(goalType33);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        double[] doubleArray1 = null;
        double[] doubleArray15 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray15);
        double[] doubleArray25 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator43 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer46 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray37, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator43, true, pointValuePairConvergenceChecker45);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray25, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray15, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = cMAESOptimizer52.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = cMAESOptimizer52.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray1, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator43, false, pointValuePairConvergenceChecker54);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker56 = cMAESOptimizer55.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList57 = cMAESOptimizer55.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList58 = cMAESOptimizer55.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList59 = cMAESOptimizer55.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = cMAESOptimizer55.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList61 = cMAESOptimizer55.getStatisticsMeanHistory();
        java.lang.Class<?> wildcardClass62 = cMAESOptimizer55.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator43);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker53);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker54);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker56);
        org.junit.Assert.assertNotNull(doubleList57);
        org.junit.Assert.assertNotNull(doubleList58);
        org.junit.Assert.assertNotNull(realMatrixList59);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker60);
        org.junit.Assert.assertNotNull(realMatrixList61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        double[] doubleArray9 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer10 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray9);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer11 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray9);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer12 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray9);
        java.lang.Class<?> wildcardClass13 = doubleArray9.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray1);
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer2.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleList3);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        double[] doubleArray8 = new double[] { (-1.0f), 100L, 100.0d, '4', 1, (byte) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer9 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray8);
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator28 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker30 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer31 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray22, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator28, true, pointValuePairConvergenceChecker30);
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator49 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker51 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray43, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator49, true, pointValuePairConvergenceChecker51);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray22, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator49, true, pointValuePairConvergenceChecker54);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer57 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray8, (int) (byte) 100, (double) (byte) 10, true, (int) 'a', 10, randomGenerator49, false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 100.0, 52.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator28);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator49);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        double[] doubleArray4 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator22 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker24 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray16, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator22, true, pointValuePairConvergenceChecker24);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray4, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator22, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray4);
        int int29 = cMAESOptimizer28.getEvaluations();
        int int30 = cMAESOptimizer28.getEvaluations();
        int int31 = cMAESOptimizer28.getMaxEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray32 = cMAESOptimizer28.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator22);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        int int20 = cMAESOptimizer15.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker21 = cMAESOptimizer15.getConvergenceChecker();
        java.lang.Class<?> wildcardClass22 = cMAESOptimizer15.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        double[] doubleArray6 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer7 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray6);
        double[] doubleArray14 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator20 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer22 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray14, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator20, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray6, (int) (short) 1, (double) ' ', true, (int) 'a', 1, randomGenerator20, true);
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator43 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer46 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray37, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator43, true, pointValuePairConvergenceChecker45);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator64 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker66 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer67 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray58, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator64, true, pointValuePairConvergenceChecker66);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker69 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray37, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator64, true, pointValuePairConvergenceChecker69);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker74 = cMAESOptimizer73.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10, doubleArray6, (int) (byte) 10, (double) (short) -1, true, 100, 10, randomGenerator64, false, pointValuePairConvergenceChecker74);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10, doubleArray6);
        java.lang.Class<?> wildcardClass77 = cMAESOptimizer76.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(randomGenerator20);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator43);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator64);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker74);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        double[] doubleArray7 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator26 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker28 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray20, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator26, true, pointValuePairConvergenceChecker28);
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator47 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray41, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator47, true, pointValuePairConvergenceChecker49);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker52 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer53 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray20, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator47, true, pointValuePairConvergenceChecker52);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator68 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray62, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator68, true, pointValuePairConvergenceChecker70);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray62);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = cMAESOptimizer72.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray7, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator47, false, pointValuePairConvergenceChecker73);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.random.RandomGenerator randomGenerator81 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray7, 0, (-1.0d), true, (int) ' ', (int) 'a', randomGenerator81, true);
        org.apache.commons.math3.random.RandomGenerator randomGenerator89 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray7, (int) (short) 10, (double) 0L, false, (int) (short) 0, (int) '#', randomGenerator89, false);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList92 = cMAESOptimizer91.getStatisticsDHistory();
        java.lang.Class<?> wildcardClass93 = cMAESOptimizer91.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator26);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator47);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator68);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker73);
        org.junit.Assert.assertNotNull(randomGenerator81);
        org.junit.Assert.assertNotNull(randomGenerator89);
        org.junit.Assert.assertNotNull(realMatrixList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList17 = cMAESOptimizer15.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList18 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType19 = cMAESOptimizer15.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList20 = cMAESOptimizer15.getStatisticsMeanHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray21 = cMAESOptimizer15.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(realMatrixList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNull(goalType19);
        org.junit.Assert.assertNotNull(realMatrixList20);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        double[] doubleArray2 = new double[] { 0 };
        double[] doubleArray12 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator31 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker33 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer34 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray25, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator31, true, pointValuePairConvergenceChecker33);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator52 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray46, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator52, true, pointValuePairConvergenceChecker54);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker57 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer58 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray25, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator52, true, pointValuePairConvergenceChecker57);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator73 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker75 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray67, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator73, true, pointValuePairConvergenceChecker75);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray67);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer77.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray12, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator52, false, pointValuePairConvergenceChecker78);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray2, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator52, true);
        int int82 = cMAESOptimizer81.getEvaluations();
        java.util.List<java.lang.Double> doubleList83 = cMAESOptimizer81.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker84 = cMAESOptimizer81.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList85 = cMAESOptimizer81.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator31);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator52);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator73);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker84);
        org.junit.Assert.assertNotNull(realMatrixList85);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        double[] doubleArray3 = new double[] { 0 };
        double[] doubleArray13 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator32 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray26, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator32, true, pointValuePairConvergenceChecker34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator53 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker55 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray47, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator53, true, pointValuePairConvergenceChecker55);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray26, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator53, true, pointValuePairConvergenceChecker58);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator74 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray68, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator74, true, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray13, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator53, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray3, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator53, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray3);
        java.util.List<java.lang.Double> doubleList84 = cMAESOptimizer83.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType85 = cMAESOptimizer83.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType86 = cMAESOptimizer83.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType87 = cMAESOptimizer83.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker88 = cMAESOptimizer83.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator32);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNull(goalType85);
        org.junit.Assert.assertNull(goalType86);
        org.junit.Assert.assertNull(goalType87);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker88);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        double[] doubleArray8 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator14 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker16 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray8, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator14, true, pointValuePairConvergenceChecker16);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray8);
        double[] doubleArray25 = null;
        double[] doubleArray39 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray39);
        double[] doubleArray49 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator67 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker69 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray61, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator67, true, pointValuePairConvergenceChecker69);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray49, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator67, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray39, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator67, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker77 = cMAESOptimizer76.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer76.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray25, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator67, false, pointValuePairConvergenceChecker78);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray8, (int) ' ', (double) ' ', false, (int) (byte) 10, (int) (short) 1, randomGenerator67, false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator14);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator67);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker77);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        double[] doubleArray5 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray17, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator23, true, pointValuePairConvergenceChecker25);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray5, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator23, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray5);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray5);
        org.apache.commons.math3.optimization.GoalType goalType31 = cMAESOptimizer30.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker32 = cMAESOptimizer30.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator23);
        org.junit.Assert.assertNull(goalType31);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker32);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        double[] doubleArray5 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator24 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray18, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator24, true, pointValuePairConvergenceChecker26);
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray18, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator45, true, pointValuePairConvergenceChecker50);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray60);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = cMAESOptimizer70.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray5, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator45, false, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100, doubleArray5);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray74 = cMAESOptimizer73.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator24);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker71);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer1.getStatisticsDHistory();
        int int3 = cMAESOptimizer1.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType6 = cMAESOptimizer1.getGoalType();
        int int7 = cMAESOptimizer1.getEvaluations();
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNull(goalType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        int int43 = cMAESOptimizer40.getEvaluations();
        int int44 = cMAESOptimizer40.getEvaluations();
        int int45 = cMAESOptimizer40.getMaxEvaluations();
        java.lang.Class<?> wildcardClass46 = cMAESOptimizer40.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        double[] doubleArray5 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator24 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray18, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator24, true, pointValuePairConvergenceChecker26);
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray18, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator45, true, pointValuePairConvergenceChecker50);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray60);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = cMAESOptimizer70.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray5, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator45, false, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray5);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList74 = cMAESOptimizer73.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList75 = cMAESOptimizer73.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = cMAESOptimizer73.getConvergenceChecker();
        int int77 = cMAESOptimizer73.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer73.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator24);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker71);
        org.junit.Assert.assertNotNull(realMatrixList74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        int int43 = cMAESOptimizer40.getEvaluations();
        java.util.List<java.lang.Double> doubleList44 = cMAESOptimizer40.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType45 = cMAESOptimizer40.getGoalType();
        java.util.List<java.lang.Double> doubleList46 = cMAESOptimizer40.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType47 = cMAESOptimizer40.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList48 = cMAESOptimizer40.getStatisticsMeanHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList49 = cMAESOptimizer40.getStatisticsMeanHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray50 = cMAESOptimizer40.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleList44);
        org.junit.Assert.assertNull(goalType45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNull(goalType47);
        org.junit.Assert.assertNotNull(realMatrixList48);
        org.junit.Assert.assertNotNull(realMatrixList49);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        double[] doubleArray3 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer4 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray3);
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer4.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList6 = cMAESOptimizer4.getStatisticsDHistory();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction8 = null;
        org.apache.commons.math3.optimization.GoalType goalType9 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator26 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker28 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray20, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator26, true, pointValuePairConvergenceChecker28);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray20);
        double[] doubleArray37 = null;
        double[] doubleArray51 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray51);
        double[] doubleArray61 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator79 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker81 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray73, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator79, true, pointValuePairConvergenceChecker81);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray61, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator79, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray51, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator79, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer88 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker89 = cMAESOptimizer88.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker90 = cMAESOptimizer88.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray37, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator79, false, pointValuePairConvergenceChecker90);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray20, 10, (double) 10, true, (int) '4', 100, randomGenerator79, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray20);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair96 = cMAESOptimizer4.optimize((-1), multivariateFunction8, goalType9, doubleArray20);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(realMatrixList6);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator26);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator79);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker89);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker90);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1);
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType4 = cMAESOptimizer1.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList5 = cMAESOptimizer1.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertNull(goalType4);
        org.junit.Assert.assertNotNull(realMatrixList5);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        double[] doubleArray8 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator14 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker16 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray8, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator14, true, pointValuePairConvergenceChecker16);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray8);
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator38 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker40 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer41 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray32, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator38, true, pointValuePairConvergenceChecker40);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer42 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray32);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator61 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker63 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray55, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator61, true, pointValuePairConvergenceChecker63);
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator82 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker84 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray76, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator82, true, pointValuePairConvergenceChecker84);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker87 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer88 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray55, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator82, true, pointValuePairConvergenceChecker87);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray32, 0, (double) 0L, true, (int) '4', (int) (short) 0, randomGenerator82, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray8, 100, (double) 10L, true, 0, (int) (byte) 100, randomGenerator82, false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator14);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator38);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator61);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator82);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        double[] doubleArray11 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer12 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer13 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer14 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray11);
        double[] doubleArray21 = null;
        double[] doubleArray35 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer36 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray35);
        double[] doubleArray45 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator63 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker65 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer66 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray57, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator63, true, pointValuePairConvergenceChecker65);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer68 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray45, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator63, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray35, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator63, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = cMAESOptimizer72.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray21, (int) 'a', (double) (byte) 100, false, (int) 'a', 10, randomGenerator63, true, pointValuePairConvergenceChecker73);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList78 = cMAESOptimizer77.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer77.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray11, 100, (double) (byte) 100, true, 0, (int) (short) 0, randomGenerator63, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator63);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker73);
        org.junit.Assert.assertNotNull(realMatrixList78);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        double[] doubleArray8 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator27 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker29 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray21, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator27, true, pointValuePairConvergenceChecker29);
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator48 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray42, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator48, true, pointValuePairConvergenceChecker50);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer54 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray21, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator48, true, pointValuePairConvergenceChecker53);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator69 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray63, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator69, true, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray63);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker74 = cMAESOptimizer73.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray8, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator48, false, pointValuePairConvergenceChecker74);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray8);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray8);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray8);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray8);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray80 = cMAESOptimizer79.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator27);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator48);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator69);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker74);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        double[] doubleArray5 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray17, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator23, true, pointValuePairConvergenceChecker25);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray5, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator23, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray5);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray5);
        org.apache.commons.math3.optimization.GoalType goalType31 = cMAESOptimizer30.getGoalType();
        int int32 = cMAESOptimizer30.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType33 = cMAESOptimizer30.getGoalType();
        int int34 = cMAESOptimizer30.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator23);
        org.junit.Assert.assertNull(goalType31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(goalType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        double[] doubleArray3 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator21 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker23 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray15, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator21, true, pointValuePairConvergenceChecker23);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray3, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator21, true);
        java.util.List<java.lang.Double> doubleList27 = cMAESOptimizer26.getStatisticsFitnessHistory();
        int int28 = cMAESOptimizer26.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker29 = cMAESOptimizer26.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray30 = cMAESOptimizer26.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator21);
        org.junit.Assert.assertNotNull(doubleList27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker29);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        double[] doubleArray1 = null;
        double[] doubleArray15 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray15);
        double[] doubleArray25 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator43 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer46 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray37, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator43, true, pointValuePairConvergenceChecker45);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray25, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray15, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = cMAESOptimizer52.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = cMAESOptimizer52.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray1, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator43, false, pointValuePairConvergenceChecker54);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker56 = cMAESOptimizer55.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList57 = cMAESOptimizer55.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList58 = cMAESOptimizer55.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList59 = cMAESOptimizer55.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = cMAESOptimizer55.getConvergenceChecker();
        int int61 = cMAESOptimizer55.getEvaluations();
        java.lang.Class<?> wildcardClass62 = cMAESOptimizer55.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator43);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker53);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker54);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker56);
        org.junit.Assert.assertNotNull(doubleList57);
        org.junit.Assert.assertNotNull(doubleList58);
        org.junit.Assert.assertNotNull(realMatrixList59);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        double[] doubleArray3 = new double[] { 0 };
        double[] doubleArray13 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator32 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray26, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator32, true, pointValuePairConvergenceChecker34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator53 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker55 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray47, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator53, true, pointValuePairConvergenceChecker55);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray26, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator53, true, pointValuePairConvergenceChecker58);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator74 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray68, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator74, true, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray13, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator53, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray3, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator53, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray3);
        java.util.List<java.lang.Double> doubleList84 = cMAESOptimizer83.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator32);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        org.apache.commons.math3.optimization.GoalType goalType2 = cMAESOptimizer1.getGoalType();
        int int3 = cMAESOptimizer1.getMaxEvaluations();
        int int4 = cMAESOptimizer1.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer1.getStatisticsSigmaHistory();
        int int6 = cMAESOptimizer1.getMaxEvaluations();
        org.junit.Assert.assertNull(goalType2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        double[] doubleArray2 = new double[] { 0 };
        double[] doubleArray12 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator31 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker33 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer34 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray25, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator31, true, pointValuePairConvergenceChecker33);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator52 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray46, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator52, true, pointValuePairConvergenceChecker54);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker57 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer58 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray25, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator52, true, pointValuePairConvergenceChecker57);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator73 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker75 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray67, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator73, true, pointValuePairConvergenceChecker75);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray67);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer77.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray12, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator52, false, pointValuePairConvergenceChecker78);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray2, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator52, true);
        int int82 = cMAESOptimizer81.getEvaluations();
        int int83 = cMAESOptimizer81.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType84 = cMAESOptimizer81.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker85 = cMAESOptimizer81.getConvergenceChecker();
        int int86 = cMAESOptimizer81.getEvaluations();
        int int87 = cMAESOptimizer81.getMaxEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray88 = cMAESOptimizer81.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator31);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator52);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator73);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNull(goalType84);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100);
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsSigmaHistory();
        int int3 = cMAESOptimizer1.getEvaluations();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList6 = cMAESOptimizer1.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(realMatrixList6);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        double[] doubleArray12 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer13 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray12);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer14 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray12);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray12);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray12);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray12);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray12);
        org.apache.commons.math3.optimization.GoalType goalType19 = cMAESOptimizer18.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNull(goalType19);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer15.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList21 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList22 = cMAESOptimizer15.getStatisticsMeanHistory();
        int int23 = cMAESOptimizer15.getMaxEvaluations();
        int int24 = cMAESOptimizer15.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray25 = cMAESOptimizer15.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(realMatrixList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        double[] doubleArray6 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator24 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray18, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator24, true, pointValuePairConvergenceChecker26);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray6, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator24, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray6);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer31 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray6);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer32 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray6);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker33 = cMAESOptimizer32.getConvergenceChecker();
        int int34 = cMAESOptimizer32.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator24);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray1);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker3 = cMAESOptimizer2.getConvergenceChecker();
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker3);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        double[] doubleArray5 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer6 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5);
        double[] doubleArray13 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator19 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer21 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray13, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator19, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer23 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray5, (int) (short) 1, (double) ' ', true, (int) 'a', 1, randomGenerator19, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray5);
        java.util.List<java.lang.Double> doubleList25 = cMAESOptimizer24.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList26 = cMAESOptimizer24.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList27 = cMAESOptimizer24.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(randomGenerator19);
        org.junit.Assert.assertNotNull(doubleList25);
        org.junit.Assert.assertNotNull(doubleList26);
        org.junit.Assert.assertNotNull(doubleList27);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        double[] doubleArray7 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator26 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker28 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray20, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator26, true, pointValuePairConvergenceChecker28);
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator47 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray41, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator47, true, pointValuePairConvergenceChecker49);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker52 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer53 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray20, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator47, true, pointValuePairConvergenceChecker52);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator68 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray62, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator68, true, pointValuePairConvergenceChecker70);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray62);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = cMAESOptimizer72.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray7, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator47, false, pointValuePairConvergenceChecker73);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.random.RandomGenerator randomGenerator81 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray7, 0, (-1.0d), true, (int) ' ', (int) 'a', randomGenerator81, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray7);
        org.apache.commons.math3.optimization.GoalType goalType85 = cMAESOptimizer84.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList86 = cMAESOptimizer84.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator26);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator47);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator68);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker73);
        org.junit.Assert.assertNotNull(randomGenerator81);
        org.junit.Assert.assertNull(goalType85);
        org.junit.Assert.assertNotNull(realMatrixList86);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray1);
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer2.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList4 = cMAESOptimizer2.getStatisticsDHistory();
        int int5 = cMAESOptimizer2.getEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction7 = null;
        org.apache.commons.math3.optimization.GoalType goalType8 = null;
        double[] doubleArray18 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator37 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray31, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator37, true, pointValuePairConvergenceChecker39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator58 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer61 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray52, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator58, true, pointValuePairConvergenceChecker60);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker63 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray31, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator58, true, pointValuePairConvergenceChecker63);
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator79 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker81 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray73, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator79, true, pointValuePairConvergenceChecker81);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray73);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker84 = cMAESOptimizer83.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray18, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator58, false, pointValuePairConvergenceChecker84);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray18);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray18);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer88 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray18);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray18);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair91 = cMAESOptimizer2.optimize((int) ' ', multivariateFunction7, goalType8, doubleArray18);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertNotNull(realMatrixList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator37);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator58);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator79);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker84);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        double[] doubleArray5 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer6 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer7 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray5);
        double[] doubleArray14 = null;
        double[] doubleArray28 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray28);
        double[] doubleArray38 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator56 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray50, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator56, true, pointValuePairConvergenceChecker58);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer61 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray38, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator56, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer63 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray28, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator56, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer65 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker66 = cMAESOptimizer65.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer67 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray14, (int) 'a', (double) (byte) 100, false, (int) 'a', 10, randomGenerator56, true, pointValuePairConvergenceChecker66);
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator82 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker84 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray76, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator82, true, pointValuePairConvergenceChecker84);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray76);
        org.apache.commons.math3.optimization.GoalType goalType87 = cMAESOptimizer86.getGoalType();
        int int88 = cMAESOptimizer86.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker89 = cMAESOptimizer86.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray5, 1, (double) 'a', false, 0, 0, randomGenerator56, false, pointValuePairConvergenceChecker89);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction92 = null;
        org.apache.commons.math3.optimization.GoalType goalType93 = null;
        double[] doubleArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair95 = cMAESOptimizer90.optimize(0, multivariateFunction92, goalType93, doubleArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator56);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker66);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator82);
        org.junit.Assert.assertNull(goalType87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker89);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.optimization.GoalType goalType18 = cMAESOptimizer17.getGoalType();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer17.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList20 = cMAESOptimizer17.getStatisticsDHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray21 = cMAESOptimizer17.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNull(goalType18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(realMatrixList20);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        int int43 = cMAESOptimizer40.getEvaluations();
        java.util.List<java.lang.Double> doubleList44 = cMAESOptimizer40.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType45 = cMAESOptimizer40.getGoalType();
        java.util.List<java.lang.Double> doubleList46 = cMAESOptimizer40.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType47 = cMAESOptimizer40.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList48 = cMAESOptimizer40.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList49 = cMAESOptimizer40.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleList44);
        org.junit.Assert.assertNull(goalType45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNull(goalType47);
        org.junit.Assert.assertNotNull(realMatrixList48);
        org.junit.Assert.assertNotNull(doubleList49);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList17 = cMAESOptimizer15.getStatisticsMeanHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList18 = cMAESOptimizer15.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer15.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(realMatrixList17);
        org.junit.Assert.assertNotNull(realMatrixList18);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker19);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        double[] doubleArray10 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator16 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer19 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray10, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator16, true, pointValuePairConvergenceChecker18);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer20 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray10);
        double[] doubleArray27 = null;
        double[] doubleArray41 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer42 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray41);
        double[] doubleArray51 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator69 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray63, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator69, true, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray51, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator69, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray41, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator69, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker80 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray27, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator69, false, pointValuePairConvergenceChecker80);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray10, 10, (double) 10, true, (int) '4', 100, randomGenerator69, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray10);
        java.util.List<java.lang.Double> doubleList86 = cMAESOptimizer85.getStatisticsFitnessHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray87 = cMAESOptimizer85.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator16);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator69);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker80);
        org.junit.Assert.assertNotNull(doubleList86);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType43 = cMAESOptimizer40.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker44 = cMAESOptimizer40.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList45 = cMAESOptimizer40.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList46 = cMAESOptimizer40.getStatisticsFitnessHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray47 = cMAESOptimizer40.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(goalType43);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker44);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNotNull(doubleList46);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        double[] doubleArray3 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer4 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray3);
        int int5 = cMAESOptimizer4.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList6 = cMAESOptimizer4.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList7 = cMAESOptimizer4.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList8 = cMAESOptimizer4.getStatisticsFitnessHistory();
        java.lang.Class<?> wildcardClass9 = doubleList8.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(realMatrixList6);
        org.junit.Assert.assertNotNull(doubleList7);
        org.junit.Assert.assertNotNull(doubleList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        int int2 = cMAESOptimizer1.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(goalType3);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0);
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsFitnessHistory();
        int int3 = cMAESOptimizer1.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer1.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList5 = cMAESOptimizer1.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(realMatrixList5);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        double[] doubleArray9 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator15 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker17 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray9, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator15, true, pointValuePairConvergenceChecker17);
        org.apache.commons.math3.random.RandomGenerator randomGenerator24 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray9, 100, (double) (byte) 10, false, (int) (byte) 0, (int) (byte) 10, randomGenerator24, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray9);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator15);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer15.getConvergenceChecker();
        int int21 = cMAESOptimizer15.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        double[] doubleArray7 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer8 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray7);
        java.util.List<java.lang.Double> doubleList9 = cMAESOptimizer8.getStatisticsFitnessHistory();
        int int10 = cMAESOptimizer8.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList11 = cMAESOptimizer8.getStatisticsDHistory();
        org.apache.commons.math3.optimization.GoalType goalType12 = cMAESOptimizer8.getGoalType();
        java.lang.Class<?> wildcardClass13 = cMAESOptimizer8.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(realMatrixList11);
        org.junit.Assert.assertNull(goalType12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        int int43 = cMAESOptimizer40.getEvaluations();
        java.util.List<java.lang.Double> doubleList44 = cMAESOptimizer40.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleList44);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        double[] doubleArray4 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer5 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray4);
        double[] doubleArray17 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator36 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker38 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer39 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray30, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator36, true, pointValuePairConvergenceChecker38);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator57 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker59 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer60 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray51, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator57, true, pointValuePairConvergenceChecker59);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker62 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer63 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray30, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator57, true, pointValuePairConvergenceChecker62);
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator78 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker80 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray72, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator78, true, pointValuePairConvergenceChecker80);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray72);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker83 = cMAESOptimizer82.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray17, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator57, false, pointValuePairConvergenceChecker83);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray17);
        org.apache.commons.math3.random.RandomGenerator randomGenerator91 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray17, 0, (-1.0d), true, (int) ' ', (int) 'a', randomGenerator91, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray4, (int) (short) 0, 100.0d, true, (-1), (int) '#', randomGenerator91, false);
        int int96 = cMAESOptimizer95.getEvaluations();
        java.util.List<java.lang.Double> doubleList97 = cMAESOptimizer95.getStatisticsFitnessHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray98 = cMAESOptimizer95.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator36);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator57);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator78);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker83);
        org.junit.Assert.assertNotNull(randomGenerator91);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertNotNull(doubleList97);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        int int43 = cMAESOptimizer40.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList44 = cMAESOptimizer40.getStatisticsDHistory();
        org.apache.commons.math3.optimization.GoalType goalType45 = cMAESOptimizer40.getGoalType();
        java.util.List<java.lang.Double> doubleList46 = cMAESOptimizer40.getStatisticsFitnessHistory();
        int int47 = cMAESOptimizer40.getEvaluations();
        int int48 = cMAESOptimizer40.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(realMatrixList44);
        org.junit.Assert.assertNull(goalType45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker42 = cMAESOptimizer40.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList43 = cMAESOptimizer40.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker44 = cMAESOptimizer40.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList45 = cMAESOptimizer40.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker42);
        org.junit.Assert.assertNotNull(doubleList43);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker44);
        org.junit.Assert.assertNotNull(realMatrixList45);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        double[] doubleArray1 = new double[] {};
        double[] doubleArray12 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer13 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray12);
        org.apache.commons.math3.random.RandomGenerator randomGenerator19 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer21 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray12, (int) (byte) 100, (double) 0.0f, true, (int) (byte) -1, (int) 'a', randomGenerator19, false);
        double[] doubleArray28 = null;
        double[] doubleArray42 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer43 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator70 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker72 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray64, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator70, true, pointValuePairConvergenceChecker72);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray52, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator70, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray42, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator70, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker80 = cMAESOptimizer79.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray28, (int) 'a', (double) (byte) 100, false, (int) 'a', 10, randomGenerator70, true, pointValuePairConvergenceChecker80);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray12, 0, (double) (-1.0f), true, (int) (byte) 10, (int) (byte) 0, randomGenerator70, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray1, 1, (double) (-1.0f), false, (int) (short) 100, (int) '4', randomGenerator70, true);
        java.util.List<java.lang.Double> doubleList86 = cMAESOptimizer85.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList87 = cMAESOptimizer85.getStatisticsSigmaHistory();
        int int88 = cMAESOptimizer85.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator70);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker80);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        double[] doubleArray1 = new double[] {};
        double[] doubleArray12 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer13 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray12);
        org.apache.commons.math3.random.RandomGenerator randomGenerator19 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer21 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray12, (int) (byte) 100, (double) 0.0f, true, (int) (byte) -1, (int) 'a', randomGenerator19, false);
        double[] doubleArray28 = null;
        double[] doubleArray42 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer43 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator70 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker72 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray64, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator70, true, pointValuePairConvergenceChecker72);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray52, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator70, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray42, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator70, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker80 = cMAESOptimizer79.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray28, (int) 'a', (double) (byte) 100, false, (int) 'a', 10, randomGenerator70, true, pointValuePairConvergenceChecker80);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray12, 0, (double) (-1.0f), true, (int) (byte) 10, (int) (byte) 0, randomGenerator70, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray1, 1, (double) (-1.0f), false, (int) (short) 100, (int) '4', randomGenerator70, true);
        java.util.List<java.lang.Double> doubleList86 = cMAESOptimizer85.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType87 = cMAESOptimizer85.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator70);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker80);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNull(goalType87);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        double[] doubleArray11 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer12 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer13 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer14 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray11);
        double[] doubleArray25 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator43 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer46 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray37, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator43, true, pointValuePairConvergenceChecker45);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray25, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer49 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray25);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator67 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker69 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray61, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator67, true, pointValuePairConvergenceChecker69);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray25, (-1), (double) (-1L), false, (int) (byte) 1, 0, randomGenerator67, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray11, 0, (double) (short) 10, false, (int) (byte) -1, 0, randomGenerator67, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray11);
        java.util.List<java.lang.Double> doubleList76 = cMAESOptimizer75.getStatisticsSigmaHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray77 = cMAESOptimizer75.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator43);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator67);
        org.junit.Assert.assertNotNull(doubleList76);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        double[] doubleArray3 = new double[] { 0 };
        double[] doubleArray13 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator32 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray26, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator32, true, pointValuePairConvergenceChecker34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator53 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker55 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray47, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator53, true, pointValuePairConvergenceChecker55);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray26, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator53, true, pointValuePairConvergenceChecker58);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator74 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray68, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator74, true, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray13, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator53, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray3, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator53, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray3);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList84 = cMAESOptimizer83.getStatisticsDHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList85 = cMAESOptimizer83.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList86 = cMAESOptimizer83.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList87 = cMAESOptimizer83.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker88 = cMAESOptimizer83.getConvergenceChecker();
        int int89 = cMAESOptimizer83.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator32);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertNotNull(realMatrixList84);
        org.junit.Assert.assertNotNull(realMatrixList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(realMatrixList87);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100);
        org.apache.commons.math3.optimization.GoalType goalType2 = cMAESOptimizer1.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList4 = cMAESOptimizer1.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.junit.Assert.assertNull(goalType2);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertNotNull(realMatrixList4);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        double[] doubleArray1 = null;
        double[] doubleArray15 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray15);
        double[] doubleArray25 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator43 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer46 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray37, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator43, true, pointValuePairConvergenceChecker45);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray25, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray15, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = cMAESOptimizer52.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = cMAESOptimizer52.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray1, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator43, false, pointValuePairConvergenceChecker54);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker56 = cMAESOptimizer55.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList57 = cMAESOptimizer55.getStatisticsFitnessHistory();
        int int58 = cMAESOptimizer55.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker59 = cMAESOptimizer55.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator43);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker53);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker54);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker56);
        org.junit.Assert.assertNotNull(doubleList57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker59);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        double[] doubleArray11 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer12 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer13 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer14 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray11);
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer16.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleList17);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        int int20 = cMAESOptimizer15.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker21 = cMAESOptimizer15.getConvergenceChecker();
        int int22 = cMAESOptimizer15.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType23 = cMAESOptimizer15.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(goalType23);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        double[] doubleArray7 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer8 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray7);
        java.util.List<java.lang.Double> doubleList9 = cMAESOptimizer8.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList10 = cMAESOptimizer8.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList11 = cMAESOptimizer8.getStatisticsSigmaHistory();
        int int12 = cMAESOptimizer8.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList13 = cMAESOptimizer8.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(realMatrixList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(realMatrixList13);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        double[] doubleArray1 = null;
        double[] doubleArray15 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray15);
        double[] doubleArray25 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator43 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer46 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray37, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator43, true, pointValuePairConvergenceChecker45);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray25, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray15, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = cMAESOptimizer52.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = cMAESOptimizer52.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray1, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator43, false, pointValuePairConvergenceChecker54);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker56 = cMAESOptimizer55.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList57 = cMAESOptimizer55.getStatisticsFitnessHistory();
        int int58 = cMAESOptimizer55.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker59 = cMAESOptimizer55.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList60 = cMAESOptimizer55.getStatisticsMeanHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList61 = cMAESOptimizer55.getStatisticsDHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList62 = cMAESOptimizer55.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator43);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker53);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker54);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker56);
        org.junit.Assert.assertNotNull(doubleList57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker59);
        org.junit.Assert.assertNotNull(realMatrixList60);
        org.junit.Assert.assertNotNull(realMatrixList61);
        org.junit.Assert.assertNotNull(realMatrixList62);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        double[] doubleArray2 = new double[] { 0 };
        double[] doubleArray12 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator31 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker33 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer34 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray25, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator31, true, pointValuePairConvergenceChecker33);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator52 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray46, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator52, true, pointValuePairConvergenceChecker54);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker57 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer58 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray25, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator52, true, pointValuePairConvergenceChecker57);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator73 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker75 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray67, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator73, true, pointValuePairConvergenceChecker75);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray67);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer77.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray12, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator52, false, pointValuePairConvergenceChecker78);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray2, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator52, true);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList82 = cMAESOptimizer81.getStatisticsDHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList83 = cMAESOptimizer81.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker84 = cMAESOptimizer81.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker85 = cMAESOptimizer81.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator31);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator52);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator73);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
        org.junit.Assert.assertNotNull(realMatrixList82);
        org.junit.Assert.assertNotNull(realMatrixList83);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker84);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker85);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker2 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList3 = cMAESOptimizer1.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer1.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType5 = cMAESOptimizer1.getGoalType();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer1.getStatisticsFitnessHistory();
        int int7 = cMAESOptimizer1.getEvaluations();
        java.util.List<java.lang.Double> doubleList8 = cMAESOptimizer1.getStatisticsSigmaHistory();
        int int9 = cMAESOptimizer1.getEvaluations();
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker2);
        org.junit.Assert.assertNotNull(realMatrixList3);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNull(goalType5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(doubleList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        double[] doubleArray5 = new double[] { (byte) 0, (-1.0f), 10.0f, '4' };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer6 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray5);
        int int7 = cMAESOptimizer6.getEvaluations();
        java.lang.Class<?> wildcardClass8 = cMAESOptimizer6.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, -1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType18 = cMAESOptimizer15.getGoalType();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.lang.Class<?> wildcardClass20 = doubleList19.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(goalType18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100);
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList4 = cMAESOptimizer1.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer1.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker6 = cMAESOptimizer1.getConvergenceChecker();
        java.lang.Class<?> wildcardClass7 = cMAESOptimizer1.getClass();
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertNotNull(realMatrixList4);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#');
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer1.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList6 = cMAESOptimizer1.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList7 = cMAESOptimizer1.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(realMatrixList6);
        org.junit.Assert.assertNotNull(doubleList7);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        double[] doubleArray5 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer6 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5);
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer14 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5, (int) (byte) 100, (double) 0.0f, true, (int) (byte) -1, (int) 'a', randomGenerator12, false);
        double[] doubleArray21 = null;
        double[] doubleArray35 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer36 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray35);
        double[] doubleArray45 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator63 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker65 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer66 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray57, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator63, true, pointValuePairConvergenceChecker65);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer68 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray45, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator63, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray35, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator63, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = cMAESOptimizer72.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray21, (int) 'a', (double) (byte) 100, false, (int) 'a', 10, randomGenerator63, true, pointValuePairConvergenceChecker73);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5, 0, (double) (-1.0f), true, (int) (byte) 10, (int) (byte) 0, randomGenerator63, true);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList77 = cMAESOptimizer76.getStatisticsDHistory();
        org.apache.commons.math3.optimization.GoalType goalType78 = cMAESOptimizer76.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList79 = cMAESOptimizer76.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList80 = cMAESOptimizer76.getStatisticsSigmaHistory();
        int int81 = cMAESOptimizer76.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator63);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker73);
        org.junit.Assert.assertNotNull(realMatrixList77);
        org.junit.Assert.assertNull(goalType78);
        org.junit.Assert.assertNotNull(realMatrixList79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        double[] doubleArray1 = null;
        double[] doubleArray15 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray15);
        double[] doubleArray25 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator43 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer46 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray37, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator43, true, pointValuePairConvergenceChecker45);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray25, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray15, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = cMAESOptimizer52.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = cMAESOptimizer52.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray1, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator43, false, pointValuePairConvergenceChecker54);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker56 = cMAESOptimizer55.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList57 = cMAESOptimizer55.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList58 = cMAESOptimizer55.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList59 = cMAESOptimizer55.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = cMAESOptimizer55.getConvergenceChecker();
        int int61 = cMAESOptimizer55.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray62 = cMAESOptimizer55.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator43);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker53);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker54);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker56);
        org.junit.Assert.assertNotNull(doubleList57);
        org.junit.Assert.assertNotNull(doubleList58);
        org.junit.Assert.assertNotNull(realMatrixList59);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        double[] doubleArray9 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator28 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker30 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer31 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray22, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator28, true, pointValuePairConvergenceChecker30);
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator49 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker51 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray43, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator49, true, pointValuePairConvergenceChecker51);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray22, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator49, true, pointValuePairConvergenceChecker54);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator70 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker72 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray64, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator70, true, pointValuePairConvergenceChecker72);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray64);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker75 = cMAESOptimizer74.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray9, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator49, false, pointValuePairConvergenceChecker75);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray9);
        org.apache.commons.math3.random.RandomGenerator randomGenerator83 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray9, 0, (-1.0d), true, (int) ' ', (int) 'a', randomGenerator83, true);
        org.apache.commons.math3.random.RandomGenerator randomGenerator91 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray9, (int) (short) 10, (double) 0L, false, (int) (short) 0, (int) '#', randomGenerator91, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray9);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray9);
        java.util.List<java.lang.Double> doubleList96 = cMAESOptimizer95.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator28);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator49);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator70);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker75);
        org.junit.Assert.assertNotNull(randomGenerator83);
        org.junit.Assert.assertNotNull(randomGenerator91);
        org.junit.Assert.assertNotNull(doubleList96);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        double[] doubleArray4 = new double[] { 0 };
        double[] doubleArray14 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator33 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker35 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer36 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray27, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator33, true, pointValuePairConvergenceChecker35);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator54 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker56 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer57 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray48, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator54, true, pointValuePairConvergenceChecker56);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker59 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer60 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray27, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator54, true, pointValuePairConvergenceChecker59);
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator75 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker77 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray69, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator75, true, pointValuePairConvergenceChecker77);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray69);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker80 = cMAESOptimizer79.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray14, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator54, false, pointValuePairConvergenceChecker80);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray4, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator54, true);
        org.apache.commons.math3.random.RandomGenerator randomGenerator89 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker92 = cMAESOptimizer91.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray4, (int) '4', 0.0d, true, (int) (byte) 1, (int) ' ', randomGenerator89, true, pointValuePairConvergenceChecker92);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray4);
        java.util.List<java.lang.Double> doubleList95 = cMAESOptimizer94.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker96 = cMAESOptimizer94.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker97 = cMAESOptimizer94.getConvergenceChecker();
        int int98 = cMAESOptimizer94.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList99 = cMAESOptimizer94.getStatisticsDHistory();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator33);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator54);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator75);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker80);
        org.junit.Assert.assertNotNull(randomGenerator89);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker92);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker96);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
        org.junit.Assert.assertNotNull(realMatrixList99);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        double[] doubleArray4 = new double[] {};
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer5 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray4);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer6 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray4);
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator24 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray18, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator24, true, pointValuePairConvergenceChecker26);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker29 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray4, (int) '4', (double) (short) 10, false, (int) 'a', (int) (short) 10, randomGenerator24, false, pointValuePairConvergenceChecker29);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer31 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray4);
        java.util.List<java.lang.Double> doubleList32 = cMAESOptimizer31.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator24);
        org.junit.Assert.assertNotNull(doubleList32);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        double[] doubleArray1 = null;
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer11 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer12 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray10);
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator30 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker32 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer33 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray24, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator30, true, pointValuePairConvergenceChecker32);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker35 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer36 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray10, (int) '4', (double) (short) 10, false, (int) 'a', (int) (short) 10, randomGenerator30, false, pointValuePairConvergenceChecker35);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer38 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray1, (int) '#', (double) (-1L), true, (int) (byte) -1, (int) (byte) -1, randomGenerator30, false);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray39 = cMAESOptimizer38.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator30);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        double[] doubleArray7 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator26 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker28 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray20, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator26, true, pointValuePairConvergenceChecker28);
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator47 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray41, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator47, true, pointValuePairConvergenceChecker49);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker52 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer53 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray20, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator47, true, pointValuePairConvergenceChecker52);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator68 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray62, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator68, true, pointValuePairConvergenceChecker70);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray62);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = cMAESOptimizer72.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray7, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator47, false, pointValuePairConvergenceChecker73);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.random.RandomGenerator randomGenerator81 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray7, 0, (-1.0d), true, (int) ' ', (int) 'a', randomGenerator81, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray7);
        org.apache.commons.math3.optimization.GoalType goalType85 = cMAESOptimizer84.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker86 = cMAESOptimizer84.getConvergenceChecker();
        org.apache.commons.math3.optimization.GoalType goalType87 = cMAESOptimizer84.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList88 = cMAESOptimizer84.getStatisticsDHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray89 = cMAESOptimizer84.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator26);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator47);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator68);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker73);
        org.junit.Assert.assertNotNull(randomGenerator81);
        org.junit.Assert.assertNull(goalType85);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker86);
        org.junit.Assert.assertNull(goalType87);
        org.junit.Assert.assertNotNull(realMatrixList88);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer1.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertNull(goalType3);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        double[] doubleArray5 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray17, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator23, true, pointValuePairConvergenceChecker25);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray5, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator23, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray5);
        org.apache.commons.math3.random.RandomGenerator randomGenerator35 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray5, (int) '4', (double) 100, false, 30000, (int) (short) 1, randomGenerator35, true);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray38 = cMAESOptimizer37.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator23);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        double[] doubleArray3 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator21 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker23 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray15, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator21, true, pointValuePairConvergenceChecker23);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray3, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator21, true);
        java.util.List<java.lang.Double> doubleList27 = cMAESOptimizer26.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType28 = cMAESOptimizer26.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType29 = cMAESOptimizer26.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker30 = cMAESOptimizer26.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator21);
        org.junit.Assert.assertNotNull(doubleList27);
        org.junit.Assert.assertNull(goalType28);
        org.junit.Assert.assertNull(goalType29);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker30);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        double[] doubleArray6 = new double[] { 0 };
        double[] doubleArray16 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator35 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker37 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer38 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray29, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator35, true, pointValuePairConvergenceChecker37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator56 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray50, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator56, true, pointValuePairConvergenceChecker58);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker61 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer62 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray29, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator56, true, pointValuePairConvergenceChecker61);
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator77 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray71, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator77, true, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray71);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker82 = cMAESOptimizer81.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray16, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator56, false, pointValuePairConvergenceChecker82);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray6, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator56, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray6);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray6);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer88 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray6);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100, doubleArray6);
        org.apache.commons.math3.optimization.GoalType goalType90 = cMAESOptimizer89.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator35);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator56);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator77);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker82);
        org.junit.Assert.assertNull(goalType90);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        double[] doubleArray2 = new double[] { 0 };
        double[] doubleArray12 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator31 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker33 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer34 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray25, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator31, true, pointValuePairConvergenceChecker33);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator52 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray46, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator52, true, pointValuePairConvergenceChecker54);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker57 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer58 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray25, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator52, true, pointValuePairConvergenceChecker57);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator73 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker75 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray67, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator73, true, pointValuePairConvergenceChecker75);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray67);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer77.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray12, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator52, false, pointValuePairConvergenceChecker78);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray2, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator52, true);
        int int82 = cMAESOptimizer81.getEvaluations();
        java.util.List<java.lang.Double> doubleList83 = cMAESOptimizer81.getStatisticsSigmaHistory();
        java.lang.Class<?> wildcardClass84 = doubleList83.getClass();
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator31);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator52);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator73);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        double[] doubleArray5 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer6 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5);
        double[] doubleArray13 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator19 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer21 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray13, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator19, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer23 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray5, (int) (short) 1, (double) ' ', true, (int) 'a', 1, randomGenerator19, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray5);
        int int25 = cMAESOptimizer24.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList26 = cMAESOptimizer24.getStatisticsDHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList27 = cMAESOptimizer24.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker28 = cMAESOptimizer24.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(randomGenerator19);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(realMatrixList26);
        org.junit.Assert.assertNotNull(realMatrixList27);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker28);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        double[] doubleArray6 = new double[] { 0 };
        double[] doubleArray16 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator35 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker37 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer38 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray29, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator35, true, pointValuePairConvergenceChecker37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator56 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray50, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator56, true, pointValuePairConvergenceChecker58);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker61 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer62 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray29, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator56, true, pointValuePairConvergenceChecker61);
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator77 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray71, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator77, true, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray71);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker82 = cMAESOptimizer81.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray16, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator56, false, pointValuePairConvergenceChecker82);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray6, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator56, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray6);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray6);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer88 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray6);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray6);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker90 = cMAESOptimizer89.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator35);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator56);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator77);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker82);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker90);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100);
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList4 = cMAESOptimizer1.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer1.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker6 = cMAESOptimizer1.getConvergenceChecker();
        java.lang.Class<?> wildcardClass7 = pointValuePairConvergenceChecker6.getClass();
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertNotNull(realMatrixList4);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer1.getStatisticsDHistory();
        int int3 = cMAESOptimizer1.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer1.getStatisticsSigmaHistory();
        int int6 = cMAESOptimizer1.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType7 = cMAESOptimizer1.getGoalType();
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(goalType7);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        double[] doubleArray4 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator22 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker24 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray16, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator22, true, pointValuePairConvergenceChecker24);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray4, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator22, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray4);
        int int29 = cMAESOptimizer28.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator22);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.optimization.GoalType goalType18 = cMAESOptimizer17.getGoalType();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer17.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList20 = cMAESOptimizer17.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNull(goalType18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(realMatrixList20);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        double[] doubleArray5 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer6 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5);
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer14 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5, (int) (byte) 100, (double) 0.0f, true, (int) (byte) -1, (int) 'a', randomGenerator12, false);
        double[] doubleArray21 = null;
        double[] doubleArray35 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer36 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray35);
        double[] doubleArray45 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator63 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker65 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer66 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray57, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator63, true, pointValuePairConvergenceChecker65);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer68 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray45, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator63, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray35, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator63, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = cMAESOptimizer72.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray21, (int) 'a', (double) (byte) 100, false, (int) 'a', 10, randomGenerator63, true, pointValuePairConvergenceChecker73);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5, 0, (double) (-1.0f), true, (int) (byte) 10, (int) (byte) 0, randomGenerator63, true);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList77 = cMAESOptimizer76.getStatisticsDHistory();
        org.apache.commons.math3.optimization.GoalType goalType78 = cMAESOptimizer76.getGoalType();
        java.util.List<java.lang.Double> doubleList79 = cMAESOptimizer76.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator63);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker73);
        org.junit.Assert.assertNotNull(realMatrixList77);
        org.junit.Assert.assertNull(goalType78);
        org.junit.Assert.assertNotNull(doubleList79);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        double[] doubleArray7 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer8 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray7);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction10 = null;
        org.apache.commons.math3.optimization.GoalType goalType11 = null;
        double[] doubleArray17 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray17);
        double[] doubleArray25 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator31 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer33 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray25, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator31, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray17, (int) (short) 1, (double) ' ', true, (int) 'a', 1, randomGenerator31, true);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator54 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker56 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer57 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray48, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator54, true, pointValuePairConvergenceChecker56);
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator75 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker77 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray69, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator75, true, pointValuePairConvergenceChecker77);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker80 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray48, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator75, true, pointValuePairConvergenceChecker80);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker85 = cMAESOptimizer84.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10, doubleArray17, (int) (byte) 10, (double) (short) -1, true, 100, 10, randomGenerator75, false, pointValuePairConvergenceChecker85);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair87 = cMAESOptimizer8.optimize((int) '4', multivariateFunction10, goalType11, doubleArray17);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(randomGenerator31);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator54);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator75);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker85);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        double[] doubleArray5 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer6 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5);
        double[] doubleArray13 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator19 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer21 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray13, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator19, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer23 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray5, (int) (short) 1, (double) ' ', true, (int) 'a', 1, randomGenerator19, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray5);
        int int25 = cMAESOptimizer24.getEvaluations();
        java.util.List<java.lang.Double> doubleList26 = cMAESOptimizer24.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList27 = cMAESOptimizer24.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList28 = cMAESOptimizer24.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList29 = cMAESOptimizer24.getStatisticsDHistory();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(randomGenerator19);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(doubleList26);
        org.junit.Assert.assertNotNull(doubleList27);
        org.junit.Assert.assertNotNull(doubleList28);
        org.junit.Assert.assertNotNull(realMatrixList29);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        double[] doubleArray13 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator32 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray26, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator32, true, pointValuePairConvergenceChecker34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator53 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker55 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray47, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator53, true, pointValuePairConvergenceChecker55);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray26, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator53, true, pointValuePairConvergenceChecker58);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator74 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray68, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator74, true, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray13, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator53, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray13);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray13);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray13);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray13);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray13);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10, doubleArray13);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray13);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer88 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray13);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator32);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        double[] doubleArray1 = null;
        double[] doubleArray10 = new double[] {};
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer11 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer12 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray10);
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator30 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker32 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer33 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray24, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator30, true, pointValuePairConvergenceChecker32);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker35 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer36 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray10, (int) '4', (double) (short) 10, false, (int) 'a', (int) (short) 10, randomGenerator30, false, pointValuePairConvergenceChecker35);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer38 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray1, (int) '#', (double) (-1L), true, (int) (byte) -1, (int) (byte) -1, randomGenerator30, false);
        java.lang.Class<?> wildcardClass39 = randomGenerator30.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator30);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        double[] doubleArray7 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator26 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker28 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray20, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator26, true, pointValuePairConvergenceChecker28);
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator47 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray41, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator47, true, pointValuePairConvergenceChecker49);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker52 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer53 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray20, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator47, true, pointValuePairConvergenceChecker52);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator68 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray62, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator68, true, pointValuePairConvergenceChecker70);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray62);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = cMAESOptimizer72.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray7, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator47, false, pointValuePairConvergenceChecker73);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray7);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray7);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray78 = cMAESOptimizer77.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator26);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator47);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator68);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker73);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer15.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList21 = cMAESOptimizer15.getStatisticsDHistory();
        int int22 = cMAESOptimizer15.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList23 = cMAESOptimizer15.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList24 = cMAESOptimizer15.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(realMatrixList21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(realMatrixList23);
        org.junit.Assert.assertNotNull(doubleList24);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        int int43 = cMAESOptimizer40.getEvaluations();
        java.util.List<java.lang.Double> doubleList44 = cMAESOptimizer40.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType45 = cMAESOptimizer40.getGoalType();
        java.util.List<java.lang.Double> doubleList46 = cMAESOptimizer40.getStatisticsFitnessHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray47 = cMAESOptimizer40.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleList44);
        org.junit.Assert.assertNull(goalType45);
        org.junit.Assert.assertNotNull(doubleList46);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        double[] doubleArray9 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator15 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker17 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray9, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator15, true, pointValuePairConvergenceChecker17);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer19 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray9);
        double[] doubleArray26 = null;
        double[] doubleArray40 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer41 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator68 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray62, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator68, true, pointValuePairConvergenceChecker70);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray50, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator68, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray40, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator68, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer77.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer77.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray26, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator68, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray9, 10, (double) 10, true, (int) '4', 100, randomGenerator68, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray9);
        int int84 = cMAESOptimizer83.getMaxEvaluations();
        int int85 = cMAESOptimizer83.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator15);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator68);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        double[] doubleArray4 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray17, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator23, true, pointValuePairConvergenceChecker25);
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator44 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker46 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer47 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray38, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator44, true, pointValuePairConvergenceChecker46);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray17, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator44, true, pointValuePairConvergenceChecker49);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator65 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker67 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer68 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray59, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator65, true, pointValuePairConvergenceChecker67);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray59);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = cMAESOptimizer69.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray4, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator44, false, pointValuePairConvergenceChecker70);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker72 = cMAESOptimizer71.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList73 = cMAESOptimizer71.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList74 = cMAESOptimizer71.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator23);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator44);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator65);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker70);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleList74);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        double[] doubleArray5 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer6 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5);
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer14 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5, (int) (byte) 100, (double) 0.0f, true, (int) (byte) -1, (int) 'a', randomGenerator12, false);
        double[] doubleArray21 = null;
        double[] doubleArray35 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer36 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray35);
        double[] doubleArray45 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator63 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker65 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer66 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray57, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator63, true, pointValuePairConvergenceChecker65);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer68 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray45, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator63, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray35, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator63, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = cMAESOptimizer72.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker74 = cMAESOptimizer72.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray21, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator63, false, pointValuePairConvergenceChecker74);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray5, (int) (short) 100, (double) 1.0f, true, (int) 'a', 0, randomGenerator63, false);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer77.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator63);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker73);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        double[] doubleArray5 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer6 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5);
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer14 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5, (int) (byte) 100, (double) 0.0f, true, (int) (byte) -1, (int) 'a', randomGenerator12, false);
        double[] doubleArray21 = null;
        double[] doubleArray35 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer36 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray35);
        double[] doubleArray45 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator63 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker65 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer66 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray57, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator63, true, pointValuePairConvergenceChecker65);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer68 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray45, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator63, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray35, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator63, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = cMAESOptimizer72.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker74 = cMAESOptimizer72.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray21, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator63, false, pointValuePairConvergenceChecker74);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray5, (int) (short) 100, (double) 1.0f, true, (int) 'a', 0, randomGenerator63, false);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList78 = cMAESOptimizer77.getStatisticsDHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList79 = cMAESOptimizer77.getStatisticsDHistory();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator63);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker73);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker74);
        org.junit.Assert.assertNotNull(realMatrixList78);
        org.junit.Assert.assertNotNull(realMatrixList79);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        double[] doubleArray5 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer6 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5);
        double[] doubleArray13 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator19 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer21 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray13, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator19, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer23 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray5, (int) (short) 1, (double) ' ', true, (int) 'a', 1, randomGenerator19, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray5);
        int int25 = cMAESOptimizer24.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList26 = cMAESOptimizer24.getStatisticsDHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList27 = cMAESOptimizer24.getStatisticsMeanHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList28 = cMAESOptimizer24.getStatisticsDHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList29 = cMAESOptimizer24.getStatisticsDHistory();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(randomGenerator19);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(realMatrixList26);
        org.junit.Assert.assertNotNull(realMatrixList27);
        org.junit.Assert.assertNotNull(realMatrixList28);
        org.junit.Assert.assertNotNull(realMatrixList29);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#');
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker2 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer1.getStatisticsSigmaHistory();
        int int4 = cMAESOptimizer1.getEvaluations();
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        double[] doubleArray3 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer4 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray3);
        int int5 = cMAESOptimizer4.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList6 = cMAESOptimizer4.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList7 = cMAESOptimizer4.getStatisticsSigmaHistory();
        int int8 = cMAESOptimizer4.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList9 = cMAESOptimizer4.getStatisticsSigmaHistory();
        int int10 = cMAESOptimizer4.getEvaluations();
        java.util.List<java.lang.Double> doubleList11 = cMAESOptimizer4.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 1.0]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(realMatrixList6);
        org.junit.Assert.assertNotNull(doubleList7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(doubleList11);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        double[] doubleArray8 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator14 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker16 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray8, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator14, true, pointValuePairConvergenceChecker16);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray8);
        double[] doubleArray25 = null;
        double[] doubleArray39 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray39);
        double[] doubleArray49 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator67 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker69 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray61, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator67, true, pointValuePairConvergenceChecker69);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray49, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator67, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray39, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator67, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker77 = cMAESOptimizer76.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer76.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray25, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator67, false, pointValuePairConvergenceChecker78);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray8, 10, (double) 10, true, (int) '4', 100, randomGenerator67, true);
        java.util.List<java.lang.Double> doubleList82 = cMAESOptimizer81.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType83 = cMAESOptimizer81.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList84 = cMAESOptimizer81.getStatisticsMeanHistory();
        int int85 = cMAESOptimizer81.getEvaluations();
        int int86 = cMAESOptimizer81.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator14);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator67);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker77);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNull(goalType83);
        org.junit.Assert.assertNotNull(realMatrixList84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList17 = cMAESOptimizer15.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList18 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType19 = cMAESOptimizer15.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList20 = cMAESOptimizer15.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.GoalType goalType21 = cMAESOptimizer15.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(realMatrixList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNull(goalType19);
        org.junit.Assert.assertNotNull(realMatrixList20);
        org.junit.Assert.assertNull(goalType21);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        double[] doubleArray1 = null;
        double[] doubleArray13 = new double[] { (byte) 0, (-1.0f), 10.0f, '4' };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer14 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray13);
        double[] doubleArray26 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray26);
        double[] doubleArray34 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator40 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer42 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray34, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator40, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer44 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray26, (int) (short) 1, (double) ' ', true, (int) 'a', 1, randomGenerator40, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer45 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray26);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray54);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray54);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator74 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray68, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator74, true, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray54, (int) '4', (double) (short) 10, false, (int) 'a', (int) (short) 10, randomGenerator74, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray26, (-1), 0.0d, false, (int) 'a', 0, randomGenerator74, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100, doubleArray13, 10, (double) (short) 1, false, (-1), (int) (byte) 1, randomGenerator74, false);
        double[] doubleArray93 = new double[] { (-1.0f), 100L, 100.0d, '4', 1, (byte) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray93);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker95 = cMAESOptimizer94.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer96 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray1, (int) '#', (double) (byte) -1, false, (-1), (int) (byte) 10, randomGenerator74, false, pointValuePairConvergenceChecker95);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, -1.0, 10.0, 52.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(randomGenerator40);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator74);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-1.0, 100.0, 100.0, 52.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker95);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        double[] doubleArray3 = new double[] { 0 };
        double[] doubleArray13 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator32 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray26, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator32, true, pointValuePairConvergenceChecker34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator53 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker55 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray47, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator53, true, pointValuePairConvergenceChecker55);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray26, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator53, true, pointValuePairConvergenceChecker58);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator74 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray68, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator74, true, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray13, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator53, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray3, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator53, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray3);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList84 = cMAESOptimizer83.getStatisticsDHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList85 = cMAESOptimizer83.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList86 = cMAESOptimizer83.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList87 = cMAESOptimizer83.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker88 = cMAESOptimizer83.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray89 = cMAESOptimizer83.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator32);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertNotNull(realMatrixList84);
        org.junit.Assert.assertNotNull(realMatrixList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(realMatrixList87);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker88);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        double[] doubleArray8 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator27 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker29 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray21, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator27, true, pointValuePairConvergenceChecker29);
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator48 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray42, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator48, true, pointValuePairConvergenceChecker50);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer54 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray21, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator48, true, pointValuePairConvergenceChecker53);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator69 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray63, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator69, true, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray63);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker74 = cMAESOptimizer73.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray8, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator48, false, pointValuePairConvergenceChecker74);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray8);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray8);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray8);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray8);
        int int80 = cMAESOptimizer79.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType81 = cMAESOptimizer79.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator27);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator48);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator69);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker74);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNull(goalType81);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        double[] doubleArray10 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer11 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer12 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer13 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray10);
        double[] doubleArray20 = null;
        double[] doubleArray34 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray34);
        double[] doubleArray44 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator62 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker64 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer65 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray56, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator62, true, pointValuePairConvergenceChecker64);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer67 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray44, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator62, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray34, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator62, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker72 = cMAESOptimizer71.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray20, (int) 'a', (double) (byte) 100, false, (int) 'a', 10, randomGenerator62, true, pointValuePairConvergenceChecker72);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList77 = cMAESOptimizer76.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer76.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray10, 100, (double) (byte) 100, true, 0, (int) (short) 0, randomGenerator62, false, pointValuePairConvergenceChecker78);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList80 = cMAESOptimizer79.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator62);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker72);
        org.junit.Assert.assertNotNull(realMatrixList77);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
        org.junit.Assert.assertNotNull(realMatrixList80);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        double[] doubleArray10 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator29 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker31 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer32 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray23, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator29, true, pointValuePairConvergenceChecker31);
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator50 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker52 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer53 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray44, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator50, true, pointValuePairConvergenceChecker52);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker55 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray23, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator50, true, pointValuePairConvergenceChecker55);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator71 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray65, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator71, true, pointValuePairConvergenceChecker73);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray65);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = cMAESOptimizer75.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray10, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator50, false, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray10);
        org.apache.commons.math3.random.RandomGenerator randomGenerator84 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray10, 0, (-1.0d), true, (int) ' ', (int) 'a', randomGenerator84, true);
        org.apache.commons.math3.random.RandomGenerator randomGenerator92 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray10, (int) (short) 10, (double) 0L, false, (int) (short) 0, (int) '#', randomGenerator92, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer96 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer97 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray98 = cMAESOptimizer97.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator29);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator50);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator71);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker76);
        org.junit.Assert.assertNotNull(randomGenerator84);
        org.junit.Assert.assertNotNull(randomGenerator92);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        double[] doubleArray1 = null;
        double[] doubleArray15 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray15);
        double[] doubleArray25 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator43 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer46 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray37, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator43, true, pointValuePairConvergenceChecker45);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray25, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray15, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = cMAESOptimizer52.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = cMAESOptimizer52.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray1, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator43, false, pointValuePairConvergenceChecker54);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList56 = cMAESOptimizer55.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList57 = cMAESOptimizer55.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList58 = cMAESOptimizer55.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker59 = cMAESOptimizer55.getConvergenceChecker();
        int int60 = cMAESOptimizer55.getMaxEvaluations();
        int int61 = cMAESOptimizer55.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator43);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker53);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker54);
        org.junit.Assert.assertNotNull(realMatrixList56);
        org.junit.Assert.assertNotNull(doubleList57);
        org.junit.Assert.assertNotNull(realMatrixList58);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        double[] doubleArray1 = null;
        double[] doubleArray15 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray15);
        double[] doubleArray25 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator43 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer46 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray37, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator43, true, pointValuePairConvergenceChecker45);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray25, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray15, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = cMAESOptimizer52.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = cMAESOptimizer52.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray1, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator43, false, pointValuePairConvergenceChecker54);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker56 = cMAESOptimizer55.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList57 = cMAESOptimizer55.getStatisticsFitnessHistory();
        int int58 = cMAESOptimizer55.getEvaluations();
        int int59 = cMAESOptimizer55.getEvaluations();
        int int60 = cMAESOptimizer55.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList61 = cMAESOptimizer55.getStatisticsFitnessHistory();
        int int62 = cMAESOptimizer55.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray63 = cMAESOptimizer55.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator43);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker53);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker54);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker56);
        org.junit.Assert.assertNotNull(doubleList57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(doubleList61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer15.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList21 = cMAESOptimizer15.getStatisticsDHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray22 = cMAESOptimizer15.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(realMatrixList21);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        double[] doubleArray3 = new double[] { 0 };
        double[] doubleArray13 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator32 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray26, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator32, true, pointValuePairConvergenceChecker34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator53 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker55 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray47, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator53, true, pointValuePairConvergenceChecker55);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray26, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator53, true, pointValuePairConvergenceChecker58);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator74 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray68, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator74, true, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray13, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator53, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray3, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator53, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray3);
        org.apache.commons.math3.optimization.GoalType goalType84 = cMAESOptimizer83.getGoalType();
        int int85 = cMAESOptimizer83.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType86 = cMAESOptimizer83.getGoalType();
        int int87 = cMAESOptimizer83.getMaxEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList88 = cMAESOptimizer83.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator32);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertNull(goalType84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNull(goalType86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(realMatrixList88);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        double[] doubleArray9 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer10 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray9);
        double[] doubleArray17 = null;
        double[] doubleArray31 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer32 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray31);
        double[] doubleArray41 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator59 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker61 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer62 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray53, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator59, true, pointValuePairConvergenceChecker61);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray41, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator59, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer66 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray31, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator59, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer68 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker69 = cMAESOptimizer68.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = cMAESOptimizer68.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray17, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator59, false, pointValuePairConvergenceChecker70);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100);
        java.util.List<java.lang.Double> doubleList75 = cMAESOptimizer74.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = cMAESOptimizer74.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray9, (int) '#', (double) (short) 10, false, (int) (byte) 1, 0, randomGenerator59, true, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator59);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker69);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker70);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker76);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType43 = cMAESOptimizer40.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker44 = cMAESOptimizer40.getConvergenceChecker();
        org.apache.commons.math3.optimization.GoalType goalType45 = cMAESOptimizer40.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker46 = cMAESOptimizer40.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(goalType43);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker44);
        org.junit.Assert.assertNull(goalType45);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker46);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        double[] doubleArray9 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator28 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker30 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer31 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray22, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator28, true, pointValuePairConvergenceChecker30);
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator49 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker51 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray43, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator49, true, pointValuePairConvergenceChecker51);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray22, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator49, true, pointValuePairConvergenceChecker54);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator70 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker72 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray64, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator70, true, pointValuePairConvergenceChecker72);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray64);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker75 = cMAESOptimizer74.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray9, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator49, false, pointValuePairConvergenceChecker75);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray9);
        org.apache.commons.math3.random.RandomGenerator randomGenerator83 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray9, 0, (-1.0d), true, (int) ' ', (int) 'a', randomGenerator83, true);
        org.apache.commons.math3.random.RandomGenerator randomGenerator91 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray9, (int) (short) 10, (double) 0L, false, (int) (short) 0, (int) '#', randomGenerator91, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray9);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray9);
        java.util.List<java.lang.Double> doubleList96 = cMAESOptimizer95.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator28);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator49);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator70);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker75);
        org.junit.Assert.assertNotNull(randomGenerator83);
        org.junit.Assert.assertNotNull(randomGenerator91);
        org.junit.Assert.assertNotNull(doubleList96);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        double[] doubleArray4 = new double[] { 0 };
        double[] doubleArray14 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator33 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker35 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer36 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray27, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator33, true, pointValuePairConvergenceChecker35);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator54 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker56 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer57 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray48, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator54, true, pointValuePairConvergenceChecker56);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker59 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer60 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray27, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator54, true, pointValuePairConvergenceChecker59);
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator75 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker77 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray69, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator75, true, pointValuePairConvergenceChecker77);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray69);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker80 = cMAESOptimizer79.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray14, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator54, false, pointValuePairConvergenceChecker80);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray4, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator54, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray4);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray4);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker86 = cMAESOptimizer85.getConvergenceChecker();
        java.lang.Class<?> wildcardClass87 = pointValuePairConvergenceChecker86.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator33);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator54);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator75);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker80);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1);
        int int2 = cMAESOptimizer1.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker3 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList4 = cMAESOptimizer1.getStatisticsDHistory();
        org.apache.commons.math3.optimization.GoalType goalType5 = cMAESOptimizer1.getGoalType();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList7 = cMAESOptimizer1.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList8 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList9 = cMAESOptimizer1.getStatisticsDHistory();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker3);
        org.junit.Assert.assertNotNull(realMatrixList4);
        org.junit.Assert.assertNull(goalType5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(doubleList7);
        org.junit.Assert.assertNotNull(doubleList8);
        org.junit.Assert.assertNotNull(realMatrixList9);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        double[] doubleArray7 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer8 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray7);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList9 = cMAESOptimizer8.getStatisticsMeanHistory();
        int int10 = cMAESOptimizer8.getEvaluations();
        int int11 = cMAESOptimizer8.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(realMatrixList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100);
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker3 = cMAESOptimizer1.getConvergenceChecker();
        java.lang.Class<?> wildcardClass4 = pointValuePairConvergenceChecker3.getClass();
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker2 = cMAESOptimizer1.getConvergenceChecker();
        int int3 = cMAESOptimizer1.getEvaluations();
        java.lang.Class<?> wildcardClass4 = cMAESOptimizer1.getClass();
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        double[] doubleArray5 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray17, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator23, true, pointValuePairConvergenceChecker25);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray5, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator23, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray5);
        double[] doubleArray40 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator58 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer61 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray52, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator58, true, pointValuePairConvergenceChecker60);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer63 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray40, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator58, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray40);
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator82 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker84 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray76, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator82, true, pointValuePairConvergenceChecker84);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray40, (-1), (double) (-1L), false, (int) (byte) 1, 0, randomGenerator82, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray5, (int) (byte) 10, (-1.0d), true, (int) (short) 0, (int) '#', randomGenerator82, true);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList90 = cMAESOptimizer89.getStatisticsDHistory();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator23);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator58);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator82);
        org.junit.Assert.assertNotNull(realMatrixList90);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.optimization.GoalType goalType18 = cMAESOptimizer17.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker19 = cMAESOptimizer17.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNull(goalType18);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker19);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer0 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker1 = cMAESOptimizer0.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer0.getStatisticsDHistory();
        int int3 = cMAESOptimizer0.getEvaluations();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer0.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType5 = cMAESOptimizer0.getGoalType();
        int int6 = cMAESOptimizer0.getMaxEvaluations();
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker1);
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNull(goalType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        double[] doubleArray7 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator26 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker28 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray20, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator26, true, pointValuePairConvergenceChecker28);
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator47 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray41, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator47, true, pointValuePairConvergenceChecker49);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker52 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer53 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray20, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator47, true, pointValuePairConvergenceChecker52);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator68 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray62, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator68, true, pointValuePairConvergenceChecker70);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray62);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = cMAESOptimizer72.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray7, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator47, false, pointValuePairConvergenceChecker73);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray7);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray7);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray78 = cMAESOptimizer77.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator26);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator47);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator68);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker73);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        double[] doubleArray8 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer9 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray8);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer10 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray8);
        int int11 = cMAESOptimizer10.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList12 = cMAESOptimizer10.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(realMatrixList12);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        double[] doubleArray6 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator25 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker27 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray19, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator25, true, pointValuePairConvergenceChecker27);
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator46 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker48 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer49 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray40, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator46, true, pointValuePairConvergenceChecker48);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker51 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray19, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator46, true, pointValuePairConvergenceChecker51);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator67 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker69 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray61, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator67, true, pointValuePairConvergenceChecker69);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray61);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker72 = cMAESOptimizer71.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray6, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator46, false, pointValuePairConvergenceChecker72);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray6);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray6);
        org.apache.commons.math3.optimization.GoalType goalType76 = cMAESOptimizer75.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList77 = cMAESOptimizer75.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList78 = cMAESOptimizer75.getStatisticsSigmaHistory();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction80 = null;
        org.apache.commons.math3.optimization.GoalType goalType81 = null;
        double[] doubleArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair83 = cMAESOptimizer75.optimize((int) (byte) 10, multivariateFunction80, goalType81, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator25);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator46);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator67);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker72);
        org.junit.Assert.assertNull(goalType76);
        org.junit.Assert.assertNotNull(realMatrixList77);
        org.junit.Assert.assertNotNull(doubleList78);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray1);
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer2.getStatisticsSigmaHistory();
        int int4 = cMAESOptimizer2.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        double[] doubleArray8 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator14 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker16 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray8, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator14, true, pointValuePairConvergenceChecker16);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray8);
        double[] doubleArray25 = null;
        double[] doubleArray39 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray39);
        double[] doubleArray49 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator67 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker69 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray61, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator67, true, pointValuePairConvergenceChecker69);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray49, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator67, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray39, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator67, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker77 = cMAESOptimizer76.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer76.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray25, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator67, false, pointValuePairConvergenceChecker78);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray8, 10, (double) 10, true, (int) '4', 100, randomGenerator67, true);
        java.util.List<java.lang.Double> doubleList82 = cMAESOptimizer81.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType83 = cMAESOptimizer81.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList84 = cMAESOptimizer81.getStatisticsMeanHistory();
        int int85 = cMAESOptimizer81.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator14);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator67);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker77);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNull(goalType83);
        org.junit.Assert.assertNotNull(realMatrixList84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList16 = cMAESOptimizer15.getStatisticsMeanHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray17 = cMAESOptimizer15.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(realMatrixList16);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        double[] doubleArray5 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator24 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray18, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator24, true, pointValuePairConvergenceChecker26);
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray18, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator45, true, pointValuePairConvergenceChecker50);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray60);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = cMAESOptimizer70.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray5, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator45, false, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray5);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker74 = cMAESOptimizer73.getConvergenceChecker();
        java.lang.Class<?> wildcardClass75 = pointValuePairConvergenceChecker74.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator24);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker71);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer0 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList1 = cMAESOptimizer0.getStatisticsMeanHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer0.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer0.getStatisticsFitnessHistory();
        int int4 = cMAESOptimizer0.getEvaluations();
        int int5 = cMAESOptimizer0.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList6 = cMAESOptimizer0.getStatisticsDHistory();
        java.lang.Class<?> wildcardClass7 = cMAESOptimizer0.getClass();
        org.junit.Assert.assertNotNull(realMatrixList1);
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(realMatrixList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100);
        org.apache.commons.math3.optimization.GoalType goalType2 = cMAESOptimizer1.getGoalType();
        org.junit.Assert.assertNull(goalType2);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        double[] doubleArray8 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator27 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker29 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray21, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator27, true, pointValuePairConvergenceChecker29);
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator48 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray42, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator48, true, pointValuePairConvergenceChecker50);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer54 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray21, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator48, true, pointValuePairConvergenceChecker53);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator69 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray63, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator69, true, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray63);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker74 = cMAESOptimizer73.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray8, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator48, false, pointValuePairConvergenceChecker74);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray8);
        org.apache.commons.math3.random.RandomGenerator randomGenerator82 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray8, 0, (-1.0d), true, (int) ' ', (int) 'a', randomGenerator82, true);
        org.apache.commons.math3.random.RandomGenerator randomGenerator90 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray8, (int) (short) 10, (double) 0L, false, (int) (short) 0, (int) '#', randomGenerator90, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray8);
        java.lang.Class<?> wildcardClass94 = doubleArray8.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator27);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator48);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator69);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker74);
        org.junit.Assert.assertNotNull(randomGenerator82);
        org.junit.Assert.assertNotNull(randomGenerator90);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#');
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer1.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer1.getStatisticsSigmaHistory();
        int int6 = cMAESOptimizer1.getMaxEvaluations();
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer0 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList1 = cMAESOptimizer0.getStatisticsMeanHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer0.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer0.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList4 = cMAESOptimizer0.getStatisticsDHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList5 = cMAESOptimizer0.getStatisticsDHistory();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction7 = null;
        org.apache.commons.math3.optimization.GoalType goalType8 = null;
        double[] doubleArray14 = new double[] { 0 };
        double[] doubleArray24 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator43 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer46 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray37, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator43, true, pointValuePairConvergenceChecker45);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator64 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker66 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer67 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray58, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator64, true, pointValuePairConvergenceChecker66);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker69 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray37, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator64, true, pointValuePairConvergenceChecker69);
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator85 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker87 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer88 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray79, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator85, true, pointValuePairConvergenceChecker87);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray79);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker90 = cMAESOptimizer89.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray24, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator64, false, pointValuePairConvergenceChecker90);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray14, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator64, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray14);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray14);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer96 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair97 = cMAESOptimizer0.optimize((int) (byte) -1, multivariateFunction7, goalType8, doubleArray14);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(realMatrixList1);
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertNotNull(realMatrixList4);
        org.junit.Assert.assertNotNull(realMatrixList5);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator43);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator64);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator85);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker90);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0);
        org.apache.commons.math3.optimization.GoalType goalType2 = cMAESOptimizer1.getGoalType();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction4 = null;
        org.apache.commons.math3.optimization.GoalType goalType5 = null;
        double[] doubleArray6 = null;
        double[] doubleArray9 = new double[] { 0 };
        double[] doubleArray19 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator38 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker40 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer41 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray32, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator38, true, pointValuePairConvergenceChecker40);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator59 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker61 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer62 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray53, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator59, true, pointValuePairConvergenceChecker61);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker64 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer65 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray32, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator59, true, pointValuePairConvergenceChecker64);
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator80 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker82 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray74, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator80, true, pointValuePairConvergenceChecker82);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray74);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker85 = cMAESOptimizer84.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray19, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator59, false, pointValuePairConvergenceChecker85);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer88 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray9, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator59, true);
        double[] doubleArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair90 = cMAESOptimizer1.optimize((int) (short) 100, multivariateFunction4, goalType5, doubleArray6, doubleArray9, doubleArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(goalType2);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator38);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator59);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator80);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker85);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.optimization.GoalType goalType18 = cMAESOptimizer17.getGoalType();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer17.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer17.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList21 = cMAESOptimizer17.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNull(goalType18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType43 = cMAESOptimizer40.getGoalType();
        int int44 = cMAESOptimizer40.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = cMAESOptimizer40.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList46 = cMAESOptimizer40.getStatisticsDHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray47 = cMAESOptimizer40.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(goalType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker45);
        org.junit.Assert.assertNotNull(realMatrixList46);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        double[] doubleArray4 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer5 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray4);
        double[] doubleArray15 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator55 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker57 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer58 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray49, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator55, true, pointValuePairConvergenceChecker57);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer61 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray28, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator55, true, pointValuePairConvergenceChecker60);
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator76 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray70, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator76, true, pointValuePairConvergenceChecker78);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray70);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker81 = cMAESOptimizer80.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray15, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator55, false, pointValuePairConvergenceChecker81);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker85 = cMAESOptimizer84.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker86 = cMAESOptimizer84.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray4, 100, (double) (byte) 100, true, (int) '#', (int) '#', randomGenerator55, true, pointValuePairConvergenceChecker86);
        int int88 = cMAESOptimizer87.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType89 = cMAESOptimizer87.getGoalType();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray90 = cMAESOptimizer87.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator55);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator76);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker81);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker85);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNull(goalType89);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        double[] doubleArray7 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer8 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray7);
        java.util.List<java.lang.Double> doubleList9 = cMAESOptimizer8.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList10 = cMAESOptimizer8.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList11 = cMAESOptimizer8.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList12 = cMAESOptimizer8.getStatisticsMeanHistory();
        int int13 = cMAESOptimizer8.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(realMatrixList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(realMatrixList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        double[] doubleArray8 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator14 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker16 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray8, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator14, true, pointValuePairConvergenceChecker16);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray8);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer19 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray8);
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer19.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator14);
        org.junit.Assert.assertNotNull(doubleList20);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        double[] doubleArray7 = new double[] { 0 };
        double[] doubleArray17 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator36 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker38 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer39 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray30, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator36, true, pointValuePairConvergenceChecker38);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator57 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker59 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer60 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray51, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator57, true, pointValuePairConvergenceChecker59);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker62 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer63 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray30, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator57, true, pointValuePairConvergenceChecker62);
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator78 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker80 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray72, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator78, true, pointValuePairConvergenceChecker80);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray72);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker83 = cMAESOptimizer82.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray17, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator57, false, pointValuePairConvergenceChecker83);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray7, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator57, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray7);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer88 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray7);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100, doubleArray7);
        org.apache.commons.math3.random.RandomGenerator randomGenerator96 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer98 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray7, (int) (short) 1, 10.0d, false, (int) (short) 10, 0, randomGenerator96, false);
        java.util.List<java.lang.Double> doubleList99 = cMAESOptimizer98.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator36);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator57);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator78);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker83);
        org.junit.Assert.assertNotNull(doubleList99);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList18 = cMAESOptimizer17.getStatisticsDHistory();
        java.lang.Class<?> wildcardClass19 = cMAESOptimizer17.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(realMatrixList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        double[] doubleArray1 = null;
        double[] doubleArray12 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer13 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray12);
        org.apache.commons.math3.random.RandomGenerator randomGenerator19 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer21 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray12, (int) (byte) 100, (double) 0.0f, true, (int) (byte) -1, (int) 'a', randomGenerator19, false);
        double[] doubleArray28 = null;
        double[] doubleArray42 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer43 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator70 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker72 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray64, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator70, true, pointValuePairConvergenceChecker72);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray52, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator70, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray42, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator70, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker80 = cMAESOptimizer79.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker81 = cMAESOptimizer79.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray28, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator70, false, pointValuePairConvergenceChecker81);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray12, (int) (short) 100, (double) 1.0f, true, (int) 'a', 0, randomGenerator70, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList87 = cMAESOptimizer86.getStatisticsMeanHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList88 = cMAESOptimizer86.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList89 = cMAESOptimizer86.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList90 = cMAESOptimizer86.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker91 = cMAESOptimizer86.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray1, (int) '4', (double) (short) -1, true, (int) '#', (int) (byte) 0, randomGenerator70, true, pointValuePairConvergenceChecker91);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker93 = cMAESOptimizer92.getConvergenceChecker();
        java.lang.Class<?> wildcardClass94 = pointValuePairConvergenceChecker93.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator70);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker80);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker81);
        org.junit.Assert.assertNotNull(realMatrixList87);
        org.junit.Assert.assertNotNull(realMatrixList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(realMatrixList90);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker91);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray1);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList3 = cMAESOptimizer2.getStatisticsDHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray4 = cMAESOptimizer2.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(realMatrixList3);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer15.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker21 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList22 = cMAESOptimizer15.getStatisticsDHistory();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker21);
        org.junit.Assert.assertNotNull(realMatrixList22);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        int int43 = cMAESOptimizer40.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList44 = cMAESOptimizer40.getStatisticsDHistory();
        org.apache.commons.math3.optimization.GoalType goalType45 = cMAESOptimizer40.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker46 = cMAESOptimizer40.getConvergenceChecker();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction48 = null;
        org.apache.commons.math3.optimization.GoalType goalType49 = null;
        double[] doubleArray56 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer57 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray56);
        double[] doubleArray64 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator70 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray64, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator70, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray56, (int) (short) 1, (double) ' ', true, (int) 'a', 1, randomGenerator70, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray56);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100, doubleArray56);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair77 = cMAESOptimizer40.optimize(30000, multivariateFunction48, goalType49, doubleArray56);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(realMatrixList44);
        org.junit.Assert.assertNull(goalType45);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker46);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(randomGenerator70);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        int int20 = cMAESOptimizer15.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker21 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList22 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker21);
        org.junit.Assert.assertNotNull(doubleList22);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray1);
        java.lang.Class<?> wildcardClass3 = cMAESOptimizer2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        double[] doubleArray6 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator24 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray18, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator24, true, pointValuePairConvergenceChecker26);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray6, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator24, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray6);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer31 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray6);
        double[] doubleArray38 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator44 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer46 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray38, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator44, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer49 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100);
        java.util.List<java.lang.Double> doubleList50 = cMAESOptimizer49.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList51 = cMAESOptimizer49.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType52 = cMAESOptimizer49.getGoalType();
        int int53 = cMAESOptimizer49.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList54 = cMAESOptimizer49.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.GoalType goalType55 = cMAESOptimizer49.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker56 = cMAESOptimizer49.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer57 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray6, (int) ' ', (double) (short) 10, true, 30000, (-1), randomGenerator44, false, pointValuePairConvergenceChecker56);
        int int58 = cMAESOptimizer57.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator24);
        org.junit.Assert.assertNotNull(randomGenerator44);
        org.junit.Assert.assertNotNull(doubleList50);
        org.junit.Assert.assertNotNull(doubleList51);
        org.junit.Assert.assertNull(goalType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(realMatrixList54);
        org.junit.Assert.assertNull(goalType55);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        double[] doubleArray8 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer9 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray8);
        double[] doubleArray16 = null;
        double[] doubleArray30 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer31 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray30);
        double[] doubleArray40 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator58 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer61 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray52, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator58, true, pointValuePairConvergenceChecker60);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer63 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray40, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator58, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer65 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray30, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator58, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer67 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = cMAESOptimizer67.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker69 = cMAESOptimizer67.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray16, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator58, false, pointValuePairConvergenceChecker69);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100);
        java.util.List<java.lang.Double> doubleList74 = cMAESOptimizer73.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker75 = cMAESOptimizer73.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray8, (int) '#', (double) (short) 10, false, (int) (byte) 1, 0, randomGenerator58, true, pointValuePairConvergenceChecker75);
        java.lang.Class<?> wildcardClass77 = randomGenerator58.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator58);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker68);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker69);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker75);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        int int43 = cMAESOptimizer40.getEvaluations();
        java.util.List<java.lang.Double> doubleList44 = cMAESOptimizer40.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType45 = cMAESOptimizer40.getGoalType();
        java.util.List<java.lang.Double> doubleList46 = cMAESOptimizer40.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = cMAESOptimizer40.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleList44);
        org.junit.Assert.assertNull(goalType45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker47);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray1);
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer2.getGoalType();
        org.junit.Assert.assertNull(goalType3);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer15.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList21 = cMAESOptimizer15.getStatisticsDHistory();
        int int22 = cMAESOptimizer15.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList23 = cMAESOptimizer15.getStatisticsDHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray24 = cMAESOptimizer15.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(realMatrixList21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(realMatrixList23);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        double[] doubleArray8 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator14 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker16 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray8, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator14, true, pointValuePairConvergenceChecker16);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray8);
        double[] doubleArray27 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray27, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator45, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer53 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100);
        java.util.List<java.lang.Double> doubleList54 = cMAESOptimizer53.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType55 = cMAESOptimizer53.getGoalType();
        java.util.List<java.lang.Double> doubleList56 = cMAESOptimizer53.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList57 = cMAESOptimizer53.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = cMAESOptimizer53.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray8, (int) (byte) 0, (double) (byte) -1, true, (int) '4', 100, randomGenerator45, true, pointValuePairConvergenceChecker58);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator14);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleList54);
        org.junit.Assert.assertNull(goalType55);
        org.junit.Assert.assertNotNull(doubleList56);
        org.junit.Assert.assertNotNull(doubleList57);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker58);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        double[] doubleArray6 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator24 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray18, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator24, true, pointValuePairConvergenceChecker26);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray6, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator24, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer31 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100, doubleArray6);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer32 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10, doubleArray6);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList33 = cMAESOptimizer32.getStatisticsMeanHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList34 = cMAESOptimizer32.getStatisticsDHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList35 = cMAESOptimizer32.getStatisticsDHistory();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator24);
        org.junit.Assert.assertNotNull(realMatrixList33);
        org.junit.Assert.assertNotNull(realMatrixList34);
        org.junit.Assert.assertNotNull(realMatrixList35);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ');
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList5 = cMAESOptimizer1.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(realMatrixList5);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer17.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList19 = cMAESOptimizer17.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer17.getStatisticsFitnessHistory();
        java.lang.Class<?> wildcardClass21 = cMAESOptimizer17.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(realMatrixList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType43 = cMAESOptimizer40.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker44 = cMAESOptimizer40.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = cMAESOptimizer40.getConvergenceChecker();
        int int46 = cMAESOptimizer40.getMaxEvaluations();
        int int47 = cMAESOptimizer40.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList48 = cMAESOptimizer40.getStatisticsSigmaHistory();
        int int49 = cMAESOptimizer40.getMaxEvaluations();
        int int50 = cMAESOptimizer40.getMaxEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray51 = cMAESOptimizer40.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(goalType43);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker44);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        double[] doubleArray3 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator21 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker23 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray15, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator21, true, pointValuePairConvergenceChecker23);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray3, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator21, true);
        java.util.List<java.lang.Double> doubleList27 = cMAESOptimizer26.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList28 = cMAESOptimizer26.getStatisticsSigmaHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray29 = cMAESOptimizer26.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator21);
        org.junit.Assert.assertNotNull(doubleList27);
        org.junit.Assert.assertNotNull(doubleList28);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList18 = cMAESOptimizer15.getStatisticsMeanHistory();
        int int19 = cMAESOptimizer15.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer15.getConvergenceChecker();
        int int21 = cMAESOptimizer15.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray22 = cMAESOptimizer15.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(realMatrixList18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        double[] doubleArray6 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator25 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker27 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray19, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator25, true, pointValuePairConvergenceChecker27);
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator46 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker48 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer49 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray40, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator46, true, pointValuePairConvergenceChecker48);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker51 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray19, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator46, true, pointValuePairConvergenceChecker51);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator67 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker69 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray61, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator67, true, pointValuePairConvergenceChecker69);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray61);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker72 = cMAESOptimizer71.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray6, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator46, false, pointValuePairConvergenceChecker72);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray6);
        org.apache.commons.math3.random.RandomGenerator randomGenerator80 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray6, 0, (-1.0d), true, (int) ' ', (int) 'a', randomGenerator80, true);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList83 = cMAESOptimizer82.getStatisticsMeanHistory();
        java.lang.Class<?> wildcardClass84 = cMAESOptimizer82.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator25);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator46);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator67);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker72);
        org.junit.Assert.assertNotNull(randomGenerator80);
        org.junit.Assert.assertNotNull(realMatrixList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        double[] doubleArray8 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer9 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray8);
        double[] doubleArray18 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator36 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker38 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer39 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray30, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator36, true, pointValuePairConvergenceChecker38);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer41 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray18, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator36, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer43 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray8, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator36, true);
        int int44 = cMAESOptimizer43.getEvaluations();
        int int45 = cMAESOptimizer43.getMaxEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList46 = cMAESOptimizer43.getStatisticsDHistory();
        int int47 = cMAESOptimizer43.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator36);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(realMatrixList46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker2 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList3 = cMAESOptimizer1.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer1.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType5 = cMAESOptimizer1.getGoalType();
        int int6 = cMAESOptimizer1.getMaxEvaluations();
        int int7 = cMAESOptimizer1.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker8 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList9 = cMAESOptimizer1.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker2);
        org.junit.Assert.assertNotNull(realMatrixList3);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNull(goalType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker8);
        org.junit.Assert.assertNotNull(realMatrixList9);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1);
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer1.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(doubleList5);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        double[] doubleArray8 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer9 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray8);
        double[] doubleArray18 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator36 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker38 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer39 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray30, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator36, true, pointValuePairConvergenceChecker38);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer41 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray18, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator36, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer43 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray8, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator36, true);
        int int44 = cMAESOptimizer43.getEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction46 = null;
        org.apache.commons.math3.optimization.GoalType goalType47 = null;
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator62 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker64 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer65 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray56, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator62, true, pointValuePairConvergenceChecker64);
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator83 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker85 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray77, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator83, true, pointValuePairConvergenceChecker85);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker88 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray56, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator83, true, pointValuePairConvergenceChecker88);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray56);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair91 = cMAESOptimizer43.optimize((int) (short) 100, multivariateFunction46, goalType47, doubleArray56);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator36);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator62);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator83);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        double[] doubleArray11 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator30 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker32 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer33 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray24, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator30, true, pointValuePairConvergenceChecker32);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator51 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer54 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray45, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator51, true, pointValuePairConvergenceChecker53);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker56 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer57 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray24, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator51, true, pointValuePairConvergenceChecker56);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator72 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker74 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray66, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator72, true, pointValuePairConvergenceChecker74);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray66);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker77 = cMAESOptimizer76.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray11, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator51, false, pointValuePairConvergenceChecker77);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray11);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray11);
        int int86 = cMAESOptimizer85.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray87 = cMAESOptimizer85.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator30);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator51);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator72);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker77);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        double[] doubleArray6 = new double[] { 0 };
        double[] doubleArray16 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator35 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker37 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer38 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray29, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator35, true, pointValuePairConvergenceChecker37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator56 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray50, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator56, true, pointValuePairConvergenceChecker58);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker61 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer62 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray29, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator56, true, pointValuePairConvergenceChecker61);
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator77 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray71, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator77, true, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray71);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker82 = cMAESOptimizer81.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray16, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator56, false, pointValuePairConvergenceChecker82);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray6, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator56, true);
        org.apache.commons.math3.random.RandomGenerator randomGenerator91 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker94 = cMAESOptimizer93.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray6, (int) '4', 0.0d, true, (int) (byte) 1, (int) ' ', randomGenerator91, true, pointValuePairConvergenceChecker94);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer96 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray6);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer97 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray6);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer98 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator35);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator56);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator77);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker82);
        org.junit.Assert.assertNotNull(randomGenerator91);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker94);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        double[] doubleArray4 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator22 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker24 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray16, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator22, true, pointValuePairConvergenceChecker24);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray4, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator22, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray4);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray29 = cMAESOptimizer28.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator22);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        int int43 = cMAESOptimizer40.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList44 = cMAESOptimizer40.getStatisticsDHistory();
        org.apache.commons.math3.optimization.GoalType goalType45 = cMAESOptimizer40.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker46 = cMAESOptimizer40.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray47 = cMAESOptimizer40.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(realMatrixList44);
        org.junit.Assert.assertNull(goalType45);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker46);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        double[] doubleArray5 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator24 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray18, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator24, true, pointValuePairConvergenceChecker26);
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray18, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator45, true, pointValuePairConvergenceChecker50);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray60);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = cMAESOptimizer70.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray5, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator45, false, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray5);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList74 = cMAESOptimizer73.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList75 = cMAESOptimizer73.getStatisticsFitnessHistory();
        int int76 = cMAESOptimizer73.getMaxEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray77 = cMAESOptimizer73.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator24);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker71);
        org.junit.Assert.assertNotNull(realMatrixList74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1);
        int int2 = cMAESOptimizer1.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType4 = cMAESOptimizer1.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType5 = cMAESOptimizer1.getGoalType();
        java.lang.Class<?> wildcardClass6 = cMAESOptimizer1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertNull(goalType4);
        org.junit.Assert.assertNull(goalType5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100);
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsSigmaHistory();
        int int3 = cMAESOptimizer1.getEvaluations();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer1.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList6 = cMAESOptimizer1.getStatisticsMeanHistory();
        int int7 = cMAESOptimizer1.getEvaluations();
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(realMatrixList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker42 = cMAESOptimizer40.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList43 = cMAESOptimizer40.getStatisticsSigmaHistory();
        int int44 = cMAESOptimizer40.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray45 = cMAESOptimizer40.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker42);
        org.junit.Assert.assertNotNull(doubleList43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        double[] doubleArray13 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer14 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray13);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray13);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray13);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray13);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray13);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer19 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray13);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer20 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1);
        int int2 = cMAESOptimizer1.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType4 = cMAESOptimizer1.getGoalType();
        int int5 = cMAESOptimizer1.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertNull(goalType4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(doubleList6);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        double[] doubleArray2 = new double[] { 0 };
        double[] doubleArray12 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator31 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker33 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer34 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray25, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator31, true, pointValuePairConvergenceChecker33);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator52 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray46, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator52, true, pointValuePairConvergenceChecker54);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker57 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer58 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray25, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator52, true, pointValuePairConvergenceChecker57);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator73 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker75 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray67, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator73, true, pointValuePairConvergenceChecker75);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray67);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer77.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray12, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator52, false, pointValuePairConvergenceChecker78);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray2, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator52, true);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker82 = cMAESOptimizer81.getConvergenceChecker();
        int int83 = cMAESOptimizer81.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList84 = cMAESOptimizer81.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator31);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator52);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator73);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        double[] doubleArray1 = null;
        double[] doubleArray15 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray15);
        double[] doubleArray25 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator43 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer46 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray37, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator43, true, pointValuePairConvergenceChecker45);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray25, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray15, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = cMAESOptimizer52.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = cMAESOptimizer52.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray1, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator43, false, pointValuePairConvergenceChecker54);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker56 = cMAESOptimizer55.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList57 = cMAESOptimizer55.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = cMAESOptimizer55.getConvergenceChecker();
        java.lang.Class<?> wildcardClass59 = pointValuePairConvergenceChecker58.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator43);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker53);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker54);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker56);
        org.junit.Assert.assertNotNull(doubleList57);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100);
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction6 = null;
        org.apache.commons.math3.optimization.GoalType goalType7 = null;
        double[] doubleArray17 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray17);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer19 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray17);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer20 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair21 = cMAESOptimizer1.optimize((int) '4', multivariateFunction6, goalType7, doubleArray17);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        double[] doubleArray7 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator26 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker28 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray20, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator26, true, pointValuePairConvergenceChecker28);
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator47 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray41, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator47, true, pointValuePairConvergenceChecker49);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker52 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer53 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray20, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator47, true, pointValuePairConvergenceChecker52);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator68 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray62, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator68, true, pointValuePairConvergenceChecker70);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray62);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = cMAESOptimizer72.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray7, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator47, false, pointValuePairConvergenceChecker73);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray7);
        double[] doubleArray83 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator89 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray83, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator89, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray7, (int) (short) 10, (double) ' ', false, (int) (byte) -1, (int) (byte) 0, randomGenerator89, false);
        int int94 = cMAESOptimizer93.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType95 = cMAESOptimizer93.getGoalType();
        int int96 = cMAESOptimizer93.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator26);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator47);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator68);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker73);
        org.junit.Assert.assertNotNull(randomGenerator89);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertNull(goalType95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        double[] doubleArray6 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator25 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker27 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray19, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator25, true, pointValuePairConvergenceChecker27);
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator46 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker48 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer49 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray40, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator46, true, pointValuePairConvergenceChecker48);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker51 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray19, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator46, true, pointValuePairConvergenceChecker51);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator67 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker69 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray61, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator67, true, pointValuePairConvergenceChecker69);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray61);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker72 = cMAESOptimizer71.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray6, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator46, false, pointValuePairConvergenceChecker72);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray6);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator25);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator46);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator67);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker72);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer15.getConvergenceChecker();
        int int21 = cMAESOptimizer15.getEvaluations();
        java.util.List<java.lang.Double> doubleList22 = cMAESOptimizer15.getStatisticsFitnessHistory();
        int int23 = cMAESOptimizer15.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer1.getStatisticsDHistory();
        int int3 = cMAESOptimizer1.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer1.getConvergenceChecker();
        org.apache.commons.math3.optimization.GoalType goalType5 = cMAESOptimizer1.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList6 = cMAESOptimizer1.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList7 = cMAESOptimizer1.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNull(goalType5);
        org.junit.Assert.assertNotNull(realMatrixList6);
        org.junit.Assert.assertNotNull(doubleList7);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker2 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList3 = cMAESOptimizer1.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer1.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType5 = cMAESOptimizer1.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList6 = cMAESOptimizer1.getStatisticsDHistory();
        int int7 = cMAESOptimizer1.getEvaluations();
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker2);
        org.junit.Assert.assertNotNull(realMatrixList3);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNull(goalType5);
        org.junit.Assert.assertNotNull(realMatrixList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        double[] doubleArray10 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer11 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer12 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer13 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray10);
        double[] doubleArray20 = null;
        double[] doubleArray34 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray34);
        double[] doubleArray44 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator62 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker64 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer65 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray56, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator62, true, pointValuePairConvergenceChecker64);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer67 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray44, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator62, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray34, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator62, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker72 = cMAESOptimizer71.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray20, (int) 'a', (double) (byte) 100, false, (int) 'a', 10, randomGenerator62, true, pointValuePairConvergenceChecker72);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList77 = cMAESOptimizer76.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer76.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray10, 100, (double) (byte) 100, true, 0, (int) (short) 0, randomGenerator62, false, pointValuePairConvergenceChecker78);
        int int80 = cMAESOptimizer79.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray81 = cMAESOptimizer79.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator62);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker72);
        org.junit.Assert.assertNotNull(realMatrixList77);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        double[] doubleArray9 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer10 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray9);
        double[] doubleArray19 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator37 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray31, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator37, true, pointValuePairConvergenceChecker39);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer42 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray19, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator37, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer44 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray9, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator37, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer45 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray9);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray46 = cMAESOptimizer45.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator37);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0);
        org.apache.commons.math3.optimization.GoalType goalType2 = cMAESOptimizer1.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        int int4 = cMAESOptimizer1.getEvaluations();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction8 = null;
        org.apache.commons.math3.optimization.GoalType goalType9 = null;
        double[] doubleArray15 = new double[] { 0 };
        double[] doubleArray25 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator44 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker46 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer47 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray38, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator44, true, pointValuePairConvergenceChecker46);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator65 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker67 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer68 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray59, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator65, true, pointValuePairConvergenceChecker67);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray38, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator65, true, pointValuePairConvergenceChecker70);
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator86 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker88 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray80, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator86, true, pointValuePairConvergenceChecker88);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray80);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker91 = cMAESOptimizer90.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray25, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator65, false, pointValuePairConvergenceChecker91);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray15, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator65, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer96 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer97 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair98 = cMAESOptimizer1.optimize((int) 'a', multivariateFunction8, goalType9, doubleArray15);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(goalType2);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator44);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator65);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator86);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker91);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType43 = cMAESOptimizer40.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker44 = cMAESOptimizer40.getConvergenceChecker();
        org.apache.commons.math3.optimization.GoalType goalType45 = cMAESOptimizer40.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList46 = cMAESOptimizer40.getStatisticsDHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(goalType43);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker44);
        org.junit.Assert.assertNull(goalType45);
        org.junit.Assert.assertNotNull(realMatrixList46);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer0 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker1 = cMAESOptimizer0.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker2 = cMAESOptimizer0.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer0.getStatisticsSigmaHistory();
        int int4 = cMAESOptimizer0.getEvaluations();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer0.getStatisticsSigmaHistory();
        java.lang.Class<?> wildcardClass6 = cMAESOptimizer0.getClass();
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker1);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray26 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray39, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator66, true, pointValuePairConvergenceChecker71);
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator87 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker89 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray81, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator87, true, pointValuePairConvergenceChecker89);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray81);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker92 = cMAESOptimizer91.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray26, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator66, false, pointValuePairConvergenceChecker92);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10, doubleArray7, (int) '#', (double) (short) 100, false, (int) (byte) 10, 1, randomGenerator66, false);
        java.util.List<java.lang.Double> doubleList96 = cMAESOptimizer95.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType97 = cMAESOptimizer95.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker98 = cMAESOptimizer95.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList99 = cMAESOptimizer95.getStatisticsDHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator87);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker92);
        org.junit.Assert.assertNotNull(doubleList96);
        org.junit.Assert.assertNull(goalType97);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker98);
        org.junit.Assert.assertNotNull(realMatrixList99);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100);
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType4 = cMAESOptimizer1.getGoalType();
        int int5 = cMAESOptimizer1.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer1.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertNull(goalType4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(doubleList6);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray7);
        org.apache.commons.math3.optimization.GoalType goalType18 = cMAESOptimizer17.getGoalType();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer17.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNull(goalType18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        double[] doubleArray1 = null;
        double[] doubleArray9 = new double[] { 0 };
        double[] doubleArray19 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator38 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker40 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer41 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray32, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator38, true, pointValuePairConvergenceChecker40);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator59 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker61 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer62 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray53, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator59, true, pointValuePairConvergenceChecker61);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker64 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer65 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray32, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator59, true, pointValuePairConvergenceChecker64);
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator80 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker82 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray74, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator80, true, pointValuePairConvergenceChecker82);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray74);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker85 = cMAESOptimizer84.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray19, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator59, false, pointValuePairConvergenceChecker85);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer88 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray9, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator59, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray1, 0, (double) (byte) 10, true, (int) (short) 100, (int) (byte) 100, randomGenerator59, true);
        int int91 = cMAESOptimizer90.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker92 = cMAESOptimizer90.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator38);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator59);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator80);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker85);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker92);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        double[] doubleArray5 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator24 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray18, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator24, true, pointValuePairConvergenceChecker26);
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray18, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator45, true, pointValuePairConvergenceChecker50);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray60);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = cMAESOptimizer70.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray5, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator45, false, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100, doubleArray5);
        java.util.List<java.lang.Double> doubleList74 = cMAESOptimizer73.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator24);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker71);
        org.junit.Assert.assertNotNull(doubleList74);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        double[] doubleArray3 = new double[] { 0 };
        double[] doubleArray13 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator32 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray26, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator32, true, pointValuePairConvergenceChecker34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator53 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker55 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray47, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator53, true, pointValuePairConvergenceChecker55);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray26, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator53, true, pointValuePairConvergenceChecker58);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator74 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray68, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator74, true, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray13, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator53, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray3, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator53, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray3);
        int int84 = cMAESOptimizer83.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType85 = cMAESOptimizer83.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker86 = cMAESOptimizer83.getConvergenceChecker();
        org.apache.commons.math3.optimization.GoalType goalType87 = cMAESOptimizer83.getGoalType();
        java.util.List<java.lang.Double> doubleList88 = cMAESOptimizer83.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList89 = cMAESOptimizer83.getStatisticsDHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray90 = cMAESOptimizer83.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator32);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNull(goalType85);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker86);
        org.junit.Assert.assertNull(goalType87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(realMatrixList89);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        double[] doubleArray10 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer11 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer12 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer13 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer14 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray10);
        java.util.List<java.lang.Double> doubleList15 = cMAESOptimizer14.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer14.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker2 = cMAESOptimizer1.getConvergenceChecker();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        int int4 = cMAESOptimizer1.getEvaluations();
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker2);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        double[] doubleArray1 = null;
        double[] doubleArray8 = null;
        double[] doubleArray22 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer23 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray22);
        double[] doubleArray32 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator50 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker52 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer53 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray44, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator50, true, pointValuePairConvergenceChecker52);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray32, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator50, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer57 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray22, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator50, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = cMAESOptimizer59.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer61 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray8, (int) 'a', (double) (byte) 100, false, (int) 'a', 10, randomGenerator50, true, pointValuePairConvergenceChecker60);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer63 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray1, 1, (double) 100.0f, true, (int) 'a', (int) (short) 100, randomGenerator50, true);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList64 = cMAESOptimizer63.getStatisticsMeanHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList65 = cMAESOptimizer63.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator50);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker60);
        org.junit.Assert.assertNotNull(realMatrixList64);
        org.junit.Assert.assertNotNull(realMatrixList65);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        double[] doubleArray2 = new double[] { 0 };
        double[] doubleArray12 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator31 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker33 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer34 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray25, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator31, true, pointValuePairConvergenceChecker33);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator52 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray46, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator52, true, pointValuePairConvergenceChecker54);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker57 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer58 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray25, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator52, true, pointValuePairConvergenceChecker57);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator73 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker75 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray67, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator73, true, pointValuePairConvergenceChecker75);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray67);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer77.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray12, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator52, false, pointValuePairConvergenceChecker78);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray2, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator52, true);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList82 = cMAESOptimizer81.getStatisticsDHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList83 = cMAESOptimizer81.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList84 = cMAESOptimizer81.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType85 = cMAESOptimizer81.getGoalType();
        java.util.List<java.lang.Double> doubleList86 = cMAESOptimizer81.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList87 = cMAESOptimizer81.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker88 = cMAESOptimizer81.getConvergenceChecker();
        int int89 = cMAESOptimizer81.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator31);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator52);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator73);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
        org.junit.Assert.assertNotNull(realMatrixList82);
        org.junit.Assert.assertNotNull(realMatrixList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNull(goalType85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(realMatrixList87);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        double[] doubleArray8 = new double[] { (-1.0f), 100L, 100.0d, '4', 1, (byte) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer9 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray8);
        double[] doubleArray23 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray23);
        double[] doubleArray33 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator51 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer54 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray45, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator51, true, pointValuePairConvergenceChecker53);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray33, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator51, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer58 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray23, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator51, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer60 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray8, 100, (double) (byte) -1, true, (int) '4', (int) (short) 10, randomGenerator51, true);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker61 = cMAESOptimizer60.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 100.0, 52.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator51);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker61);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        double[] doubleArray9 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer10 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray9);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer11 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray9);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer12 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray9);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList13 = cMAESOptimizer12.getStatisticsMeanHistory();
        int int14 = cMAESOptimizer12.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList15 = cMAESOptimizer12.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer12.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(realMatrixList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(realMatrixList15);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        int int43 = cMAESOptimizer40.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList44 = cMAESOptimizer40.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList45 = cMAESOptimizer40.getStatisticsSigmaHistory();
        int int46 = cMAESOptimizer40.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(realMatrixList44);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        double[] doubleArray8 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator27 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker29 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray21, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator27, true, pointValuePairConvergenceChecker29);
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator48 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray42, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator48, true, pointValuePairConvergenceChecker50);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer54 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray21, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator48, true, pointValuePairConvergenceChecker53);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator69 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray63, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator69, true, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray63);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker74 = cMAESOptimizer73.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray8, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator48, false, pointValuePairConvergenceChecker74);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray8);
        org.apache.commons.math3.random.RandomGenerator randomGenerator82 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray8, 0, (-1.0d), true, (int) ' ', (int) 'a', randomGenerator82, true);
        org.apache.commons.math3.random.RandomGenerator randomGenerator90 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray8, (int) (short) 10, (double) 0L, false, (int) (short) 0, (int) '#', randomGenerator90, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray8);
        org.apache.commons.math3.optimization.GoalType goalType94 = cMAESOptimizer93.getGoalType();
        java.util.List<java.lang.Double> doubleList95 = cMAESOptimizer93.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator27);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator48);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator69);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker74);
        org.junit.Assert.assertNotNull(randomGenerator82);
        org.junit.Assert.assertNotNull(randomGenerator90);
        org.junit.Assert.assertNull(goalType94);
        org.junit.Assert.assertNotNull(doubleList95);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        double[] doubleArray2 = new double[] { 0 };
        double[] doubleArray12 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator31 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker33 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer34 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray25, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator31, true, pointValuePairConvergenceChecker33);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator52 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray46, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator52, true, pointValuePairConvergenceChecker54);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker57 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer58 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray25, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator52, true, pointValuePairConvergenceChecker57);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator73 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker75 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray67, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator73, true, pointValuePairConvergenceChecker75);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray67);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer77.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray12, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator52, false, pointValuePairConvergenceChecker78);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray2, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator52, true);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList82 = cMAESOptimizer81.getStatisticsDHistory();
        int int83 = cMAESOptimizer81.getEvaluations();
        java.util.List<java.lang.Double> doubleList84 = cMAESOptimizer81.getStatisticsFitnessHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray85 = cMAESOptimizer81.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator31);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator52);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator73);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
        org.junit.Assert.assertNotNull(realMatrixList82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        double[] doubleArray7 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator26 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker28 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray20, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator26, true, pointValuePairConvergenceChecker28);
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator47 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray41, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator47, true, pointValuePairConvergenceChecker49);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker52 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer53 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray20, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator47, true, pointValuePairConvergenceChecker52);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator68 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray62, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator68, true, pointValuePairConvergenceChecker70);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray62);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = cMAESOptimizer72.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray7, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator47, false, pointValuePairConvergenceChecker73);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.random.RandomGenerator randomGenerator81 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray7, 0, (-1.0d), true, (int) ' ', (int) 'a', randomGenerator81, true);
        org.apache.commons.math3.random.RandomGenerator randomGenerator89 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray7, (int) (short) 10, (double) 0L, false, (int) (short) 0, (int) '#', randomGenerator89, false);
        java.util.List<java.lang.Double> doubleList92 = cMAESOptimizer91.getStatisticsFitnessHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray93 = cMAESOptimizer91.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator26);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator47);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator68);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker73);
        org.junit.Assert.assertNotNull(randomGenerator81);
        org.junit.Assert.assertNotNull(randomGenerator89);
        org.junit.Assert.assertNotNull(doubleList92);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        double[] doubleArray9 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator15 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker17 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray9, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator15, true, pointValuePairConvergenceChecker17);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer19 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray9);
        double[] doubleArray26 = null;
        double[] doubleArray40 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer41 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator68 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray62, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator68, true, pointValuePairConvergenceChecker70);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray50, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator68, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray40, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator68, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer77.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer77.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray26, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator68, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray9, 10, (double) 10, true, (int) '4', 100, randomGenerator68, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray9);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList84 = cMAESOptimizer83.getStatisticsMeanHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray85 = cMAESOptimizer83.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator15);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator68);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertNotNull(realMatrixList84);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType43 = cMAESOptimizer40.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker44 = cMAESOptimizer40.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = cMAESOptimizer40.getConvergenceChecker();
        int int46 = cMAESOptimizer40.getMaxEvaluations();
        int int47 = cMAESOptimizer40.getMaxEvaluations();
        java.lang.Class<?> wildcardClass48 = cMAESOptimizer40.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(goalType43);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker44);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray7);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList18 = cMAESOptimizer17.getStatisticsMeanHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList19 = cMAESOptimizer17.getStatisticsDHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(realMatrixList18);
        org.junit.Assert.assertNotNull(realMatrixList19);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        double[] doubleArray2 = new double[] { 0 };
        double[] doubleArray12 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator31 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker33 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer34 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray25, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator31, true, pointValuePairConvergenceChecker33);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator52 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray46, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator52, true, pointValuePairConvergenceChecker54);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker57 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer58 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray25, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator52, true, pointValuePairConvergenceChecker57);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator73 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker75 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray67, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator73, true, pointValuePairConvergenceChecker75);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray67);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer77.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray12, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator52, false, pointValuePairConvergenceChecker78);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray2, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator52, true);
        int int82 = cMAESOptimizer81.getEvaluations();
        int int83 = cMAESOptimizer81.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType84 = cMAESOptimizer81.getGoalType();
        java.util.List<java.lang.Double> doubleList85 = cMAESOptimizer81.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList86 = cMAESOptimizer81.getStatisticsSigmaHistory();
        java.lang.Class<?> wildcardClass87 = doubleList86.getClass();
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator31);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator52);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator73);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNull(goalType84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        double[] doubleArray8 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer9 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray8);
        double[] doubleArray18 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator36 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker38 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer39 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray30, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator36, true, pointValuePairConvergenceChecker38);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer41 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray18, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator36, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer43 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray8, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator36, true);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList44 = cMAESOptimizer43.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = cMAESOptimizer43.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator36);
        org.junit.Assert.assertNotNull(realMatrixList44);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker45);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        double[] doubleArray5 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator24 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray18, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator24, true, pointValuePairConvergenceChecker26);
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray18, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator45, true, pointValuePairConvergenceChecker50);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray60);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = cMAESOptimizer70.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray5, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator45, false, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5);
        java.util.List<java.lang.Double> doubleList74 = cMAESOptimizer73.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator24);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker71);
        org.junit.Assert.assertNotNull(doubleList74);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1);
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer1.getConvergenceChecker();
        org.apache.commons.math3.optimization.GoalType goalType5 = cMAESOptimizer1.getGoalType();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType7 = cMAESOptimizer1.getGoalType();
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNull(goalType5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNull(goalType7);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        double[] doubleArray6 = new double[] { 0 };
        double[] doubleArray16 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator35 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker37 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer38 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray29, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator35, true, pointValuePairConvergenceChecker37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator56 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray50, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator56, true, pointValuePairConvergenceChecker58);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker61 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer62 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray29, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator56, true, pointValuePairConvergenceChecker61);
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator77 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray71, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator77, true, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray71);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker82 = cMAESOptimizer81.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray16, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator56, false, pointValuePairConvergenceChecker82);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray6, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator56, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray6);
        org.apache.commons.math3.random.RandomGenerator randomGenerator92 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker96 = cMAESOptimizer95.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer97 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray6, (int) (short) 100, (double) 100L, false, 100, (int) (short) 1, randomGenerator92, true, pointValuePairConvergenceChecker96);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer98 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray6);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer99 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator35);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator56);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator77);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker82);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker96);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType43 = cMAESOptimizer40.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker44 = cMAESOptimizer40.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = cMAESOptimizer40.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList46 = cMAESOptimizer40.getStatisticsMeanHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList47 = cMAESOptimizer40.getStatisticsDHistory();
        int int48 = cMAESOptimizer40.getMaxEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList49 = cMAESOptimizer40.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(goalType43);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker44);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker45);
        org.junit.Assert.assertNotNull(realMatrixList46);
        org.junit.Assert.assertNotNull(realMatrixList47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(realMatrixList49);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100);
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsSigmaHistory();
        int int3 = cMAESOptimizer1.getEvaluations();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType5 = cMAESOptimizer1.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList6 = cMAESOptimizer1.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList7 = cMAESOptimizer1.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNull(goalType5);
        org.junit.Assert.assertNotNull(realMatrixList6);
        org.junit.Assert.assertNotNull(doubleList7);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        int int2 = cMAESOptimizer1.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList3 = cMAESOptimizer1.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer1.getStatisticsFitnessHistory();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(realMatrixList3);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(doubleList5);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        double[] doubleArray10 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator16 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer19 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray10, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator16, true, pointValuePairConvergenceChecker18);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer20 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray10);
        double[] doubleArray27 = null;
        double[] doubleArray41 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer42 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray41);
        double[] doubleArray51 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator69 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray63, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator69, true, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray51, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator69, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray41, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator69, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker80 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray27, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator69, false, pointValuePairConvergenceChecker80);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray10, 10, (double) 10, true, (int) '4', 100, randomGenerator69, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray10);
        java.util.List<java.lang.Double> doubleList86 = cMAESOptimizer85.getStatisticsFitnessHistory();
        int int87 = cMAESOptimizer85.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList88 = cMAESOptimizer85.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator16);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator69);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker80);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        double[] doubleArray4 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray17, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator23, true, pointValuePairConvergenceChecker25);
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator44 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker46 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer47 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray38, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator44, true, pointValuePairConvergenceChecker46);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray17, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator44, true, pointValuePairConvergenceChecker49);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator65 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker67 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer68 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray59, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator65, true, pointValuePairConvergenceChecker67);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray59);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = cMAESOptimizer69.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray4, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator44, false, pointValuePairConvergenceChecker70);
        int int72 = cMAESOptimizer71.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = cMAESOptimizer71.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker74 = cMAESOptimizer71.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker75 = cMAESOptimizer71.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = cMAESOptimizer71.getConvergenceChecker();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray77 = cMAESOptimizer71.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator23);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator44);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator65);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker73);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker75);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker76);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer15.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList21 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList22 = cMAESOptimizer15.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList23 = cMAESOptimizer15.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList24 = cMAESOptimizer15.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(realMatrixList22);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertNotNull(realMatrixList24);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1);
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList5 = cMAESOptimizer1.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer1.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(realMatrixList5);
        org.junit.Assert.assertNotNull(doubleList6);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        double[] doubleArray9 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator15 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker17 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray9, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator15, true, pointValuePairConvergenceChecker17);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer19 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray9);
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator38 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker40 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer41 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray32, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator38, true, pointValuePairConvergenceChecker40);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator59 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker61 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer62 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray53, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator59, true, pointValuePairConvergenceChecker61);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker64 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer65 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray32, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator59, true, pointValuePairConvergenceChecker64);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer67 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray9, 0, (double) 0L, true, (int) '4', (int) (short) 0, randomGenerator59, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer68 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray9);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList69 = cMAESOptimizer68.getStatisticsDHistory();
        int int70 = cMAESOptimizer68.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator15);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator38);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator59);
        org.junit.Assert.assertNotNull(realMatrixList69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        java.util.List<java.lang.Double> doubleList43 = cMAESOptimizer40.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList44 = cMAESOptimizer40.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList45 = cMAESOptimizer40.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(doubleList43);
        org.junit.Assert.assertNotNull(realMatrixList44);
        org.junit.Assert.assertNotNull(doubleList45);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        double[] doubleArray5 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray17, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator23, true, pointValuePairConvergenceChecker25);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray5, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator23, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray5);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray5);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList31 = cMAESOptimizer30.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList32 = cMAESOptimizer30.getStatisticsFitnessHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray33 = cMAESOptimizer30.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator23);
        org.junit.Assert.assertNotNull(realMatrixList31);
        org.junit.Assert.assertNotNull(doubleList32);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer15.getConvergenceChecker();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction22 = null;
        org.apache.commons.math3.optimization.GoalType goalType23 = null;
        double[] doubleArray28 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray28);
        org.apache.commons.math3.random.RandomGenerator randomGenerator35 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray28, (int) (byte) 100, (double) 0.0f, true, (int) (byte) -1, (int) 'a', randomGenerator35, false);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair38 = cMAESOptimizer15.optimize((int) (short) -1, multivariateFunction22, goalType23, doubleArray28);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 1.0]");
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100);
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType4 = cMAESOptimizer1.getGoalType();
        int int5 = cMAESOptimizer1.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList6 = cMAESOptimizer1.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.GoalType goalType7 = cMAESOptimizer1.getGoalType();
        java.util.List<java.lang.Double> doubleList8 = cMAESOptimizer1.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertNull(goalType4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(realMatrixList6);
        org.junit.Assert.assertNull(goalType7);
        org.junit.Assert.assertNotNull(doubleList8);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer1.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertNotNull(doubleList3);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        double[] doubleArray8 = new double[] { (-1.0f), 100L, 100.0d, '4', 1, (byte) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer9 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray8);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer10 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 100.0, 52.0, 1.0, 1.0]");
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.optimization.GoalType goalType18 = cMAESOptimizer17.getGoalType();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer17.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList20 = cMAESOptimizer17.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList21 = cMAESOptimizer17.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList22 = cMAESOptimizer17.getStatisticsDHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray23 = cMAESOptimizer17.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNull(goalType18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(realMatrixList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(realMatrixList22);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer1.getStatisticsMeanHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList3 = cMAESOptimizer1.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertNotNull(realMatrixList3);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker17 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList18 = cMAESOptimizer15.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker17);
        org.junit.Assert.assertNotNull(realMatrixList18);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        double[] doubleArray3 = new double[] { 0 };
        double[] doubleArray13 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator32 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray26, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator32, true, pointValuePairConvergenceChecker34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator53 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker55 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray47, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator53, true, pointValuePairConvergenceChecker55);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray26, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator53, true, pointValuePairConvergenceChecker58);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator74 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray68, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator74, true, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray13, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator53, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray3, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator53, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray3);
        java.util.List<java.lang.Double> doubleList84 = cMAESOptimizer83.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType85 = cMAESOptimizer83.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType86 = cMAESOptimizer83.getGoalType();
        int int87 = cMAESOptimizer83.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator32);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNull(goalType85);
        org.junit.Assert.assertNull(goalType86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        double[] doubleArray8 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator14 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker16 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray8, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator14, true, pointValuePairConvergenceChecker16);
        double[] doubleArray27 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator46 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker48 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer49 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray40, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator46, true, pointValuePairConvergenceChecker48);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator67 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker69 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray61, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator67, true, pointValuePairConvergenceChecker69);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker72 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray40, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator67, true, pointValuePairConvergenceChecker72);
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator88 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker90 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray82, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator88, true, pointValuePairConvergenceChecker90);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray82);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker93 = cMAESOptimizer92.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray27, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator67, false, pointValuePairConvergenceChecker93);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer96 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray8, (int) ' ', (double) 100.0f, false, 0, (int) (short) 100, randomGenerator67, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer97 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray8);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList98 = cMAESOptimizer97.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker99 = cMAESOptimizer97.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator14);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator46);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator67);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator88);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker93);
        org.junit.Assert.assertNotNull(realMatrixList98);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker99);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        org.apache.commons.math3.optimization.GoalType goalType2 = cMAESOptimizer1.getGoalType();
        int int3 = cMAESOptimizer1.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType4 = cMAESOptimizer1.getGoalType();
        int int5 = cMAESOptimizer1.getEvaluations();
        int int6 = cMAESOptimizer1.getEvaluations();
        org.junit.Assert.assertNull(goalType2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(goalType4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        double[] doubleArray9 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator15 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker17 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray9, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator15, true, pointValuePairConvergenceChecker17);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer19 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray9);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer20 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray9);
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator40 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker42 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer43 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray34, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator40, true, pointValuePairConvergenceChecker42);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer44 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray34);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator63 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker65 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer66 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray57, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator63, true, pointValuePairConvergenceChecker65);
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator84 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker86 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray78, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator84, true, pointValuePairConvergenceChecker86);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker89 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray57, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator84, true, pointValuePairConvergenceChecker89);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray34, 0, (double) 0L, true, (int) '4', (int) (short) 0, randomGenerator84, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray9, (int) (short) 10, 1.0d, false, 1, (int) (short) 100, randomGenerator84, true);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator15);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator40);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator63);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator84);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<java.lang.Double> doubleList41 = cMAESOptimizer40.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList42 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int43 = cMAESOptimizer40.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray44 = cMAESOptimizer40.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(doubleList41);
        org.junit.Assert.assertNotNull(realMatrixList42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100);
        org.apache.commons.math3.optimization.GoalType goalType2 = cMAESOptimizer1.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        int int4 = cMAESOptimizer1.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType5 = cMAESOptimizer1.getGoalType();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer1.getStatisticsSigmaHistory();
        int int7 = cMAESOptimizer1.getMaxEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList8 = cMAESOptimizer1.getStatisticsDHistory();
        org.junit.Assert.assertNull(goalType2);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(goalType5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(realMatrixList8);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        double[] doubleArray4 = new double[] { 0 };
        double[] doubleArray14 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator33 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker35 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer36 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray27, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator33, true, pointValuePairConvergenceChecker35);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator54 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker56 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer57 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray48, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator54, true, pointValuePairConvergenceChecker56);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker59 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer60 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray27, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator54, true, pointValuePairConvergenceChecker59);
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator75 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker77 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray69, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator75, true, pointValuePairConvergenceChecker77);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray69);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker80 = cMAESOptimizer79.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray14, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator54, false, pointValuePairConvergenceChecker80);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray4, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator54, true);
        org.apache.commons.math3.random.RandomGenerator randomGenerator89 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker92 = cMAESOptimizer91.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray4, (int) '4', 0.0d, true, (int) (byte) 1, (int) ' ', randomGenerator89, true, pointValuePairConvergenceChecker92);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray4);
        java.util.List<java.lang.Double> doubleList95 = cMAESOptimizer94.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker96 = cMAESOptimizer94.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker97 = cMAESOptimizer94.getConvergenceChecker();
        int int98 = cMAESOptimizer94.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator33);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator54);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator75);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker80);
        org.junit.Assert.assertNotNull(randomGenerator89);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker92);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker96);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        double[] doubleArray4 = new double[] { 0 };
        double[] doubleArray14 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator33 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker35 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer36 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray27, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator33, true, pointValuePairConvergenceChecker35);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator54 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker56 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer57 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray48, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator54, true, pointValuePairConvergenceChecker56);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker59 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer60 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray27, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator54, true, pointValuePairConvergenceChecker59);
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator75 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker77 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray69, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator75, true, pointValuePairConvergenceChecker77);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray69);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker80 = cMAESOptimizer79.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray14, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator54, false, pointValuePairConvergenceChecker80);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray4, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator54, true);
        org.apache.commons.math3.random.RandomGenerator randomGenerator89 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker92 = cMAESOptimizer91.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray4, (int) '4', 0.0d, true, (int) (byte) 1, (int) ' ', randomGenerator89, true, pointValuePairConvergenceChecker92);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray4);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList95 = cMAESOptimizer94.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList96 = cMAESOptimizer94.getStatisticsSigmaHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray97 = cMAESOptimizer94.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator33);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator54);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator75);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker80);
        org.junit.Assert.assertNotNull(randomGenerator89);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker92);
        org.junit.Assert.assertNotNull(realMatrixList95);
        org.junit.Assert.assertNotNull(doubleList96);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        double[] doubleArray2 = new double[] { 0 };
        double[] doubleArray12 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator31 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker33 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer34 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray25, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator31, true, pointValuePairConvergenceChecker33);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator52 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray46, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator52, true, pointValuePairConvergenceChecker54);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker57 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer58 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray25, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator52, true, pointValuePairConvergenceChecker57);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator73 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker75 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray67, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator73, true, pointValuePairConvergenceChecker75);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray67);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer77.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray12, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator52, false, pointValuePairConvergenceChecker78);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray2, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator52, true);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker82 = cMAESOptimizer81.getConvergenceChecker();
        int int83 = cMAESOptimizer81.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType84 = cMAESOptimizer81.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker85 = cMAESOptimizer81.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList86 = cMAESOptimizer81.getStatisticsMeanHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray87 = cMAESOptimizer81.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator31);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator52);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator73);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNull(goalType84);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker85);
        org.junit.Assert.assertNotNull(realMatrixList86);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ');
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        int int4 = cMAESOptimizer1.getMaxEvaluations();
        int int5 = cMAESOptimizer1.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList6 = cMAESOptimizer1.getStatisticsMeanHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList7 = cMAESOptimizer1.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList8 = cMAESOptimizer1.getStatisticsSigmaHistory();
        int int9 = cMAESOptimizer1.getEvaluations();
        java.util.List<java.lang.Double> doubleList10 = cMAESOptimizer1.getStatisticsSigmaHistory();
        int int11 = cMAESOptimizer1.getEvaluations();
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(realMatrixList6);
        org.junit.Assert.assertNotNull(realMatrixList7);
        org.junit.Assert.assertNotNull(doubleList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100);
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType4 = cMAESOptimizer1.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList5 = cMAESOptimizer1.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker6 = cMAESOptimizer1.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertNull(goalType4);
        org.junit.Assert.assertNotNull(realMatrixList5);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker6);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction3 = null;
        org.apache.commons.math3.optimization.GoalType goalType4 = null;
        double[] doubleArray7 = new double[] {};
        double[] doubleArray18 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer19 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray18);
        org.apache.commons.math3.random.RandomGenerator randomGenerator25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray18, (int) (byte) 100, (double) 0.0f, true, (int) (byte) -1, (int) 'a', randomGenerator25, false);
        double[] doubleArray34 = null;
        double[] doubleArray48 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer49 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray48);
        double[] doubleArray58 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator76 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray70, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator76, true, pointValuePairConvergenceChecker78);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray58, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator76, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray48, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator76, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker86 = cMAESOptimizer85.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray34, (int) 'a', (double) (byte) 100, false, (int) 'a', 10, randomGenerator76, true, pointValuePairConvergenceChecker86);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray18, 0, (double) (-1.0f), true, (int) (byte) 10, (int) (byte) 0, randomGenerator76, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray7, 1, (double) (-1.0f), false, (int) (short) 100, (int) '4', randomGenerator76, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair93 = cMAESOptimizer1.optimize((int) (byte) 10, multivariateFunction3, goalType4, doubleArray7);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator76);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker86);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        double[] doubleArray3 = new double[] { 0 };
        double[] doubleArray13 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator32 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray26, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator32, true, pointValuePairConvergenceChecker34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator53 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker55 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray47, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator53, true, pointValuePairConvergenceChecker55);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray26, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator53, true, pointValuePairConvergenceChecker58);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator74 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray68, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator74, true, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray13, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator53, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray3, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator53, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray3);
        int int84 = cMAESOptimizer83.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList85 = cMAESOptimizer83.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList86 = cMAESOptimizer83.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker87 = cMAESOptimizer83.getConvergenceChecker();
        int int88 = cMAESOptimizer83.getMaxEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray89 = cMAESOptimizer83.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator32);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(realMatrixList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        double[] doubleArray3 = new double[] { 0 };
        double[] doubleArray13 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator32 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray26, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator32, true, pointValuePairConvergenceChecker34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator53 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker55 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray47, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator53, true, pointValuePairConvergenceChecker55);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray26, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator53, true, pointValuePairConvergenceChecker58);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator74 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray68, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator74, true, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray13, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator53, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray3, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator53, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray3);
        int int84 = cMAESOptimizer83.getEvaluations();
        java.util.List<java.lang.Double> doubleList85 = cMAESOptimizer83.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType86 = cMAESOptimizer83.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator32);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNull(goalType86);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1);
        org.apache.commons.math3.optimization.GoalType goalType2 = cMAESOptimizer1.getGoalType();
        org.junit.Assert.assertNull(goalType2);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0);
        org.apache.commons.math3.optimization.GoalType goalType2 = cMAESOptimizer1.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        int int4 = cMAESOptimizer1.getEvaluations();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer1.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker6 = cMAESOptimizer1.getConvergenceChecker();
        org.junit.Assert.assertNull(goalType2);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker6);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer0 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList1 = cMAESOptimizer0.getStatisticsMeanHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer0.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer0.getStatisticsFitnessHistory();
        int int4 = cMAESOptimizer0.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer0.getConvergenceChecker();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction7 = null;
        org.apache.commons.math3.optimization.GoalType goalType8 = null;
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray17, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator23, true, pointValuePairConvergenceChecker25);
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator44 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker46 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer47 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray38, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator44, true, pointValuePairConvergenceChecker46);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray17, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator44, true, pointValuePairConvergenceChecker49);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair52 = cMAESOptimizer0.optimize((int) (short) 10, multivariateFunction7, goalType8, doubleArray17);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(realMatrixList1);
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator23);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator44);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        double[] doubleArray8 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer9 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray8);
        double[] doubleArray18 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator36 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker38 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer39 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray30, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator36, true, pointValuePairConvergenceChecker38);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer41 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray18, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator36, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer43 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray8, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator36, true);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList44 = cMAESOptimizer43.getStatisticsDHistory();
        org.apache.commons.math3.optimization.GoalType goalType45 = cMAESOptimizer43.getGoalType();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray46 = cMAESOptimizer43.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator36);
        org.junit.Assert.assertNotNull(realMatrixList44);
        org.junit.Assert.assertNull(goalType45);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        double[] doubleArray4 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer5 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray4);
        double[] doubleArray15 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator55 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker57 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer58 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray49, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator55, true, pointValuePairConvergenceChecker57);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer61 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray28, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator55, true, pointValuePairConvergenceChecker60);
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator76 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray70, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator76, true, pointValuePairConvergenceChecker78);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray70);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker81 = cMAESOptimizer80.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray15, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator55, false, pointValuePairConvergenceChecker81);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker85 = cMAESOptimizer84.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker86 = cMAESOptimizer84.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray4, 100, (double) (byte) 100, true, (int) '#', (int) '#', randomGenerator55, true, pointValuePairConvergenceChecker86);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker88 = cMAESOptimizer87.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker89 = cMAESOptimizer87.getConvergenceChecker();
        int int90 = cMAESOptimizer87.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray91 = cMAESOptimizer87.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator55);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator76);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker81);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker85);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker86);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker88);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        double[] doubleArray3 = new double[] { 0 };
        double[] doubleArray13 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator32 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray26, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator32, true, pointValuePairConvergenceChecker34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator53 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker55 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray47, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator53, true, pointValuePairConvergenceChecker55);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray26, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator53, true, pointValuePairConvergenceChecker58);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator74 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray68, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator74, true, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray13, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator53, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray3, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator53, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray3);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList84 = cMAESOptimizer83.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker85 = cMAESOptimizer83.getConvergenceChecker();
        int int86 = cMAESOptimizer83.getEvaluations();
        int int87 = cMAESOptimizer83.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator32);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertNotNull(realMatrixList84);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        double[] doubleArray3 = new double[] {};
        double[] doubleArray14 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray14);
        org.apache.commons.math3.random.RandomGenerator randomGenerator21 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer23 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray14, (int) (byte) 100, (double) 0.0f, true, (int) (byte) -1, (int) 'a', randomGenerator21, false);
        double[] doubleArray30 = null;
        double[] doubleArray44 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer45 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray44);
        double[] doubleArray54 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator72 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker74 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray66, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator72, true, pointValuePairConvergenceChecker74);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray54, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator72, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray44, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator72, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker82 = cMAESOptimizer81.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray30, (int) 'a', (double) (byte) 100, false, (int) 'a', 10, randomGenerator72, true, pointValuePairConvergenceChecker82);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray14, 0, (double) (-1.0f), true, (int) (byte) 10, (int) (byte) 0, randomGenerator72, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray3, 1, (double) (-1.0f), false, (int) (short) 100, (int) '4', randomGenerator72, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer88 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray3);
        org.apache.commons.math3.random.RandomGenerator randomGenerator94 = null;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker96 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer97 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray3, 0, (double) (byte) -1, false, 1, (int) (short) 1, randomGenerator94, false, pointValuePairConvergenceChecker96);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList98 = cMAESOptimizer97.getStatisticsDHistory();
        int int99 = cMAESOptimizer97.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator72);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker82);
        org.junit.Assert.assertNotNull(realMatrixList98);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 0 + "'", int99 == 0);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#');
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer1.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.lang.Class<?> wildcardClass6 = cMAESOptimizer1.getClass();
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ');
        int int2 = cMAESOptimizer1.getEvaluations();
        int int3 = cMAESOptimizer1.getEvaluations();
        int int4 = cMAESOptimizer1.getEvaluations();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray1);
        int int3 = cMAESOptimizer2.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer2.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList5 = cMAESOptimizer2.getStatisticsDHistory();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(realMatrixList5);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray26 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray39, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator66, true, pointValuePairConvergenceChecker71);
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator87 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker89 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray81, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator87, true, pointValuePairConvergenceChecker89);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray81);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker92 = cMAESOptimizer91.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray26, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator66, false, pointValuePairConvergenceChecker92);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray7, (int) ' ', (double) 100.0f, false, 0, (int) (short) 100, randomGenerator66, false);
        org.apache.commons.math3.optimization.GoalType goalType96 = cMAESOptimizer95.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator87);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker92);
        org.junit.Assert.assertNull(goalType96);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        int int43 = cMAESOptimizer40.getEvaluations();
        int int44 = cMAESOptimizer40.getEvaluations();
        int int45 = cMAESOptimizer40.getMaxEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList46 = cMAESOptimizer40.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList47 = cMAESOptimizer40.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList48 = cMAESOptimizer40.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(realMatrixList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        double[] doubleArray5 = new double[] { 0 };
        double[] doubleArray15 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator55 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker57 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer58 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray49, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator55, true, pointValuePairConvergenceChecker57);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer61 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray28, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator55, true, pointValuePairConvergenceChecker60);
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator76 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray70, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator76, true, pointValuePairConvergenceChecker78);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray70);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker81 = cMAESOptimizer80.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray15, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator55, false, pointValuePairConvergenceChecker81);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray5, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator55, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray5);
        org.apache.commons.math3.random.RandomGenerator randomGenerator91 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker95 = cMAESOptimizer94.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer96 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray5, (int) (short) 100, (double) 100L, false, 100, (int) (short) 1, randomGenerator91, true, pointValuePairConvergenceChecker95);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer97 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray5);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList98 = cMAESOptimizer97.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker99 = cMAESOptimizer97.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator55);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator76);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker81);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker95);
        org.junit.Assert.assertNotNull(realMatrixList98);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker99);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        double[] doubleArray4 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer5 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray4);
        double[] doubleArray12 = null;
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator31 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker33 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer34 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray25, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator31, true, pointValuePairConvergenceChecker33);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator52 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray46, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator52, true, pointValuePairConvergenceChecker54);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker57 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer58 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray25, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator52, true, pointValuePairConvergenceChecker57);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer61 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray12, 10, 10.0d, true, (int) (short) 0, 0, randomGenerator52, true, pointValuePairConvergenceChecker60);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer63 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray4, (-1), (double) 10L, false, (-1), 100, randomGenerator52, true);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator31);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator52);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#');
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer1.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker4 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker7 = cMAESOptimizer1.getConvergenceChecker();
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker4);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker7);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker2 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList3 = cMAESOptimizer1.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer1.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType5 = cMAESOptimizer1.getGoalType();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer1.getStatisticsFitnessHistory();
        int int7 = cMAESOptimizer1.getEvaluations();
        java.util.List<java.lang.Double> doubleList8 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction10 = null;
        org.apache.commons.math3.optimization.GoalType goalType11 = null;
        double[] doubleArray18 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator37 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray31, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator37, true, pointValuePairConvergenceChecker39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator58 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer61 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray52, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator58, true, pointValuePairConvergenceChecker60);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker63 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray31, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator58, true, pointValuePairConvergenceChecker63);
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator79 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker81 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray73, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator79, true, pointValuePairConvergenceChecker81);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray73);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker84 = cMAESOptimizer83.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray18, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator58, false, pointValuePairConvergenceChecker84);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray18);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair88 = cMAESOptimizer1.optimize((int) (short) 100, multivariateFunction10, goalType11, doubleArray18);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker2);
        org.junit.Assert.assertNotNull(realMatrixList3);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNull(goalType5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(doubleList8);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator37);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator58);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator79);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker84);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker2 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer1.getStatisticsFitnessHistory();
        int int4 = cMAESOptimizer1.getEvaluations();
        int int5 = cMAESOptimizer1.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList6 = cMAESOptimizer1.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList7 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(realMatrixList6);
        org.junit.Assert.assertNotNull(doubleList7);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType43 = cMAESOptimizer40.getGoalType();
        int int44 = cMAESOptimizer40.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = cMAESOptimizer40.getConvergenceChecker();
        int int46 = cMAESOptimizer40.getMaxEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList47 = cMAESOptimizer40.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(goalType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(realMatrixList47);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer1.getStatisticsMeanHistory();
        int int3 = cMAESOptimizer1.getMaxEvaluations();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction5 = null;
        org.apache.commons.math3.optimization.GoalType goalType6 = null;
        double[] doubleArray15 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator55 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker57 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer58 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray49, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator55, true, pointValuePairConvergenceChecker57);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer61 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray28, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator55, true, pointValuePairConvergenceChecker60);
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator76 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray70, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator76, true, pointValuePairConvergenceChecker78);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray70);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker81 = cMAESOptimizer80.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray15, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator55, false, pointValuePairConvergenceChecker81);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair87 = cMAESOptimizer1.optimize(0, multivariateFunction5, goalType6, doubleArray15);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator55);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator76);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker81);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        java.util.List<java.lang.Double> doubleList43 = cMAESOptimizer40.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList44 = cMAESOptimizer40.getStatisticsMeanHistory();
        java.lang.Class<?> wildcardClass45 = realMatrixList44.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(doubleList43);
        org.junit.Assert.assertNotNull(realMatrixList44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker2 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList3 = cMAESOptimizer1.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer1.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType5 = cMAESOptimizer1.getGoalType();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer1.getStatisticsFitnessHistory();
        int int7 = cMAESOptimizer1.getEvaluations();
        int int8 = cMAESOptimizer1.getEvaluations();
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker2);
        org.junit.Assert.assertNotNull(realMatrixList3);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNull(goalType5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        double[] doubleArray10 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator16 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer19 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray10, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator16, true, pointValuePairConvergenceChecker18);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer20 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray10);
        double[] doubleArray27 = null;
        double[] doubleArray41 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer42 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray41);
        double[] doubleArray51 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator69 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray63, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator69, true, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray51, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator69, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray41, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator69, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker80 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray27, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator69, false, pointValuePairConvergenceChecker80);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray10, 10, (double) 10, true, (int) '4', 100, randomGenerator69, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray10);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray10);
        java.util.List<java.lang.Double> doubleList86 = cMAESOptimizer85.getStatisticsFitnessHistory();
        int int87 = cMAESOptimizer85.getMaxEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList88 = cMAESOptimizer85.getStatisticsDHistory();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator16);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator69);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker80);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(realMatrixList88);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        double[] doubleArray5 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator24 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray18, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator24, true, pointValuePairConvergenceChecker26);
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray18, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator45, true, pointValuePairConvergenceChecker50);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray60);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = cMAESOptimizer70.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray5, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator45, false, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100, doubleArray5);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList74 = cMAESOptimizer73.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator24);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker71);
        org.junit.Assert.assertNotNull(realMatrixList74);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        double[] doubleArray4 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray17, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator23, true, pointValuePairConvergenceChecker25);
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator44 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker46 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer47 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray38, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator44, true, pointValuePairConvergenceChecker46);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray17, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator44, true, pointValuePairConvergenceChecker49);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator65 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker67 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer68 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray59, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator65, true, pointValuePairConvergenceChecker67);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray59);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = cMAESOptimizer69.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray4, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator44, false, pointValuePairConvergenceChecker70);
        int int72 = cMAESOptimizer71.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = cMAESOptimizer71.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker74 = cMAESOptimizer71.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker75 = cMAESOptimizer71.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = cMAESOptimizer71.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList77 = cMAESOptimizer71.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.GoalType goalType78 = cMAESOptimizer71.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator23);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator44);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator65);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker73);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker75);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker76);
        org.junit.Assert.assertNotNull(realMatrixList77);
        org.junit.Assert.assertNull(goalType78);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        org.apache.commons.math3.optimization.GoalType goalType2 = cMAESOptimizer1.getGoalType();
        int int3 = cMAESOptimizer1.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType4 = cMAESOptimizer1.getGoalType();
        int int5 = cMAESOptimizer1.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker6 = cMAESOptimizer1.getConvergenceChecker();
        org.junit.Assert.assertNull(goalType2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(goalType4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker6);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0);
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsFitnessHistory();
        int int3 = cMAESOptimizer1.getEvaluations();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType5 = cMAESOptimizer1.getGoalType();
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNull(goalType5);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer0 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList1 = cMAESOptimizer0.getStatisticsMeanHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer0.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer0.getStatisticsFitnessHistory();
        int int4 = cMAESOptimizer0.getEvaluations();
        int int5 = cMAESOptimizer0.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList6 = cMAESOptimizer0.getStatisticsDHistory();
        int int7 = cMAESOptimizer0.getEvaluations();
        org.junit.Assert.assertNotNull(realMatrixList1);
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(realMatrixList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        double[] doubleArray5 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray17, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator23, true, pointValuePairConvergenceChecker25);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray5, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator23, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray5);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray5);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction32 = null;
        org.apache.commons.math3.optimization.GoalType goalType33 = null;
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator48 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray42, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator48, true, pointValuePairConvergenceChecker50);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray42);
        double[] doubleArray61 = new double[] {};
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer62 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray61);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer63 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray61);
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator81 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker83 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray75, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator81, true, pointValuePairConvergenceChecker83);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker86 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray61, (int) '4', (double) (short) 10, false, (int) 'a', (int) (short) 10, randomGenerator81, false, pointValuePairConvergenceChecker86);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray42, (int) (byte) 100, (double) '#', false, (int) (short) 100, 0, randomGenerator81, true);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair90 = cMAESOptimizer30.optimize((int) 'a', multivariateFunction32, goalType33, doubleArray42);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator23);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator81);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        double[] doubleArray9 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator28 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker30 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer31 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray22, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator28, true, pointValuePairConvergenceChecker30);
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator49 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker51 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray43, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator49, true, pointValuePairConvergenceChecker51);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray22, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator49, true, pointValuePairConvergenceChecker54);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator70 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker72 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray64, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator70, true, pointValuePairConvergenceChecker72);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray64);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker75 = cMAESOptimizer74.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray9, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator49, false, pointValuePairConvergenceChecker75);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray9);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray9);
        double[] doubleArray85 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator91 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray85, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator91, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray9, (int) (short) 10, (double) ' ', false, (int) (byte) -1, (int) (byte) 0, randomGenerator91, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer96 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray9);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer97 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray9);
        java.util.List<java.lang.Double> doubleList98 = cMAESOptimizer97.getStatisticsFitnessHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray99 = cMAESOptimizer97.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator28);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator49);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator70);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker75);
        org.junit.Assert.assertNotNull(randomGenerator91);
        org.junit.Assert.assertNotNull(doubleList98);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        double[] doubleArray3 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator21 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker23 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray15, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator21, true, pointValuePairConvergenceChecker23);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray3, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator21, true);
        java.util.List<java.lang.Double> doubleList27 = cMAESOptimizer26.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType28 = cMAESOptimizer26.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType29 = cMAESOptimizer26.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList30 = cMAESOptimizer26.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator21);
        org.junit.Assert.assertNotNull(doubleList27);
        org.junit.Assert.assertNull(goalType28);
        org.junit.Assert.assertNull(goalType29);
        org.junit.Assert.assertNotNull(realMatrixList30);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        double[] doubleArray5 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray17, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator23, true, pointValuePairConvergenceChecker25);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray5, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator23, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray5);
        double[] doubleArray40 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator58 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer61 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray52, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator58, true, pointValuePairConvergenceChecker60);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer63 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray40, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator58, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray40);
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator82 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker84 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray76, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator82, true, pointValuePairConvergenceChecker84);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray40, (-1), (double) (-1L), false, (int) (byte) 1, 0, randomGenerator82, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray5, (int) (byte) 10, (-1.0d), true, (int) (short) 0, (int) '#', randomGenerator82, true);
        int int90 = cMAESOptimizer89.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray91 = cMAESOptimizer89.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator23);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator58);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator82);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        double[] doubleArray1 = null;
        double[] doubleArray8 = null;
        double[] doubleArray22 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer23 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray22);
        double[] doubleArray32 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator50 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker52 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer53 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray44, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator50, true, pointValuePairConvergenceChecker52);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray32, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator50, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer57 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray22, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator50, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = cMAESOptimizer59.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer61 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray8, (int) 'a', (double) (byte) 100, false, (int) 'a', 10, randomGenerator50, true, pointValuePairConvergenceChecker60);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer63 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray1, 1, (double) 100.0f, true, (int) 'a', (int) (short) 100, randomGenerator50, true);
        java.lang.Class<?> wildcardClass64 = cMAESOptimizer63.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator50);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker60);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ');
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        int int4 = cMAESOptimizer1.getMaxEvaluations();
        int int5 = cMAESOptimizer1.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList6 = cMAESOptimizer1.getStatisticsMeanHistory();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction8 = null;
        org.apache.commons.math3.optimization.GoalType goalType9 = null;
        double[] doubleArray15 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray15);
        org.apache.commons.math3.random.RandomGenerator randomGenerator22 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray15, (int) (byte) 100, (double) 0.0f, true, (int) (byte) -1, (int) 'a', randomGenerator22, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100, doubleArray15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair26 = cMAESOptimizer1.optimize((int) (short) 10, multivariateFunction8, goalType9, doubleArray15);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(realMatrixList6);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 1.0]");
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        double[] doubleArray5 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator24 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray18, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator24, true, pointValuePairConvergenceChecker26);
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray18, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator45, true, pointValuePairConvergenceChecker50);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray60);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = cMAESOptimizer70.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray5, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator45, false, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray5);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList74 = cMAESOptimizer73.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList75 = cMAESOptimizer73.getStatisticsFitnessHistory();
        java.lang.Class<?> wildcardClass76 = cMAESOptimizer73.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator24);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker71);
        org.junit.Assert.assertNotNull(realMatrixList74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#');
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList2 = cMAESOptimizer1.getStatisticsMeanHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList3 = cMAESOptimizer1.getStatisticsMeanHistory();
        int int4 = cMAESOptimizer1.getMaxEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList5 = cMAESOptimizer1.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer1.getStatisticsFitnessHistory();
        int int7 = cMAESOptimizer1.getMaxEvaluations();
        org.junit.Assert.assertNotNull(realMatrixList2);
        org.junit.Assert.assertNotNull(realMatrixList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(realMatrixList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList16 = cMAESOptimizer15.getStatisticsDHistory();
        int int17 = cMAESOptimizer15.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(realMatrixList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.optimization.GoalType goalType18 = cMAESOptimizer17.getGoalType();
        int int19 = cMAESOptimizer17.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType20 = cMAESOptimizer17.getGoalType();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray21 = cMAESOptimizer17.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNull(goalType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(goalType20);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000);
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList3 = cMAESOptimizer1.getStatisticsDHistory();
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertNotNull(realMatrixList3);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        double[] doubleArray4 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray17, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator23, true, pointValuePairConvergenceChecker25);
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator44 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker46 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer47 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray38, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator44, true, pointValuePairConvergenceChecker46);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray17, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator44, true, pointValuePairConvergenceChecker49);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator65 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker67 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer68 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray59, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator65, true, pointValuePairConvergenceChecker67);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray59);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = cMAESOptimizer69.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray4, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator44, false, pointValuePairConvergenceChecker70);
        int int72 = cMAESOptimizer71.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = cMAESOptimizer71.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList74 = cMAESOptimizer71.getStatisticsSigmaHistory();
        int int75 = cMAESOptimizer71.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = cMAESOptimizer71.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList77 = cMAESOptimizer71.getStatisticsDHistory();
        java.lang.Class<?> wildcardClass78 = realMatrixList77.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator23);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator44);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator65);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker76);
        org.junit.Assert.assertNotNull(realMatrixList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0);
        org.apache.commons.math3.optimization.GoalType goalType2 = cMAESOptimizer1.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        int int4 = cMAESOptimizer1.getEvaluations();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker6 = cMAESOptimizer1.getConvergenceChecker();
        org.junit.Assert.assertNull(goalType2);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker6);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100);
        java.util.List<java.lang.Double> doubleList2 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker3 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList4 = cMAESOptimizer1.getStatisticsDHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList5 = cMAESOptimizer1.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleList2);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker3);
        org.junit.Assert.assertNotNull(realMatrixList4);
        org.junit.Assert.assertNotNull(realMatrixList5);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer0 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        java.util.List<java.lang.Double> doubleList1 = cMAESOptimizer0.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleList1);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        double[] doubleArray3 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer4 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray3);
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer4.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer4.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType7 = cMAESOptimizer4.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker8 = cMAESOptimizer4.getConvergenceChecker();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNull(goalType7);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker8);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        double[] doubleArray2 = new double[] {};
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer3 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray2);
        double[] doubleArray10 = null;
        double[] doubleArray21 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator39 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker41 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer42 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray33, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator39, true, pointValuePairConvergenceChecker41);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer44 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray21, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator39, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer45 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray21);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator63 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker65 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer66 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray57, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator63, true, pointValuePairConvergenceChecker65);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer68 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray21, (-1), (double) (-1L), false, (int) (byte) 1, 0, randomGenerator63, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray10, 0, (double) (-1.0f), true, 100, (int) (byte) -1, randomGenerator63, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray2, (int) (short) -1, (double) 30000, false, 0, (int) (short) 0, randomGenerator63, false);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList73 = cMAESOptimizer72.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator39);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator63);
        org.junit.Assert.assertNotNull(realMatrixList73);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        double[] doubleArray4 = new double[] {};
        double[] doubleArray15 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray15);
        org.apache.commons.math3.random.RandomGenerator randomGenerator22 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray15, (int) (byte) 100, (double) 0.0f, true, (int) (byte) -1, (int) 'a', randomGenerator22, false);
        double[] doubleArray31 = null;
        double[] doubleArray45 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer46 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray45);
        double[] doubleArray55 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator73 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker75 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray67, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator73, true, pointValuePairConvergenceChecker75);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray55, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator73, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray45, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator73, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker83 = cMAESOptimizer82.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer84 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray31, (int) 'a', (double) (byte) 100, false, (int) 'a', 10, randomGenerator73, true, pointValuePairConvergenceChecker83);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray15, 0, (double) (-1.0f), true, (int) (byte) 10, (int) (byte) 0, randomGenerator73, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer88 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray4, 1, (double) (-1.0f), false, (int) (short) 100, (int) '4', randomGenerator73, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 10, doubleArray4);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray4);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator73);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker83);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        double[] doubleArray2 = new double[] {};
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer3 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray2);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer4 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray2);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList5 = cMAESOptimizer4.getStatisticsDHistory();
        org.apache.commons.math3.optimization.GoalType goalType6 = cMAESOptimizer4.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType7 = cMAESOptimizer4.getGoalType();
        java.util.List<java.lang.Double> doubleList8 = cMAESOptimizer4.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertNotNull(realMatrixList5);
        org.junit.Assert.assertNull(goalType6);
        org.junit.Assert.assertNull(goalType7);
        org.junit.Assert.assertNotNull(doubleList8);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        double[] doubleArray9 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator28 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker30 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer31 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray22, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator28, true, pointValuePairConvergenceChecker30);
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator49 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker51 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray43, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator49, true, pointValuePairConvergenceChecker51);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray22, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator49, true, pointValuePairConvergenceChecker54);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator70 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker72 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray64, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator70, true, pointValuePairConvergenceChecker72);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray64);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker75 = cMAESOptimizer74.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray9, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator49, false, pointValuePairConvergenceChecker75);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray9);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray9);
        double[] doubleArray85 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator91 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray85, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator91, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray9, (int) (short) 10, (double) ' ', false, (int) (byte) -1, (int) (byte) 0, randomGenerator91, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer96 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray9);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer97 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray9);
        int int98 = cMAESOptimizer97.getEvaluations();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray99 = cMAESOptimizer97.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator28);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator49);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator70);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker75);
        org.junit.Assert.assertNotNull(randomGenerator91);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        double[] doubleArray6 = new double[] { 0 };
        double[] doubleArray16 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator35 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker37 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer38 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray29, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator35, true, pointValuePairConvergenceChecker37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator56 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray50, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator56, true, pointValuePairConvergenceChecker58);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker61 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer62 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray29, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator56, true, pointValuePairConvergenceChecker61);
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator77 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray71, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator77, true, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray71);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker82 = cMAESOptimizer81.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray16, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator56, false, pointValuePairConvergenceChecker82);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray6, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator56, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray6);
        org.apache.commons.math3.random.RandomGenerator randomGenerator92 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker96 = cMAESOptimizer95.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer97 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray6, (int) (short) 100, (double) 100L, false, 100, (int) (short) 1, randomGenerator92, true, pointValuePairConvergenceChecker96);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer98 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray6);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer99 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100, doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator35);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator56);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator77);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker82);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker96);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0);
        org.apache.commons.math3.optimization.GoalType goalType2 = cMAESOptimizer1.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        int int4 = cMAESOptimizer1.getEvaluations();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer1.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList7 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker8 = cMAESOptimizer1.getConvergenceChecker();
        org.junit.Assert.assertNull(goalType2);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(doubleList7);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker8);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        double[] doubleArray1 = null;
        double[] doubleArray15 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray15);
        double[] doubleArray25 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator43 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer46 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray37, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator43, true, pointValuePairConvergenceChecker45);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray25, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray15, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = cMAESOptimizer52.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker54 = cMAESOptimizer52.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray1, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator43, false, pointValuePairConvergenceChecker54);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker56 = cMAESOptimizer55.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList57 = cMAESOptimizer55.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList58 = cMAESOptimizer55.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList59 = cMAESOptimizer55.getStatisticsFitnessHistory();
        int int60 = cMAESOptimizer55.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator43);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker53);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker54);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker56);
        org.junit.Assert.assertNotNull(doubleList57);
        org.junit.Assert.assertNotNull(doubleList58);
        org.junit.Assert.assertNotNull(doubleList59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1);
        int int2 = cMAESOptimizer1.getEvaluations();
        int int3 = cMAESOptimizer1.getEvaluations();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        double[] doubleArray4 = new double[] { 0 };
        double[] doubleArray14 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator33 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker35 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer36 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray27, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator33, true, pointValuePairConvergenceChecker35);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator54 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker56 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer57 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray48, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator54, true, pointValuePairConvergenceChecker56);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker59 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer60 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray27, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator54, true, pointValuePairConvergenceChecker59);
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator75 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker77 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray69, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator75, true, pointValuePairConvergenceChecker77);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray69);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker80 = cMAESOptimizer79.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray14, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator54, false, pointValuePairConvergenceChecker80);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray4, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator54, true);
        org.apache.commons.math3.random.RandomGenerator randomGenerator89 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker92 = cMAESOptimizer91.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray4, (int) '4', 0.0d, true, (int) (byte) 1, (int) ' ', randomGenerator89, true, pointValuePairConvergenceChecker92);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray4);
        java.util.List<java.lang.Double> doubleList95 = cMAESOptimizer94.getStatisticsSigmaHistory();
        int int96 = cMAESOptimizer94.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker97 = cMAESOptimizer94.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList98 = cMAESOptimizer94.getStatisticsFitnessHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray99 = cMAESOptimizer94.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator33);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator54);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator75);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker80);
        org.junit.Assert.assertNotNull(randomGenerator89);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker92);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker97);
        org.junit.Assert.assertNotNull(doubleList98);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0);
        org.apache.commons.math3.optimization.GoalType goalType2 = cMAESOptimizer1.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType3 = cMAESOptimizer1.getGoalType();
        int int4 = cMAESOptimizer1.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList5 = cMAESOptimizer1.getStatisticsMeanHistory();
        org.junit.Assert.assertNull(goalType2);
        org.junit.Assert.assertNull(goalType3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(realMatrixList5);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.optimization.GoalType goalType18 = cMAESOptimizer17.getGoalType();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer17.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList20 = cMAESOptimizer17.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList21 = cMAESOptimizer17.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList22 = cMAESOptimizer17.getStatisticsDHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList23 = cMAESOptimizer17.getStatisticsMeanHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList24 = cMAESOptimizer17.getStatisticsDHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList25 = cMAESOptimizer17.getStatisticsMeanHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList26 = cMAESOptimizer17.getStatisticsDHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNull(goalType18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(realMatrixList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(realMatrixList22);
        org.junit.Assert.assertNotNull(realMatrixList23);
        org.junit.Assert.assertNotNull(realMatrixList24);
        org.junit.Assert.assertNotNull(realMatrixList25);
        org.junit.Assert.assertNotNull(realMatrixList26);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        double[] doubleArray5 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker25 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray17, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator23, true, pointValuePairConvergenceChecker25);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray5, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator23, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray5);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator23);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer15.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList21 = cMAESOptimizer15.getStatisticsFitnessHistory();
        int int22 = cMAESOptimizer15.getMaxEvaluations();
        int int23 = cMAESOptimizer15.getEvaluations();
        int int24 = cMAESOptimizer15.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList25 = cMAESOptimizer15.getStatisticsDHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray26 = cMAESOptimizer15.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(realMatrixList25);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<java.lang.Double> doubleList41 = cMAESOptimizer40.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList42 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int43 = cMAESOptimizer40.getEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType44 = cMAESOptimizer40.getGoalType();
        java.util.List<java.lang.Double> doubleList45 = cMAESOptimizer40.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList46 = cMAESOptimizer40.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(doubleList41);
        org.junit.Assert.assertNotNull(realMatrixList42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(goalType44);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNotNull(doubleList46);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<java.lang.Double> doubleList41 = cMAESOptimizer40.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList42 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int43 = cMAESOptimizer40.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList44 = cMAESOptimizer40.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(doubleList41);
        org.junit.Assert.assertNotNull(realMatrixList42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(doubleList44);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker20 = cMAESOptimizer15.getConvergenceChecker();
        int int21 = cMAESOptimizer15.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker22 = cMAESOptimizer15.getConvergenceChecker();
        int int23 = cMAESOptimizer15.getMaxEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList24 = cMAESOptimizer15.getStatisticsMeanHistory();
        java.lang.Class<?> wildcardClass25 = cMAESOptimizer15.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(realMatrixList24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker42 = cMAESOptimizer40.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker43 = cMAESOptimizer40.getConvergenceChecker();
        org.apache.commons.math3.optimization.GoalType goalType44 = cMAESOptimizer40.getGoalType();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray45 = cMAESOptimizer40.getStartPoint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker42);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker43);
        org.junit.Assert.assertNull(goalType44);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer17.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList19 = cMAESOptimizer17.getStatisticsDHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList20 = cMAESOptimizer17.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList21 = cMAESOptimizer17.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(realMatrixList19);
        org.junit.Assert.assertNotNull(realMatrixList20);
        org.junit.Assert.assertNotNull(doubleList21);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        double[] doubleArray8 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator14 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker16 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray8, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator14, true, pointValuePairConvergenceChecker16);
        org.apache.commons.math3.random.RandomGenerator randomGenerator23 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray8, 100, (double) (byte) 10, false, (int) (byte) 0, (int) (byte) 10, randomGenerator23, false);
        double[] doubleArray39 = new double[] { (-1.0f), 100L, 100.0d, '4', 1, (byte) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray39);
        double[] doubleArray54 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer55 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray54);
        double[] doubleArray64 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator82 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker84 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray76, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator82, true, pointValuePairConvergenceChecker84);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray64, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator82, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray54, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator82, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray39, 100, (double) (byte) -1, true, (int) '4', (int) (short) 10, randomGenerator82, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10, doubleArray8, 10, (double) 10L, false, (int) 'a', (int) (short) 0, randomGenerator82, false);
        java.util.List<java.lang.Double> doubleList94 = cMAESOptimizer93.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList95 = cMAESOptimizer93.getStatisticsDHistory();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator14);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0, 100.0, 52.0, 1.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator82);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(realMatrixList95);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker42 = cMAESOptimizer40.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker43 = cMAESOptimizer40.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList44 = cMAESOptimizer40.getStatisticsDHistory();
        org.apache.commons.math3.optimization.GoalType goalType45 = cMAESOptimizer40.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker42);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker43);
        org.junit.Assert.assertNotNull(realMatrixList44);
        org.junit.Assert.assertNull(goalType45);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        double[] doubleArray3 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer4 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray3);
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer4.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer4.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList7 = cMAESOptimizer4.getStatisticsDHistory();
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction9 = null;
        org.apache.commons.math3.optimization.GoalType goalType10 = null;
        double[] doubleArray15 = new double[] { 0 };
        double[] doubleArray25 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator44 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker46 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer47 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray38, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator44, true, pointValuePairConvergenceChecker46);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator65 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker67 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer68 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray59, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator65, true, pointValuePairConvergenceChecker67);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray38, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator65, true, pointValuePairConvergenceChecker70);
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator86 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker88 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray80, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator86, true, pointValuePairConvergenceChecker88);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray80);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker91 = cMAESOptimizer90.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray25, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator65, false, pointValuePairConvergenceChecker91);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray15, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator65, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer96 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100, doubleArray15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair97 = cMAESOptimizer4.optimize((int) (byte) 1, multivariateFunction9, goalType10, doubleArray15);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(realMatrixList7);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator44);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator65);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator86);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker91);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        double[] doubleArray1 = null;
        double[] doubleArray8 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator14 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray8, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator14, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray1, 1, (double) (-1L), false, 0, (int) (byte) 0, randomGenerator14, false);
        int int19 = cMAESOptimizer18.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer18.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(randomGenerator14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(doubleList20);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        double[] doubleArray1 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer2 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray1);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction4 = null;
        org.apache.commons.math3.optimization.GoalType goalType5 = null;
        double[] doubleArray18 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator37 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray31, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator37, true, pointValuePairConvergenceChecker39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator58 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker60 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer61 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray52, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator58, true, pointValuePairConvergenceChecker60);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker63 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer64 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray31, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator58, true, pointValuePairConvergenceChecker63);
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator79 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker81 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray73, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator79, true, pointValuePairConvergenceChecker81);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray73);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker84 = cMAESOptimizer83.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer85 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray18, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator58, false, pointValuePairConvergenceChecker84);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer86 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray18);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer87 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray18);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer88 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray18);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray18);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer90 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray18);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray18);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray18);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair94 = cMAESOptimizer2.optimize((int) (byte) 100, multivariateFunction4, goalType5, doubleArray18);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator37);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator58);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator79);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker84);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker42 = cMAESOptimizer40.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList43 = cMAESOptimizer40.getStatisticsSigmaHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray44 = cMAESOptimizer40.getLowerBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker42);
        org.junit.Assert.assertNotNull(doubleList43);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        double[] doubleArray3 = new double[] { 0 };
        double[] doubleArray13 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator32 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray26, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator32, true, pointValuePairConvergenceChecker34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator53 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker55 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray47, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator53, true, pointValuePairConvergenceChecker55);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray26, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator53, true, pointValuePairConvergenceChecker58);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator74 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray68, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator74, true, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray13, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator53, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray3, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator53, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray3);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList84 = cMAESOptimizer83.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker85 = cMAESOptimizer83.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList86 = cMAESOptimizer83.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList87 = cMAESOptimizer83.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator32);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertNotNull(realMatrixList84);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        double[] doubleArray8 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator27 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker29 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer30 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray21, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator27, true, pointValuePairConvergenceChecker29);
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator48 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray42, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator48, true, pointValuePairConvergenceChecker50);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker53 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer54 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray21, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator48, true, pointValuePairConvergenceChecker53);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator69 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray63, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator69, true, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray63);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker74 = cMAESOptimizer73.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray8, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator48, false, pointValuePairConvergenceChecker74);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray8);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray8);
        double[] doubleArray84 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator90 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray84, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator90, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray8, (int) (short) 10, (double) ' ', false, (int) (byte) -1, (int) (byte) 0, randomGenerator90, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray8);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList96 = cMAESOptimizer95.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList97 = cMAESOptimizer95.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator27);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator48);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator69);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker74);
        org.junit.Assert.assertNotNull(randomGenerator90);
        org.junit.Assert.assertNotNull(realMatrixList96);
        org.junit.Assert.assertNotNull(doubleList97);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        double[] doubleArray7 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator26 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker28 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer29 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray20, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator26, true, pointValuePairConvergenceChecker28);
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator47 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker49 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray41, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator47, true, pointValuePairConvergenceChecker49);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker52 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer53 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray20, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator47, true, pointValuePairConvergenceChecker52);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator68 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker70 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray62, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator68, true, pointValuePairConvergenceChecker70);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray62);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = cMAESOptimizer72.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray7, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator47, false, pointValuePairConvergenceChecker73);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer75 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.random.RandomGenerator randomGenerator81 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray7, 0, (-1.0d), true, (int) ' ', (int) 'a', randomGenerator81, true);
        org.apache.commons.math3.random.RandomGenerator randomGenerator89 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 100, doubleArray7, (int) (short) 10, (double) 0L, false, (int) (short) 0, (int) '#', randomGenerator89, false);
        java.util.List<java.lang.Double> doubleList92 = cMAESOptimizer91.getStatisticsFitnessHistory();
        java.lang.Class<?> wildcardClass93 = cMAESOptimizer91.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator26);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator47);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator68);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker73);
        org.junit.Assert.assertNotNull(randomGenerator81);
        org.junit.Assert.assertNotNull(randomGenerator89);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        double[] doubleArray3 = new double[] {};
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer4 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray3);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer5 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray3);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer6 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray3);
        java.util.List<java.lang.Double> doubleList7 = cMAESOptimizer6.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(doubleList7);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        double[] doubleArray7 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer8 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray7);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList9 = cMAESOptimizer8.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker10 = cMAESOptimizer8.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList11 = cMAESOptimizer8.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.GoalType goalType12 = cMAESOptimizer8.getGoalType();
        int int13 = cMAESOptimizer8.getEvaluations();
        int int14 = cMAESOptimizer8.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(realMatrixList9);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker10);
        org.junit.Assert.assertNotNull(realMatrixList11);
        org.junit.Assert.assertNull(goalType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        double[] doubleArray5 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer6 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer7 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray5);
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = null;
        double[] doubleArray24 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator43 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer46 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray37, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator43, true, pointValuePairConvergenceChecker45);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator64 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker66 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer67 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray58, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator64, true, pointValuePairConvergenceChecker66);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker69 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray37, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator64, true, pointValuePairConvergenceChecker69);
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator85 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker87 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer88 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray79, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator85, true, pointValuePairConvergenceChecker87);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer89 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray79);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker90 = cMAESOptimizer89.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer91 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray24, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator64, false, pointValuePairConvergenceChecker90);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer92 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray24);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer93 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(0, doubleArray24);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer94 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray24);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer95 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray24);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer96 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray24);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker97 = cMAESOptimizer96.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer98 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100, doubleArray5, (int) (short) 10, 0.0d, true, (int) (byte) 100, 0, randomGenerator13, true, pointValuePairConvergenceChecker97);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator43);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator64);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator85);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker90);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker97);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        double[] doubleArray6 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator25 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker27 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer28 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray19, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator25, true, pointValuePairConvergenceChecker27);
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator46 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker48 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer49 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray40, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator46, true, pointValuePairConvergenceChecker48);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker51 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer52 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray19, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator46, true, pointValuePairConvergenceChecker51);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator67 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker69 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray61, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator67, true, pointValuePairConvergenceChecker69);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer71 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray61);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker72 = cMAESOptimizer71.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray6, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator46, false, pointValuePairConvergenceChecker72);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray6);
        org.apache.commons.math3.random.RandomGenerator randomGenerator80 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray6, 0, (-1.0d), true, (int) ' ', (int) 'a', randomGenerator80, true);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker83 = cMAESOptimizer82.getConvergenceChecker();
        java.lang.Class<?> wildcardClass84 = pointValuePairConvergenceChecker83.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator25);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator46);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator67);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker72);
        org.junit.Assert.assertNotNull(randomGenerator80);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator34 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker36 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer37 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray28, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator34, true, pointValuePairConvergenceChecker36);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker39 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray7, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator34, true, pointValuePairConvergenceChecker39);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList41 = cMAESOptimizer40.getStatisticsMeanHistory();
        int int42 = cMAESOptimizer40.getEvaluations();
        int int43 = cMAESOptimizer40.getEvaluations();
        int int44 = cMAESOptimizer40.getEvaluations();
        java.lang.Class<?> wildcardClass45 = cMAESOptimizer40.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator34);
        org.junit.Assert.assertNotNull(realMatrixList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer0 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker1 = cMAESOptimizer0.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker2 = cMAESOptimizer0.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList3 = cMAESOptimizer0.getStatisticsSigmaHistory();
        int int4 = cMAESOptimizer0.getEvaluations();
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer0.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer0.getStatisticsSigmaHistory();
        int int7 = cMAESOptimizer0.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList8 = cMAESOptimizer0.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker1);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker2);
        org.junit.Assert.assertNotNull(doubleList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(realMatrixList8);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        double[] doubleArray1 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator7 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer9 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray1, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator7, false);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray10 = cMAESOptimizer9.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(randomGenerator7);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        double[] doubleArray3 = new double[] { 0 };
        double[] doubleArray13 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator32 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker34 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer35 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray26, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator32, true, pointValuePairConvergenceChecker34);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator53 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker55 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer56 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray47, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator53, true, pointValuePairConvergenceChecker55);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker58 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer59 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray26, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator53, true, pointValuePairConvergenceChecker58);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator74 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker76 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer77 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray68, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator74, true, pointValuePairConvergenceChecker76);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer78 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray68);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker79 = cMAESOptimizer78.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer80 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray13, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator53, false, pointValuePairConvergenceChecker79);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer82 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray3, (int) (byte) 0, (double) (short) 0, false, 0, (int) 'a', randomGenerator53, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer83 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a', doubleArray3);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList84 = cMAESOptimizer83.getStatisticsDHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker85 = cMAESOptimizer83.getConvergenceChecker();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList86 = cMAESOptimizer83.getStatisticsMeanHistory();
        int int87 = cMAESOptimizer83.getMaxEvaluations();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator32);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker79);
        org.junit.Assert.assertNotNull(realMatrixList84);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker85);
        org.junit.Assert.assertNotNull(realMatrixList86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList20 = cMAESOptimizer15.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList21 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList22 = cMAESOptimizer15.getStatisticsMeanHistory();
        int int23 = cMAESOptimizer15.getMaxEvaluations();
        org.apache.commons.math3.optimization.GoalType goalType24 = cMAESOptimizer15.getGoalType();
        int int25 = cMAESOptimizer15.getEvaluations();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(realMatrixList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(goalType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        double[] doubleArray8 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator14 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker16 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray8, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator14, true, pointValuePairConvergenceChecker16);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer18 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray8);
        double[] doubleArray25 = null;
        double[] doubleArray39 = new double[] { 1.0d, 100, 1, 1.0f, 1.0d, 0.0f };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer40 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray39);
        double[] doubleArray49 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator67 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker69 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray61, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator67, true, pointValuePairConvergenceChecker69);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray49, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator67, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '4', doubleArray39, (int) (byte) -1, (double) (short) -1, false, 10, (int) (short) 100, randomGenerator67, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker77 = cMAESOptimizer76.getConvergenceChecker();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker78 = cMAESOptimizer76.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer79 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray25, (int) (byte) 10, 0.0d, false, (int) 'a', (int) (byte) 1, randomGenerator67, false, pointValuePairConvergenceChecker78);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer81 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(30000, doubleArray8, 10, (double) 10, true, (int) '4', 100, randomGenerator67, true);
        java.util.List<java.lang.Double> doubleList82 = cMAESOptimizer81.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType83 = cMAESOptimizer81.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList84 = cMAESOptimizer81.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList85 = cMAESOptimizer81.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList86 = cMAESOptimizer81.getStatisticsFitnessHistory();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator14);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[1.0, 100.0, 1.0, 1.0, 1.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator67);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker77);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker78);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNull(goalType83);
        org.junit.Assert.assertNotNull(realMatrixList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        double[] doubleArray3 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer4 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray3);
        java.util.List<java.lang.Double> doubleList5 = cMAESOptimizer4.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList6 = cMAESOptimizer4.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.GoalType goalType7 = cMAESOptimizer4.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType8 = cMAESOptimizer4.getGoalType();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList9 = cMAESOptimizer4.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNull(goalType7);
        org.junit.Assert.assertNull(goalType8);
        org.junit.Assert.assertNotNull(realMatrixList9);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1);
        int int2 = cMAESOptimizer1.getMaxEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker3 = cMAESOptimizer1.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList4 = cMAESOptimizer1.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker5 = cMAESOptimizer1.getConvergenceChecker();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker3);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker5);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        double[] doubleArray5 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer6 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5);
        double[] doubleArray13 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator19 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer21 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray13, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator19, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer23 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray5, (int) (short) 1, (double) ' ', true, (int) 'a', 1, randomGenerator19, true);
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator42 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker44 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer45 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray36, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator42, true, pointValuePairConvergenceChecker44);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator63 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker65 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer66 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray57, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator63, true, pointValuePairConvergenceChecker65);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray36, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator63, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker73 = cMAESOptimizer72.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer74 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 10, doubleArray5, (int) (byte) 10, (double) (short) -1, true, 100, 10, randomGenerator63, false, pointValuePairConvergenceChecker73);
        org.apache.commons.math3.optimization.GoalType goalType75 = cMAESOptimizer74.getGoalType();
        org.apache.commons.math3.optimization.GoalType goalType76 = cMAESOptimizer74.getGoalType();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(randomGenerator19);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator42);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator63);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker73);
        org.junit.Assert.assertNull(goalType75);
        org.junit.Assert.assertNull(goalType76);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        double[] doubleArray6 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker14 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray6, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator12, true, pointValuePairConvergenceChecker14);
        java.util.List<java.lang.Double> doubleList16 = cMAESOptimizer15.getStatisticsFitnessHistory();
        java.util.List<java.lang.Double> doubleList17 = cMAESOptimizer15.getStatisticsFitnessHistory();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker18 = cMAESOptimizer15.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer15.getStatisticsFitnessHistory();
        int int20 = cMAESOptimizer15.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker21 = cMAESOptimizer15.getConvergenceChecker();
        int int22 = cMAESOptimizer15.getMaxEvaluations();
        java.util.List<java.lang.Double> doubleList23 = cMAESOptimizer15.getStatisticsFitnessHistory();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray24 = cMAESOptimizer15.getUpperBound();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator12);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(pointValuePairConvergenceChecker21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(doubleList23);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        double[] doubleArray7 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator13 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker15 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer16 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray7, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator13, true, pointValuePairConvergenceChecker15);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer17 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray7);
        org.apache.commons.math3.optimization.GoalType goalType18 = cMAESOptimizer17.getGoalType();
        java.util.List<java.lang.Double> doubleList19 = cMAESOptimizer17.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList20 = cMAESOptimizer17.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList21 = cMAESOptimizer17.getStatisticsSigmaHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList22 = cMAESOptimizer17.getStatisticsDHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList23 = cMAESOptimizer17.getStatisticsMeanHistory();
        int int24 = cMAESOptimizer17.getEvaluations();
        java.util.List<java.lang.Double> doubleList25 = cMAESOptimizer17.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator13);
        org.junit.Assert.assertNull(goalType18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(realMatrixList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(realMatrixList22);
        org.junit.Assert.assertNotNull(realMatrixList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(doubleList25);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer1 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) 'a');
        java.lang.Class<?> wildcardClass2 = cMAESOptimizer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        double[] doubleArray6 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer7 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray6);
        double[] doubleArray14 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator20 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer22 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray14, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator20, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer24 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((-1), doubleArray6, (int) (short) 1, (double) ' ', true, (int) 'a', 1, randomGenerator20, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer25 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray6);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer26 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(randomGenerator20);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        double[] doubleArray5 = new double[] { (byte) 0, (-1.0f), 10.0f, '4' };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer6 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) -1, doubleArray5);
        int int7 = cMAESOptimizer6.getEvaluations();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker8 = cMAESOptimizer6.getConvergenceChecker();
        java.util.List<java.lang.Double> doubleList9 = cMAESOptimizer6.getStatisticsSigmaHistory();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, -1.0, 10.0, 52.0]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker8);
        org.junit.Assert.assertNotNull(doubleList9);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        double[] doubleArray5 = new double[] { (byte) -1, 100, (byte) 0 };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator24 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker26 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer27 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray18, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator24, true, pointValuePairConvergenceChecker26);
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator45 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker47 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray39, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator45, true, pointValuePairConvergenceChecker47);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker50 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer51 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 0, doubleArray18, (int) 'a', (double) (-1), true, (int) (short) 100, 0, randomGenerator45, true, pointValuePairConvergenceChecker50);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator66 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker68 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer69 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray60, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator66, true, pointValuePairConvergenceChecker68);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer70 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray60);
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker71 = cMAESOptimizer70.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer72 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(10, doubleArray5, (int) (byte) 1, (double) (byte) 1, true, (int) '4', (int) (short) -1, randomGenerator45, false, pointValuePairConvergenceChecker71);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer73 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 0, doubleArray5);
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList74 = cMAESOptimizer73.getStatisticsDHistory();
        java.util.List<java.lang.Double> doubleList75 = cMAESOptimizer73.getStatisticsFitnessHistory();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList76 = cMAESOptimizer73.getStatisticsMeanHistory();
        java.util.List<java.lang.Double> doubleList77 = cMAESOptimizer73.getStatisticsFitnessHistory();
        int int78 = cMAESOptimizer73.getEvaluations();
        int int79 = cMAESOptimizer73.getMaxEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList80 = cMAESOptimizer73.getStatisticsMeanHistory();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 100.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator24);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator66);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker71);
        org.junit.Assert.assertNotNull(realMatrixList74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(realMatrixList76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(realMatrixList80);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        double[] doubleArray5 = new double[] { (short) 0, (short) 1 };
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer6 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5);
        org.apache.commons.math3.random.RandomGenerator randomGenerator12 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer14 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) -1, doubleArray5, (int) (byte) 100, (double) 0.0f, true, (int) (byte) -1, (int) 'a', randomGenerator12, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer15 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100, doubleArray5);
        org.apache.commons.math3.analysis.MultivariateFunction multivariateFunction17 = null;
        org.apache.commons.math3.optimization.GoalType goalType18 = null;
        double[] doubleArray25 = new double[] { (byte) 10, (-1.0f) };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, 10.0d, (short) 1, 10 };
        org.apache.commons.math3.random.RandomGenerator randomGenerator43 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker45 = null;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer46 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) '#', doubleArray37, (int) 'a', (double) (-1), false, (int) (short) 0, 0, randomGenerator43, true, pointValuePairConvergenceChecker45);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer48 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(1, doubleArray25, (int) ' ', (double) (-1L), true, (int) (short) 100, 30000, randomGenerator43, true);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer49 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (short) 1, doubleArray25);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer50 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 100, doubleArray25);
        double[] doubleArray57 = null;
        org.apache.commons.math3.random.RandomGenerator randomGenerator63 = org.apache.commons.math3.optimization.direct.CMAESOptimizer.DEFAULT_RANDOMGENERATOR;
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer65 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) ' ', doubleArray57, (int) 'a', (double) (short) 100, true, (int) '4', (int) (short) 10, randomGenerator63, false);
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer68 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer(100);
        java.util.List<java.lang.Double> doubleList69 = cMAESOptimizer68.getStatisticsSigmaHistory();
        java.util.List<java.lang.Double> doubleList70 = cMAESOptimizer68.getStatisticsSigmaHistory();
        org.apache.commons.math3.optimization.GoalType goalType71 = cMAESOptimizer68.getGoalType();
        int int72 = cMAESOptimizer68.getEvaluations();
        java.util.List<org.apache.commons.math3.linear.RealMatrix> realMatrixList73 = cMAESOptimizer68.getStatisticsMeanHistory();
        org.apache.commons.math3.optimization.GoalType goalType74 = cMAESOptimizer68.getGoalType();
        org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair> pointValuePairConvergenceChecker75 = cMAESOptimizer68.getConvergenceChecker();
        org.apache.commons.math3.optimization.direct.CMAESOptimizer cMAESOptimizer76 = new org.apache.commons.math3.optimization.direct.CMAESOptimizer((int) (byte) 1, doubleArray25, (int) ' ', (double) (short) 10, true, 30000, (-1), randomGenerator63, false, pointValuePairConvergenceChecker75);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math3.optimization.PointValuePair pointValuePair77 = cMAESOptimizer15.optimize(30000, multivariateFunction17, goalType18, doubleArray25);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math3.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math3.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, -1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 10.0, 1.0, 10.0]");
        org.junit.Assert.assertNotNull(randomGenerator43);
        org.junit.Assert.assertNotNull(randomGenerator63);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNull(goalType71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(realMatrixList73);
        org.junit.Assert.assertNull(goalType74);
        org.junit.Assert.assertNotNull(pointValuePairConvergenceChecker75);
    }
}

