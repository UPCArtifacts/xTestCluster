import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray6 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException7 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = concurrentModificationException7.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException7);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException9 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray8);
        java.io.EOFException eOFException10 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, objArray8);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) eOFException10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException9);
        org.junit.Assert.assertNotNull(eOFException10);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.text.ParseException parseException10 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable1, objArray8);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException11 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) parseException10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(parseException10);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray7 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException8 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, objArray7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = illegalStateException8.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException8);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.lang.ArithmeticException arithmeticException12 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray9);
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray20 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException21 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable14, objArray20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arithmeticException12, localizable13, objArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(arithmeticException12);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException21);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException9 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray8);
        java.io.EOFException eOFException10 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, objArray8);
        org.apache.commons.math.exception.util.Localizable localizable11 = null;
        java.lang.Object[] objArray12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException13 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) eOFException10, localizable11, objArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException9);
        org.junit.Assert.assertNotNull(eOFException10);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException9 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray8);
        java.io.EOFException eOFException10 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, objArray8);
        java.lang.Throwable[] throwableArray11 = eOFException10.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        java.lang.Object[] objArray21 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException22 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable15, objArray21);
        java.text.ParseException parseException23 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable14, objArray21);
        java.lang.IllegalArgumentException illegalArgumentException24 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable12, objArray21);
        eOFException10.addSuppressed((java.lang.Throwable) illegalArgumentException24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException26 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) illegalArgumentException24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException9);
        org.junit.Assert.assertNotNull(eOFException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException22);
        org.junit.Assert.assertNotNull(parseException23);
        org.junit.Assert.assertNotNull(illegalArgumentException24);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException1.addMessage(localizable2, objArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.lang.ArithmeticException arithmeticException12 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException13 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) arithmeticException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(arithmeticException12);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException1.addMessage(localizable2, objArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(eOFException13);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException9 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray8);
        java.lang.ArithmeticException arithmeticException10 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = arithmeticException10.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException9);
        org.junit.Assert.assertNotNull(arithmeticException10);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        java.lang.Object[] objArray7 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException8 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray7);
        java.lang.ArithmeticException arithmeticException9 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException10 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) arithmeticException9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException8);
        org.junit.Assert.assertNotNull(arithmeticException9);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray6 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException7 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray6);
        java.lang.Throwable[] throwableArray8 = concurrentModificationException7.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException9 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) concurrentModificationException7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException7);
        org.junit.Assert.assertNotNull(throwableArray8);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        mathRuntimeException1.addSuppressed((java.lang.Throwable) concurrentModificationException14);
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        java.lang.Object[] objArray24 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException25 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable17, objArray24);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException1, localizable16, objArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException25);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException14 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException15 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) arrayIndexOutOfBoundsException14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException14);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray9);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable13);
        concurrentModificationException12.addSuppressed((java.lang.Throwable) mathRuntimeException14);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray27 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException28 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable20, objArray27);
        java.io.EOFException eOFException29 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable19, objArray27);
        java.util.ConcurrentModificationException concurrentModificationException30 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable18, objArray27);
        java.lang.ArithmeticException arithmeticException31 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable17, objArray27);
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        java.lang.Object[] objArray42 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException43 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable35, objArray42);
        java.lang.ArithmeticException arithmeticException44 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable34, objArray42);
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable33, objArray42);
        java.util.NoSuchElementException noSuchElementException46 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable32, objArray42);
        arithmeticException31.addSuppressed((java.lang.Throwable) noSuchElementException46);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException14.setContext("hi!", (java.lang.Object) arithmeticException31);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException28);
        org.junit.Assert.assertNotNull(eOFException29);
        org.junit.Assert.assertNotNull(concurrentModificationException30);
        org.junit.Assert.assertNotNull(arithmeticException31);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException43);
        org.junit.Assert.assertNotNull(arithmeticException44);
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertNotNull(noSuchElementException46);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException9 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray8);
        java.io.EOFException eOFException10 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, objArray8);
        java.lang.Throwable[] throwableArray11 = eOFException10.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        java.lang.Object[] objArray21 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException22 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable15, objArray21);
        java.text.ParseException parseException23 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable14, objArray21);
        java.lang.IllegalArgumentException illegalArgumentException24 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable12, objArray21);
        eOFException10.addSuppressed((java.lang.Throwable) illegalArgumentException24);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) eOFException10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException9);
        org.junit.Assert.assertNotNull(eOFException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException22);
        org.junit.Assert.assertNotNull(parseException23);
        org.junit.Assert.assertNotNull(illegalArgumentException24);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray9);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable13);
        concurrentModificationException12.addSuppressed((java.lang.Throwable) mathRuntimeException14);
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException29 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, objArray28);
        java.lang.ArithmeticException arithmeticException30 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable20, objArray28);
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable19, objArray28);
        java.util.NoSuchElementException noSuchElementException32 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable18, objArray28);
        java.util.ConcurrentModificationException concurrentModificationException33 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable17, objArray28);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException14.addMessage(localizable16, objArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException29);
        org.junit.Assert.assertNotNull(arithmeticException30);
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(noSuchElementException32);
        org.junit.Assert.assertNotNull(concurrentModificationException33);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        mathRuntimeException1.addSuppressed((java.lang.Throwable) concurrentModificationException14);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException1.setContext("hi!", (java.lang.Object) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.io.EOFException eOFException11 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray9);
        java.lang.Throwable[] throwableArray12 = eOFException11.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException13 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, (java.lang.Object[]) throwableArray12);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        java.lang.Object[] objArray21 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException22 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable15, objArray21);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException23 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arrayIndexOutOfBoundsException13, localizable14, objArray21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(eOFException11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException13);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException22);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet2 = mathRuntimeException1.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        mathRuntimeException1.addSuppressed((java.lang.Throwable) concurrentModificationException14);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet16 = mathRuntimeException1.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        mathRuntimeException1.addSuppressed((java.lang.Throwable) concurrentModificationException14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = mathRuntimeException1.getContext("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException9 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray8);
        java.lang.ArithmeticException arithmeticException10 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException11 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) arithmeticException10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException9);
        org.junit.Assert.assertNotNull(arithmeticException10);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.io.EOFException eOFException11 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray9);
        java.lang.Throwable[] throwableArray12 = eOFException11.getSuppressed();
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, (java.lang.Object[]) throwableArray12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) illegalStateException13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(eOFException11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(illegalStateException13);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = null;
        java.util.NoSuchElementException noSuchElementException2 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, objArray1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = noSuchElementException2.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(noSuchElementException2);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray9);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable13);
        concurrentModificationException12.addSuppressed((java.lang.Throwable) mathRuntimeException14);
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray27 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException28 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable20, objArray27);
        java.lang.ArithmeticException arithmeticException29 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable19, objArray27);
        java.util.ConcurrentModificationException concurrentModificationException30 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable18, objArray27);
        java.util.NoSuchElementException noSuchElementException31 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable17, objArray27);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException14.addMessage(localizable16, objArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException28);
        org.junit.Assert.assertNotNull(arithmeticException29);
        org.junit.Assert.assertNotNull(concurrentModificationException30);
        org.junit.Assert.assertNotNull(noSuchElementException31);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        java.lang.Object[] objArray7 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException8 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray7);
        java.lang.Throwable[] throwableArray9 = concurrentModificationException8.getSuppressed();
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, (java.lang.Object[]) throwableArray9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException11 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) illegalStateException10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(illegalStateException10);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.lang.ArithmeticException arithmeticException12 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray10);
        java.lang.Throwable throwable16 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(throwable16);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException14.setContext("", (java.lang.Object) throwable16);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arithmeticException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = mathRuntimeException16.getContext("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arithmeticException14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray9);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable13);
        concurrentModificationException12.addSuppressed((java.lang.Throwable) mathRuntimeException14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = mathRuntimeException14.getContext("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray10);
        java.lang.Throwable[] throwableArray15 = arithmeticException14.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException16 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) arithmeticException14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(throwableArray15);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        java.lang.Object[] objArray7 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException8 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray7);
        java.lang.Throwable[] throwableArray9 = concurrentModificationException8.getSuppressed();
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.exception.util.Localizable localizable11 = null;
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        java.lang.Object[] objArray24 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException25 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable17, objArray24);
        java.lang.ArithmeticException arithmeticException26 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, objArray24);
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable15, objArray24);
        java.text.ParseException parseException28 = org.apache.commons.math.MathRuntimeException.createParseException((int) ' ', localizable14, objArray24);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException29 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable12, objArray24);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException30 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) concurrentModificationException10, localizable11, objArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException25);
        org.junit.Assert.assertNotNull(arithmeticException26);
        org.junit.Assert.assertNotNull(concurrentModificationException27);
        org.junit.Assert.assertNotNull(parseException28);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException29);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        java.lang.Throwable throwable0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException1 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(throwable0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.lang.ArithmeticException arithmeticException12 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet15 = mathRuntimeException14.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arithmeticException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.lang.ArithmeticException arithmeticException12 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray10);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException14 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, objArray10);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, objArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = noSuchElementException15.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(arithmeticException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.lang.ArithmeticException arithmeticException12 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = mathRuntimeException14.getContext("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arithmeticException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.lang.ArithmeticException arithmeticException12 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray10);
        java.lang.Class<?> wildcardClass15 = objArray10.getClass();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arithmeticException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray11);
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException17 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) arrayIndexOutOfBoundsException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray9);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable13);
        concurrentModificationException12.addSuppressed((java.lang.Throwable) mathRuntimeException14);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException29 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, objArray28);
        java.io.EOFException eOFException30 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable20, objArray28);
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable19, objArray28);
        java.lang.ArithmeticException arithmeticException32 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable18, objArray28);
        java.lang.Throwable[] throwableArray33 = arithmeticException32.getSuppressed();
        java.text.ParseException parseException34 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable17, (java.lang.Object[]) throwableArray33);
        mathRuntimeException14.addSuppressed((java.lang.Throwable) parseException34);
        org.apache.commons.math.exception.util.Localizable localizable36 = null;
        org.apache.commons.math.exception.util.Localizable localizable37 = null;
        org.apache.commons.math.exception.util.Localizable localizable38 = null;
        org.apache.commons.math.exception.util.Localizable localizable40 = null;
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray47 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException48 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable41, objArray47);
        java.text.ParseException parseException49 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable40, objArray47);
        java.io.EOFException eOFException50 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable38, objArray47);
        java.lang.IllegalStateException illegalStateException51 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable37, objArray47);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException14.addMessage(localizable36, objArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException29);
        org.junit.Assert.assertNotNull(eOFException30);
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(arithmeticException32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(parseException34);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException48);
        org.junit.Assert.assertNotNull(parseException49);
        org.junit.Assert.assertNotNull(eOFException50);
        org.junit.Assert.assertNotNull(illegalStateException51);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray7 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException8 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, objArray7);
        org.apache.commons.math.exception.util.Localizable localizable9 = null;
        org.apache.commons.math.exception.util.Localizable localizable10 = null;
        org.apache.commons.math.exception.util.Localizable localizable11 = null;
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        java.lang.Object[] objArray21 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException22 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable14, objArray21);
        java.io.EOFException eOFException23 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable13, objArray21);
        java.util.ConcurrentModificationException concurrentModificationException24 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable12, objArray21);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException25 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable11, objArray21);
        java.lang.IllegalStateException illegalStateException26 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable10, objArray21);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException27 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) illegalStateException8, localizable9, objArray21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException8);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException22);
        org.junit.Assert.assertNotNull(eOFException23);
        org.junit.Assert.assertNotNull(concurrentModificationException24);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException25);
        org.junit.Assert.assertNotNull(illegalStateException26);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj3 = mathRuntimeException1.getContext("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray11);
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) illegalArgumentException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = arithmeticException14.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        mathRuntimeException1.addSuppressed((java.lang.Throwable) concurrentModificationException14);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray27 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable21, objArray27);
        java.lang.ArithmeticException arithmeticException29 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable20, objArray27);
        java.io.EOFException eOFException30 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable19, objArray27);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException31 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable18, objArray27);
        java.util.NoSuchElementException noSuchElementException32 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable17, objArray27);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException1.setContext("", (java.lang.Object) localizable17);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(arithmeticException29);
        org.junit.Assert.assertNotNull(eOFException30);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException31);
        org.junit.Assert.assertNotNull(noSuchElementException32);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray9);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable13);
        concurrentModificationException12.addSuppressed((java.lang.Throwable) mathRuntimeException14);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException29 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, objArray28);
        java.io.EOFException eOFException30 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable20, objArray28);
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable19, objArray28);
        java.lang.ArithmeticException arithmeticException32 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable18, objArray28);
        java.lang.Throwable[] throwableArray33 = arithmeticException32.getSuppressed();
        java.text.ParseException parseException34 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable17, (java.lang.Object[]) throwableArray33);
        mathRuntimeException14.addSuppressed((java.lang.Throwable) parseException34);
        org.apache.commons.math.exception.util.Localizable localizable36 = null;
        org.apache.commons.math.exception.util.Localizable localizable37 = null;
        org.apache.commons.math.exception.util.Localizable localizable38 = null;
        org.apache.commons.math.exception.util.Localizable localizable39 = null;
        org.apache.commons.math.exception.util.Localizable localizable40 = null;
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        java.lang.Object[] objArray48 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException49 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable41, objArray48);
        java.lang.ArithmeticException arithmeticException50 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable40, objArray48);
        java.util.ConcurrentModificationException concurrentModificationException51 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable39, objArray48);
        java.util.NoSuchElementException noSuchElementException52 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable38, objArray48);
        java.io.EOFException eOFException53 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable37, objArray48);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException14.addMessage(localizable36, objArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException29);
        org.junit.Assert.assertNotNull(eOFException30);
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(arithmeticException32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(parseException34);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException49);
        org.junit.Assert.assertNotNull(arithmeticException50);
        org.junit.Assert.assertNotNull(concurrentModificationException51);
        org.junit.Assert.assertNotNull(noSuchElementException52);
        org.junit.Assert.assertNotNull(eOFException53);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = mathRuntimeException16.getContext("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        java.lang.Throwable throwable0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException1 = org.apache.commons.math.MathRuntimeException.createIOException(throwable0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray12);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray12);
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        java.lang.Object[] objArray32 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException33 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable25, objArray32);
        java.io.EOFException eOFException34 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable24, objArray32);
        java.util.ConcurrentModificationException concurrentModificationException35 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable23, objArray32);
        java.lang.ArithmeticException arithmeticException36 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable22, objArray32);
        java.text.ParseException parseException37 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable21, objArray32);
        java.lang.Class<?> wildcardClass38 = parseException37.getClass();
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException18.setContext("hi!", (java.lang.Object) wildcardClass38);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException33);
        org.junit.Assert.assertNotNull(eOFException34);
        org.junit.Assert.assertNotNull(concurrentModificationException35);
        org.junit.Assert.assertNotNull(arithmeticException36);
        org.junit.Assert.assertNotNull(parseException37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = new java.lang.Object[] {};
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray1);
        org.apache.commons.math.MathRuntimeException mathRuntimeException3 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = mathRuntimeException2.getContext("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray9);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray9);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException13 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray9);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        java.lang.Object[] objArray25 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException26 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable18, objArray25);
        java.io.EOFException eOFException27 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable17, objArray25);
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable16, objArray25);
        java.util.ConcurrentModificationException concurrentModificationException29 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable15, objArray25);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException30 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arrayIndexOutOfBoundsException13, localizable14, objArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException13);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException26);
        org.junit.Assert.assertNotNull(eOFException27);
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(concurrentModificationException29);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = new java.lang.Object[] {};
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray1);
        java.lang.Object obj4 = null;
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException2.setContext("", obj4);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray9);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable13);
        concurrentModificationException12.addSuppressed((java.lang.Throwable) mathRuntimeException14);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException29 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, objArray28);
        java.lang.ArithmeticException arithmeticException30 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable20, objArray28);
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable19, objArray28);
        java.util.NoSuchElementException noSuchElementException32 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable18, objArray28);
        java.lang.Throwable[] throwableArray33 = noSuchElementException32.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException34 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable17, (java.lang.Object[]) throwableArray33);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException14.setContext("hi!", (java.lang.Object) throwableArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException29);
        org.junit.Assert.assertNotNull(arithmeticException30);
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(noSuchElementException32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException34);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.lang.ArithmeticException arithmeticException12 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = mathRuntimeException14.getContext("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arithmeticException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = null;
        java.lang.IllegalArgumentException illegalArgumentException2 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray1);
        org.junit.Assert.assertNotNull(illegalArgumentException2);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray9);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable13);
        concurrentModificationException12.addSuppressed((java.lang.Throwable) mathRuntimeException14);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException29 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, objArray28);
        java.io.EOFException eOFException30 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable20, objArray28);
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable19, objArray28);
        java.lang.ArithmeticException arithmeticException32 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable18, objArray28);
        java.lang.Throwable[] throwableArray33 = arithmeticException32.getSuppressed();
        java.text.ParseException parseException34 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable17, (java.lang.Object[]) throwableArray33);
        mathRuntimeException14.addSuppressed((java.lang.Throwable) parseException34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = mathRuntimeException14.getContext("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException29);
        org.junit.Assert.assertNotNull(eOFException30);
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(arithmeticException32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(parseException34);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.lang.ArithmeticException arithmeticException15 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) illegalArgumentException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(arithmeticException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.text.ParseException parseException11 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable2, objArray9);
        java.lang.IllegalArgumentException illegalArgumentException12 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray9);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException13 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) illegalArgumentException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(parseException11);
        org.junit.Assert.assertNotNull(illegalArgumentException12);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable7, objArray13);
        java.text.ParseException parseException15 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable6, objArray13);
        java.io.EOFException eOFException16 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, objArray13);
        java.lang.IllegalStateException illegalStateException17 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException(localizable1, objArray13);
        java.lang.ArithmeticException arithmeticException20 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException21 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) arithmeticException20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(parseException15);
        org.junit.Assert.assertNotNull(eOFException16);
        org.junit.Assert.assertNotNull(illegalStateException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(arithmeticException20);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        mathRuntimeException1.addSuppressed((java.lang.Throwable) concurrentModificationException14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) concurrentModificationException14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray12);
        java.lang.Throwable[] throwableArray17 = arithmeticException16.getSuppressed();
        java.text.ParseException parseException18 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable1, (java.lang.Object[]) throwableArray17);
        java.lang.Class<?> wildcardClass19 = parseException18.getClass();
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(parseException18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.io.EOFException eOFException11 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray9);
        java.lang.Throwable[] throwableArray12 = eOFException11.getSuppressed();
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, (java.lang.Object[]) throwableArray12);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        java.lang.Object[] objArray21 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException22 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable15, objArray21);
        java.lang.Throwable[] throwableArray23 = concurrentModificationException22.getSuppressed();
        java.lang.IllegalStateException illegalStateException24 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable14, (java.lang.Object[]) throwableArray23);
        illegalStateException13.addSuppressed((java.lang.Throwable) illegalStateException24);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException26 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) illegalStateException13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(eOFException11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException22);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(illegalStateException24);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(throwable0);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException2.setContext("", (java.lang.Object) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException14 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray11);
        java.lang.ArithmeticException arithmeticException15 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray11);
        java.io.EOFException eOFException16 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) eOFException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(illegalArgumentException14);
        org.junit.Assert.assertNotNull(arithmeticException15);
        org.junit.Assert.assertNotNull(eOFException16);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.text.ParseException parseException12 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable3, objArray10);
        java.util.NoSuchElementException noSuchElementException13 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray10);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException15 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) arithmeticException14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(parseException12);
        org.junit.Assert.assertNotNull(noSuchElementException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.text.ParseException parseException12 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable3, objArray10);
        java.lang.IllegalArgumentException illegalArgumentException13 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, objArray10);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException14 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException15 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) arrayIndexOutOfBoundsException14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(parseException12);
        org.junit.Assert.assertNotNull(illegalArgumentException13);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException14);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, (java.lang.Object[]) throwableArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray27 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable21, objArray27);
        java.text.ParseException parseException29 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable20, objArray27);
        java.io.EOFException eOFException30 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable18, objArray27);
        java.lang.IllegalStateException illegalStateException31 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable17, objArray27);
        java.lang.IllegalArgumentException illegalArgumentException32 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable16, objArray27);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException14.addMessage(localizable15, objArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(parseException29);
        org.junit.Assert.assertNotNull(eOFException30);
        org.junit.Assert.assertNotNull(illegalStateException31);
        org.junit.Assert.assertNotNull(illegalArgumentException32);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable8, objArray14);
        java.text.ParseException parseException16 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable7, objArray14);
        java.util.NoSuchElementException noSuchElementException17 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable5, objArray14);
        java.text.ParseException parseException18 = org.apache.commons.math.MathRuntimeException.createParseException(100, localizable4, objArray14);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException1.addMessage(localizable2, objArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(parseException16);
        org.junit.Assert.assertNotNull(noSuchElementException17);
        org.junit.Assert.assertNotNull(parseException18);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray12);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray12);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException17 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException19 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) concurrentModificationException18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.io.EOFException eOFException11 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray9);
        java.lang.Throwable[] throwableArray12 = eOFException11.getSuppressed();
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, (java.lang.Object[]) throwableArray12);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        java.lang.Object[] objArray21 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException22 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable15, objArray21);
        java.lang.Throwable[] throwableArray23 = concurrentModificationException22.getSuppressed();
        java.lang.IllegalStateException illegalStateException24 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable14, (java.lang.Object[]) throwableArray23);
        illegalStateException13.addSuppressed((java.lang.Throwable) illegalStateException24);
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        java.lang.Object[] objArray27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException28 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) illegalStateException24, localizable26, objArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(eOFException11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException22);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(illegalStateException24);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray12);
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        java.lang.Object[] objArray29 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException30 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable23, objArray29);
        java.lang.Throwable[] throwableArray31 = concurrentModificationException30.getSuppressed();
        java.lang.IllegalStateException illegalStateException32 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable22, (java.lang.Object[]) throwableArray31);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException33 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable21, (java.lang.Object[]) throwableArray31);
        java.lang.ArithmeticException arithmeticException34 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable20, (java.lang.Object[]) throwableArray31);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException18.addMessage(localizable19, (java.lang.Object[]) throwableArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException30);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(illegalStateException32);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException33);
        org.junit.Assert.assertNotNull(arithmeticException34);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException15 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable3, objArray12);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray12);
        java.io.EOFException eOFException17 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray12);
        java.io.EOFException eOFException18 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, objArray12);
        java.lang.Throwable throwable19 = null;
        // The following exception was thrown during execution in test generation
        try {
            eOFException18.addSuppressed(throwable19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(illegalArgumentException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
        org.junit.Assert.assertNotNull(eOFException17);
        org.junit.Assert.assertNotNull(eOFException18);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.lang.Throwable[] throwableArray10 = concurrentModificationException9.getSuppressed();
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, (java.lang.Object[]) throwableArray10);
        java.util.NoSuchElementException noSuchElementException12 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, (java.lang.Object[]) throwableArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException13 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) noSuchElementException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(noSuchElementException12);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable8, objArray14);
        java.text.ParseException parseException16 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable7, objArray14);
        java.lang.IllegalStateException illegalStateException17 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray14);
        java.lang.IllegalArgumentException illegalArgumentException18 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable4, objArray14);
        java.lang.IllegalArgumentException illegalArgumentException19 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable3, objArray14);
        org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(localizable2, objArray14);
        java.text.ParseException parseException21 = org.apache.commons.math.MathRuntimeException.createParseException((int) (short) 10, localizable1, objArray14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException22 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) parseException21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(parseException16);
        org.junit.Assert.assertNotNull(illegalStateException17);
        org.junit.Assert.assertNotNull(illegalArgumentException18);
        org.junit.Assert.assertNotNull(illegalArgumentException19);
        org.junit.Assert.assertNotNull(parseException21);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = new java.lang.Object[] {};
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray1);
        org.apache.commons.math.MathRuntimeException mathRuntimeException3 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException2);
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        org.apache.commons.math.exception.util.Localizable localizable9 = null;
        org.apache.commons.math.exception.util.Localizable localizable10 = null;
        java.lang.Object[] objArray17 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException18 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable10, objArray17);
        java.io.EOFException eOFException19 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable9, objArray17);
        java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable8, objArray17);
        java.lang.ArithmeticException arithmeticException21 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable7, objArray17);
        java.lang.Throwable[] throwableArray22 = arithmeticException21.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException23 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable6, (java.lang.Object[]) throwableArray22);
        java.lang.IllegalArgumentException illegalArgumentException24 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable5, (java.lang.Object[]) throwableArray22);
        java.lang.Throwable[] throwableArray25 = illegalArgumentException24.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException2.setContext("hi!", (java.lang.Object) illegalArgumentException24);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException18);
        org.junit.Assert.assertNotNull(eOFException19);
        org.junit.Assert.assertNotNull(concurrentModificationException20);
        org.junit.Assert.assertNotNull(arithmeticException21);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException23);
        org.junit.Assert.assertNotNull(illegalArgumentException24);
        org.junit.Assert.assertNotNull(throwableArray25);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = null;
        java.lang.ArithmeticException arithmeticException2 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray1);
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable9 = null;
        org.apache.commons.math.exception.util.Localizable localizable10 = null;
        java.lang.Object[] objArray16 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable10, objArray16);
        java.text.ParseException parseException18 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable9, objArray16);
        java.io.EOFException eOFException19 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable7, objArray16);
        java.lang.IllegalStateException illegalStateException20 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray16);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException21 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable5, objArray16);
        java.util.ConcurrentModificationException concurrentModificationException22 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray16);
        java.lang.Throwable[] throwableArray23 = concurrentModificationException22.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException24 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arithmeticException2, localizable3, (java.lang.Object[]) throwableArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(arithmeticException2);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(parseException18);
        org.junit.Assert.assertNotNull(eOFException19);
        org.junit.Assert.assertNotNull(illegalStateException20);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException21);
        org.junit.Assert.assertNotNull(concurrentModificationException22);
        org.junit.Assert.assertNotNull(throwableArray23);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.lang.ArithmeticException arithmeticException15 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException17 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) illegalArgumentException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(arithmeticException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray9);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable13);
        concurrentModificationException12.addSuppressed((java.lang.Throwable) mathRuntimeException14);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet16 = mathRuntimeException14.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, (java.lang.Object[]) throwableArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = mathRuntimeException14.getContext("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(eOFException13);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable2, objArray12);
        java.text.ParseException parseException17 = org.apache.commons.math.MathRuntimeException.createParseException((int) (short) 0, localizable1, objArray12);
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException31 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable23, objArray30);
        java.io.EOFException eOFException32 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable22, objArray30);
        java.lang.Throwable[] throwableArray33 = eOFException32.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException34 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable21, (java.lang.Object[]) throwableArray33);
        java.util.ConcurrentModificationException concurrentModificationException35 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable20, (java.lang.Object[]) throwableArray33);
        java.lang.ArithmeticException arithmeticException36 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable19, (java.lang.Object[]) throwableArray33);
        java.lang.Throwable[] throwableArray37 = arithmeticException36.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) parseException17, localizable18, (java.lang.Object[]) throwableArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(parseException17);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException31);
        org.junit.Assert.assertNotNull(eOFException32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException34);
        org.junit.Assert.assertNotNull(concurrentModificationException35);
        org.junit.Assert.assertNotNull(arithmeticException36);
        org.junit.Assert.assertNotNull(throwableArray37);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.lang.Throwable[] throwableArray10 = concurrentModificationException9.getSuppressed();
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, (java.lang.Object[]) throwableArray10);
        java.lang.ArithmeticException arithmeticException12 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, (java.lang.Object[]) throwableArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException13 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) arithmeticException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arithmeticException12);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.lang.ArithmeticException arithmeticException12 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        java.util.NoSuchElementException noSuchElementException14 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, objArray10);
        java.lang.Throwable[] throwableArray15 = noSuchElementException14.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = noSuchElementException14.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arithmeticException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(noSuchElementException14);
        org.junit.Assert.assertNotNull(throwableArray15);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray12);
        java.lang.Throwable[] throwableArray17 = arithmeticException16.getSuppressed();
        java.text.ParseException parseException18 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable1, (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        java.lang.Object[] objArray31 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException32 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable24, objArray31);
        java.io.EOFException eOFException33 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable23, objArray31);
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray31);
        java.lang.ArithmeticException arithmeticException35 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable21, objArray31);
        java.lang.Throwable[] throwableArray36 = arithmeticException35.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException37 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable20, (java.lang.Object[]) throwableArray36);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) parseException18, localizable19, (java.lang.Object[]) throwableArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(parseException18);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException32);
        org.junit.Assert.assertNotNull(eOFException33);
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertNotNull(arithmeticException35);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException37);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException15 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable3, objArray12);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray12);
        java.io.EOFException eOFException17 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray12);
        java.io.EOFException eOFException18 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, objArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException19 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) eOFException18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(illegalArgumentException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
        org.junit.Assert.assertNotNull(eOFException17);
        org.junit.Assert.assertNotNull(eOFException18);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = new java.lang.Object[] {};
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray1);
        org.apache.commons.math.MathRuntimeException mathRuntimeException3 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = mathRuntimeException3.getContext("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray12);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray12);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException17 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray12);
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException29 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray28);
        java.lang.Throwable[] throwableArray30 = concurrentModificationException29.getSuppressed();
        java.lang.IllegalStateException illegalStateException31 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, (java.lang.Object[]) throwableArray30);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException32 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable20, (java.lang.Object[]) throwableArray30);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException33 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) concurrentModificationException18, localizable19, (java.lang.Object[]) throwableArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException29);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(illegalStateException31);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException32);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.lang.Throwable[] throwableArray10 = concurrentModificationException9.getSuppressed();
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, (java.lang.Object[]) throwableArray10);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException12 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, (java.lang.Object[]) throwableArray10);
        java.lang.Throwable[] throwableArray13 = arrayIndexOutOfBoundsException12.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        java.lang.Object[] objArray24 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException25 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable17, objArray24);
        java.io.EOFException eOFException26 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable16, objArray24);
        java.lang.Throwable[] throwableArray27 = eOFException26.getSuppressed();
        java.lang.IllegalArgumentException illegalArgumentException28 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable15, (java.lang.Object[]) throwableArray27);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException29 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arrayIndexOutOfBoundsException12, localizable14, (java.lang.Object[]) throwableArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException25);
        org.junit.Assert.assertNotNull(eOFException26);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(illegalArgumentException28);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        java.lang.Object[] objArray7 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException8 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray7);
        java.lang.ArithmeticException arithmeticException9 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arithmeticException9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException8);
        org.junit.Assert.assertNotNull(arithmeticException9);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.util.NoSuchElementException noSuchElementException14 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, objArray11);
        java.io.EOFException eOFException16 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = eOFException16.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(noSuchElementException14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(eOFException16);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.text.ParseException parseException11 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable2, objArray9);
        java.lang.IllegalArgumentException illegalArgumentException12 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = illegalArgumentException12.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(parseException11);
        org.junit.Assert.assertNotNull(illegalArgumentException12);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.lang.Throwable[] throwableArray10 = concurrentModificationException9.getSuppressed();
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, (java.lang.Object[]) throwableArray10);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException12 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        java.lang.Object[] objArray23 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException24 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable16, objArray23);
        java.io.EOFException eOFException25 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable15, objArray23);
        java.util.ConcurrentModificationException concurrentModificationException26 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable14, objArray23);
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable13, objArray23);
        arrayIndexOutOfBoundsException12.addSuppressed((java.lang.Throwable) concurrentModificationException27);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException29 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arrayIndexOutOfBoundsException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException12);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException24);
        org.junit.Assert.assertNotNull(eOFException25);
        org.junit.Assert.assertNotNull(concurrentModificationException26);
        org.junit.Assert.assertNotNull(concurrentModificationException27);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, objArray12);
        java.lang.Throwable[] throwableArray15 = eOFException14.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable3, (java.lang.Object[]) throwableArray15);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, (java.lang.Object[]) throwableArray15);
        java.lang.ArithmeticException arithmeticException18 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray15);
        java.lang.Throwable[] throwableArray19 = arithmeticException18.getSuppressed();
        org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = mathRuntimeException20.getContext("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(arithmeticException18);
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray9);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable13);
        concurrentModificationException12.addSuppressed((java.lang.Throwable) mathRuntimeException14);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException29 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, objArray28);
        java.io.EOFException eOFException30 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable20, objArray28);
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable19, objArray28);
        java.lang.ArithmeticException arithmeticException32 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable18, objArray28);
        java.lang.Throwable[] throwableArray33 = arithmeticException32.getSuppressed();
        java.text.ParseException parseException34 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable17, (java.lang.Object[]) throwableArray33);
        mathRuntimeException14.addSuppressed((java.lang.Throwable) parseException34);
        org.apache.commons.math.exception.util.Localizable localizable36 = null;
        org.apache.commons.math.exception.util.Localizable localizable37 = null;
        org.apache.commons.math.exception.util.Localizable localizable38 = null;
        org.apache.commons.math.exception.util.Localizable localizable39 = null;
        org.apache.commons.math.exception.util.Localizable localizable40 = null;
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        org.apache.commons.math.exception.util.Localizable localizable42 = null;
        org.apache.commons.math.exception.util.Localizable localizable43 = null;
        org.apache.commons.math.exception.util.Localizable localizable44 = null;
        java.lang.Object[] objArray51 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException52 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable44, objArray51);
        java.lang.ArithmeticException arithmeticException53 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable43, objArray51);
        java.util.ConcurrentModificationException concurrentModificationException54 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable42, objArray51);
        java.util.NoSuchElementException noSuchElementException55 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable41, objArray51);
        java.util.ConcurrentModificationException concurrentModificationException56 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable40, objArray51);
        java.lang.IllegalArgumentException illegalArgumentException57 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable39, objArray51);
        java.util.ConcurrentModificationException concurrentModificationException58 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable38, objArray51);
        java.util.ConcurrentModificationException concurrentModificationException59 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable37, objArray51);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException60 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException14, localizable36, objArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException29);
        org.junit.Assert.assertNotNull(eOFException30);
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(arithmeticException32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(parseException34);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException52);
        org.junit.Assert.assertNotNull(arithmeticException53);
        org.junit.Assert.assertNotNull(concurrentModificationException54);
        org.junit.Assert.assertNotNull(noSuchElementException55);
        org.junit.Assert.assertNotNull(concurrentModificationException56);
        org.junit.Assert.assertNotNull(illegalArgumentException57);
        org.junit.Assert.assertNotNull(concurrentModificationException58);
        org.junit.Assert.assertNotNull(concurrentModificationException59);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray9);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable13);
        concurrentModificationException12.addSuppressed((java.lang.Throwable) mathRuntimeException14);
        java.lang.Throwable[] throwableArray16 = mathRuntimeException14.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet17 = mathRuntimeException14.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(throwableArray16);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.text.ParseException parseException10 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable1, objArray8);
        org.apache.commons.math.exception.util.Localizable localizable11 = null;
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        java.lang.Object[] objArray19 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable13, objArray19);
        java.lang.ArithmeticException arithmeticException21 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable12, objArray19);
        java.lang.ArithmeticException arithmeticException22 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable11, objArray19);
        parseException10.addSuppressed((java.lang.Throwable) arithmeticException22);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException24 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) arithmeticException22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(parseException10);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException20);
        org.junit.Assert.assertNotNull(arithmeticException21);
        org.junit.Assert.assertNotNull(arithmeticException22);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        java.lang.Object[] objArray25 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException26 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable19, objArray25);
        java.lang.Throwable[] throwableArray27 = concurrentModificationException26.getSuppressed();
        java.lang.IllegalStateException illegalStateException28 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable18, (java.lang.Object[]) throwableArray27);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException29 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable17, (java.lang.Object[]) throwableArray27);
        java.lang.ArithmeticException arithmeticException30 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, (java.lang.Object[]) throwableArray27);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException14.addMessage(localizable15, (java.lang.Object[]) throwableArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException26);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(illegalStateException28);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException29);
        org.junit.Assert.assertNotNull(arithmeticException30);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.text.ParseException parseException12 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable3, objArray10);
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray10);
        java.lang.IllegalArgumentException illegalArgumentException14 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray10);
        java.lang.Class<?> wildcardClass15 = illegalArgumentException14.getClass();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(parseException12);
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(illegalArgumentException14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray11);
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray11);
        java.lang.Class<?> wildcardClass17 = objArray11.getClass();
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.util.NoSuchElementException noSuchElementException14 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, objArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray11);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        java.lang.Object[] objArray32 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException33 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable25, objArray32);
        java.io.EOFException eOFException34 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable24, objArray32);
        java.util.ConcurrentModificationException concurrentModificationException35 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable23, objArray32);
        java.lang.ArithmeticException arithmeticException36 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable22, objArray32);
        java.lang.Throwable[] throwableArray37 = arithmeticException36.getSuppressed();
        java.text.ParseException parseException38 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable21, (java.lang.Object[]) throwableArray37);
        java.text.ParseException parseException39 = org.apache.commons.math.MathRuntimeException.createParseException((int) (byte) 0, localizable19, (java.lang.Object[]) throwableArray37);
        java.util.NoSuchElementException noSuchElementException40 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable17, (java.lang.Object[]) throwableArray37);
        arrayIndexOutOfBoundsException16.addSuppressed((java.lang.Throwable) noSuchElementException40);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException42 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) noSuchElementException40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(noSuchElementException14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException33);
        org.junit.Assert.assertNotNull(eOFException34);
        org.junit.Assert.assertNotNull(concurrentModificationException35);
        org.junit.Assert.assertNotNull(arithmeticException36);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(parseException38);
        org.junit.Assert.assertNotNull(parseException39);
        org.junit.Assert.assertNotNull(noSuchElementException40);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = new java.lang.Object[] {};
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray1);
        org.apache.commons.math.MathRuntimeException mathRuntimeException3 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException2);
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        org.apache.commons.math.exception.util.Localizable localizable9 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable9, objArray15);
        java.text.ParseException parseException17 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable8, objArray15);
        java.io.EOFException eOFException18 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable6, objArray15);
        java.lang.IllegalStateException illegalStateException19 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray15);
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException31 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable23, objArray30);
        java.io.EOFException eOFException32 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable22, objArray30);
        java.lang.Throwable[] throwableArray33 = eOFException32.getSuppressed();
        java.lang.IllegalStateException illegalStateException34 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, (java.lang.Object[]) throwableArray33);
        java.io.EOFException eOFException35 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable20, (java.lang.Object[]) throwableArray33);
        illegalStateException19.addSuppressed((java.lang.Throwable) eOFException35);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException3.setContext("hi!", (java.lang.Object) illegalStateException19);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(parseException17);
        org.junit.Assert.assertNotNull(eOFException18);
        org.junit.Assert.assertNotNull(illegalStateException19);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException31);
        org.junit.Assert.assertNotNull(eOFException32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(illegalStateException34);
        org.junit.Assert.assertNotNull(eOFException35);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray12);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = mathRuntimeException18.getContext("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.lang.Throwable[] throwableArray10 = concurrentModificationException9.getSuppressed();
        java.io.EOFException eOFException11 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, (java.lang.Object[]) throwableArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, (java.lang.Object[]) throwableArray10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException13 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) eOFException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(eOFException11);
        org.junit.Assert.assertNotNull(eOFException12);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.text.ParseException parseException12 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable3, objArray10);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray10);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, objArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException15 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) eOFException14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(parseException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(eOFException14);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.lang.ArithmeticException arithmeticException12 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        java.lang.Throwable throwable14 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(throwable14);
        concurrentModificationException13.addSuppressed((java.lang.Throwable) mathRuntimeException15);
        java.lang.Throwable[] throwableArray17 = mathRuntimeException15.getSuppressed();
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = mathRuntimeException18.getContext("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arithmeticException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, objArray12);
        java.lang.Throwable[] throwableArray15 = eOFException14.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable3, (java.lang.Object[]) throwableArray15);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, (java.lang.Object[]) throwableArray15);
        java.lang.ArithmeticException arithmeticException18 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray15);
        java.lang.Throwable[] throwableArray19 = arithmeticException18.getSuppressed();
        org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray19);
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable27, objArray33);
        java.text.ParseException parseException35 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable26, objArray33);
        java.io.EOFException eOFException36 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable24, objArray33);
        java.lang.IllegalStateException illegalStateException37 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable23, objArray33);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException38 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable22, objArray33);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException20.setContext("", (java.lang.Object) objArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(arithmeticException18);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertNotNull(parseException35);
        org.junit.Assert.assertNotNull(eOFException36);
        org.junit.Assert.assertNotNull(illegalStateException37);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException38);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray9);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable13);
        concurrentModificationException12.addSuppressed((java.lang.Throwable) mathRuntimeException14);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException29 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, objArray28);
        java.io.EOFException eOFException30 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable20, objArray28);
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable19, objArray28);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException32 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable18, objArray28);
        java.lang.IllegalStateException illegalStateException33 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable17, objArray28);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException14.setContext("", (java.lang.Object) objArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException29);
        org.junit.Assert.assertNotNull(eOFException30);
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException32);
        org.junit.Assert.assertNotNull(illegalStateException33);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = new java.lang.Object[] {};
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray1);
        org.apache.commons.math.MathRuntimeException mathRuntimeException3 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException2);
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray11);
        mathRuntimeException2.addSuppressed((java.lang.Throwable) arithmeticException13);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        java.lang.Object[] objArray16 = null;
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException2.addMessage(localizable15, objArray16);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = new java.lang.Object[] {};
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray1);
        org.apache.commons.math.MathRuntimeException mathRuntimeException3 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException2);
        java.lang.Object obj5 = null;
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException3.setContext("", obj5);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        java.lang.Object[] objArray24 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException25 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable18, objArray24);
        java.lang.ArithmeticException arithmeticException26 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable17, objArray24);
        java.lang.ArithmeticException arithmeticException27 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, objArray24);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException14.addMessage(localizable15, objArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException25);
        org.junit.Assert.assertNotNull(arithmeticException26);
        org.junit.Assert.assertNotNull(arithmeticException27);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.text.ParseException parseException10 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable1, objArray8);
        org.apache.commons.math.exception.util.Localizable localizable11 = null;
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        java.lang.Object[] objArray19 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable13, objArray19);
        java.lang.Throwable[] throwableArray21 = concurrentModificationException20.getSuppressed();
        java.io.EOFException eOFException22 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable12, (java.lang.Object[]) throwableArray21);
        java.io.EOFException eOFException23 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable11, (java.lang.Object[]) throwableArray21);
        parseException10.addSuppressed((java.lang.Throwable) eOFException23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = eOFException23.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(parseException10);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(eOFException22);
        org.junit.Assert.assertNotNull(eOFException23);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.lang.ArithmeticException arithmeticException15 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable5, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray13);
        java.util.NoSuchElementException noSuchElementException17 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable3, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException19 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, objArray13);
        java.io.EOFException eOFException20 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, objArray13);
        java.lang.Class<?> wildcardClass21 = eOFException20.getClass();
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(arithmeticException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(noSuchElementException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(illegalArgumentException19);
        org.junit.Assert.assertNotNull(eOFException20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException9 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray8);
        java.io.EOFException eOFException10 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, objArray8);
        java.lang.Throwable[] throwableArray11 = eOFException10.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        java.lang.Object[] objArray21 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException22 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable15, objArray21);
        java.text.ParseException parseException23 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable14, objArray21);
        java.lang.IllegalArgumentException illegalArgumentException24 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable12, objArray21);
        eOFException10.addSuppressed((java.lang.Throwable) illegalArgumentException24);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException26 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) eOFException10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException9);
        org.junit.Assert.assertNotNull(eOFException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException22);
        org.junit.Assert.assertNotNull(parseException23);
        org.junit.Assert.assertNotNull(illegalArgumentException24);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = new java.lang.Object[] {};
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray1);
        org.apache.commons.math.MathRuntimeException mathRuntimeException3 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = mathRuntimeException3.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable7, objArray14);
        java.io.EOFException eOFException16 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable6, objArray14);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray14);
        java.lang.ArithmeticException arithmeticException18 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray14);
        java.lang.Throwable[] throwableArray19 = arithmeticException18.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException20 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable3, (java.lang.Object[]) throwableArray19);
        java.lang.IllegalArgumentException illegalArgumentException21 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, (java.lang.Object[]) throwableArray19);
        java.lang.Throwable[] throwableArray22 = illegalArgumentException21.getSuppressed();
        java.util.NoSuchElementException noSuchElementException23 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, (java.lang.Object[]) throwableArray22);
        java.lang.IllegalArgumentException illegalArgumentException24 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, (java.lang.Object[]) throwableArray22);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException25 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) illegalArgumentException24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(eOFException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(arithmeticException18);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException20);
        org.junit.Assert.assertNotNull(illegalArgumentException21);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(noSuchElementException23);
        org.junit.Assert.assertNotNull(illegalArgumentException24);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = new java.lang.Object[] {};
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray1);
        org.apache.commons.math.MathRuntimeException mathRuntimeException3 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException2);
        java.lang.Object obj5 = null;
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException2.setContext("", obj5);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.lang.Throwable[] throwableArray10 = concurrentModificationException9.getSuppressed();
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.MathRuntimeException mathRuntimeException12 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        java.lang.Object[] objArray21 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException22 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable15, objArray21);
        java.lang.Throwable[] throwableArray23 = concurrentModificationException22.getSuppressed();
        java.lang.ArithmeticException arithmeticException24 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable14, (java.lang.Object[]) throwableArray23);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException12.setContext("hi!", (java.lang.Object) arithmeticException24);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException22);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(arithmeticException24);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException15 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable3, objArray12);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray12);
        java.io.EOFException eOFException17 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray12);
        java.io.EOFException eOFException18 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, objArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException19 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) eOFException18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(illegalArgumentException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
        org.junit.Assert.assertNotNull(eOFException17);
        org.junit.Assert.assertNotNull(eOFException18);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException15 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) arithmeticException14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = null;
        java.util.NoSuchElementException noSuchElementException2 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, objArray1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException3 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) noSuchElementException2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(noSuchElementException2);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.text.ParseException parseException12 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable3, objArray10);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray10);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, objArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException15 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) eOFException14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(parseException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(eOFException14);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable20, objArray26);
        java.text.ParseException parseException28 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable19, objArray26);
        java.lang.IllegalArgumentException illegalArgumentException29 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable17, objArray26);
        java.lang.ArithmeticException arithmeticException30 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, objArray26);
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException14, localizable15, objArray26);
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        org.apache.commons.math.exception.util.Localizable localizable36 = null;
        org.apache.commons.math.exception.util.Localizable localizable38 = null;
        org.apache.commons.math.exception.util.Localizable localizable39 = null;
        java.lang.Object[] objArray45 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException46 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable39, objArray45);
        java.text.ParseException parseException47 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable38, objArray45);
        java.util.NoSuchElementException noSuchElementException48 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable36, objArray45);
        java.text.ParseException parseException49 = org.apache.commons.math.MathRuntimeException.createParseException(100, localizable35, objArray45);
        java.lang.IllegalArgumentException illegalArgumentException50 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable33, objArray45);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException31.setContext("hi!", (java.lang.Object) illegalArgumentException50);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException27);
        org.junit.Assert.assertNotNull(parseException28);
        org.junit.Assert.assertNotNull(illegalArgumentException29);
        org.junit.Assert.assertNotNull(arithmeticException30);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException46);
        org.junit.Assert.assertNotNull(parseException47);
        org.junit.Assert.assertNotNull(noSuchElementException48);
        org.junit.Assert.assertNotNull(parseException49);
        org.junit.Assert.assertNotNull(illegalArgumentException50);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray9);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable13);
        concurrentModificationException12.addSuppressed((java.lang.Throwable) mathRuntimeException14);
        java.lang.Throwable[] throwableArray16 = mathRuntimeException14.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray27 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException28 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable20, objArray27);
        java.io.EOFException eOFException29 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable19, objArray27);
        java.lang.Throwable[] throwableArray30 = eOFException29.getSuppressed();
        java.lang.IllegalStateException illegalStateException31 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable18, (java.lang.Object[]) throwableArray30);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException14.setContext("", (java.lang.Object) throwableArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException28);
        org.junit.Assert.assertNotNull(eOFException29);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(illegalStateException31);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.io.EOFException eOFException11 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray9);
        java.lang.Throwable[] throwableArray12 = eOFException11.getSuppressed();
        java.util.NoSuchElementException noSuchElementException13 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, (java.lang.Object[]) throwableArray12);
        java.lang.Class<?> wildcardClass14 = throwableArray12.getClass();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(eOFException11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(noSuchElementException13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray12);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray12);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException17 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray12);
        java.lang.Throwable[] throwableArray19 = concurrentModificationException18.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException20 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) concurrentModificationException18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable20, objArray26);
        java.text.ParseException parseException28 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable19, objArray26);
        java.lang.IllegalArgumentException illegalArgumentException29 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable17, objArray26);
        java.lang.ArithmeticException arithmeticException30 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, objArray26);
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException14, localizable15, objArray26);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = mathRuntimeException14.getContext("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException27);
        org.junit.Assert.assertNotNull(parseException28);
        org.junit.Assert.assertNotNull(illegalArgumentException29);
        org.junit.Assert.assertNotNull(arithmeticException30);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray9);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable13);
        concurrentModificationException12.addSuppressed((java.lang.Throwable) mathRuntimeException14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException16 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) mathRuntimeException14);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable20, objArray26);
        java.text.ParseException parseException28 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable19, objArray26);
        java.lang.IllegalArgumentException illegalArgumentException29 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable17, objArray26);
        java.lang.ArithmeticException arithmeticException30 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, objArray26);
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException14, localizable15, objArray26);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet32 = mathRuntimeException14.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException27);
        org.junit.Assert.assertNotNull(parseException28);
        org.junit.Assert.assertNotNull(illegalArgumentException29);
        org.junit.Assert.assertNotNull(arithmeticException30);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.util.NoSuchElementException noSuchElementException14 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, objArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException17 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) arrayIndexOutOfBoundsException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(noSuchElementException14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        java.lang.Object[] objArray7 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException8 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray7);
        java.lang.ArithmeticException arithmeticException9 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException10 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) arithmeticException9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException8);
        org.junit.Assert.assertNotNull(arithmeticException9);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray11);
        java.lang.Throwable[] throwableArray14 = eOFException13.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable2, (java.lang.Object[]) throwableArray14);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, (java.lang.Object[]) throwableArray14);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, (java.lang.Object[]) throwableArray14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) concurrentModificationException17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.lang.ArithmeticException arithmeticException12 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray9);
        java.lang.Class<?> wildcardClass13 = objArray9.getClass();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(arithmeticException12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray12);
        java.text.ParseException parseException17 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable1, objArray12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) parseException17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
        org.junit.Assert.assertNotNull(parseException17);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray10);
        java.lang.Throwable[] throwableArray15 = arithmeticException14.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        java.lang.Object[] objArray17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arithmeticException14, localizable16, objArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(throwableArray15);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable20, objArray26);
        java.text.ParseException parseException28 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable19, objArray26);
        java.lang.IllegalArgumentException illegalArgumentException29 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable17, objArray26);
        java.lang.ArithmeticException arithmeticException30 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, objArray26);
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException14, localizable15, objArray26);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = mathRuntimeException31.getContext("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException27);
        org.junit.Assert.assertNotNull(parseException28);
        org.junit.Assert.assertNotNull(illegalArgumentException29);
        org.junit.Assert.assertNotNull(arithmeticException30);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.text.ParseException parseException12 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable3, objArray10);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray10);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, objArray10);
        java.lang.Throwable[] throwableArray15 = eOFException14.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) eOFException14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(parseException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(throwableArray15);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray7 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException8 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, objArray7);
        java.lang.Throwable[] throwableArray9 = illegalStateException8.getSuppressed();
        java.lang.Class<?> wildcardClass10 = throwableArray9.getClass();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        java.lang.Object[] objArray7 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException8 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray7);
        java.lang.ArithmeticException arithmeticException9 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray7);
        java.lang.Throwable[] throwableArray10 = arithmeticException9.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arithmeticException9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException8);
        org.junit.Assert.assertNotNull(arithmeticException9);
        org.junit.Assert.assertNotNull(throwableArray10);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = null;
        java.util.ConcurrentModificationException concurrentModificationException2 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException3 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) concurrentModificationException2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(concurrentModificationException2);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray10);
        java.lang.Throwable[] throwableArray15 = arithmeticException14.getSuppressed();
        java.lang.Throwable[] throwableArray16 = arithmeticException14.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        java.lang.Object[] objArray29 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException30 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable23, objArray29);
        java.text.ParseException parseException31 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable22, objArray29);
        java.util.NoSuchElementException noSuchElementException32 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable20, objArray29);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException33 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable19, objArray29);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException34 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable18, objArray29);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException35 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arithmeticException14, localizable17, objArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException30);
        org.junit.Assert.assertNotNull(parseException31);
        org.junit.Assert.assertNotNull(noSuchElementException32);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException33);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException34);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable7, objArray14);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable6, objArray14);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray14);
        java.util.NoSuchElementException noSuchElementException18 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable4, objArray14);
        java.util.ConcurrentModificationException concurrentModificationException19 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray14);
        java.lang.IllegalArgumentException illegalArgumentException20 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray14);
        java.util.ConcurrentModificationException concurrentModificationException21 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray14);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray14);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet23 = mathRuntimeException22.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(noSuchElementException18);
        org.junit.Assert.assertNotNull(concurrentModificationException19);
        org.junit.Assert.assertNotNull(illegalArgumentException20);
        org.junit.Assert.assertNotNull(concurrentModificationException21);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.lang.Throwable[] throwableArray10 = concurrentModificationException9.getSuppressed();
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, (java.lang.Object[]) throwableArray10);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException12 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, (java.lang.Object[]) throwableArray10);
        java.lang.Class<?> wildcardClass13 = throwableArray10.getClass();
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.lang.ArithmeticException arithmeticException12 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        java.util.NoSuchElementException noSuchElementException14 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, objArray10);
        java.lang.Throwable[] throwableArray15 = noSuchElementException14.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) noSuchElementException14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arithmeticException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(noSuchElementException14);
        org.junit.Assert.assertNotNull(throwableArray15);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        mathRuntimeException1.addSuppressed((java.lang.Throwable) concurrentModificationException14);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException1.setContext("hi!", (java.lang.Object) 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable5, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray13);
        java.lang.ArithmeticException arithmeticException17 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray13);
        java.lang.Throwable[] throwableArray18 = arithmeticException17.getSuppressed();
        java.text.ParseException parseException19 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable2, (java.lang.Object[]) throwableArray18);
        java.io.EOFException eOFException20 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, (java.lang.Object[]) throwableArray18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) eOFException20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(arithmeticException17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(parseException19);
        org.junit.Assert.assertNotNull(eOFException20);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray12);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray12);
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        java.lang.Object[] objArray31 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException32 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable25, objArray31);
        java.text.ParseException parseException33 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable24, objArray31);
        java.lang.IllegalArgumentException illegalArgumentException34 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable22, objArray31);
        java.lang.Object[] objArray35 = new java.lang.Object[] { "", illegalArgumentException34 };
        java.util.ConcurrentModificationException concurrentModificationException36 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable20, objArray35);
        java.lang.Throwable[] throwableArray37 = concurrentModificationException36.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException18.addMessage(localizable19, (java.lang.Object[]) throwableArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException32);
        org.junit.Assert.assertNotNull(parseException33);
        org.junit.Assert.assertNotNull(illegalArgumentException34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(concurrentModificationException36);
        org.junit.Assert.assertNotNull(throwableArray37);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.util.NoSuchElementException noSuchElementException14 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, objArray11);
        java.io.EOFException eOFException16 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException17 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) eOFException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(noSuchElementException14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(eOFException16);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        org.apache.commons.math.exception.util.Localizable localizable9 = null;
        java.lang.Object[] objArray16 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException17 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable9, objArray16);
        java.io.EOFException eOFException18 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable8, objArray16);
        java.util.ConcurrentModificationException concurrentModificationException19 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable7, objArray16);
        java.lang.ArithmeticException arithmeticException20 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable6, objArray16);
        java.lang.Throwable[] throwableArray21 = arithmeticException20.getSuppressed();
        java.text.ParseException parseException22 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, (java.lang.Object[]) throwableArray21);
        java.text.ParseException parseException23 = org.apache.commons.math.MathRuntimeException.createParseException((int) (byte) 0, localizable3, (java.lang.Object[]) throwableArray21);
        java.util.NoSuchElementException noSuchElementException24 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, (java.lang.Object[]) throwableArray21);
        java.io.EOFException eOFException25 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, (java.lang.Object[]) throwableArray21);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException17);
        org.junit.Assert.assertNotNull(eOFException18);
        org.junit.Assert.assertNotNull(concurrentModificationException19);
        org.junit.Assert.assertNotNull(arithmeticException20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(parseException22);
        org.junit.Assert.assertNotNull(parseException23);
        org.junit.Assert.assertNotNull(noSuchElementException24);
        org.junit.Assert.assertNotNull(eOFException25);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet17 = mathRuntimeException16.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.lang.Throwable[] throwableArray10 = concurrentModificationException9.getSuppressed();
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, (java.lang.Object[]) throwableArray10);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException12 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, (java.lang.Object[]) throwableArray10);
        java.lang.Throwable[] throwableArray13 = arrayIndexOutOfBoundsException12.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException27 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable19, objArray26);
        java.io.EOFException eOFException28 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable18, objArray26);
        java.util.ConcurrentModificationException concurrentModificationException29 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable17, objArray26);
        java.lang.ArithmeticException arithmeticException30 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, objArray26);
        java.text.ParseException parseException31 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable15, objArray26);
        arrayIndexOutOfBoundsException12.addSuppressed((java.lang.Throwable) parseException31);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException33 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) arrayIndexOutOfBoundsException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException27);
        org.junit.Assert.assertNotNull(eOFException28);
        org.junit.Assert.assertNotNull(concurrentModificationException29);
        org.junit.Assert.assertNotNull(arithmeticException30);
        org.junit.Assert.assertNotNull(parseException31);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.text.ParseException parseException10 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable1, objArray8);
        org.apache.commons.math.exception.util.Localizable localizable11 = null;
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        java.lang.Object[] objArray19 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable13, objArray19);
        java.lang.Throwable[] throwableArray21 = concurrentModificationException20.getSuppressed();
        java.io.EOFException eOFException22 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable12, (java.lang.Object[]) throwableArray21);
        java.io.EOFException eOFException23 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable11, (java.lang.Object[]) throwableArray21);
        parseException10.addSuppressed((java.lang.Throwable) eOFException23);
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        org.apache.commons.math.exception.util.Localizable localizable28 = null;
        org.apache.commons.math.exception.util.Localizable localizable29 = null;
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        org.apache.commons.math.exception.util.Localizable localizable31 = null;
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        java.lang.Object[] objArray40 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException41 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable34, objArray40);
        java.text.ParseException parseException42 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable33, objArray40);
        java.lang.IllegalStateException illegalStateException43 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable31, objArray40);
        java.lang.IllegalArgumentException illegalArgumentException44 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable30, objArray40);
        java.lang.IllegalArgumentException illegalArgumentException45 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable29, objArray40);
        org.apache.commons.math.MathRuntimeException mathRuntimeException46 = new org.apache.commons.math.MathRuntimeException(localizable28, objArray40);
        java.text.ParseException parseException47 = org.apache.commons.math.MathRuntimeException.createParseException((int) (short) 10, localizable27, objArray40);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException48 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) eOFException23, localizable25, objArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(parseException10);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(eOFException22);
        org.junit.Assert.assertNotNull(eOFException23);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException41);
        org.junit.Assert.assertNotNull(parseException42);
        org.junit.Assert.assertNotNull(illegalStateException43);
        org.junit.Assert.assertNotNull(illegalArgumentException44);
        org.junit.Assert.assertNotNull(illegalArgumentException45);
        org.junit.Assert.assertNotNull(parseException47);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.lang.ArithmeticException arithmeticException15 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable5, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray13);
        java.util.NoSuchElementException noSuchElementException17 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable3, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException(localizable1, objArray13);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException20 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = arrayIndexOutOfBoundsException20.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(arithmeticException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(noSuchElementException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException20);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable2, objArray12);
        java.text.ParseException parseException17 = org.apache.commons.math.MathRuntimeException.createParseException((int) (short) 0, localizable1, objArray12);
        java.lang.Class<?> wildcardClass18 = objArray12.getClass();
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(parseException17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException14 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray11);
        java.lang.Object[] objArray15 = new java.lang.Object[] { "", illegalArgumentException14 };
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException17 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) concurrentModificationException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(illegalArgumentException14);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray12);
        java.lang.Throwable[] throwableArray17 = noSuchElementException16.getSuppressed();
        java.lang.Throwable[] throwableArray18 = noSuchElementException16.getSuppressed();
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException(throwable0, localizable1, (java.lang.Object[]) throwableArray18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = mathRuntimeException19.getContext("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        java.lang.Object obj18 = null;
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException16.setContext("", obj18);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray10);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        java.lang.Object[] objArray25 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException26 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable18, objArray25);
        java.lang.ArithmeticException arithmeticException27 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable17, objArray25);
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable16, objArray25);
        java.util.NoSuchElementException noSuchElementException29 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable15, objArray25);
        arithmeticException14.addSuppressed((java.lang.Throwable) noSuchElementException29);
        org.apache.commons.math.exception.util.Localizable localizable31 = null;
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        java.lang.Object[] objArray41 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException42 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable34, objArray41);
        java.lang.ArithmeticException arithmeticException43 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable33, objArray41);
        java.util.ConcurrentModificationException concurrentModificationException44 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable32, objArray41);
        java.lang.Throwable throwable45 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException46 = new org.apache.commons.math.MathRuntimeException(throwable45);
        concurrentModificationException44.addSuppressed((java.lang.Throwable) mathRuntimeException46);
        java.lang.Throwable[] throwableArray48 = mathRuntimeException46.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) noSuchElementException29, localizable31, (java.lang.Object[]) throwableArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException26);
        org.junit.Assert.assertNotNull(arithmeticException27);
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(noSuchElementException29);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException42);
        org.junit.Assert.assertNotNull(arithmeticException43);
        org.junit.Assert.assertNotNull(concurrentModificationException44);
        org.junit.Assert.assertNotNull(throwableArray48);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray12);
        java.io.EOFException eOFException17 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray12);
        java.lang.ArithmeticException arithmeticException18 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray12);
        java.lang.Throwable[] throwableArray19 = arithmeticException18.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException20 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) arithmeticException18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
        org.junit.Assert.assertNotNull(eOFException17);
        org.junit.Assert.assertNotNull(arithmeticException18);
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException15 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException17 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) illegalArgumentException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(illegalArgumentException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable20, objArray26);
        java.text.ParseException parseException28 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable19, objArray26);
        java.lang.IllegalArgumentException illegalArgumentException29 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable17, objArray26);
        java.lang.ArithmeticException arithmeticException30 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, objArray26);
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException14, localizable15, objArray26);
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        java.lang.Object[] objArray42 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException43 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable35, objArray42);
        java.lang.ArithmeticException arithmeticException44 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable34, objArray42);
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable33, objArray42);
        org.apache.commons.math.MathRuntimeException mathRuntimeException46 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException31, localizable32, objArray42);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        org.apache.commons.math.exception.util.Localizable localizable49 = null;
        org.apache.commons.math.exception.util.Localizable localizable50 = null;
        org.apache.commons.math.exception.util.Localizable localizable51 = null;
        org.apache.commons.math.exception.util.Localizable localizable52 = null;
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray60 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException61 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable53, objArray60);
        java.lang.ArithmeticException arithmeticException62 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable52, objArray60);
        java.util.ConcurrentModificationException concurrentModificationException63 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable51, objArray60);
        org.apache.commons.math.MathRuntimeException mathRuntimeException64 = new org.apache.commons.math.MathRuntimeException(localizable50, objArray60);
        java.text.ParseException parseException65 = org.apache.commons.math.MathRuntimeException.createParseException((int) (short) 0, localizable49, objArray60);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException46.addMessage(localizable47, objArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException27);
        org.junit.Assert.assertNotNull(parseException28);
        org.junit.Assert.assertNotNull(illegalArgumentException29);
        org.junit.Assert.assertNotNull(arithmeticException30);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException43);
        org.junit.Assert.assertNotNull(arithmeticException44);
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException61);
        org.junit.Assert.assertNotNull(arithmeticException62);
        org.junit.Assert.assertNotNull(concurrentModificationException63);
        org.junit.Assert.assertNotNull(parseException65);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException18 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException19 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) illegalArgumentException18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(illegalArgumentException18);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        java.io.EOFException eOFException16 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, objArray11);
        java.lang.Throwable throwable17 = null;
        // The following exception was thrown during execution in test generation
        try {
            eOFException16.addSuppressed(throwable17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(eOFException16);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.text.ParseException parseException12 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable3, objArray10);
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray10);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException14 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray10);
        java.lang.Class<?> wildcardClass15 = objArray10.getClass();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(parseException12);
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray11);
        java.lang.Throwable[] throwableArray14 = eOFException13.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable2, (java.lang.Object[]) throwableArray14);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, (java.lang.Object[]) throwableArray14);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, (java.lang.Object[]) throwableArray14);
        java.lang.Class<?> wildcardClass18 = throwableArray14.getClass();
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.text.ParseException parseException11 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable2, objArray9);
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, objArray9);
        java.lang.Class<?> wildcardClass13 = objArray9.getClass();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(parseException11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        java.util.NoSuchElementException noSuchElementException14 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        java.lang.Object[] objArray25 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException26 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable18, objArray25);
        java.io.EOFException eOFException27 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable17, objArray25);
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable16, objArray25);
        java.lang.ArithmeticException arithmeticException29 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable15, objArray25);
        noSuchElementException14.addSuppressed((java.lang.Throwable) arithmeticException29);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) noSuchElementException14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(noSuchElementException14);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException26);
        org.junit.Assert.assertNotNull(eOFException27);
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(arithmeticException29);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.lang.Throwable[] throwableArray10 = concurrentModificationException9.getSuppressed();
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, (java.lang.Object[]) throwableArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, (java.lang.Object[]) throwableArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException13 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) eOFException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(eOFException12);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray12);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray12);
        java.lang.String str19 = mathRuntimeException18.toString();
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.commons.math.MathRuntimeException: " + "'", str19, "org.apache.commons.math.MathRuntimeException: ");
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray12);
        java.lang.Throwable[] throwableArray17 = noSuchElementException16.getSuppressed();
        java.lang.Throwable[] throwableArray18 = noSuchElementException16.getSuppressed();
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException(throwable0, localizable1, (java.lang.Object[]) throwableArray18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet20 = mathRuntimeException19.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) mathRuntimeException16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = mathRuntimeException16.getContext("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.lang.Throwable[] throwableArray13 = concurrentModificationException12.getSuppressed();
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, (java.lang.Object[]) throwableArray13);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable3, (java.lang.Object[]) throwableArray13);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, (java.lang.Object[]) throwableArray13);
        java.io.EOFException eOFException17 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException29 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray28);
        java.lang.Throwable[] throwableArray30 = concurrentModificationException29.getSuppressed();
        java.lang.IllegalStateException illegalStateException31 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, (java.lang.Object[]) throwableArray30);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException32 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable20, (java.lang.Object[]) throwableArray30);
        java.lang.Throwable[] throwableArray33 = arrayIndexOutOfBoundsException32.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        org.apache.commons.math.exception.util.Localizable localizable36 = null;
        org.apache.commons.math.exception.util.Localizable localizable37 = null;
        org.apache.commons.math.exception.util.Localizable localizable38 = null;
        org.apache.commons.math.exception.util.Localizable localizable39 = null;
        java.lang.Object[] objArray46 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException47 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable39, objArray46);
        java.io.EOFException eOFException48 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable38, objArray46);
        java.util.ConcurrentModificationException concurrentModificationException49 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable37, objArray46);
        java.lang.ArithmeticException arithmeticException50 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable36, objArray46);
        java.text.ParseException parseException51 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable35, objArray46);
        arrayIndexOutOfBoundsException32.addSuppressed((java.lang.Throwable) parseException51);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException18.setContext("", (java.lang.Object) parseException51);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
        org.junit.Assert.assertNotNull(eOFException17);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException29);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(illegalStateException31);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException47);
        org.junit.Assert.assertNotNull(eOFException48);
        org.junit.Assert.assertNotNull(concurrentModificationException49);
        org.junit.Assert.assertNotNull(arithmeticException50);
        org.junit.Assert.assertNotNull(parseException51);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable3, objArray12);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable2, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException18 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = illegalArgumentException18.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
        org.junit.Assert.assertNotNull(illegalArgumentException18);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable5, objArray13);
        java.lang.Throwable[] throwableArray16 = eOFException15.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException17 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable4, (java.lang.Object[]) throwableArray16);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, (java.lang.Object[]) throwableArray16);
        java.lang.ArithmeticException arithmeticException19 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, (java.lang.Object[]) throwableArray16);
        java.util.NoSuchElementException noSuchElementException20 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray16);
        java.lang.String str22 = mathRuntimeException21.toString();
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(arithmeticException19);
        org.junit.Assert.assertNotNull(noSuchElementException20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.apache.commons.math.MathRuntimeException: " + "'", str22, "org.apache.commons.math.MathRuntimeException: ");
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.io.EOFException eOFException11 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray9);
        java.lang.Throwable[] throwableArray12 = eOFException11.getSuppressed();
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, (java.lang.Object[]) throwableArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException14 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) illegalStateException13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(eOFException11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(illegalStateException13);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.text.ParseException parseException12 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable3, objArray10);
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray10);
        java.lang.IllegalArgumentException illegalArgumentException14 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray10);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        java.lang.Object[] objArray23 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException24 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable17, objArray23);
        java.lang.Throwable[] throwableArray25 = concurrentModificationException24.getSuppressed();
        java.util.ConcurrentModificationException concurrentModificationException26 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable16, (java.lang.Object[]) throwableArray25);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException27 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) illegalArgumentException14, localizable15, (java.lang.Object[]) throwableArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(parseException12);
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(illegalArgumentException14);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException24);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(concurrentModificationException26);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray12);
        java.lang.Throwable[] throwableArray17 = arithmeticException16.getSuppressed();
        java.text.ParseException parseException18 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable1, (java.lang.Object[]) throwableArray17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = parseException18.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(parseException18);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException14 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        java.lang.Throwable[] throwableArray17 = mathRuntimeException16.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        java.lang.Object[] objArray31 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException32 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable24, objArray31);
        java.io.EOFException eOFException33 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable23, objArray31);
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray31);
        java.lang.ArithmeticException arithmeticException35 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable21, objArray31);
        java.text.ParseException parseException36 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable20, objArray31);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException16.setContext("hi!", (java.lang.Object) parseException36);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(illegalArgumentException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException32);
        org.junit.Assert.assertNotNull(eOFException33);
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertNotNull(arithmeticException35);
        org.junit.Assert.assertNotNull(parseException36);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) mathRuntimeException16);
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException29 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray28);
        java.text.ParseException parseException30 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable21, objArray28);
        java.util.NoSuchElementException noSuchElementException31 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable19, objArray28);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException16.setContext("org.apache.commons.math.MathRuntimeException: ", (java.lang.Object) noSuchElementException31);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException29);
        org.junit.Assert.assertNotNull(parseException30);
        org.junit.Assert.assertNotNull(noSuchElementException31);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray9);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable13);
        concurrentModificationException12.addSuppressed((java.lang.Throwable) mathRuntimeException14);
        java.lang.Throwable[] throwableArray16 = mathRuntimeException14.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable24, objArray30);
        java.text.ParseException parseException32 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable23, objArray30);
        java.lang.IllegalArgumentException illegalArgumentException33 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable21, objArray30);
        java.lang.ArithmeticException arithmeticException34 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable20, objArray30);
        java.io.EOFException eOFException35 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable19, objArray30);
        java.util.NoSuchElementException noSuchElementException36 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable18, objArray30);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException14.addMessage(localizable17, objArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(parseException32);
        org.junit.Assert.assertNotNull(illegalArgumentException33);
        org.junit.Assert.assertNotNull(arithmeticException34);
        org.junit.Assert.assertNotNull(eOFException35);
        org.junit.Assert.assertNotNull(noSuchElementException36);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray6 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException7 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException8 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) concurrentModificationException7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException7);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray11);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable24, objArray30);
        java.text.ParseException parseException32 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable23, objArray30);
        java.lang.IllegalArgumentException illegalArgumentException33 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable21, objArray30);
        java.lang.ArithmeticException arithmeticException34 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable20, objArray30);
        java.io.EOFException eOFException35 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable19, objArray30);
        java.io.EOFException eOFException36 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable18, objArray30);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) illegalArgumentException16, localizable17, objArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(parseException32);
        org.junit.Assert.assertNotNull(illegalArgumentException33);
        org.junit.Assert.assertNotNull(arithmeticException34);
        org.junit.Assert.assertNotNull(eOFException35);
        org.junit.Assert.assertNotNull(eOFException36);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.lang.Throwable[] throwableArray12 = concurrentModificationException11.getSuppressed();
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, (java.lang.Object[]) throwableArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, (java.lang.Object[]) throwableArray12);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, (java.lang.Object[]) throwableArray12);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, (java.lang.Object[]) throwableArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = illegalArgumentException16.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray11);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray27 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable21, objArray27);
        java.lang.Throwable[] throwableArray29 = concurrentModificationException28.getSuppressed();
        java.lang.IllegalStateException illegalStateException30 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable20, (java.lang.Object[]) throwableArray29);
        java.lang.ArithmeticException arithmeticException31 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable19, (java.lang.Object[]) throwableArray29);
        org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException(localizable18, (java.lang.Object[]) throwableArray29);
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        org.apache.commons.math.exception.util.Localizable localizable37 = null;
        org.apache.commons.math.exception.util.Localizable localizable38 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable38, objArray44);
        java.text.ParseException parseException46 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable37, objArray44);
        java.lang.IllegalArgumentException illegalArgumentException47 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable35, objArray44);
        java.lang.ArithmeticException arithmeticException48 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable34, objArray44);
        org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException32, localizable33, objArray44);
        org.apache.commons.math.exception.util.Localizable localizable50 = null;
        org.apache.commons.math.exception.util.Localizable localizable51 = null;
        org.apache.commons.math.exception.util.Localizable localizable52 = null;
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        java.lang.Object[] objArray60 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException61 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable53, objArray60);
        java.lang.ArithmeticException arithmeticException62 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable52, objArray60);
        java.util.ConcurrentModificationException concurrentModificationException63 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable51, objArray60);
        org.apache.commons.math.MathRuntimeException mathRuntimeException64 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException49, localizable50, objArray60);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arithmeticException16, localizable17, objArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(illegalStateException30);
        org.junit.Assert.assertNotNull(arithmeticException31);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertNotNull(parseException46);
        org.junit.Assert.assertNotNull(illegalArgumentException47);
        org.junit.Assert.assertNotNull(arithmeticException48);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException61);
        org.junit.Assert.assertNotNull(arithmeticException62);
        org.junit.Assert.assertNotNull(concurrentModificationException63);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.lang.ArithmeticException arithmeticException12 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        java.lang.Throwable throwable14 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(throwable14);
        concurrentModificationException13.addSuppressed((java.lang.Throwable) mathRuntimeException15);
        java.lang.Throwable[] throwableArray17 = mathRuntimeException15.getSuppressed();
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        java.lang.Object[] objArray29 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException30 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable23, objArray29);
        java.lang.Throwable[] throwableArray31 = concurrentModificationException30.getSuppressed();
        java.lang.IllegalStateException illegalStateException32 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable22, (java.lang.Object[]) throwableArray31);
        java.lang.ArithmeticException arithmeticException33 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable21, (java.lang.Object[]) throwableArray31);
        java.util.NoSuchElementException noSuchElementException34 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable20, (java.lang.Object[]) throwableArray31);
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        org.apache.commons.math.exception.util.Localizable localizable36 = null;
        org.apache.commons.math.exception.util.Localizable localizable37 = null;
        org.apache.commons.math.exception.util.Localizable localizable38 = null;
        java.lang.Object[] objArray45 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException46 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable38, objArray45);
        java.io.EOFException eOFException47 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable37, objArray45);
        java.util.ConcurrentModificationException concurrentModificationException48 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable36, objArray45);
        java.lang.ArithmeticException arithmeticException49 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable35, objArray45);
        noSuchElementException34.addSuppressed((java.lang.Throwable) arithmeticException49);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException18.setContext("org.apache.commons.math.MathRuntimeException: ", (java.lang.Object) noSuchElementException34);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arithmeticException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException30);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(illegalStateException32);
        org.junit.Assert.assertNotNull(arithmeticException33);
        org.junit.Assert.assertNotNull(noSuchElementException34);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException46);
        org.junit.Assert.assertNotNull(eOFException47);
        org.junit.Assert.assertNotNull(concurrentModificationException48);
        org.junit.Assert.assertNotNull(arithmeticException49);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.lang.Throwable[] throwableArray10 = concurrentModificationException9.getSuppressed();
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, (java.lang.Object[]) throwableArray10);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException12 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, (java.lang.Object[]) throwableArray10);
        java.lang.Throwable[] throwableArray13 = arrayIndexOutOfBoundsException12.getSuppressed();
        java.lang.Throwable[] throwableArray14 = arrayIndexOutOfBoundsException12.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException15 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) arrayIndexOutOfBoundsException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray14);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray11);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = mathRuntimeException16.getContext("org.apache.commons.math.MathRuntimeException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(eOFException15);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(throwable0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet3 = mathRuntimeException2.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable20, objArray26);
        java.text.ParseException parseException28 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable19, objArray26);
        java.lang.IllegalArgumentException illegalArgumentException29 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable17, objArray26);
        java.lang.ArithmeticException arithmeticException30 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, objArray26);
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException14, localizable15, objArray26);
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        java.lang.Object[] objArray41 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException42 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable35, objArray41);
        java.text.ParseException parseException43 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable34, objArray41);
        org.apache.commons.math.exception.util.Localizable localizable44 = null;
        org.apache.commons.math.exception.util.Localizable localizable45 = null;
        org.apache.commons.math.exception.util.Localizable localizable46 = null;
        java.lang.Object[] objArray52 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException53 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable46, objArray52);
        java.lang.ArithmeticException arithmeticException54 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable45, objArray52);
        java.lang.ArithmeticException arithmeticException55 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable44, objArray52);
        parseException43.addSuppressed((java.lang.Throwable) arithmeticException55);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException31.setContext("", (java.lang.Object) parseException43);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException27);
        org.junit.Assert.assertNotNull(parseException28);
        org.junit.Assert.assertNotNull(illegalArgumentException29);
        org.junit.Assert.assertNotNull(arithmeticException30);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException42);
        org.junit.Assert.assertNotNull(parseException43);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException53);
        org.junit.Assert.assertNotNull(arithmeticException54);
        org.junit.Assert.assertNotNull(arithmeticException55);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.lang.ArithmeticException arithmeticException12 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = mathRuntimeException14.getContext("org.apache.commons.math.MathRuntimeException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arithmeticException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        mathRuntimeException1.addSuppressed((java.lang.Throwable) concurrentModificationException14);
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException29 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, objArray28);
        java.io.EOFException eOFException30 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable20, objArray28);
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable19, objArray28);
        java.lang.ArithmeticException arithmeticException32 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable18, objArray28);
        java.lang.Throwable[] throwableArray33 = arithmeticException32.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException34 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable17, (java.lang.Object[]) throwableArray33);
        java.lang.IllegalArgumentException illegalArgumentException35 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable16, (java.lang.Object[]) throwableArray33);
        concurrentModificationException14.addSuppressed((java.lang.Throwable) illegalArgumentException35);
        org.apache.commons.math.exception.util.Localizable localizable37 = null;
        org.apache.commons.math.exception.util.Localizable localizable38 = null;
        org.apache.commons.math.exception.util.Localizable localizable39 = null;
        org.apache.commons.math.exception.util.Localizable localizable40 = null;
        org.apache.commons.math.exception.util.Localizable localizable42 = null;
        org.apache.commons.math.exception.util.Localizable localizable43 = null;
        java.lang.Object[] objArray49 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException50 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable43, objArray49);
        java.text.ParseException parseException51 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable42, objArray49);
        java.lang.IllegalStateException illegalStateException52 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable40, objArray49);
        java.lang.IllegalArgumentException illegalArgumentException53 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable39, objArray49);
        java.lang.IllegalArgumentException illegalArgumentException54 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable38, objArray49);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) illegalArgumentException35, localizable37, objArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException29);
        org.junit.Assert.assertNotNull(eOFException30);
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(arithmeticException32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException34);
        org.junit.Assert.assertNotNull(illegalArgumentException35);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException50);
        org.junit.Assert.assertNotNull(parseException51);
        org.junit.Assert.assertNotNull(illegalStateException52);
        org.junit.Assert.assertNotNull(illegalArgumentException53);
        org.junit.Assert.assertNotNull(illegalArgumentException54);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray9);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable13);
        concurrentModificationException12.addSuppressed((java.lang.Throwable) mathRuntimeException14);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException29 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, objArray28);
        java.io.EOFException eOFException30 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable20, objArray28);
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable19, objArray28);
        java.lang.ArithmeticException arithmeticException32 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable18, objArray28);
        java.lang.Throwable[] throwableArray33 = arithmeticException32.getSuppressed();
        java.text.ParseException parseException34 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable17, (java.lang.Object[]) throwableArray33);
        mathRuntimeException14.addSuppressed((java.lang.Throwable) parseException34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException36 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) parseException34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException29);
        org.junit.Assert.assertNotNull(eOFException30);
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(arithmeticException32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(parseException34);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException9 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray8);
        java.io.EOFException eOFException10 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, objArray8);
        java.lang.Throwable[] throwableArray11 = eOFException10.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        java.lang.Object[] objArray21 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException22 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable15, objArray21);
        java.text.ParseException parseException23 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable14, objArray21);
        java.lang.IllegalArgumentException illegalArgumentException24 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable12, objArray21);
        eOFException10.addSuppressed((java.lang.Throwable) illegalArgumentException24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException26 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) eOFException10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException9);
        org.junit.Assert.assertNotNull(eOFException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException22);
        org.junit.Assert.assertNotNull(parseException23);
        org.junit.Assert.assertNotNull(illegalArgumentException24);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, (java.lang.Object[]) throwableArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        java.lang.Object[] objArray24 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException25 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable17, objArray24);
        java.io.EOFException eOFException26 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable16, objArray24);
        java.lang.Throwable[] throwableArray27 = eOFException26.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException14.addMessage(localizable15, (java.lang.Object[]) throwableArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException25);
        org.junit.Assert.assertNotNull(eOFException26);
        org.junit.Assert.assertNotNull(throwableArray27);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable20, objArray26);
        java.text.ParseException parseException28 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable19, objArray26);
        java.lang.IllegalArgumentException illegalArgumentException29 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable17, objArray26);
        java.lang.ArithmeticException arithmeticException30 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, objArray26);
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException14, localizable15, objArray26);
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        java.lang.Object[] objArray42 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException43 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable35, objArray42);
        java.lang.ArithmeticException arithmeticException44 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable34, objArray42);
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable33, objArray42);
        org.apache.commons.math.MathRuntimeException mathRuntimeException46 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException31, localizable32, objArray42);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        org.apache.commons.math.exception.util.Localizable localizable48 = null;
        org.apache.commons.math.exception.util.Localizable localizable49 = null;
        org.apache.commons.math.exception.util.Localizable localizable50 = null;
        org.apache.commons.math.exception.util.Localizable localizable51 = null;
        java.lang.Object[] objArray57 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException58 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable51, objArray57);
        java.lang.Throwable[] throwableArray59 = concurrentModificationException58.getSuppressed();
        java.lang.IllegalStateException illegalStateException60 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable50, (java.lang.Object[]) throwableArray59);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException61 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable49, (java.lang.Object[]) throwableArray59);
        java.lang.ArithmeticException arithmeticException62 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable48, (java.lang.Object[]) throwableArray59);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException46.addMessage(localizable47, (java.lang.Object[]) throwableArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException27);
        org.junit.Assert.assertNotNull(parseException28);
        org.junit.Assert.assertNotNull(illegalArgumentException29);
        org.junit.Assert.assertNotNull(arithmeticException30);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException43);
        org.junit.Assert.assertNotNull(arithmeticException44);
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException58);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(illegalStateException60);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException61);
        org.junit.Assert.assertNotNull(arithmeticException62);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray11);
        java.lang.Class<?> wildcardClass17 = objArray11.getClass();
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray9);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable13);
        concurrentModificationException12.addSuppressed((java.lang.Throwable) mathRuntimeException14);
        java.lang.Throwable[] throwableArray16 = mathRuntimeException14.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) mathRuntimeException14);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(throwableArray16);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.text.ParseException parseException10 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable1, objArray8);
        java.lang.Throwable[] throwableArray11 = parseException10.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        java.lang.Object[] objArray23 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException24 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable17, objArray23);
        java.text.ParseException parseException25 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable16, objArray23);
        java.lang.IllegalArgumentException illegalArgumentException26 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable14, objArray23);
        java.lang.ArithmeticException arithmeticException27 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable13, objArray23);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException28 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) parseException10, localizable12, objArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(parseException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException24);
        org.junit.Assert.assertNotNull(parseException25);
        org.junit.Assert.assertNotNull(illegalArgumentException26);
        org.junit.Assert.assertNotNull(arithmeticException27);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray9);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable13);
        concurrentModificationException12.addSuppressed((java.lang.Throwable) mathRuntimeException14);
        java.lang.Throwable[] throwableArray16 = mathRuntimeException14.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray27 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable21, objArray27);
        java.lang.Throwable[] throwableArray29 = concurrentModificationException28.getSuppressed();
        java.lang.IllegalStateException illegalStateException30 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable20, (java.lang.Object[]) throwableArray29);
        java.util.NoSuchElementException noSuchElementException31 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable19, (java.lang.Object[]) throwableArray29);
        java.lang.IllegalArgumentException illegalArgumentException32 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable18, (java.lang.Object[]) throwableArray29);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException14.addMessage(localizable17, (java.lang.Object[]) throwableArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(illegalStateException30);
        org.junit.Assert.assertNotNull(noSuchElementException31);
        org.junit.Assert.assertNotNull(illegalArgumentException32);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.lang.Throwable[] throwableArray12 = concurrentModificationException11.getSuppressed();
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, (java.lang.Object[]) throwableArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, (java.lang.Object[]) throwableArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(localizable1, (java.lang.Object[]) throwableArray12);
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray27 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable21, objArray27);
        java.text.ParseException parseException29 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable20, objArray27);
        java.lang.IllegalArgumentException illegalArgumentException30 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable18, objArray27);
        java.lang.ArithmeticException arithmeticException31 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable17, objArray27);
        org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException15, localizable16, objArray27);
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        org.apache.commons.math.exception.util.Localizable localizable36 = null;
        java.lang.Object[] objArray43 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException44 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable36, objArray43);
        java.lang.ArithmeticException arithmeticException45 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable35, objArray43);
        java.util.ConcurrentModificationException concurrentModificationException46 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable34, objArray43);
        org.apache.commons.math.MathRuntimeException mathRuntimeException47 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException32, localizable33, objArray43);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException48 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray43);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arrayIndexOutOfBoundsException48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(parseException29);
        org.junit.Assert.assertNotNull(illegalArgumentException30);
        org.junit.Assert.assertNotNull(arithmeticException31);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException44);
        org.junit.Assert.assertNotNull(arithmeticException45);
        org.junit.Assert.assertNotNull(concurrentModificationException46);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException48);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        java.util.NoSuchElementException noSuchElementException14 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        java.lang.Object[] objArray25 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException26 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable18, objArray25);
        java.io.EOFException eOFException27 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable17, objArray25);
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable16, objArray25);
        java.lang.ArithmeticException arithmeticException29 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable15, objArray25);
        noSuchElementException14.addSuppressed((java.lang.Throwable) arithmeticException29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException31 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) noSuchElementException14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(noSuchElementException14);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException26);
        org.junit.Assert.assertNotNull(eOFException27);
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(arithmeticException29);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.lang.Throwable[] throwableArray13 = eOFException12.getSuppressed();
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, (java.lang.Object[]) throwableArray13);
        java.lang.IllegalArgumentException illegalArgumentException15 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        java.lang.Object[] objArray25 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException26 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable19, objArray25);
        java.lang.Throwable[] throwableArray27 = concurrentModificationException26.getSuppressed();
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable18, (java.lang.Object[]) throwableArray27);
        java.lang.IllegalStateException illegalStateException29 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable17, (java.lang.Object[]) throwableArray27);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException30 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) illegalArgumentException15, localizable16, (java.lang.Object[]) throwableArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(illegalArgumentException15);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException26);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(illegalStateException29);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException18 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray12);
        java.lang.Class<?> wildcardClass19 = illegalArgumentException18.getClass();
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(illegalArgumentException18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray11);
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) concurrentModificationException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.io.EOFException eOFException11 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray9);
        java.lang.Throwable[] throwableArray12 = eOFException11.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException13 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, (java.lang.Object[]) throwableArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException14 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) arrayIndexOutOfBoundsException13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(eOFException11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException13);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.lang.Throwable[] throwableArray12 = concurrentModificationException11.getSuppressed();
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, (java.lang.Object[]) throwableArray12);
        java.util.NoSuchElementException noSuchElementException14 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, (java.lang.Object[]) throwableArray12);
        java.lang.IllegalArgumentException illegalArgumentException15 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, (java.lang.Object[]) throwableArray12);
        java.io.EOFException eOFException16 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, (java.lang.Object[]) throwableArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException17 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) eOFException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(noSuchElementException14);
        org.junit.Assert.assertNotNull(illegalArgumentException15);
        org.junit.Assert.assertNotNull(eOFException16);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.lang.ArithmeticException arithmeticException12 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        java.lang.Throwable throwable14 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(throwable14);
        concurrentModificationException13.addSuppressed((java.lang.Throwable) mathRuntimeException15);
        java.lang.Throwable[] throwableArray17 = mathRuntimeException15.getSuppressed();
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException29 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, objArray28);
        java.io.EOFException eOFException30 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable20, objArray28);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException18.addMessage(localizable19, objArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arithmeticException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException29);
        org.junit.Assert.assertNotNull(eOFException30);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.lang.Throwable[] throwableArray13 = concurrentModificationException12.getSuppressed();
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, (java.lang.Object[]) throwableArray13);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable3, (java.lang.Object[]) throwableArray13);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, (java.lang.Object[]) throwableArray13);
        java.io.EOFException eOFException17 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException29 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray28);
        java.text.ParseException parseException30 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable21, objArray28);
        java.lang.Throwable[] throwableArray31 = parseException30.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException18.addMessage(localizable19, (java.lang.Object[]) throwableArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
        org.junit.Assert.assertNotNull(eOFException17);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException29);
        org.junit.Assert.assertNotNull(parseException30);
        org.junit.Assert.assertNotNull(throwableArray31);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray10);
        java.lang.Class<?> wildcardClass15 = arithmeticException14.getClass();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable8, objArray15);
        java.io.EOFException eOFException17 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable7, objArray15);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray15);
        java.lang.ArithmeticException arithmeticException19 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable5, objArray15);
        java.lang.Throwable[] throwableArray20 = arithmeticException19.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException21 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable4, (java.lang.Object[]) throwableArray20);
        java.lang.IllegalArgumentException illegalArgumentException22 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable3, (java.lang.Object[]) throwableArray20);
        java.lang.Throwable[] throwableArray23 = illegalArgumentException22.getSuppressed();
        java.util.NoSuchElementException noSuchElementException24 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, (java.lang.Object[]) throwableArray23);
        java.lang.IllegalArgumentException illegalArgumentException25 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, (java.lang.Object[]) throwableArray23);
        org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = mathRuntimeException26.getContext("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(eOFException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(arithmeticException19);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException21);
        org.junit.Assert.assertNotNull(illegalArgumentException22);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(noSuchElementException24);
        org.junit.Assert.assertNotNull(illegalArgumentException25);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.util.NoSuchElementException noSuchElementException14 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, objArray11);
        java.io.EOFException eOFException16 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) eOFException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(noSuchElementException14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(eOFException16);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, objArray12);
        java.lang.Throwable[] throwableArray15 = eOFException14.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable3, (java.lang.Object[]) throwableArray15);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, (java.lang.Object[]) throwableArray15);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, (java.lang.Object[]) throwableArray15);
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray15);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet20 = mathRuntimeException19.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.lang.Throwable[] throwableArray10 = concurrentModificationException9.getSuppressed();
        java.io.EOFException eOFException11 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, (java.lang.Object[]) throwableArray10);
        java.lang.IllegalArgumentException illegalArgumentException12 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, (java.lang.Object[]) throwableArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException13 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) illegalArgumentException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(eOFException11);
        org.junit.Assert.assertNotNull(illegalArgumentException12);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray11);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException17 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) arithmeticException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, objArray11);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException17 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) noSuchElementException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray10);
        java.lang.Class<?> wildcardClass15 = objArray10.getClass();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray12);
        java.lang.Throwable[] throwableArray17 = arithmeticException16.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException18 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, (java.lang.Object[]) throwableArray17);
        java.lang.IllegalArgumentException illegalArgumentException19 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, (java.lang.Object[]) throwableArray17);
        java.lang.Throwable[] throwableArray20 = illegalArgumentException19.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException21 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) illegalArgumentException19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException18);
        org.junit.Assert.assertNotNull(illegalArgumentException19);
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        java.lang.Throwable[] throwableArray17 = mathRuntimeException16.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = mathRuntimeException16.getContext("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable8, objArray14);
        java.text.ParseException parseException16 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable7, objArray14);
        java.io.EOFException eOFException17 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable5, objArray14);
        java.lang.IllegalStateException illegalStateException18 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray14);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException19 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable3, objArray14);
        java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray14);
        java.text.ParseException parseException21 = org.apache.commons.math.MathRuntimeException.createParseException(10, localizable1, objArray14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = parseException21.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(parseException16);
        org.junit.Assert.assertNotNull(eOFException17);
        org.junit.Assert.assertNotNull(illegalStateException18);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException19);
        org.junit.Assert.assertNotNull(concurrentModificationException20);
        org.junit.Assert.assertNotNull(parseException21);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable7, objArray14);
        java.io.EOFException eOFException16 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable6, objArray14);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray14);
        java.lang.ArithmeticException arithmeticException18 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray14);
        java.lang.Throwable[] throwableArray19 = arithmeticException18.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException20 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable3, (java.lang.Object[]) throwableArray19);
        java.lang.IllegalArgumentException illegalArgumentException21 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, (java.lang.Object[]) throwableArray19);
        java.lang.Throwable[] throwableArray22 = illegalArgumentException21.getSuppressed();
        java.util.NoSuchElementException noSuchElementException23 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, (java.lang.Object[]) throwableArray22);
        java.lang.IllegalArgumentException illegalArgumentException24 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, (java.lang.Object[]) throwableArray22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = illegalArgumentException24.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(eOFException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(arithmeticException18);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException20);
        org.junit.Assert.assertNotNull(illegalArgumentException21);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(noSuchElementException23);
        org.junit.Assert.assertNotNull(illegalArgumentException24);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable8, objArray15);
        java.io.EOFException eOFException17 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable7, objArray15);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray15);
        java.lang.ArithmeticException arithmeticException19 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable5, objArray15);
        java.lang.Throwable[] throwableArray20 = arithmeticException19.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException21 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable4, (java.lang.Object[]) throwableArray20);
        java.lang.IllegalArgumentException illegalArgumentException22 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable3, (java.lang.Object[]) throwableArray20);
        java.lang.Throwable[] throwableArray23 = illegalArgumentException22.getSuppressed();
        java.util.NoSuchElementException noSuchElementException24 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, (java.lang.Object[]) throwableArray23);
        java.lang.IllegalArgumentException illegalArgumentException25 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, (java.lang.Object[]) throwableArray23);
        org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = mathRuntimeException26.getContext("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(eOFException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(arithmeticException19);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException21);
        org.junit.Assert.assertNotNull(illegalArgumentException22);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(noSuchElementException24);
        org.junit.Assert.assertNotNull(illegalArgumentException25);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(localizable1, objArray12);
        java.lang.Throwable[] throwableArray18 = mathRuntimeException17.getSuppressed();
        java.util.ConcurrentModificationException concurrentModificationException19 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, (java.lang.Object[]) throwableArray18);
        java.lang.Class<?> wildcardClass20 = throwableArray18.getClass();
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(concurrentModificationException19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray12);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray12);
        java.util.NoSuchElementException noSuchElementException18 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, objArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException19 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) noSuchElementException18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(noSuchElementException18);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, objArray12);
        java.lang.Throwable[] throwableArray15 = eOFException14.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable3, (java.lang.Object[]) throwableArray15);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, (java.lang.Object[]) throwableArray15);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, (java.lang.Object[]) throwableArray15);
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray15);
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        java.lang.Object[] objArray29 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException30 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable23, objArray29);
        java.lang.Throwable[] throwableArray31 = concurrentModificationException30.getSuppressed();
        java.lang.IllegalStateException illegalStateException32 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable22, (java.lang.Object[]) throwableArray31);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException33 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable21, (java.lang.Object[]) throwableArray31);
        java.lang.Throwable[] throwableArray34 = arrayIndexOutOfBoundsException33.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException19.addMessage(localizable20, (java.lang.Object[]) throwableArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException30);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(illegalStateException32);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException33);
        org.junit.Assert.assertNotNull(throwableArray34);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.lang.ArithmeticException arithmeticException12 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray10);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray27 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable21, objArray27);
        java.text.ParseException parseException29 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable20, objArray27);
        java.util.NoSuchElementException noSuchElementException30 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable18, objArray27);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException31 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable17, objArray27);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException32 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable16, objArray27);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException14.addMessage(localizable15, objArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arithmeticException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(parseException29);
        org.junit.Assert.assertNotNull(noSuchElementException30);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException31);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException32);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.lang.Throwable[] throwableArray13 = eOFException12.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException14 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, (java.lang.Object[]) throwableArray13);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, (java.lang.Object[]) throwableArray13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) concurrentModificationException15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException14 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray27 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable21, objArray27);
        java.text.ParseException parseException29 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable20, objArray27);
        java.io.EOFException eOFException30 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable18, objArray27);
        java.io.EOFException eOFException31 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable17, objArray27);
        java.lang.Throwable[] throwableArray32 = eOFException31.getSuppressed();
        mathRuntimeException16.addSuppressed((java.lang.Throwable) eOFException31);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException16.setContext("", (java.lang.Object) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(illegalArgumentException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(parseException29);
        org.junit.Assert.assertNotNull(eOFException30);
        org.junit.Assert.assertNotNull(eOFException31);
        org.junit.Assert.assertNotNull(throwableArray32);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = new java.lang.Object[] {};
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray1);
        org.apache.commons.math.MathRuntimeException mathRuntimeException3 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet4 = mathRuntimeException2.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.lang.Throwable[] throwableArray10 = concurrentModificationException9.getSuppressed();
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, (java.lang.Object[]) throwableArray10);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException12 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, (java.lang.Object[]) throwableArray10);
        java.lang.Throwable[] throwableArray13 = arrayIndexOutOfBoundsException12.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException14 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) arrayIndexOutOfBoundsException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException12);
        org.junit.Assert.assertNotNull(throwableArray13);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.lang.Throwable[] throwableArray13 = eOFException12.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException14 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, (java.lang.Object[]) throwableArray13);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, (java.lang.Object[]) throwableArray13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) noSuchElementException15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = new java.lang.Object[] {};
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray1);
        org.apache.commons.math.MathRuntimeException mathRuntimeException3 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException4 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) mathRuntimeException3);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray12);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray12);
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable27, objArray33);
        java.text.ParseException parseException35 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable26, objArray33);
        java.util.NoSuchElementException noSuchElementException36 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable24, objArray33);
        java.text.ParseException parseException37 = org.apache.commons.math.MathRuntimeException.createParseException(100, localizable23, objArray33);
        java.lang.IllegalArgumentException illegalArgumentException38 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable21, objArray33);
        java.util.ConcurrentModificationException concurrentModificationException39 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable20, objArray33);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException18.addMessage(localizable19, objArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertNotNull(parseException35);
        org.junit.Assert.assertNotNull(noSuchElementException36);
        org.junit.Assert.assertNotNull(parseException37);
        org.junit.Assert.assertNotNull(illegalArgumentException38);
        org.junit.Assert.assertNotNull(concurrentModificationException39);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(localizable1, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray12);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException18.setContext("", (java.lang.Object) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable5, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray13);
        java.lang.ArithmeticException arithmeticException17 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray13);
        java.lang.IllegalStateException illegalStateException18 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException(throwable0, localizable1, objArray13);
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        org.apache.commons.math.exception.util.Localizable localizable28 = null;
        java.lang.Object[] objArray34 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException35 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable28, objArray34);
        java.text.ParseException parseException36 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable27, objArray34);
        java.lang.IllegalStateException illegalStateException37 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable25, objArray34);
        java.lang.IllegalArgumentException illegalArgumentException38 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable24, objArray34);
        java.lang.IllegalArgumentException illegalArgumentException39 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable23, objArray34);
        org.apache.commons.math.MathRuntimeException mathRuntimeException40 = new org.apache.commons.math.MathRuntimeException(localizable22, objArray34);
        org.apache.commons.math.MathRuntimeException mathRuntimeException41 = new org.apache.commons.math.MathRuntimeException(localizable21, objArray34);
        org.apache.commons.math.exception.util.Localizable localizable42 = null;
        org.apache.commons.math.exception.util.Localizable localizable43 = null;
        org.apache.commons.math.exception.util.Localizable localizable44 = null;
        org.apache.commons.math.exception.util.Localizable localizable46 = null;
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Object[] objArray53 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException54 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable47, objArray53);
        java.text.ParseException parseException55 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable46, objArray53);
        java.lang.IllegalArgumentException illegalArgumentException56 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable44, objArray53);
        java.util.NoSuchElementException noSuchElementException57 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable43, objArray53);
        org.apache.commons.math.MathRuntimeException mathRuntimeException58 = new org.apache.commons.math.MathRuntimeException(localizable42, objArray53);
        java.lang.Throwable[] throwableArray59 = mathRuntimeException58.getSuppressed();
        mathRuntimeException41.addSuppressed((java.lang.Throwable) mathRuntimeException58);
        java.lang.IllegalArgumentException illegalArgumentException61 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) mathRuntimeException41);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException19.setContext("hi!", (java.lang.Object) mathRuntimeException41);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(arithmeticException17);
        org.junit.Assert.assertNotNull(illegalStateException18);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException35);
        org.junit.Assert.assertNotNull(parseException36);
        org.junit.Assert.assertNotNull(illegalStateException37);
        org.junit.Assert.assertNotNull(illegalArgumentException38);
        org.junit.Assert.assertNotNull(illegalArgumentException39);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException54);
        org.junit.Assert.assertNotNull(parseException55);
        org.junit.Assert.assertNotNull(illegalArgumentException56);
        org.junit.Assert.assertNotNull(noSuchElementException57);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(illegalArgumentException61);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.lang.Throwable[] throwableArray13 = eOFException12.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException14 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, (java.lang.Object[]) throwableArray13);
        java.lang.Throwable[] throwableArray15 = arrayIndexOutOfBoundsException14.getSuppressed();
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray15);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException31 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable23, objArray30);
        java.lang.ArithmeticException arithmeticException32 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable22, objArray30);
        java.util.ConcurrentModificationException concurrentModificationException33 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable21, objArray30);
        java.util.NoSuchElementException noSuchElementException34 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable20, objArray30);
        java.util.ConcurrentModificationException concurrentModificationException35 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable19, objArray30);
        java.lang.IllegalArgumentException illegalArgumentException36 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable18, objArray30);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException16.addMessage(localizable17, objArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException31);
        org.junit.Assert.assertNotNull(arithmeticException32);
        org.junit.Assert.assertNotNull(concurrentModificationException33);
        org.junit.Assert.assertNotNull(noSuchElementException34);
        org.junit.Assert.assertNotNull(concurrentModificationException35);
        org.junit.Assert.assertNotNull(illegalArgumentException36);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.lang.ArithmeticException arithmeticException12 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        java.lang.Throwable throwable14 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(throwable14);
        concurrentModificationException13.addSuppressed((java.lang.Throwable) mathRuntimeException15);
        java.lang.Throwable[] throwableArray17 = mathRuntimeException15.getSuppressed();
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException31 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable23, objArray30);
        java.io.EOFException eOFException32 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable22, objArray30);
        java.util.ConcurrentModificationException concurrentModificationException33 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable21, objArray30);
        java.util.NoSuchElementException noSuchElementException34 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable20, objArray30);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException18.setContext("hi!", (java.lang.Object) localizable20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arithmeticException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException31);
        org.junit.Assert.assertNotNull(eOFException32);
        org.junit.Assert.assertNotNull(concurrentModificationException33);
        org.junit.Assert.assertNotNull(noSuchElementException34);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.lang.Throwable[] throwableArray14 = concurrentModificationException13.getSuppressed();
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable5, (java.lang.Object[]) throwableArray14);
        java.io.EOFException eOFException16 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, (java.lang.Object[]) throwableArray14);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException2.setContext("", (java.lang.Object) localizable4);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(eOFException16);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.text.ParseException parseException12 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable3, objArray10);
        java.lang.IllegalArgumentException illegalArgumentException13 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, objArray10);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException14 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray10);
        java.lang.Class<?> wildcardClass15 = objArray10.getClass();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(parseException12);
        org.junit.Assert.assertNotNull(illegalArgumentException13);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        org.apache.commons.math.exception.util.Localizable localizable10 = null;
        org.apache.commons.math.exception.util.Localizable localizable11 = null;
        java.lang.Object[] objArray17 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable11, objArray17);
        java.text.ParseException parseException19 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable10, objArray17);
        java.lang.IllegalArgumentException illegalArgumentException20 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable8, objArray17);
        java.lang.ArithmeticException arithmeticException21 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable7, objArray17);
        java.io.EOFException eOFException22 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable6, objArray17);
        java.io.EOFException eOFException23 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable5, objArray17);
        java.lang.IllegalArgumentException illegalArgumentException24 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable4, objArray17);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException2.addMessage(localizable3, objArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(parseException19);
        org.junit.Assert.assertNotNull(illegalArgumentException20);
        org.junit.Assert.assertNotNull(arithmeticException21);
        org.junit.Assert.assertNotNull(eOFException22);
        org.junit.Assert.assertNotNull(eOFException23);
        org.junit.Assert.assertNotNull(illegalArgumentException24);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = null;
        java.lang.ArithmeticException arithmeticException2 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = arithmeticException2.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(arithmeticException2);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = new java.lang.Object[] {};
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray1);
        org.apache.commons.math.MathRuntimeException mathRuntimeException3 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException2);
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray11);
        mathRuntimeException2.addSuppressed((java.lang.Throwable) arithmeticException13);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        java.lang.Object[] objArray24 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException25 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable18, objArray24);
        java.lang.Throwable[] throwableArray26 = concurrentModificationException25.getSuppressed();
        java.lang.IllegalStateException illegalStateException27 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable17, (java.lang.Object[]) throwableArray26);
        java.lang.ArithmeticException arithmeticException28 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, (java.lang.Object[]) throwableArray26);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException2.addMessage(localizable15, (java.lang.Object[]) throwableArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException25);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(illegalStateException27);
        org.junit.Assert.assertNotNull(arithmeticException28);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.lang.Throwable[] throwableArray12 = concurrentModificationException11.getSuppressed();
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, (java.lang.Object[]) throwableArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, (java.lang.Object[]) throwableArray12);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, (java.lang.Object[]) throwableArray12);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, (java.lang.Object[]) throwableArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException17 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) arithmeticException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable20, objArray26);
        java.text.ParseException parseException28 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable19, objArray26);
        java.lang.IllegalArgumentException illegalArgumentException29 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable17, objArray26);
        java.lang.ArithmeticException arithmeticException30 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, objArray26);
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException14, localizable15, objArray26);
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        java.lang.Object[] objArray42 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException43 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable35, objArray42);
        java.lang.ArithmeticException arithmeticException44 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable34, objArray42);
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable33, objArray42);
        org.apache.commons.math.MathRuntimeException mathRuntimeException46 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException31, localizable32, objArray42);
        org.apache.commons.math.exception.util.Localizable localizable48 = null;
        java.lang.Object[] objArray49 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(localizable48, objArray49);
        java.lang.Class<?> wildcardClass51 = mathRuntimeException50.getClass();
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException46.setContext("", (java.lang.Object) mathRuntimeException50);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException27);
        org.junit.Assert.assertNotNull(parseException28);
        org.junit.Assert.assertNotNull(illegalArgumentException29);
        org.junit.Assert.assertNotNull(arithmeticException30);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException43);
        org.junit.Assert.assertNotNull(arithmeticException44);
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable7, objArray13);
        java.text.ParseException parseException15 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable6, objArray13);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable3, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException18 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException(localizable1, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray13);
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        java.lang.Object[] objArray32 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException33 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable26, objArray32);
        java.text.ParseException parseException34 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable25, objArray32);
        java.lang.IllegalArgumentException illegalArgumentException35 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable23, objArray32);
        java.util.NoSuchElementException noSuchElementException36 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable22, objArray32);
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(localizable21, objArray32);
        java.lang.Throwable[] throwableArray38 = mathRuntimeException37.getSuppressed();
        mathRuntimeException20.addSuppressed((java.lang.Throwable) mathRuntimeException37);
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        org.apache.commons.math.exception.util.Localizable localizable42 = null;
        org.apache.commons.math.exception.util.Localizable localizable43 = null;
        org.apache.commons.math.exception.util.Localizable localizable45 = null;
        org.apache.commons.math.exception.util.Localizable localizable46 = null;
        java.lang.Object[] objArray52 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException53 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable46, objArray52);
        java.text.ParseException parseException54 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable45, objArray52);
        java.lang.IllegalStateException illegalStateException55 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable43, objArray52);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException56 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable42, objArray52);
        java.util.NoSuchElementException noSuchElementException57 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable41, objArray52);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException37.setContext("", (java.lang.Object) noSuchElementException57);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(parseException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
        org.junit.Assert.assertNotNull(illegalArgumentException18);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException33);
        org.junit.Assert.assertNotNull(parseException34);
        org.junit.Assert.assertNotNull(illegalArgumentException35);
        org.junit.Assert.assertNotNull(noSuchElementException36);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException53);
        org.junit.Assert.assertNotNull(parseException54);
        org.junit.Assert.assertNotNull(illegalStateException55);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException56);
        org.junit.Assert.assertNotNull(noSuchElementException57);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        org.apache.commons.math.exception.util.Localizable localizable9 = null;
        java.lang.Object[] objArray16 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException17 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable9, objArray16);
        java.io.EOFException eOFException18 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable8, objArray16);
        java.util.ConcurrentModificationException concurrentModificationException19 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable7, objArray16);
        java.lang.ArithmeticException arithmeticException20 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable6, objArray16);
        java.lang.Throwable[] throwableArray21 = arithmeticException20.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException22 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable5, (java.lang.Object[]) throwableArray21);
        java.lang.IllegalArgumentException illegalArgumentException23 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable4, (java.lang.Object[]) throwableArray21);
        java.lang.Throwable[] throwableArray24 = illegalArgumentException23.getSuppressed();
        java.util.NoSuchElementException noSuchElementException25 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable3, (java.lang.Object[]) throwableArray24);
        java.lang.IllegalArgumentException illegalArgumentException26 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, (java.lang.Object[]) throwableArray24);
        org.apache.commons.math.MathRuntimeException mathRuntimeException27 = new org.apache.commons.math.MathRuntimeException(localizable1, (java.lang.Object[]) throwableArray24);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException28 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, (java.lang.Object[]) throwableArray24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException29 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) arrayIndexOutOfBoundsException28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException17);
        org.junit.Assert.assertNotNull(eOFException18);
        org.junit.Assert.assertNotNull(concurrentModificationException19);
        org.junit.Assert.assertNotNull(arithmeticException20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException22);
        org.junit.Assert.assertNotNull(illegalArgumentException23);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(noSuchElementException25);
        org.junit.Assert.assertNotNull(illegalArgumentException26);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException28);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray10);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        java.lang.Object[] objArray25 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException26 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable18, objArray25);
        java.lang.ArithmeticException arithmeticException27 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable17, objArray25);
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable16, objArray25);
        java.util.NoSuchElementException noSuchElementException29 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable15, objArray25);
        arithmeticException14.addSuppressed((java.lang.Throwable) noSuchElementException29);
        java.lang.Class<?> wildcardClass31 = noSuchElementException29.getClass();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException26);
        org.junit.Assert.assertNotNull(arithmeticException27);
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(noSuchElementException29);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable8, objArray15);
        java.lang.ArithmeticException arithmeticException17 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable7, objArray15);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray15);
        java.util.NoSuchElementException noSuchElementException19 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable5, objArray15);
        java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray15);
        java.lang.IllegalArgumentException illegalArgumentException21 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable3, objArray15);
        java.io.EOFException eOFException22 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray15);
        java.text.ParseException parseException23 = org.apache.commons.math.MathRuntimeException.createParseException((int) (short) 100, localizable1, objArray15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException24 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) parseException23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(arithmeticException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(noSuchElementException19);
        org.junit.Assert.assertNotNull(concurrentModificationException20);
        org.junit.Assert.assertNotNull(illegalArgumentException21);
        org.junit.Assert.assertNotNull(eOFException22);
        org.junit.Assert.assertNotNull(parseException23);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.lang.Throwable[] throwableArray10 = concurrentModificationException9.getSuppressed();
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.MathRuntimeException mathRuntimeException12 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet13 = mathRuntimeException12.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(illegalStateException11);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable7, objArray13);
        java.text.ParseException parseException15 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable6, objArray13);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable3, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException18 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException(localizable1, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray13);
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        java.lang.Object[] objArray32 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException33 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable26, objArray32);
        java.text.ParseException parseException34 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable25, objArray32);
        java.lang.IllegalArgumentException illegalArgumentException35 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable23, objArray32);
        java.util.NoSuchElementException noSuchElementException36 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable22, objArray32);
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(localizable21, objArray32);
        java.lang.Throwable[] throwableArray38 = mathRuntimeException37.getSuppressed();
        mathRuntimeException20.addSuppressed((java.lang.Throwable) mathRuntimeException37);
        java.lang.IllegalArgumentException illegalArgumentException40 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) mathRuntimeException20);
        org.apache.commons.math.exception.util.Localizable localizable42 = null;
        org.apache.commons.math.exception.util.Localizable localizable43 = null;
        org.apache.commons.math.exception.util.Localizable localizable44 = null;
        java.lang.Object[] objArray50 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException51 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable44, objArray50);
        java.lang.Throwable[] throwableArray52 = concurrentModificationException51.getSuppressed();
        java.lang.IllegalStateException illegalStateException53 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable43, (java.lang.Object[]) throwableArray52);
        java.lang.ArithmeticException arithmeticException54 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable42, (java.lang.Object[]) throwableArray52);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException20.setContext("", (java.lang.Object) arithmeticException54);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(parseException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
        org.junit.Assert.assertNotNull(illegalArgumentException18);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException33);
        org.junit.Assert.assertNotNull(parseException34);
        org.junit.Assert.assertNotNull(illegalArgumentException35);
        org.junit.Assert.assertNotNull(noSuchElementException36);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(illegalArgumentException40);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException51);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(illegalStateException53);
        org.junit.Assert.assertNotNull(arithmeticException54);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable7, objArray13);
        java.text.ParseException parseException15 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable6, objArray13);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable3, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException18 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException(localizable1, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray13);
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        java.lang.Object[] objArray32 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException33 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable26, objArray32);
        java.text.ParseException parseException34 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable25, objArray32);
        java.lang.IllegalArgumentException illegalArgumentException35 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable23, objArray32);
        java.util.NoSuchElementException noSuchElementException36 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable22, objArray32);
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(localizable21, objArray32);
        java.lang.Throwable[] throwableArray38 = mathRuntimeException37.getSuppressed();
        mathRuntimeException20.addSuppressed((java.lang.Throwable) mathRuntimeException37);
        org.apache.commons.math.exception.util.Localizable localizable40 = null;
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        org.apache.commons.math.exception.util.Localizable localizable42 = null;
        org.apache.commons.math.exception.util.Localizable localizable43 = null;
        org.apache.commons.math.exception.util.Localizable localizable44 = null;
        org.apache.commons.math.exception.util.Localizable localizable45 = null;
        org.apache.commons.math.exception.util.Localizable localizable46 = null;
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        org.apache.commons.math.exception.util.Localizable localizable48 = null;
        java.lang.Object[] objArray55 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException56 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable48, objArray55);
        java.io.EOFException eOFException57 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable47, objArray55);
        java.lang.Throwable[] throwableArray58 = eOFException57.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable46, (java.lang.Object[]) throwableArray58);
        java.util.ConcurrentModificationException concurrentModificationException60 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable45, (java.lang.Object[]) throwableArray58);
        java.lang.ArithmeticException arithmeticException61 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable44, (java.lang.Object[]) throwableArray58);
        java.util.NoSuchElementException noSuchElementException62 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable43, (java.lang.Object[]) throwableArray58);
        org.apache.commons.math.MathRuntimeException mathRuntimeException63 = new org.apache.commons.math.MathRuntimeException(localizable42, (java.lang.Object[]) throwableArray58);
        java.util.NoSuchElementException noSuchElementException64 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable41, (java.lang.Object[]) throwableArray58);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException20.addMessage(localizable40, (java.lang.Object[]) throwableArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(parseException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
        org.junit.Assert.assertNotNull(illegalArgumentException18);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException33);
        org.junit.Assert.assertNotNull(parseException34);
        org.junit.Assert.assertNotNull(illegalArgumentException35);
        org.junit.Assert.assertNotNull(noSuchElementException36);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException56);
        org.junit.Assert.assertNotNull(eOFException57);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(concurrentModificationException60);
        org.junit.Assert.assertNotNull(arithmeticException61);
        org.junit.Assert.assertNotNull(noSuchElementException62);
        org.junit.Assert.assertNotNull(noSuchElementException64);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException18);
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        java.lang.Object[] objArray32 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException33 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable25, objArray32);
        java.lang.ArithmeticException arithmeticException34 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable24, objArray32);
        java.util.ConcurrentModificationException concurrentModificationException35 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable23, objArray32);
        java.lang.Throwable throwable36 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable36);
        concurrentModificationException35.addSuppressed((java.lang.Throwable) mathRuntimeException37);
        java.lang.Throwable[] throwableArray39 = mathRuntimeException37.getSuppressed();
        java.text.ParseException parseException40 = org.apache.commons.math.MathRuntimeException.createParseException(0, localizable22, (java.lang.Object[]) throwableArray39);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException19.addMessage(localizable20, (java.lang.Object[]) throwableArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException33);
        org.junit.Assert.assertNotNull(arithmeticException34);
        org.junit.Assert.assertNotNull(concurrentModificationException35);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(parseException40);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable7, objArray13);
        java.text.ParseException parseException15 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable6, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable4, objArray13);
        java.lang.ArithmeticException arithmeticException17 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray13);
        java.io.EOFException eOFException18 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray13);
        java.io.EOFException eOFException19 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray13);
        java.lang.Throwable throwable21 = null;
        // The following exception was thrown during execution in test generation
        try {
            concurrentModificationException20.addSuppressed(throwable21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(parseException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
        org.junit.Assert.assertNotNull(arithmeticException17);
        org.junit.Assert.assertNotNull(eOFException18);
        org.junit.Assert.assertNotNull(eOFException19);
        org.junit.Assert.assertNotNull(concurrentModificationException20);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.util.NoSuchElementException noSuchElementException13 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, (java.lang.Object[]) throwableArray11);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, (java.lang.Object[]) throwableArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException15 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) eOFException14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(noSuchElementException13);
        org.junit.Assert.assertNotNull(eOFException14);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.util.NoSuchElementException noSuchElementException14 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, objArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray11);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        java.lang.Object[] objArray32 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException33 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable25, objArray32);
        java.io.EOFException eOFException34 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable24, objArray32);
        java.util.ConcurrentModificationException concurrentModificationException35 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable23, objArray32);
        java.lang.ArithmeticException arithmeticException36 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable22, objArray32);
        java.lang.Throwable[] throwableArray37 = arithmeticException36.getSuppressed();
        java.text.ParseException parseException38 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable21, (java.lang.Object[]) throwableArray37);
        java.text.ParseException parseException39 = org.apache.commons.math.MathRuntimeException.createParseException((int) (byte) 0, localizable19, (java.lang.Object[]) throwableArray37);
        java.util.NoSuchElementException noSuchElementException40 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable17, (java.lang.Object[]) throwableArray37);
        arrayIndexOutOfBoundsException16.addSuppressed((java.lang.Throwable) noSuchElementException40);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = arrayIndexOutOfBoundsException16.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(noSuchElementException14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException33);
        org.junit.Assert.assertNotNull(eOFException34);
        org.junit.Assert.assertNotNull(concurrentModificationException35);
        org.junit.Assert.assertNotNull(arithmeticException36);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(parseException38);
        org.junit.Assert.assertNotNull(parseException39);
        org.junit.Assert.assertNotNull(noSuchElementException40);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.util.NoSuchElementException noSuchElementException13 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, (java.lang.Object[]) throwableArray11);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        java.lang.Object[] objArray22 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException23 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable16, objArray22);
        java.lang.Throwable[] throwableArray24 = concurrentModificationException23.getSuppressed();
        java.lang.IllegalStateException illegalStateException25 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable15, (java.lang.Object[]) throwableArray24);
        eOFException14.addSuppressed((java.lang.Throwable) illegalStateException25);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException27 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) illegalStateException25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(noSuchElementException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException23);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(illegalStateException25);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray12);
        java.lang.Throwable[] throwableArray17 = arithmeticException16.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException18 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, (java.lang.Object[]) throwableArray17);
        java.lang.IllegalArgumentException illegalArgumentException19 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, (java.lang.Object[]) throwableArray17);
        java.lang.Throwable[] throwableArray20 = illegalArgumentException19.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException21 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) illegalArgumentException19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException18);
        org.junit.Assert.assertNotNull(illegalArgumentException19);
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException9 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray8);
        java.io.EOFException eOFException10 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, objArray8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = eOFException10.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException9);
        org.junit.Assert.assertNotNull(eOFException10);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException2 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) mathRuntimeException1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = new java.lang.Object[] {};
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray1);
        org.apache.commons.math.MathRuntimeException mathRuntimeException3 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet4 = mathRuntimeException3.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable8, objArray15);
        java.io.EOFException eOFException17 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable7, objArray15);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray15);
        java.lang.ArithmeticException arithmeticException19 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable5, objArray15);
        java.lang.Throwable[] throwableArray20 = arithmeticException19.getSuppressed();
        java.text.ParseException parseException21 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, (java.lang.Object[]) throwableArray20);
        java.text.ParseException parseException22 = org.apache.commons.math.MathRuntimeException.createParseException((int) (byte) 0, localizable2, (java.lang.Object[]) throwableArray20);
        java.util.ConcurrentModificationException concurrentModificationException23 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, (java.lang.Object[]) throwableArray20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException24 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) concurrentModificationException23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(eOFException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(arithmeticException19);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(parseException21);
        org.junit.Assert.assertNotNull(parseException22);
        org.junit.Assert.assertNotNull(concurrentModificationException23);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, (java.lang.Object[]) throwableArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        java.lang.Object[] objArray16 = null;
        java.util.NoSuchElementException noSuchElementException17 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable15, objArray16);
        mathRuntimeException14.addSuppressed((java.lang.Throwable) noSuchElementException17);
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable24, objArray30);
        java.lang.Throwable[] throwableArray32 = concurrentModificationException31.getSuppressed();
        java.lang.IllegalStateException illegalStateException33 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable23, (java.lang.Object[]) throwableArray32);
        java.lang.ArithmeticException arithmeticException34 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable22, (java.lang.Object[]) throwableArray32);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException35 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable21, (java.lang.Object[]) throwableArray32);
        java.lang.ArithmeticException arithmeticException36 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable20, (java.lang.Object[]) throwableArray32);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException14.addMessage(localizable19, (java.lang.Object[]) throwableArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(noSuchElementException17);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(illegalStateException33);
        org.junit.Assert.assertNotNull(arithmeticException34);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException35);
        org.junit.Assert.assertNotNull(arithmeticException36);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable20, objArray26);
        java.text.ParseException parseException28 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable19, objArray26);
        java.lang.IllegalArgumentException illegalArgumentException29 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable17, objArray26);
        java.lang.ArithmeticException arithmeticException30 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, objArray26);
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException14, localizable15, objArray26);
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        java.lang.Object[] objArray42 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException43 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable35, objArray42);
        java.lang.ArithmeticException arithmeticException44 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable34, objArray42);
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable33, objArray42);
        org.apache.commons.math.MathRuntimeException mathRuntimeException46 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException31, localizable32, objArray42);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = mathRuntimeException46.getContext("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException27);
        org.junit.Assert.assertNotNull(parseException28);
        org.junit.Assert.assertNotNull(illegalArgumentException29);
        org.junit.Assert.assertNotNull(arithmeticException30);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException43);
        org.junit.Assert.assertNotNull(arithmeticException44);
        org.junit.Assert.assertNotNull(concurrentModificationException45);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.util.NoSuchElementException noSuchElementException13 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, (java.lang.Object[]) throwableArray11);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, (java.lang.Object[]) throwableArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException15 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) eOFException14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(noSuchElementException13);
        org.junit.Assert.assertNotNull(eOFException14);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, (java.lang.Object[]) throwableArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        java.lang.Object[] objArray16 = null;
        java.util.NoSuchElementException noSuchElementException17 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable15, objArray16);
        mathRuntimeException14.addSuppressed((java.lang.Throwable) noSuchElementException17);
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException34 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable26, objArray33);
        java.io.EOFException eOFException35 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable25, objArray33);
        java.lang.Throwable[] throwableArray36 = eOFException35.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException37 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable24, (java.lang.Object[]) throwableArray36);
        java.util.ConcurrentModificationException concurrentModificationException38 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable23, (java.lang.Object[]) throwableArray36);
        java.lang.ArithmeticException arithmeticException39 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable22, (java.lang.Object[]) throwableArray36);
        java.util.NoSuchElementException noSuchElementException40 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable21, (java.lang.Object[]) throwableArray36);
        org.apache.commons.math.MathRuntimeException mathRuntimeException41 = new org.apache.commons.math.MathRuntimeException(localizable20, (java.lang.Object[]) throwableArray36);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException42 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable19, (java.lang.Object[]) throwableArray36);
        noSuchElementException17.addSuppressed((java.lang.Throwable) arrayIndexOutOfBoundsException42);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException44 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) noSuchElementException17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(noSuchElementException17);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException34);
        org.junit.Assert.assertNotNull(eOFException35);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException37);
        org.junit.Assert.assertNotNull(concurrentModificationException38);
        org.junit.Assert.assertNotNull(arithmeticException39);
        org.junit.Assert.assertNotNull(noSuchElementException40);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException42);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException18);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException20 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) mathRuntimeException19);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException13 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, (java.lang.Object[]) throwableArray11);
        java.lang.Throwable[] throwableArray14 = arrayIndexOutOfBoundsException13.getSuppressed();
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, (java.lang.Object[]) throwableArray14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) eOFException15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(eOFException15);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        java.lang.Object[] objArray7 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException8 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray7);
        java.lang.Throwable[] throwableArray9 = concurrentModificationException8.getSuppressed();
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, (java.lang.Object[]) throwableArray9);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException11 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) illegalStateException10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(illegalStateException10);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        java.lang.Throwable[] throwableArray17 = mathRuntimeException16.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        org.apache.commons.math.exception.util.Localizable localizable28 = null;
        java.lang.Object[] objArray35 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException36 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable28, objArray35);
        java.io.EOFException eOFException37 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable27, objArray35);
        java.util.ConcurrentModificationException concurrentModificationException38 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable26, objArray35);
        java.lang.ArithmeticException arithmeticException39 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable25, objArray35);
        java.lang.Throwable[] throwableArray40 = arithmeticException39.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException41 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable24, (java.lang.Object[]) throwableArray40);
        java.lang.IllegalArgumentException illegalArgumentException42 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable23, (java.lang.Object[]) throwableArray40);
        java.lang.Throwable[] throwableArray43 = illegalArgumentException42.getSuppressed();
        java.util.NoSuchElementException noSuchElementException44 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable22, (java.lang.Object[]) throwableArray43);
        java.lang.IllegalArgumentException illegalArgumentException45 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable21, (java.lang.Object[]) throwableArray43);
        org.apache.commons.math.MathRuntimeException mathRuntimeException46 = new org.apache.commons.math.MathRuntimeException(localizable20, (java.lang.Object[]) throwableArray43);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException47 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable19, (java.lang.Object[]) throwableArray43);
        org.apache.commons.math.MathRuntimeException mathRuntimeException48 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException16, localizable18, (java.lang.Object[]) throwableArray43);
        org.apache.commons.math.exception.util.Localizable localizable49 = null;
        org.apache.commons.math.exception.util.Localizable localizable50 = null;
        org.apache.commons.math.exception.util.Localizable localizable51 = null;
        org.apache.commons.math.exception.util.Localizable localizable52 = null;
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        org.apache.commons.math.exception.util.Localizable localizable55 = null;
        org.apache.commons.math.exception.util.Localizable localizable56 = null;
        java.lang.Object[] objArray62 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException63 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable56, objArray62);
        java.text.ParseException parseException64 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable55, objArray62);
        java.io.EOFException eOFException65 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable53, objArray62);
        java.lang.IllegalStateException illegalStateException66 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable52, objArray62);
        java.util.ConcurrentModificationException concurrentModificationException67 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable51, objArray62);
        org.apache.commons.math.MathRuntimeException mathRuntimeException68 = new org.apache.commons.math.MathRuntimeException(localizable50, objArray62);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException16.addMessage(localizable49, objArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException36);
        org.junit.Assert.assertNotNull(eOFException37);
        org.junit.Assert.assertNotNull(concurrentModificationException38);
        org.junit.Assert.assertNotNull(arithmeticException39);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException41);
        org.junit.Assert.assertNotNull(illegalArgumentException42);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(noSuchElementException44);
        org.junit.Assert.assertNotNull(illegalArgumentException45);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException47);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException63);
        org.junit.Assert.assertNotNull(parseException64);
        org.junit.Assert.assertNotNull(eOFException65);
        org.junit.Assert.assertNotNull(illegalStateException66);
        org.junit.Assert.assertNotNull(concurrentModificationException67);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, objArray12);
        java.lang.Throwable[] throwableArray15 = eOFException14.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable3, (java.lang.Object[]) throwableArray15);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, (java.lang.Object[]) throwableArray15);
        java.lang.ArithmeticException arithmeticException18 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray15);
        java.lang.Throwable[] throwableArray19 = arithmeticException18.getSuppressed();
        org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray19);
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        org.apache.commons.math.exception.util.Localizable localizable28 = null;
        java.lang.Object[] objArray34 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException35 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable28, objArray34);
        java.text.ParseException parseException36 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable27, objArray34);
        java.lang.IllegalArgumentException illegalArgumentException37 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable25, objArray34);
        java.lang.ArithmeticException arithmeticException38 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable24, objArray34);
        java.io.EOFException eOFException39 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable23, objArray34);
        java.util.NoSuchElementException noSuchElementException40 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable22, objArray34);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException20.addMessage(localizable21, objArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(arithmeticException18);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException35);
        org.junit.Assert.assertNotNull(parseException36);
        org.junit.Assert.assertNotNull(illegalArgumentException37);
        org.junit.Assert.assertNotNull(arithmeticException38);
        org.junit.Assert.assertNotNull(eOFException39);
        org.junit.Assert.assertNotNull(noSuchElementException40);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable7, objArray13);
        java.text.ParseException parseException15 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable6, objArray13);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable3, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException18 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException(localizable1, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet21 = mathRuntimeException20.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(parseException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
        org.junit.Assert.assertNotNull(illegalArgumentException18);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, objArray12);
        java.util.NoSuchElementException noSuchElementException18 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, objArray12);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
        org.junit.Assert.assertNotNull(noSuchElementException18);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.lang.ArithmeticException arithmeticException15 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable5, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray13);
        java.util.NoSuchElementException noSuchElementException17 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable3, objArray13);
        java.io.EOFException eOFException18 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray13);
        java.lang.ArithmeticException arithmeticException19 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray13);
        java.lang.Throwable[] throwableArray20 = arithmeticException19.getSuppressed();
        java.lang.IllegalArgumentException illegalArgumentException21 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, (java.lang.Object[]) throwableArray20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) illegalArgumentException21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(arithmeticException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(noSuchElementException17);
        org.junit.Assert.assertNotNull(eOFException18);
        org.junit.Assert.assertNotNull(arithmeticException19);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(illegalArgumentException21);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.text.ParseException parseException10 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable1, objArray8);
        org.apache.commons.math.exception.util.Localizable localizable11 = null;
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        java.lang.Object[] objArray19 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable13, objArray19);
        java.lang.Throwable[] throwableArray21 = concurrentModificationException20.getSuppressed();
        java.io.EOFException eOFException22 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable12, (java.lang.Object[]) throwableArray21);
        java.io.EOFException eOFException23 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable11, (java.lang.Object[]) throwableArray21);
        parseException10.addSuppressed((java.lang.Throwable) eOFException23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException25 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) eOFException23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(parseException10);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(eOFException22);
        org.junit.Assert.assertNotNull(eOFException23);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray11);
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray11);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException29 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, objArray28);
        java.io.EOFException eOFException30 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable20, objArray28);
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable19, objArray28);
        java.util.NoSuchElementException noSuchElementException32 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable18, objArray28);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException33 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) illegalArgumentException16, localizable17, objArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException29);
        org.junit.Assert.assertNotNull(eOFException30);
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(noSuchElementException32);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(localizable1, objArray12);
        java.lang.IllegalStateException illegalStateException18 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, objArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = illegalStateException18.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
        org.junit.Assert.assertNotNull(illegalStateException18);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException29 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, objArray28);
        java.lang.ArithmeticException arithmeticException30 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable20, objArray28);
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable19, objArray28);
        java.util.NoSuchElementException noSuchElementException32 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable18, objArray28);
        java.lang.Throwable[] throwableArray33 = noSuchElementException32.getSuppressed();
        java.lang.Class<?> wildcardClass34 = noSuchElementException32.getClass();
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException16.setContext("org.apache.commons.math.MathRuntimeException: ", (java.lang.Object) wildcardClass34);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException29);
        org.junit.Assert.assertNotNull(arithmeticException30);
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(noSuchElementException32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.text.ParseException parseException11 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable2, objArray9);
        java.lang.IllegalArgumentException illegalArgumentException12 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray9);
        java.lang.Throwable throwable13 = null;
        // The following exception was thrown during execution in test generation
        try {
            illegalArgumentException12.addSuppressed(throwable13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(parseException11);
        org.junit.Assert.assertNotNull(illegalArgumentException12);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray10);
        java.lang.Throwable[] throwableArray15 = arithmeticException14.getSuppressed();
        java.lang.Throwable[] throwableArray16 = arithmeticException14.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException17 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) arithmeticException14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray11);
        java.lang.Throwable[] throwableArray14 = eOFException13.getSuppressed();
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray14);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, (java.lang.Object[]) throwableArray14);
        java.lang.ArithmeticException arithmeticException17 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray27 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable21, objArray27);
        java.lang.Throwable[] throwableArray29 = concurrentModificationException28.getSuppressed();
        java.lang.IllegalStateException illegalStateException30 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable20, (java.lang.Object[]) throwableArray29);
        java.util.NoSuchElementException noSuchElementException31 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable19, (java.lang.Object[]) throwableArray29);
        java.lang.IllegalArgumentException illegalArgumentException32 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable18, (java.lang.Object[]) throwableArray29);
        arithmeticException17.addSuppressed((java.lang.Throwable) illegalArgumentException32);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arithmeticException17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
        org.junit.Assert.assertNotNull(arithmeticException17);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(illegalStateException30);
        org.junit.Assert.assertNotNull(noSuchElementException31);
        org.junit.Assert.assertNotNull(illegalArgumentException32);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        mathRuntimeException1.addSuppressed((java.lang.Throwable) concurrentModificationException14);
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException29 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, objArray28);
        java.io.EOFException eOFException30 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable20, objArray28);
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable19, objArray28);
        java.lang.ArithmeticException arithmeticException32 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable18, objArray28);
        java.lang.IllegalArgumentException illegalArgumentException33 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable17, objArray28);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) concurrentModificationException14, localizable16, objArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException29);
        org.junit.Assert.assertNotNull(eOFException30);
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(arithmeticException32);
        org.junit.Assert.assertNotNull(illegalArgumentException33);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.lang.Throwable[] throwableArray12 = concurrentModificationException11.getSuppressed();
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, (java.lang.Object[]) throwableArray12);
        java.util.NoSuchElementException noSuchElementException14 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, (java.lang.Object[]) throwableArray12);
        java.lang.IllegalArgumentException illegalArgumentException15 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, (java.lang.Object[]) throwableArray12);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, (java.lang.Object[]) throwableArray12);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(noSuchElementException14);
        org.junit.Assert.assertNotNull(illegalArgumentException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.io.EOFException eOFException11 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray9);
        java.lang.Throwable[] throwableArray12 = eOFException11.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException13 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, (java.lang.Object[]) throwableArray12);
        java.lang.Throwable[] throwableArray14 = arrayIndexOutOfBoundsException13.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arrayIndexOutOfBoundsException13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(eOFException11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException13);
        org.junit.Assert.assertNotNull(throwableArray14);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.text.ParseException parseException12 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable3, objArray10);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray10);
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, objArray10);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        java.lang.Object[] objArray25 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException26 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable18, objArray25);
        java.io.EOFException eOFException27 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable17, objArray25);
        java.lang.Throwable[] throwableArray28 = eOFException27.getSuppressed();
        java.lang.IllegalStateException illegalStateException29 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable16, (java.lang.Object[]) throwableArray28);
        java.io.EOFException eOFException30 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable15, (java.lang.Object[]) throwableArray28);
        illegalStateException14.addSuppressed((java.lang.Throwable) eOFException30);
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        org.apache.commons.math.exception.util.Localizable localizable36 = null;
        org.apache.commons.math.exception.util.Localizable localizable38 = null;
        org.apache.commons.math.exception.util.Localizable localizable39 = null;
        java.lang.Object[] objArray45 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException46 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable39, objArray45);
        java.text.ParseException parseException47 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable38, objArray45);
        java.io.EOFException eOFException48 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable36, objArray45);
        java.lang.IllegalStateException illegalStateException49 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable35, objArray45);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException50 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable34, objArray45);
        java.util.ConcurrentModificationException concurrentModificationException51 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable33, objArray45);
        java.lang.ArithmeticException arithmeticException52 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable32, objArray45);
        illegalStateException14.addSuppressed((java.lang.Throwable) arithmeticException52);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(parseException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException26);
        org.junit.Assert.assertNotNull(eOFException27);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(illegalStateException29);
        org.junit.Assert.assertNotNull(eOFException30);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException46);
        org.junit.Assert.assertNotNull(parseException47);
        org.junit.Assert.assertNotNull(eOFException48);
        org.junit.Assert.assertNotNull(illegalStateException49);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException50);
        org.junit.Assert.assertNotNull(concurrentModificationException51);
        org.junit.Assert.assertNotNull(arithmeticException52);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        java.lang.Object[] objArray7 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException8 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray7);
        java.lang.IllegalStateException illegalStateException9 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, objArray7);
        java.lang.Class<?> wildcardClass10 = illegalStateException9.getClass();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException8);
        org.junit.Assert.assertNotNull(illegalStateException9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable7, objArray13);
        java.text.ParseException parseException15 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable6, objArray13);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable3, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException18 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException(localizable1, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray13);
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        java.lang.Object[] objArray32 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException33 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable26, objArray32);
        java.text.ParseException parseException34 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable25, objArray32);
        java.lang.IllegalArgumentException illegalArgumentException35 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable23, objArray32);
        java.util.NoSuchElementException noSuchElementException36 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable22, objArray32);
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(localizable21, objArray32);
        java.lang.Throwable[] throwableArray38 = mathRuntimeException37.getSuppressed();
        mathRuntimeException20.addSuppressed((java.lang.Throwable) mathRuntimeException37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = mathRuntimeException37.getContext("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(parseException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
        org.junit.Assert.assertNotNull(illegalArgumentException18);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException33);
        org.junit.Assert.assertNotNull(parseException34);
        org.junit.Assert.assertNotNull(illegalArgumentException35);
        org.junit.Assert.assertNotNull(noSuchElementException36);
        org.junit.Assert.assertNotNull(throwableArray38);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.lang.Throwable[] throwableArray10 = concurrentModificationException9.getSuppressed();
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, (java.lang.Object[]) throwableArray10);
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, (java.lang.Object[]) throwableArray10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException13 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) illegalStateException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(illegalStateException12);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        mathRuntimeException1.addSuppressed((java.lang.Throwable) concurrentModificationException14);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException16 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) mathRuntimeException1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.lang.ArithmeticException arithmeticException15 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray11);
        java.lang.Class<?> wildcardClass17 = objArray11.getClass();
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(arithmeticException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(localizable1, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray12);
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException29 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray28);
        java.text.ParseException parseException30 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable21, objArray28);
        java.lang.Throwable[] throwableArray31 = parseException30.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException18.setContext("", (java.lang.Object) throwableArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException29);
        org.junit.Assert.assertNotNull(parseException30);
        org.junit.Assert.assertNotNull(throwableArray31);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.lang.Throwable[] throwableArray12 = concurrentModificationException11.getSuppressed();
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, (java.lang.Object[]) throwableArray12);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException14 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable2, (java.lang.Object[]) throwableArray12);
        java.lang.ArithmeticException arithmeticException15 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray12);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, (java.lang.Object[]) throwableArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = illegalArgumentException16.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException14);
        org.junit.Assert.assertNotNull(arithmeticException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        org.apache.commons.math.exception.util.Localizable localizable9 = null;
        java.lang.Object[] objArray16 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException17 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable9, objArray16);
        java.lang.ArithmeticException arithmeticException18 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable8, objArray16);
        java.util.ConcurrentModificationException concurrentModificationException19 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable7, objArray16);
        java.util.NoSuchElementException noSuchElementException20 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable6, objArray16);
        java.util.ConcurrentModificationException concurrentModificationException21 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray16);
        java.lang.IllegalArgumentException illegalArgumentException22 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable4, objArray16);
        java.util.ConcurrentModificationException concurrentModificationException23 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray16);
        org.apache.commons.math.MathRuntimeException mathRuntimeException24 = new org.apache.commons.math.MathRuntimeException(localizable2, objArray16);
        java.text.ParseException parseException25 = org.apache.commons.math.MathRuntimeException.createParseException((int) ' ', localizable1, objArray16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) parseException25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException17);
        org.junit.Assert.assertNotNull(arithmeticException18);
        org.junit.Assert.assertNotNull(concurrentModificationException19);
        org.junit.Assert.assertNotNull(noSuchElementException20);
        org.junit.Assert.assertNotNull(concurrentModificationException21);
        org.junit.Assert.assertNotNull(illegalArgumentException22);
        org.junit.Assert.assertNotNull(concurrentModificationException23);
        org.junit.Assert.assertNotNull(parseException25);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray12);
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        java.lang.Object[] objArray31 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException32 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable25, objArray31);
        java.text.ParseException parseException33 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable24, objArray31);
        java.io.EOFException eOFException34 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable22, objArray31);
        java.lang.IllegalStateException illegalStateException35 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, objArray31);
        java.lang.IllegalArgumentException illegalArgumentException36 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable20, objArray31);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException18.setContext("hi!", (java.lang.Object) objArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException32);
        org.junit.Assert.assertNotNull(parseException33);
        org.junit.Assert.assertNotNull(eOFException34);
        org.junit.Assert.assertNotNull(illegalStateException35);
        org.junit.Assert.assertNotNull(illegalArgumentException36);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        java.util.NoSuchElementException noSuchElementException14 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        java.lang.Object[] objArray25 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException26 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable18, objArray25);
        java.io.EOFException eOFException27 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable17, objArray25);
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable16, objArray25);
        java.lang.ArithmeticException arithmeticException29 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable15, objArray25);
        noSuchElementException14.addSuppressed((java.lang.Throwable) arithmeticException29);
        org.apache.commons.math.exception.util.Localizable localizable31 = null;
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        java.lang.Object[] objArray40 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException41 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable34, objArray40);
        java.lang.Throwable[] throwableArray42 = concurrentModificationException41.getSuppressed();
        java.io.EOFException eOFException43 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable33, (java.lang.Object[]) throwableArray42);
        java.lang.IllegalArgumentException illegalArgumentException44 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable32, (java.lang.Object[]) throwableArray42);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException45 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arithmeticException29, localizable31, (java.lang.Object[]) throwableArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(noSuchElementException14);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException26);
        org.junit.Assert.assertNotNull(eOFException27);
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(arithmeticException29);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException41);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(eOFException43);
        org.junit.Assert.assertNotNull(illegalArgumentException44);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        org.apache.commons.math.exception.util.Localizable localizable9 = null;
        org.apache.commons.math.exception.util.Localizable localizable10 = null;
        java.lang.Object[] objArray17 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException18 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable10, objArray17);
        java.io.EOFException eOFException19 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable9, objArray17);
        java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable8, objArray17);
        java.lang.ArithmeticException arithmeticException21 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable7, objArray17);
        java.lang.Throwable[] throwableArray22 = arithmeticException21.getSuppressed();
        java.text.ParseException parseException23 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable6, (java.lang.Object[]) throwableArray22);
        java.text.ParseException parseException24 = org.apache.commons.math.MathRuntimeException.createParseException((int) (byte) 0, localizable4, (java.lang.Object[]) throwableArray22);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException25 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable2, (java.lang.Object[]) throwableArray22);
        java.text.ParseException parseException26 = org.apache.commons.math.MathRuntimeException.createParseException((int) (byte) 100, localizable1, (java.lang.Object[]) throwableArray22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException27 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) parseException26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException18);
        org.junit.Assert.assertNotNull(eOFException19);
        org.junit.Assert.assertNotNull(concurrentModificationException20);
        org.junit.Assert.assertNotNull(arithmeticException21);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(parseException23);
        org.junit.Assert.assertNotNull(parseException24);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException25);
        org.junit.Assert.assertNotNull(parseException26);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = new java.lang.Object[] {};
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray1);
        org.apache.commons.math.MathRuntimeException mathRuntimeException3 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException2);
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray11);
        mathRuntimeException2.addSuppressed((java.lang.Throwable) arithmeticException13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = mathRuntimeException2.getContext("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.text.ParseException parseException11 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable2, objArray9);
        java.lang.IllegalArgumentException illegalArgumentException12 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException13 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) illegalArgumentException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(parseException11);
        org.junit.Assert.assertNotNull(illegalArgumentException12);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.lang.Throwable[] throwableArray10 = concurrentModificationException9.getSuppressed();
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, (java.lang.Object[]) throwableArray10);
        java.lang.ArithmeticException arithmeticException12 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, (java.lang.Object[]) throwableArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException13 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) arithmeticException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arithmeticException12);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable7, objArray13);
        java.text.ParseException parseException15 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable6, objArray13);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable3, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException18 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException(localizable1, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray13);
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        java.lang.Object[] objArray32 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException33 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable26, objArray32);
        java.text.ParseException parseException34 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable25, objArray32);
        java.lang.IllegalArgumentException illegalArgumentException35 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable23, objArray32);
        java.util.NoSuchElementException noSuchElementException36 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable22, objArray32);
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(localizable21, objArray32);
        java.lang.Throwable[] throwableArray38 = mathRuntimeException37.getSuppressed();
        mathRuntimeException20.addSuppressed((java.lang.Throwable) mathRuntimeException37);
        java.lang.Throwable[] throwableArray40 = mathRuntimeException20.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        org.apache.commons.math.exception.util.Localizable localizable42 = null;
        org.apache.commons.math.exception.util.Localizable localizable43 = null;
        org.apache.commons.math.exception.util.Localizable localizable44 = null;
        org.apache.commons.math.exception.util.Localizable localizable45 = null;
        org.apache.commons.math.exception.util.Localizable localizable46 = null;
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        org.apache.commons.math.exception.util.Localizable localizable48 = null;
        java.lang.Object[] objArray55 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException56 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable48, objArray55);
        java.lang.ArithmeticException arithmeticException57 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable47, objArray55);
        java.util.ConcurrentModificationException concurrentModificationException58 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable46, objArray55);
        java.util.NoSuchElementException noSuchElementException59 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable45, objArray55);
        java.util.ConcurrentModificationException concurrentModificationException60 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable44, objArray55);
        org.apache.commons.math.MathRuntimeException mathRuntimeException61 = new org.apache.commons.math.MathRuntimeException(localizable43, objArray55);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException62 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable42, objArray55);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException20.addMessage(localizable41, objArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(parseException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
        org.junit.Assert.assertNotNull(illegalArgumentException18);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException33);
        org.junit.Assert.assertNotNull(parseException34);
        org.junit.Assert.assertNotNull(illegalArgumentException35);
        org.junit.Assert.assertNotNull(noSuchElementException36);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException56);
        org.junit.Assert.assertNotNull(arithmeticException57);
        org.junit.Assert.assertNotNull(concurrentModificationException58);
        org.junit.Assert.assertNotNull(noSuchElementException59);
        org.junit.Assert.assertNotNull(concurrentModificationException60);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException62);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.lang.ArithmeticException arithmeticException12 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        java.util.NoSuchElementException noSuchElementException14 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, objArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = noSuchElementException14.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arithmeticException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(noSuchElementException14);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable20, objArray26);
        java.text.ParseException parseException28 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable19, objArray26);
        java.lang.IllegalArgumentException illegalArgumentException29 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable17, objArray26);
        java.lang.ArithmeticException arithmeticException30 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, objArray26);
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException14, localizable15, objArray26);
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        java.lang.Object[] objArray42 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException43 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable35, objArray42);
        java.lang.ArithmeticException arithmeticException44 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable34, objArray42);
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable33, objArray42);
        org.apache.commons.math.MathRuntimeException mathRuntimeException46 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException31, localizable32, objArray42);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = mathRuntimeException31.getContext("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException27);
        org.junit.Assert.assertNotNull(parseException28);
        org.junit.Assert.assertNotNull(illegalArgumentException29);
        org.junit.Assert.assertNotNull(arithmeticException30);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException43);
        org.junit.Assert.assertNotNull(arithmeticException44);
        org.junit.Assert.assertNotNull(concurrentModificationException45);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, (java.lang.Object[]) throwableArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet15 = mathRuntimeException14.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(eOFException13);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException14 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray11);
        java.lang.Object[] objArray15 = new java.lang.Object[] { "", illegalArgumentException14 };
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray15);
        java.lang.Throwable[] throwableArray17 = concurrentModificationException16.getSuppressed();
        java.lang.Class<?> wildcardClass18 = throwableArray17.getClass();
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(illegalArgumentException14);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.lang.Throwable[] throwableArray10 = concurrentModificationException9.getSuppressed();
        java.io.EOFException eOFException11 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, (java.lang.Object[]) throwableArray10);
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        java.lang.Object[] objArray24 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException25 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable17, objArray24);
        java.lang.ArithmeticException arithmeticException26 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, objArray24);
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable15, objArray24);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException28 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable14, objArray24);
        java.io.EOFException eOFException29 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable13, objArray24);
        illegalStateException12.addSuppressed((java.lang.Throwable) eOFException29);
        org.apache.commons.math.exception.util.Localizable localizable31 = null;
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        org.apache.commons.math.exception.util.Localizable localizable36 = null;
        java.lang.Object[] objArray42 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException43 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable36, objArray42);
        java.lang.Throwable[] throwableArray44 = concurrentModificationException43.getSuppressed();
        java.lang.IllegalStateException illegalStateException45 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable35, (java.lang.Object[]) throwableArray44);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException46 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable34, (java.lang.Object[]) throwableArray44);
        java.lang.ArithmeticException arithmeticException47 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable33, (java.lang.Object[]) throwableArray44);
        java.lang.IllegalArgumentException illegalArgumentException48 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable32, (java.lang.Object[]) throwableArray44);
        org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(localizable31, (java.lang.Object[]) throwableArray44);
        eOFException29.addSuppressed((java.lang.Throwable) mathRuntimeException49);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException51 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) eOFException29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(eOFException11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException25);
        org.junit.Assert.assertNotNull(arithmeticException26);
        org.junit.Assert.assertNotNull(concurrentModificationException27);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException28);
        org.junit.Assert.assertNotNull(eOFException29);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException43);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(illegalStateException45);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException46);
        org.junit.Assert.assertNotNull(arithmeticException47);
        org.junit.Assert.assertNotNull(illegalArgumentException48);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable5, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray13);
        java.lang.ArithmeticException arithmeticException17 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray13);
        java.lang.IllegalStateException illegalStateException18 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException(throwable0, localizable1, objArray13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = mathRuntimeException19.getContext("org.apache.commons.math.MathRuntimeException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(arithmeticException17);
        org.junit.Assert.assertNotNull(illegalStateException18);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable8, objArray15);
        java.lang.ArithmeticException arithmeticException17 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable7, objArray15);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray15);
        java.util.NoSuchElementException noSuchElementException19 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable5, objArray15);
        java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray15);
        org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException(localizable3, objArray15);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException22 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable2, objArray15);
        java.text.ParseException parseException23 = org.apache.commons.math.MathRuntimeException.createParseException((int) (short) -1, localizable1, objArray15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException24 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) parseException23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(arithmeticException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(noSuchElementException19);
        org.junit.Assert.assertNotNull(concurrentModificationException20);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException22);
        org.junit.Assert.assertNotNull(parseException23);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable8, objArray15);
        java.lang.ArithmeticException arithmeticException17 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable7, objArray15);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray15);
        java.util.NoSuchElementException noSuchElementException19 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable5, objArray15);
        java.io.EOFException eOFException20 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, objArray15);
        java.lang.ArithmeticException arithmeticException21 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray15);
        java.lang.Throwable[] throwableArray22 = arithmeticException21.getSuppressed();
        java.lang.IllegalArgumentException illegalArgumentException23 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, (java.lang.Object[]) throwableArray22);
        java.lang.IllegalStateException illegalStateException24 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, (java.lang.Object[]) throwableArray22);
        java.util.NoSuchElementException noSuchElementException25 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, (java.lang.Object[]) throwableArray22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = noSuchElementException25.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(arithmeticException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(noSuchElementException19);
        org.junit.Assert.assertNotNull(eOFException20);
        org.junit.Assert.assertNotNull(arithmeticException21);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(illegalArgumentException23);
        org.junit.Assert.assertNotNull(illegalStateException24);
        org.junit.Assert.assertNotNull(noSuchElementException25);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException14 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet17 = mathRuntimeException16.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(illegalArgumentException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.util.NoSuchElementException noSuchElementException14 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray11);
        java.text.ParseException parseException15 = org.apache.commons.math.MathRuntimeException.createParseException(100, localizable1, objArray11);
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException29 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray28);
        java.text.ParseException parseException30 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable21, objArray28);
        java.util.NoSuchElementException noSuchElementException31 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable19, objArray28);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException32 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable18, objArray28);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException33 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable17, objArray28);
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.exception.util.Localizable localizable36 = null;
        org.apache.commons.math.exception.util.Localizable localizable38 = null;
        org.apache.commons.math.exception.util.Localizable localizable39 = null;
        org.apache.commons.math.exception.util.Localizable localizable40 = null;
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        org.apache.commons.math.exception.util.Localizable localizable42 = null;
        java.lang.Object[] objArray49 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException50 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable42, objArray49);
        java.io.EOFException eOFException51 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable41, objArray49);
        java.util.ConcurrentModificationException concurrentModificationException52 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable40, objArray49);
        java.lang.ArithmeticException arithmeticException53 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable39, objArray49);
        java.lang.Throwable[] throwableArray54 = arithmeticException53.getSuppressed();
        java.text.ParseException parseException55 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable38, (java.lang.Object[]) throwableArray54);
        java.text.ParseException parseException56 = org.apache.commons.math.MathRuntimeException.createParseException((int) (byte) 0, localizable36, (java.lang.Object[]) throwableArray54);
        java.util.NoSuchElementException noSuchElementException57 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable34, (java.lang.Object[]) throwableArray54);
        arrayIndexOutOfBoundsException33.addSuppressed((java.lang.Throwable) noSuchElementException57);
        java.lang.Throwable[] throwableArray59 = arrayIndexOutOfBoundsException33.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException60 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) parseException15, localizable16, (java.lang.Object[]) throwableArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(noSuchElementException14);
        org.junit.Assert.assertNotNull(parseException15);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException29);
        org.junit.Assert.assertNotNull(parseException30);
        org.junit.Assert.assertNotNull(noSuchElementException31);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException32);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException33);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException50);
        org.junit.Assert.assertNotNull(eOFException51);
        org.junit.Assert.assertNotNull(concurrentModificationException52);
        org.junit.Assert.assertNotNull(arithmeticException53);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(parseException55);
        org.junit.Assert.assertNotNull(parseException56);
        org.junit.Assert.assertNotNull(noSuchElementException57);
        org.junit.Assert.assertNotNull(throwableArray59);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable7, objArray13);
        java.text.ParseException parseException15 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable6, objArray13);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable3, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException18 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException(localizable1, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = mathRuntimeException20.getContext("org.apache.commons.math.MathRuntimeException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(parseException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
        org.junit.Assert.assertNotNull(illegalArgumentException18);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable5, objArray13);
        java.lang.Throwable[] throwableArray16 = eOFException15.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException17 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable4, (java.lang.Object[]) throwableArray16);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, (java.lang.Object[]) throwableArray16);
        java.lang.ArithmeticException arithmeticException19 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, (java.lang.Object[]) throwableArray16);
        java.util.NoSuchElementException noSuchElementException20 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        java.lang.Object[] objArray32 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException33 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable26, objArray32);
        java.lang.Throwable[] throwableArray34 = concurrentModificationException33.getSuppressed();
        java.lang.IllegalStateException illegalStateException35 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable25, (java.lang.Object[]) throwableArray34);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException36 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable24, (java.lang.Object[]) throwableArray34);
        java.lang.ArithmeticException arithmeticException37 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable23, (java.lang.Object[]) throwableArray34);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException21.setContext("org.apache.commons.math.MathRuntimeException: ", (java.lang.Object) arithmeticException37);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(arithmeticException19);
        org.junit.Assert.assertNotNull(noSuchElementException20);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException33);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(illegalStateException35);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException36);
        org.junit.Assert.assertNotNull(arithmeticException37);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable8, objArray15);
        java.io.EOFException eOFException17 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable7, objArray15);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray15);
        java.lang.ArithmeticException arithmeticException19 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable5, objArray15);
        java.lang.Throwable[] throwableArray20 = arithmeticException19.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException21 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable4, (java.lang.Object[]) throwableArray20);
        java.lang.IllegalArgumentException illegalArgumentException22 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable3, (java.lang.Object[]) throwableArray20);
        java.lang.Throwable[] throwableArray23 = illegalArgumentException22.getSuppressed();
        java.util.NoSuchElementException noSuchElementException24 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, (java.lang.Object[]) throwableArray23);
        java.lang.IllegalArgumentException illegalArgumentException25 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, (java.lang.Object[]) throwableArray23);
        org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray23);
        org.apache.commons.math.exception.util.Localizable localizable29 = null;
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        org.apache.commons.math.exception.util.Localizable localizable31 = null;
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        java.lang.Object[] objArray40 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException41 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable33, objArray40);
        java.io.EOFException eOFException42 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable32, objArray40);
        java.util.ConcurrentModificationException concurrentModificationException43 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable31, objArray40);
        java.lang.ArithmeticException arithmeticException44 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable30, objArray40);
        java.text.ParseException parseException45 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable29, objArray40);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException26.setContext("", (java.lang.Object) objArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(eOFException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(arithmeticException19);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException21);
        org.junit.Assert.assertNotNull(illegalArgumentException22);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(noSuchElementException24);
        org.junit.Assert.assertNotNull(illegalArgumentException25);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException41);
        org.junit.Assert.assertNotNull(eOFException42);
        org.junit.Assert.assertNotNull(concurrentModificationException43);
        org.junit.Assert.assertNotNull(arithmeticException44);
        org.junit.Assert.assertNotNull(parseException45);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = new java.lang.Object[] {};
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray1);
        org.apache.commons.math.MathRuntimeException mathRuntimeException3 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException2);
        java.lang.Throwable[] throwableArray4 = mathRuntimeException2.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet5 = mathRuntimeException2.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray11);
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray11);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException29 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray28);
        java.text.ParseException parseException30 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable21, objArray28);
        java.lang.IllegalStateException illegalStateException31 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable19, objArray28);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException32 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable18, objArray28);
        org.apache.commons.math.MathRuntimeException mathRuntimeException33 = new org.apache.commons.math.MathRuntimeException(localizable17, objArray28);
        illegalArgumentException16.addSuppressed((java.lang.Throwable) mathRuntimeException33);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = mathRuntimeException33.getContext("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException29);
        org.junit.Assert.assertNotNull(parseException30);
        org.junit.Assert.assertNotNull(illegalStateException31);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException32);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.lang.ArithmeticException arithmeticException15 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable5, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray13);
        java.text.ParseException parseException17 = org.apache.commons.math.MathRuntimeException.createParseException((int) ' ', localizable3, objArray13);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException18 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, objArray13);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException19 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray13);
        java.lang.Class<?> wildcardClass20 = objArray13.getClass();
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(arithmeticException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(parseException17);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException18);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.lang.Throwable[] throwableArray13 = concurrentModificationException12.getSuppressed();
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, (java.lang.Object[]) throwableArray13);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable3, (java.lang.Object[]) throwableArray13);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, (java.lang.Object[]) throwableArray13);
        java.lang.IllegalStateException illegalStateException17 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, (java.lang.Object[]) throwableArray13);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, (java.lang.Object[]) throwableArray13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException19 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) concurrentModificationException18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
        org.junit.Assert.assertNotNull(illegalStateException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.lang.Throwable[] throwableArray13 = eOFException12.getSuppressed();
        java.util.NoSuchElementException noSuchElementException14 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray13);
        java.lang.Throwable[] throwableArray16 = mathRuntimeException15.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet17 = mathRuntimeException15.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(noSuchElementException14);
        org.junit.Assert.assertNotNull(throwableArray16);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        java.lang.Object[] objArray7 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException8 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray7);
        java.lang.IllegalArgumentException illegalArgumentException9 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray7);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException10 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) illegalArgumentException9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException8);
        org.junit.Assert.assertNotNull(illegalArgumentException9);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        java.util.NoSuchElementException noSuchElementException14 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        java.lang.Object[] objArray25 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException26 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable18, objArray25);
        java.io.EOFException eOFException27 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable17, objArray25);
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable16, objArray25);
        java.lang.ArithmeticException arithmeticException29 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable15, objArray25);
        noSuchElementException14.addSuppressed((java.lang.Throwable) arithmeticException29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = noSuchElementException14.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(noSuchElementException14);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException26);
        org.junit.Assert.assertNotNull(eOFException27);
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(arithmeticException29);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = new java.lang.Object[] {};
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray1);
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        org.apache.commons.math.exception.util.Localizable localizable9 = null;
        org.apache.commons.math.exception.util.Localizable localizable11 = null;
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        java.lang.Object[] objArray18 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException19 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable12, objArray18);
        java.text.ParseException parseException20 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable11, objArray18);
        java.io.EOFException eOFException21 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable9, objArray18);
        java.lang.IllegalStateException illegalStateException22 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable8, objArray18);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException23 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable7, objArray18);
        java.util.ConcurrentModificationException concurrentModificationException24 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray18);
        java.text.ParseException parseException25 = org.apache.commons.math.MathRuntimeException.createParseException(10, localizable5, objArray18);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException2.addMessage(localizable3, objArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException19);
        org.junit.Assert.assertNotNull(parseException20);
        org.junit.Assert.assertNotNull(eOFException21);
        org.junit.Assert.assertNotNull(illegalStateException22);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException23);
        org.junit.Assert.assertNotNull(concurrentModificationException24);
        org.junit.Assert.assertNotNull(parseException25);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(throwable0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj4 = mathRuntimeException2.getContext("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable8, objArray15);
        java.io.EOFException eOFException17 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable7, objArray15);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray15);
        java.lang.ArithmeticException arithmeticException19 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable5, objArray15);
        java.lang.Throwable[] throwableArray20 = arithmeticException19.getSuppressed();
        java.text.ParseException parseException21 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, (java.lang.Object[]) throwableArray20);
        java.text.ParseException parseException22 = org.apache.commons.math.MathRuntimeException.createParseException((int) (byte) 0, localizable2, (java.lang.Object[]) throwableArray20);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException23 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, (java.lang.Object[]) throwableArray20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException24 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arrayIndexOutOfBoundsException23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(eOFException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(arithmeticException19);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(parseException21);
        org.junit.Assert.assertNotNull(parseException22);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException23);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray12);
        java.lang.Throwable[] throwableArray17 = arithmeticException16.getSuppressed();
        java.text.ParseException parseException18 = org.apache.commons.math.MathRuntimeException.createParseException(10, localizable1, (java.lang.Object[]) throwableArray17);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException19 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) parseException18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(parseException18);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray12);
        java.lang.Throwable[] throwableArray17 = arithmeticException16.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException18 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, (java.lang.Object[]) throwableArray17);
        java.lang.IllegalArgumentException illegalArgumentException19 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, (java.lang.Object[]) throwableArray17);
        java.lang.Throwable[] throwableArray20 = illegalArgumentException19.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        org.apache.commons.math.exception.util.Localizable localizable28 = null;
        java.lang.Object[] objArray35 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException36 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable28, objArray35);
        java.lang.ArithmeticException arithmeticException37 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable27, objArray35);
        java.util.ConcurrentModificationException concurrentModificationException38 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable26, objArray35);
        java.util.NoSuchElementException noSuchElementException39 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable25, objArray35);
        java.util.ConcurrentModificationException concurrentModificationException40 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable24, objArray35);
        java.lang.IllegalArgumentException illegalArgumentException41 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable23, objArray35);
        java.util.ConcurrentModificationException concurrentModificationException42 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray35);
        java.util.ConcurrentModificationException concurrentModificationException43 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable21, objArray35);
        illegalArgumentException19.addSuppressed((java.lang.Throwable) concurrentModificationException43);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException45 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) concurrentModificationException43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException18);
        org.junit.Assert.assertNotNull(illegalArgumentException19);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException36);
        org.junit.Assert.assertNotNull(arithmeticException37);
        org.junit.Assert.assertNotNull(concurrentModificationException38);
        org.junit.Assert.assertNotNull(noSuchElementException39);
        org.junit.Assert.assertNotNull(concurrentModificationException40);
        org.junit.Assert.assertNotNull(illegalArgumentException41);
        org.junit.Assert.assertNotNull(concurrentModificationException42);
        org.junit.Assert.assertNotNull(concurrentModificationException43);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.lang.Throwable[] throwableArray13 = concurrentModificationException12.getSuppressed();
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, (java.lang.Object[]) throwableArray13);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable3, (java.lang.Object[]) throwableArray13);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, (java.lang.Object[]) throwableArray13);
        java.io.EOFException eOFException17 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet19 = mathRuntimeException18.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
        org.junit.Assert.assertNotNull(eOFException17);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray11);
        java.lang.Throwable[] throwableArray14 = eOFException13.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable2, (java.lang.Object[]) throwableArray14);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, (java.lang.Object[]) throwableArray14);
        java.lang.ArithmeticException arithmeticException17 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, (java.lang.Object[]) throwableArray14);
        java.lang.Throwable[] throwableArray18 = arithmeticException17.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arithmeticException17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(arithmeticException17);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable20, objArray26);
        java.text.ParseException parseException28 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable19, objArray26);
        java.lang.IllegalArgumentException illegalArgumentException29 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable17, objArray26);
        java.lang.ArithmeticException arithmeticException30 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, objArray26);
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException14, localizable15, objArray26);
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.exception.util.Localizable localizable36 = null;
        org.apache.commons.math.exception.util.Localizable localizable37 = null;
        java.lang.Object[] objArray43 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException44 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable37, objArray43);
        java.text.ParseException parseException45 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable36, objArray43);
        java.io.EOFException eOFException46 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable34, objArray43);
        java.io.EOFException eOFException47 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable33, objArray43);
        java.lang.Throwable[] throwableArray48 = eOFException47.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException14.addMessage(localizable32, (java.lang.Object[]) throwableArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException27);
        org.junit.Assert.assertNotNull(parseException28);
        org.junit.Assert.assertNotNull(illegalArgumentException29);
        org.junit.Assert.assertNotNull(arithmeticException30);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException44);
        org.junit.Assert.assertNotNull(parseException45);
        org.junit.Assert.assertNotNull(eOFException46);
        org.junit.Assert.assertNotNull(eOFException47);
        org.junit.Assert.assertNotNull(throwableArray48);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.lang.Throwable[] throwableArray13 = eOFException12.getSuppressed();
        java.util.NoSuchElementException noSuchElementException14 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray13);
        java.lang.Throwable[] throwableArray16 = mathRuntimeException15.getSuppressed();
        java.lang.Class<?> wildcardClass17 = throwableArray16.getClass();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(noSuchElementException14);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(localizable1, objArray12);
        java.lang.IllegalStateException illegalStateException18 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, objArray12);
        java.lang.Class<?> wildcardClass19 = objArray12.getClass();
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
        org.junit.Assert.assertNotNull(illegalStateException18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) mathRuntimeException16);
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        java.lang.Object[] objArray32 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException33 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable25, objArray32);
        java.lang.ArithmeticException arithmeticException34 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable24, objArray32);
        java.util.ConcurrentModificationException concurrentModificationException35 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable23, objArray32);
        java.util.NoSuchElementException noSuchElementException36 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable22, objArray32);
        java.util.ConcurrentModificationException concurrentModificationException37 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable21, objArray32);
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(localizable20, objArray32);
        java.lang.IllegalStateException illegalStateException39 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable19, objArray32);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException16.addMessage(localizable18, objArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException33);
        org.junit.Assert.assertNotNull(arithmeticException34);
        org.junit.Assert.assertNotNull(concurrentModificationException35);
        org.junit.Assert.assertNotNull(noSuchElementException36);
        org.junit.Assert.assertNotNull(concurrentModificationException37);
        org.junit.Assert.assertNotNull(illegalStateException39);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        java.lang.Throwable[] throwableArray17 = mathRuntimeException16.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        java.lang.Object[] objArray31 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException32 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable25, objArray31);
        java.text.ParseException parseException33 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable24, objArray31);
        java.lang.IllegalStateException illegalStateException34 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable22, objArray31);
        java.lang.IllegalArgumentException illegalArgumentException35 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable21, objArray31);
        java.lang.IllegalArgumentException illegalArgumentException36 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable20, objArray31);
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(localizable19, objArray31);
        org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException37);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException16.setContext("", (java.lang.Object) mathRuntimeException37);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException32);
        org.junit.Assert.assertNotNull(parseException33);
        org.junit.Assert.assertNotNull(illegalStateException34);
        org.junit.Assert.assertNotNull(illegalArgumentException35);
        org.junit.Assert.assertNotNull(illegalArgumentException36);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable8, objArray14);
        java.text.ParseException parseException16 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable7, objArray14);
        java.io.EOFException eOFException17 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable5, objArray14);
        java.lang.IllegalStateException illegalStateException18 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray14);
        java.util.ConcurrentModificationException concurrentModificationException19 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray14);
        org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(localizable2, objArray14);
        java.text.ParseException parseException21 = org.apache.commons.math.MathRuntimeException.createParseException((int) (byte) 0, localizable1, objArray14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = parseException21.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(parseException16);
        org.junit.Assert.assertNotNull(eOFException17);
        org.junit.Assert.assertNotNull(illegalStateException18);
        org.junit.Assert.assertNotNull(concurrentModificationException19);
        org.junit.Assert.assertNotNull(parseException21);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray9);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable13);
        concurrentModificationException12.addSuppressed((java.lang.Throwable) mathRuntimeException14);
        java.lang.Class<?> wildcardClass16 = mathRuntimeException14.getClass();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable7, objArray13);
        java.text.ParseException parseException15 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable6, objArray13);
        java.io.EOFException eOFException16 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, objArray13);
        java.lang.IllegalStateException illegalStateException17 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray13);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException18 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable2, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException19 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray13);
        java.lang.Throwable[] throwableArray20 = concurrentModificationException19.getSuppressed();
        org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray20);
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        org.apache.commons.math.exception.util.Localizable localizable29 = null;
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray36 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException37 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable30, objArray36);
        java.text.ParseException parseException38 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable29, objArray36);
        java.util.NoSuchElementException noSuchElementException39 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable27, objArray36);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException40 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable26, objArray36);
        java.lang.IllegalArgumentException illegalArgumentException41 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable25, objArray36);
        java.lang.IllegalArgumentException illegalArgumentException42 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable24, objArray36);
        java.util.NoSuchElementException noSuchElementException43 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable23, objArray36);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException21.setContext("hi!", (java.lang.Object) noSuchElementException43);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(parseException15);
        org.junit.Assert.assertNotNull(eOFException16);
        org.junit.Assert.assertNotNull(illegalStateException17);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException18);
        org.junit.Assert.assertNotNull(concurrentModificationException19);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException37);
        org.junit.Assert.assertNotNull(parseException38);
        org.junit.Assert.assertNotNull(noSuchElementException39);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException40);
        org.junit.Assert.assertNotNull(illegalArgumentException41);
        org.junit.Assert.assertNotNull(illegalArgumentException42);
        org.junit.Assert.assertNotNull(noSuchElementException43);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        mathRuntimeException1.addSuppressed((java.lang.Throwable) concurrentModificationException14);
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException29 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, objArray28);
        java.io.EOFException eOFException30 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable20, objArray28);
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable19, objArray28);
        java.lang.ArithmeticException arithmeticException32 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable18, objArray28);
        java.lang.Throwable[] throwableArray33 = arithmeticException32.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException34 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable17, (java.lang.Object[]) throwableArray33);
        java.lang.IllegalArgumentException illegalArgumentException35 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable16, (java.lang.Object[]) throwableArray33);
        concurrentModificationException14.addSuppressed((java.lang.Throwable) illegalArgumentException35);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) concurrentModificationException14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException29);
        org.junit.Assert.assertNotNull(eOFException30);
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(arithmeticException32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException34);
        org.junit.Assert.assertNotNull(illegalArgumentException35);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.text.ParseException parseException12 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable3, objArray10);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray10);
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, objArray10);
        java.lang.Class<?> wildcardClass15 = objArray10.getClass();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(parseException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.io.EOFException eOFException11 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray9);
        java.lang.Throwable[] throwableArray12 = eOFException11.getSuppressed();
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, (java.lang.Object[]) throwableArray12);
        java.lang.Throwable[] throwableArray14 = illegalStateException13.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException27 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable19, objArray26);
        java.lang.ArithmeticException arithmeticException28 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable18, objArray26);
        java.util.ConcurrentModificationException concurrentModificationException29 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable17, objArray26);
        java.util.NoSuchElementException noSuchElementException30 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable16, objArray26);
        java.lang.Throwable[] throwableArray31 = noSuchElementException30.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException32 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable15, (java.lang.Object[]) throwableArray31);
        illegalStateException13.addSuppressed((java.lang.Throwable) arrayIndexOutOfBoundsException32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = arrayIndexOutOfBoundsException32.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(eOFException11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException27);
        org.junit.Assert.assertNotNull(arithmeticException28);
        org.junit.Assert.assertNotNull(concurrentModificationException29);
        org.junit.Assert.assertNotNull(noSuchElementException30);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException32);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.lang.ArithmeticException arithmeticException15 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable5, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray13);
        java.util.NoSuchElementException noSuchElementException17 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable3, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException19 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, objArray13);
        java.lang.IllegalStateException illegalStateException20 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, objArray13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) illegalStateException20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(arithmeticException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(noSuchElementException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(illegalArgumentException19);
        org.junit.Assert.assertNotNull(illegalStateException20);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray11);
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray11);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException29 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray28);
        java.text.ParseException parseException30 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable21, objArray28);
        java.lang.IllegalStateException illegalStateException31 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable19, objArray28);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException32 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable18, objArray28);
        org.apache.commons.math.MathRuntimeException mathRuntimeException33 = new org.apache.commons.math.MathRuntimeException(localizable17, objArray28);
        illegalArgumentException16.addSuppressed((java.lang.Throwable) mathRuntimeException33);
        java.lang.Throwable throwable36 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable36);
        org.apache.commons.math.exception.util.Localizable localizable38 = null;
        org.apache.commons.math.exception.util.Localizable localizable39 = null;
        org.apache.commons.math.exception.util.Localizable localizable40 = null;
        java.lang.Object[] objArray47 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException48 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable40, objArray47);
        java.lang.ArithmeticException arithmeticException49 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable39, objArray47);
        java.util.ConcurrentModificationException concurrentModificationException50 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable38, objArray47);
        mathRuntimeException37.addSuppressed((java.lang.Throwable) concurrentModificationException50);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException33.setContext("org.apache.commons.math.MathRuntimeException: ", (java.lang.Object) mathRuntimeException37);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException29);
        org.junit.Assert.assertNotNull(parseException30);
        org.junit.Assert.assertNotNull(illegalStateException31);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException32);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException48);
        org.junit.Assert.assertNotNull(arithmeticException49);
        org.junit.Assert.assertNotNull(concurrentModificationException50);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable5, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray13);
        java.lang.ArithmeticException arithmeticException17 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray13);
        java.lang.Throwable[] throwableArray18 = arithmeticException17.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException19 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable2, (java.lang.Object[]) throwableArray18);
        java.lang.IllegalArgumentException illegalArgumentException20 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, (java.lang.Object[]) throwableArray18);
        java.lang.IllegalArgumentException illegalArgumentException21 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, (java.lang.Object[]) throwableArray18);
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        java.lang.Object[] objArray31 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException32 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable24, objArray31);
        java.lang.ArithmeticException arithmeticException33 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable23, objArray31);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) illegalArgumentException21, localizable22, objArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(arithmeticException17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException19);
        org.junit.Assert.assertNotNull(illegalArgumentException20);
        org.junit.Assert.assertNotNull(illegalArgumentException21);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException32);
        org.junit.Assert.assertNotNull(arithmeticException33);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        mathRuntimeException1.addSuppressed((java.lang.Throwable) concurrentModificationException14);
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException29 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, objArray28);
        java.io.EOFException eOFException30 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable20, objArray28);
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable19, objArray28);
        java.lang.ArithmeticException arithmeticException32 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable18, objArray28);
        java.lang.Throwable[] throwableArray33 = arithmeticException32.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException34 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable17, (java.lang.Object[]) throwableArray33);
        java.lang.IllegalArgumentException illegalArgumentException35 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable16, (java.lang.Object[]) throwableArray33);
        concurrentModificationException14.addSuppressed((java.lang.Throwable) illegalArgumentException35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException37 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) illegalArgumentException35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException29);
        org.junit.Assert.assertNotNull(eOFException30);
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(arithmeticException32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException34);
        org.junit.Assert.assertNotNull(illegalArgumentException35);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException15 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable3, objArray12);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray12);
        java.io.EOFException eOFException17 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException18 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) illegalArgumentException18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(illegalArgumentException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
        org.junit.Assert.assertNotNull(eOFException17);
        org.junit.Assert.assertNotNull(illegalArgumentException18);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.lang.Throwable[] throwableArray12 = concurrentModificationException11.getSuppressed();
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, (java.lang.Object[]) throwableArray12);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, (java.lang.Object[]) throwableArray12);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, (java.lang.Object[]) throwableArray12);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, (java.lang.Object[]) throwableArray12);
        java.lang.Throwable[] throwableArray17 = arrayIndexOutOfBoundsException16.getSuppressed();
        java.lang.Class<?> wildcardClass18 = throwableArray17.getClass();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray10);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException27 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable19, objArray26);
        java.io.EOFException eOFException28 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable18, objArray26);
        java.util.ConcurrentModificationException concurrentModificationException29 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable17, objArray26);
        java.util.ConcurrentModificationException concurrentModificationException30 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable16, objArray26);
        java.lang.IllegalArgumentException illegalArgumentException31 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable15, objArray26);
        concurrentModificationException14.addSuppressed((java.lang.Throwable) illegalArgumentException31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException33 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) concurrentModificationException14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException27);
        org.junit.Assert.assertNotNull(eOFException28);
        org.junit.Assert.assertNotNull(concurrentModificationException29);
        org.junit.Assert.assertNotNull(concurrentModificationException30);
        org.junit.Assert.assertNotNull(illegalArgumentException31);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.lang.Throwable[] throwableArray13 = concurrentModificationException12.getSuppressed();
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, (java.lang.Object[]) throwableArray13);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable3, (java.lang.Object[]) throwableArray13);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, (java.lang.Object[]) throwableArray13);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException29 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, objArray28);
        java.lang.Throwable[] throwableArray30 = illegalStateException29.getSuppressed();
        java.io.EOFException eOFException31 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable20, (java.lang.Object[]) throwableArray30);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException18.setContext("", (java.lang.Object) localizable20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException29);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(eOFException31);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.lang.Throwable[] throwableArray12 = concurrentModificationException11.getSuppressed();
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, (java.lang.Object[]) throwableArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, (java.lang.Object[]) throwableArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(localizable1, (java.lang.Object[]) throwableArray12);
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray27 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable21, objArray27);
        java.text.ParseException parseException29 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable20, objArray27);
        java.lang.IllegalArgumentException illegalArgumentException30 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable18, objArray27);
        java.lang.ArithmeticException arithmeticException31 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable17, objArray27);
        org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException15, localizable16, objArray27);
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        org.apache.commons.math.exception.util.Localizable localizable36 = null;
        java.lang.Object[] objArray43 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException44 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable36, objArray43);
        java.lang.ArithmeticException arithmeticException45 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable35, objArray43);
        java.util.ConcurrentModificationException concurrentModificationException46 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable34, objArray43);
        org.apache.commons.math.MathRuntimeException mathRuntimeException47 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException32, localizable33, objArray43);
        org.apache.commons.math.MathRuntimeException mathRuntimeException48 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet49 = mathRuntimeException48.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(parseException29);
        org.junit.Assert.assertNotNull(illegalArgumentException30);
        org.junit.Assert.assertNotNull(arithmeticException31);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException44);
        org.junit.Assert.assertNotNull(arithmeticException45);
        org.junit.Assert.assertNotNull(concurrentModificationException46);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.lang.Throwable[] throwableArray13 = eOFException12.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException14 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        java.lang.Object[] objArray25 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException26 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable18, objArray25);
        java.lang.ArithmeticException arithmeticException27 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable17, objArray25);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException15.addMessage(localizable16, objArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException14);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException26);
        org.junit.Assert.assertNotNull(arithmeticException27);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = mathRuntimeException18.getContext("org.apache.commons.math.MathRuntimeException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        java.lang.Object[] objArray7 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException8 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray7);
        java.lang.Throwable[] throwableArray9 = concurrentModificationException8.getSuppressed();
        java.io.EOFException eOFException10 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, (java.lang.Object[]) throwableArray9);
        java.lang.Class<?> wildcardClass11 = throwableArray9.getClass();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(eOFException10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.text.ParseException parseException16 = org.apache.commons.math.MathRuntimeException.createParseException((int) ' ', localizable2, objArray12);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException17 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException18 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) arrayIndexOutOfBoundsException17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(parseException16);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException17);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj4 = mathRuntimeException2.getContext("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        java.lang.Throwable[] throwableArray16 = noSuchElementException15.getSuppressed();
        java.io.EOFException eOFException17 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, (java.lang.Object[]) throwableArray16);
        java.lang.Class<?> wildcardClass18 = throwableArray16.getClass();
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(eOFException17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.lang.Throwable[] throwableArray13 = concurrentModificationException12.getSuppressed();
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, (java.lang.Object[]) throwableArray13);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable3, (java.lang.Object[]) throwableArray13);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, (java.lang.Object[]) throwableArray13);
        java.io.EOFException eOFException17 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, (java.lang.Object[]) throwableArray13);
        java.lang.IllegalArgumentException illegalArgumentException18 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray27 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable21, objArray27);
        java.lang.Throwable[] throwableArray29 = concurrentModificationException28.getSuppressed();
        java.util.ConcurrentModificationException concurrentModificationException30 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable20, (java.lang.Object[]) throwableArray29);
        java.lang.IllegalStateException illegalStateException31 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable19, (java.lang.Object[]) throwableArray29);
        illegalArgumentException18.addSuppressed((java.lang.Throwable) illegalStateException31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException33 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) illegalStateException31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
        org.junit.Assert.assertNotNull(eOFException17);
        org.junit.Assert.assertNotNull(illegalArgumentException18);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(concurrentModificationException30);
        org.junit.Assert.assertNotNull(illegalStateException31);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.lang.Throwable[] throwableArray13 = eOFException12.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException14 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        java.lang.Object[] objArray23 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException24 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable17, objArray23);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException15.setContext("hi!", (java.lang.Object) localizable17);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException14);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException24);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.text.ParseException parseException12 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable3, objArray10);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray10);
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, objArray10);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        java.lang.Object[] objArray25 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException26 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable18, objArray25);
        java.io.EOFException eOFException27 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable17, objArray25);
        java.lang.Throwable[] throwableArray28 = eOFException27.getSuppressed();
        java.lang.IllegalStateException illegalStateException29 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable16, (java.lang.Object[]) throwableArray28);
        java.io.EOFException eOFException30 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable15, (java.lang.Object[]) throwableArray28);
        illegalStateException14.addSuppressed((java.lang.Throwable) eOFException30);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException32 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) eOFException30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(parseException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException26);
        org.junit.Assert.assertNotNull(eOFException27);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(illegalStateException29);
        org.junit.Assert.assertNotNull(eOFException30);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException15 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, objArray11);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, objArray11);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException29 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray28);
        java.text.ParseException parseException30 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable21, objArray28);
        java.lang.IllegalArgumentException illegalArgumentException31 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable19, objArray28);
        java.util.NoSuchElementException noSuchElementException32 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable18, objArray28);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException33 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) illegalStateException16, localizable17, objArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(illegalArgumentException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException29);
        org.junit.Assert.assertNotNull(parseException30);
        org.junit.Assert.assertNotNull(illegalArgumentException31);
        org.junit.Assert.assertNotNull(noSuchElementException32);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.lang.ArithmeticException arithmeticException15 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable5, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray13);
        java.util.NoSuchElementException noSuchElementException17 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable3, objArray13);
        java.io.EOFException eOFException18 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray13);
        java.lang.ArithmeticException arithmeticException19 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray13);
        java.lang.Throwable[] throwableArray20 = arithmeticException19.getSuppressed();
        java.lang.IllegalArgumentException illegalArgumentException21 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, (java.lang.Object[]) throwableArray20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException22 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) illegalArgumentException21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(arithmeticException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(noSuchElementException17);
        org.junit.Assert.assertNotNull(eOFException18);
        org.junit.Assert.assertNotNull(arithmeticException19);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(illegalArgumentException21);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable5, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray13);
        java.lang.ArithmeticException arithmeticException17 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray13);
        java.text.ParseException parseException18 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable2, objArray13);
        java.lang.ArithmeticException arithmeticException19 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = arithmeticException19.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(arithmeticException17);
        org.junit.Assert.assertNotNull(parseException18);
        org.junit.Assert.assertNotNull(arithmeticException19);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray12);
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        java.lang.Object[] objArray31 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException32 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable24, objArray31);
        java.lang.ArithmeticException arithmeticException33 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable23, objArray31);
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray31);
        java.lang.Throwable throwable35 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable35);
        concurrentModificationException34.addSuppressed((java.lang.Throwable) mathRuntimeException36);
        java.lang.Throwable[] throwableArray38 = mathRuntimeException36.getSuppressed();
        java.text.ParseException parseException39 = org.apache.commons.math.MathRuntimeException.createParseException(0, localizable21, (java.lang.Object[]) throwableArray38);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException18.setContext("hi!", (java.lang.Object) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException32);
        org.junit.Assert.assertNotNull(arithmeticException33);
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(parseException39);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable8, objArray15);
        java.io.EOFException eOFException17 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable7, objArray15);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray15);
        java.lang.ArithmeticException arithmeticException19 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable5, objArray15);
        java.lang.Throwable[] throwableArray20 = arithmeticException19.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException21 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable4, (java.lang.Object[]) throwableArray20);
        java.lang.IllegalArgumentException illegalArgumentException22 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable3, (java.lang.Object[]) throwableArray20);
        java.lang.Throwable[] throwableArray23 = illegalArgumentException22.getSuppressed();
        java.util.NoSuchElementException noSuchElementException24 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, (java.lang.Object[]) throwableArray23);
        java.lang.IllegalArgumentException illegalArgumentException25 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, (java.lang.Object[]) throwableArray23);
        org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray23);
        org.apache.commons.math.exception.util.Localizable localizable28 = null;
        org.apache.commons.math.exception.util.Localizable localizable29 = null;
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        org.apache.commons.math.exception.util.Localizable localizable31 = null;
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        java.lang.Object[] objArray39 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException40 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable33, objArray39);
        java.lang.Throwable[] throwableArray41 = concurrentModificationException40.getSuppressed();
        java.lang.IllegalStateException illegalStateException42 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable32, (java.lang.Object[]) throwableArray41);
        java.lang.ArithmeticException arithmeticException43 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable31, (java.lang.Object[]) throwableArray41);
        java.util.NoSuchElementException noSuchElementException44 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable30, (java.lang.Object[]) throwableArray41);
        java.lang.IllegalArgumentException illegalArgumentException45 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable29, (java.lang.Object[]) throwableArray41);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException46 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable28, (java.lang.Object[]) throwableArray41);
        java.lang.Throwable[] throwableArray47 = arrayIndexOutOfBoundsException46.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException26.setContext("hi!", (java.lang.Object) throwableArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(eOFException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(arithmeticException19);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException21);
        org.junit.Assert.assertNotNull(illegalArgumentException22);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(noSuchElementException24);
        org.junit.Assert.assertNotNull(illegalArgumentException25);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException40);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(illegalStateException42);
        org.junit.Assert.assertNotNull(arithmeticException43);
        org.junit.Assert.assertNotNull(noSuchElementException44);
        org.junit.Assert.assertNotNull(illegalArgumentException45);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException46);
        org.junit.Assert.assertNotNull(throwableArray47);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray11);
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray11);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        java.lang.Object[] objArray31 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException32 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable24, objArray31);
        java.io.EOFException eOFException33 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable23, objArray31);
        java.lang.Throwable[] throwableArray34 = eOFException33.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException35 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable22, (java.lang.Object[]) throwableArray34);
        java.util.ConcurrentModificationException concurrentModificationException36 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable21, (java.lang.Object[]) throwableArray34);
        java.lang.ArithmeticException arithmeticException37 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable20, (java.lang.Object[]) throwableArray34);
        java.util.NoSuchElementException noSuchElementException38 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable19, (java.lang.Object[]) throwableArray34);
        java.util.ConcurrentModificationException concurrentModificationException39 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable18, (java.lang.Object[]) throwableArray34);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException40 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arrayIndexOutOfBoundsException16, localizable17, (java.lang.Object[]) throwableArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException32);
        org.junit.Assert.assertNotNull(eOFException33);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException35);
        org.junit.Assert.assertNotNull(concurrentModificationException36);
        org.junit.Assert.assertNotNull(arithmeticException37);
        org.junit.Assert.assertNotNull(noSuchElementException38);
        org.junit.Assert.assertNotNull(concurrentModificationException39);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, objArray11);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = arithmeticException16.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.lang.Throwable[] throwableArray10 = concurrentModificationException9.getSuppressed();
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, (java.lang.Object[]) throwableArray10);
        java.util.NoSuchElementException noSuchElementException12 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, (java.lang.Object[]) throwableArray10);
        java.lang.Class<?> wildcardClass13 = noSuchElementException12.getClass();
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(noSuchElementException12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException18 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray12);
        java.lang.Throwable[] throwableArray19 = illegalArgumentException18.getSuppressed();
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(illegalArgumentException18);
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray12);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray12);
        java.util.NoSuchElementException noSuchElementException18 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, objArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException19 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) noSuchElementException18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(noSuchElementException18);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException34 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable26, objArray33);
        java.lang.ArithmeticException arithmeticException35 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable25, objArray33);
        java.util.ConcurrentModificationException concurrentModificationException36 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable24, objArray33);
        java.util.NoSuchElementException noSuchElementException37 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable23, objArray33);
        java.util.ConcurrentModificationException concurrentModificationException38 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray33);
        org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException(localizable21, objArray33);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException40 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable20, objArray33);
        java.text.ParseException parseException41 = org.apache.commons.math.MathRuntimeException.createParseException((int) (short) -1, localizable19, objArray33);
        org.apache.commons.math.MathRuntimeException mathRuntimeException42 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException16, localizable17, objArray33);
        java.lang.String str43 = mathRuntimeException42.toString();
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException34);
        org.junit.Assert.assertNotNull(arithmeticException35);
        org.junit.Assert.assertNotNull(concurrentModificationException36);
        org.junit.Assert.assertNotNull(noSuchElementException37);
        org.junit.Assert.assertNotNull(concurrentModificationException38);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException40);
        org.junit.Assert.assertNotNull(parseException41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.apache.commons.math.MathRuntimeException: " + "'", str43, "org.apache.commons.math.MathRuntimeException: ");
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable7, objArray14);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable6, objArray14);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray14);
        java.util.NoSuchElementException noSuchElementException18 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable4, objArray14);
        java.io.EOFException eOFException19 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray14);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException20 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable2, objArray14);
        java.io.EOFException eOFException21 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray14);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = mathRuntimeException22.getContext("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(noSuchElementException18);
        org.junit.Assert.assertNotNull(eOFException19);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException20);
        org.junit.Assert.assertNotNull(eOFException21);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        java.lang.Object[] objArray7 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException8 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray7);
        java.lang.IllegalArgumentException illegalArgumentException9 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = illegalArgumentException9.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException8);
        org.junit.Assert.assertNotNull(illegalArgumentException9);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        org.apache.commons.math.exception.util.Localizable localizable9 = null;
        org.apache.commons.math.exception.util.Localizable localizable10 = null;
        java.lang.Object[] objArray17 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException18 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable10, objArray17);
        java.lang.ArithmeticException arithmeticException19 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable9, objArray17);
        java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable8, objArray17);
        java.util.NoSuchElementException noSuchElementException21 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable7, objArray17);
        java.util.ConcurrentModificationException concurrentModificationException22 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray17);
        java.lang.IllegalArgumentException illegalArgumentException23 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable5, objArray17);
        java.util.ConcurrentModificationException concurrentModificationException24 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray17);
        org.apache.commons.math.MathRuntimeException mathRuntimeException25 = new org.apache.commons.math.MathRuntimeException(localizable3, objArray17);
        java.text.ParseException parseException26 = org.apache.commons.math.MathRuntimeException.createParseException((int) ' ', localizable2, objArray17);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException27 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray17);
        org.apache.commons.math.exception.util.Localizable localizable28 = null;
        org.apache.commons.math.exception.util.Localizable localizable29 = null;
        org.apache.commons.math.exception.util.Localizable localizable31 = null;
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        org.apache.commons.math.exception.util.Localizable localizable36 = null;
        org.apache.commons.math.exception.util.Localizable localizable37 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException45 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable37, objArray44);
        java.io.EOFException eOFException46 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable36, objArray44);
        java.util.ConcurrentModificationException concurrentModificationException47 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable35, objArray44);
        java.lang.ArithmeticException arithmeticException48 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable34, objArray44);
        java.lang.Throwable[] throwableArray49 = arithmeticException48.getSuppressed();
        java.text.ParseException parseException50 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable33, (java.lang.Object[]) throwableArray49);
        java.text.ParseException parseException51 = org.apache.commons.math.MathRuntimeException.createParseException((int) (byte) 0, localizable31, (java.lang.Object[]) throwableArray49);
        java.util.ConcurrentModificationException concurrentModificationException52 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable29, (java.lang.Object[]) throwableArray49);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException53 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arrayIndexOutOfBoundsException27, localizable28, (java.lang.Object[]) throwableArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException18);
        org.junit.Assert.assertNotNull(arithmeticException19);
        org.junit.Assert.assertNotNull(concurrentModificationException20);
        org.junit.Assert.assertNotNull(noSuchElementException21);
        org.junit.Assert.assertNotNull(concurrentModificationException22);
        org.junit.Assert.assertNotNull(illegalArgumentException23);
        org.junit.Assert.assertNotNull(concurrentModificationException24);
        org.junit.Assert.assertNotNull(parseException26);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException27);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException45);
        org.junit.Assert.assertNotNull(eOFException46);
        org.junit.Assert.assertNotNull(concurrentModificationException47);
        org.junit.Assert.assertNotNull(arithmeticException48);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(parseException50);
        org.junit.Assert.assertNotNull(parseException51);
        org.junit.Assert.assertNotNull(concurrentModificationException52);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable3, objArray12);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable2, objArray12);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException17 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray12);
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        org.apache.commons.math.exception.util.Localizable localizable28 = null;
        org.apache.commons.math.exception.util.Localizable localizable29 = null;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException36 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable29, objArray35);
        java.text.ParseException parseException37 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable28, objArray35);
        java.io.EOFException eOFException38 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable26, objArray35);
        java.lang.IllegalStateException illegalStateException39 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable25, objArray35);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException40 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable24, objArray35);
        java.util.ConcurrentModificationException concurrentModificationException41 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable23, objArray35);
        java.lang.ArithmeticException arithmeticException42 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable22, objArray35);
        java.lang.ArithmeticException arithmeticException43 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable21, objArray35);
        java.util.NoSuchElementException noSuchElementException44 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable20, objArray35);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException45 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) concurrentModificationException18, localizable19, objArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException36);
        org.junit.Assert.assertNotNull(parseException37);
        org.junit.Assert.assertNotNull(eOFException38);
        org.junit.Assert.assertNotNull(illegalStateException39);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException40);
        org.junit.Assert.assertNotNull(concurrentModificationException41);
        org.junit.Assert.assertNotNull(arithmeticException42);
        org.junit.Assert.assertNotNull(arithmeticException43);
        org.junit.Assert.assertNotNull(noSuchElementException44);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray3 = new java.lang.Object[] {};
        org.apache.commons.math.MathRuntimeException mathRuntimeException4 = new org.apache.commons.math.MathRuntimeException(localizable2, objArray3);
        java.util.NoSuchElementException noSuchElementException5 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray3);
        java.io.EOFException eOFException6 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, objArray3);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException7 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) eOFException6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(noSuchElementException5);
        org.junit.Assert.assertNotNull(eOFException6);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray11);
        java.lang.Throwable[] throwableArray14 = eOFException13.getSuppressed();
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray14);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, (java.lang.Object[]) throwableArray14);
        java.lang.ArithmeticException arithmeticException17 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray27 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable21, objArray27);
        java.lang.Throwable[] throwableArray29 = concurrentModificationException28.getSuppressed();
        java.lang.IllegalStateException illegalStateException30 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable20, (java.lang.Object[]) throwableArray29);
        java.util.NoSuchElementException noSuchElementException31 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable19, (java.lang.Object[]) throwableArray29);
        java.lang.IllegalArgumentException illegalArgumentException32 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable18, (java.lang.Object[]) throwableArray29);
        arithmeticException17.addSuppressed((java.lang.Throwable) illegalArgumentException32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException34 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) arithmeticException17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
        org.junit.Assert.assertNotNull(arithmeticException17);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(illegalStateException30);
        org.junit.Assert.assertNotNull(noSuchElementException31);
        org.junit.Assert.assertNotNull(illegalArgumentException32);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.text.ParseException parseException11 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable2, objArray9);
        java.util.NoSuchElementException noSuchElementException12 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, objArray9);
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        java.lang.Object[] objArray23 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException24 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable16, objArray23);
        java.lang.ArithmeticException arithmeticException25 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable15, objArray23);
        java.util.ConcurrentModificationException concurrentModificationException26 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable14, objArray23);
        org.apache.commons.math.MathRuntimeException mathRuntimeException27 = new org.apache.commons.math.MathRuntimeException(localizable13, objArray23);
        noSuchElementException12.addSuppressed((java.lang.Throwable) mathRuntimeException27);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException29 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) noSuchElementException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(parseException11);
        org.junit.Assert.assertNotNull(noSuchElementException12);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException24);
        org.junit.Assert.assertNotNull(arithmeticException25);
        org.junit.Assert.assertNotNull(concurrentModificationException26);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(localizable1, objArray12);
        java.lang.IllegalStateException illegalStateException18 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, objArray12);
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable24, objArray30);
        java.text.ParseException parseException32 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable23, objArray30);
        java.util.NoSuchElementException noSuchElementException33 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable21, objArray30);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException34 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable20, objArray30);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException35 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable19, objArray30);
        org.apache.commons.math.exception.util.Localizable localizable36 = null;
        org.apache.commons.math.exception.util.Localizable localizable38 = null;
        org.apache.commons.math.exception.util.Localizable localizable40 = null;
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        org.apache.commons.math.exception.util.Localizable localizable42 = null;
        org.apache.commons.math.exception.util.Localizable localizable43 = null;
        org.apache.commons.math.exception.util.Localizable localizable44 = null;
        java.lang.Object[] objArray51 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException52 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable44, objArray51);
        java.io.EOFException eOFException53 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable43, objArray51);
        java.util.ConcurrentModificationException concurrentModificationException54 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable42, objArray51);
        java.lang.ArithmeticException arithmeticException55 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable41, objArray51);
        java.lang.Throwable[] throwableArray56 = arithmeticException55.getSuppressed();
        java.text.ParseException parseException57 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable40, (java.lang.Object[]) throwableArray56);
        java.text.ParseException parseException58 = org.apache.commons.math.MathRuntimeException.createParseException((int) (byte) 0, localizable38, (java.lang.Object[]) throwableArray56);
        java.util.NoSuchElementException noSuchElementException59 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable36, (java.lang.Object[]) throwableArray56);
        arrayIndexOutOfBoundsException35.addSuppressed((java.lang.Throwable) noSuchElementException59);
        java.lang.Throwable[] throwableArray61 = arrayIndexOutOfBoundsException35.getSuppressed();
        illegalStateException18.addSuppressed((java.lang.Throwable) arrayIndexOutOfBoundsException35);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException63 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) illegalStateException18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
        org.junit.Assert.assertNotNull(illegalStateException18);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(parseException32);
        org.junit.Assert.assertNotNull(noSuchElementException33);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException34);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException35);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException52);
        org.junit.Assert.assertNotNull(eOFException53);
        org.junit.Assert.assertNotNull(concurrentModificationException54);
        org.junit.Assert.assertNotNull(arithmeticException55);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(parseException57);
        org.junit.Assert.assertNotNull(parseException58);
        org.junit.Assert.assertNotNull(noSuchElementException59);
        org.junit.Assert.assertNotNull(throwableArray61);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(localizable1, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = mathRuntimeException18.getContext("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.lang.ArithmeticException arithmeticException15 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable5, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray13);
        java.util.NoSuchElementException noSuchElementException17 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable3, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException19 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray13);
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable27, objArray33);
        java.text.ParseException parseException35 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable26, objArray33);
        java.lang.IllegalStateException illegalStateException36 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable24, objArray33);
        java.lang.IllegalArgumentException illegalArgumentException37 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable23, objArray33);
        java.lang.IllegalArgumentException illegalArgumentException38 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable22, objArray33);
        org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException(localizable21, objArray33);
        concurrentModificationException20.addSuppressed((java.lang.Throwable) mathRuntimeException39);
        java.lang.Throwable[] throwableArray41 = mathRuntimeException39.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = mathRuntimeException39.getContext("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(arithmeticException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(noSuchElementException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(illegalArgumentException19);
        org.junit.Assert.assertNotNull(concurrentModificationException20);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertNotNull(parseException35);
        org.junit.Assert.assertNotNull(illegalStateException36);
        org.junit.Assert.assertNotNull(illegalArgumentException37);
        org.junit.Assert.assertNotNull(illegalArgumentException38);
        org.junit.Assert.assertNotNull(throwableArray41);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet3 = mathRuntimeException2.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        org.apache.commons.math.exception.util.Localizable localizable9 = null;
        java.lang.Object[] objArray16 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException17 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable9, objArray16);
        java.lang.ArithmeticException arithmeticException18 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable8, objArray16);
        java.util.ConcurrentModificationException concurrentModificationException19 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable7, objArray16);
        java.util.NoSuchElementException noSuchElementException20 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable6, objArray16);
        java.util.ConcurrentModificationException concurrentModificationException21 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray16);
        java.lang.IllegalArgumentException illegalArgumentException22 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable4, objArray16);
        java.io.EOFException eOFException23 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray16);
        java.text.ParseException parseException24 = org.apache.commons.math.MathRuntimeException.createParseException((int) (short) 100, localizable2, objArray16);
        java.lang.IllegalStateException illegalStateException25 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, objArray16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) illegalStateException25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException17);
        org.junit.Assert.assertNotNull(arithmeticException18);
        org.junit.Assert.assertNotNull(concurrentModificationException19);
        org.junit.Assert.assertNotNull(noSuchElementException20);
        org.junit.Assert.assertNotNull(concurrentModificationException21);
        org.junit.Assert.assertNotNull(illegalArgumentException22);
        org.junit.Assert.assertNotNull(eOFException23);
        org.junit.Assert.assertNotNull(parseException24);
        org.junit.Assert.assertNotNull(illegalStateException25);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray12);
        java.lang.ArithmeticException arithmeticException17 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray12);
        java.util.NoSuchElementException noSuchElementException18 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, objArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException19 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) noSuchElementException18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
        org.junit.Assert.assertNotNull(arithmeticException17);
        org.junit.Assert.assertNotNull(noSuchElementException18);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = new java.lang.Object[] {};
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet3 = mathRuntimeException2.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, objArray12);
        java.lang.Throwable[] throwableArray15 = eOFException14.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable3, (java.lang.Object[]) throwableArray15);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, (java.lang.Object[]) throwableArray15);
        java.lang.ArithmeticException arithmeticException18 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray15);
        java.lang.Throwable[] throwableArray19 = arithmeticException18.getSuppressed();
        org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray19);
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        java.lang.Object[] objArray31 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException32 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable25, objArray31);
        java.lang.IllegalArgumentException illegalArgumentException33 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable24, objArray31);
        java.lang.ArithmeticException arithmeticException34 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable23, objArray31);
        java.util.ConcurrentModificationException concurrentModificationException35 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray31);
        org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException20, localizable21, objArray31);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet37 = mathRuntimeException20.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(arithmeticException18);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException32);
        org.junit.Assert.assertNotNull(illegalArgumentException33);
        org.junit.Assert.assertNotNull(arithmeticException34);
        org.junit.Assert.assertNotNull(concurrentModificationException35);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable3, objArray12);
        java.text.ParseException parseException16 = org.apache.commons.math.MathRuntimeException.createParseException(100, localizable2, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = mathRuntimeException17.getContext("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(parseException16);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = new java.lang.Object[] {};
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray1);
        org.apache.commons.math.MathRuntimeException mathRuntimeException3 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException2);
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        org.apache.commons.math.exception.util.Localizable localizable9 = null;
        org.apache.commons.math.exception.util.Localizable localizable10 = null;
        org.apache.commons.math.exception.util.Localizable localizable12 = null;
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        java.lang.Object[] objArray19 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable13, objArray19);
        java.text.ParseException parseException21 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable12, objArray19);
        java.lang.IllegalStateException illegalStateException22 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable10, objArray19);
        java.lang.IllegalArgumentException illegalArgumentException23 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable9, objArray19);
        java.lang.IllegalArgumentException illegalArgumentException24 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable8, objArray19);
        org.apache.commons.math.MathRuntimeException mathRuntimeException25 = new org.apache.commons.math.MathRuntimeException(localizable7, objArray19);
        java.text.ParseException parseException26 = org.apache.commons.math.MathRuntimeException.createParseException((int) (short) 10, localizable6, objArray19);
        java.lang.Class<?> wildcardClass27 = objArray19.getClass();
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException2.setContext("", (java.lang.Object) objArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException20);
        org.junit.Assert.assertNotNull(parseException21);
        org.junit.Assert.assertNotNull(illegalStateException22);
        org.junit.Assert.assertNotNull(illegalArgumentException23);
        org.junit.Assert.assertNotNull(illegalArgumentException24);
        org.junit.Assert.assertNotNull(parseException26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable5, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray13);
        java.lang.ArithmeticException arithmeticException17 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray13);
        java.lang.Throwable[] throwableArray18 = arithmeticException17.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException19 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable2, (java.lang.Object[]) throwableArray18);
        java.lang.IllegalArgumentException illegalArgumentException20 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, (java.lang.Object[]) throwableArray18);
        java.lang.Throwable[] throwableArray21 = illegalArgumentException20.getSuppressed();
        java.util.NoSuchElementException noSuchElementException22 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, (java.lang.Object[]) throwableArray21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException23 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) noSuchElementException22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(arithmeticException17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException19);
        org.junit.Assert.assertNotNull(illegalArgumentException20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(noSuchElementException22);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.lang.Throwable[] throwableArray12 = concurrentModificationException11.getSuppressed();
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, (java.lang.Object[]) throwableArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, (java.lang.Object[]) throwableArray12);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, (java.lang.Object[]) throwableArray12);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, (java.lang.Object[]) throwableArray12);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray27 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException28 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable20, objArray27);
        java.io.EOFException eOFException29 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable19, objArray27);
        java.util.ConcurrentModificationException concurrentModificationException30 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable18, objArray27);
        java.lang.ArithmeticException arithmeticException31 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable17, objArray27);
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        java.lang.Object[] objArray42 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException43 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable35, objArray42);
        java.lang.ArithmeticException arithmeticException44 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable34, objArray42);
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable33, objArray42);
        java.util.NoSuchElementException noSuchElementException46 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable32, objArray42);
        arithmeticException31.addSuppressed((java.lang.Throwable) noSuchElementException46);
        arrayIndexOutOfBoundsException16.addSuppressed((java.lang.Throwable) noSuchElementException46);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) noSuchElementException46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException28);
        org.junit.Assert.assertNotNull(eOFException29);
        org.junit.Assert.assertNotNull(concurrentModificationException30);
        org.junit.Assert.assertNotNull(arithmeticException31);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException43);
        org.junit.Assert.assertNotNull(arithmeticException44);
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertNotNull(noSuchElementException46);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable7, objArray14);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable6, objArray14);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray14);
        java.util.NoSuchElementException noSuchElementException18 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable4, objArray14);
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException(localizable3, objArray14);
        java.lang.Throwable[] throwableArray20 = mathRuntimeException19.getSuppressed();
        java.util.ConcurrentModificationException concurrentModificationException21 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, (java.lang.Object[]) throwableArray20);
        java.text.ParseException parseException22 = org.apache.commons.math.MathRuntimeException.createParseException(100, localizable1, (java.lang.Object[]) throwableArray20);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(noSuchElementException18);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(concurrentModificationException21);
        org.junit.Assert.assertNotNull(parseException22);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        org.apache.commons.math.exception.util.Localizable localizable9 = null;
        org.apache.commons.math.exception.util.Localizable localizable10 = null;
        java.lang.Object[] objArray17 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException18 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable10, objArray17);
        java.lang.ArithmeticException arithmeticException19 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable9, objArray17);
        java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable8, objArray17);
        java.util.NoSuchElementException noSuchElementException21 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable7, objArray17);
        java.util.ConcurrentModificationException concurrentModificationException22 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray17);
        java.lang.IllegalArgumentException illegalArgumentException23 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable5, objArray17);
        java.util.ConcurrentModificationException concurrentModificationException24 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray17);
        org.apache.commons.math.MathRuntimeException mathRuntimeException25 = new org.apache.commons.math.MathRuntimeException(localizable3, objArray17);
        java.text.ParseException parseException26 = org.apache.commons.math.MathRuntimeException.createParseException((int) ' ', localizable2, objArray17);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException27 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray17);
        org.apache.commons.math.exception.util.Localizable localizable28 = null;
        org.apache.commons.math.exception.util.Localizable localizable29 = null;
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        org.apache.commons.math.exception.util.Localizable localizable31 = null;
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        java.lang.Object[] objArray39 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException40 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable32, objArray39);
        java.io.EOFException eOFException41 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable31, objArray39);
        java.util.ConcurrentModificationException concurrentModificationException42 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable30, objArray39);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException43 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable29, objArray39);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException44 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arrayIndexOutOfBoundsException27, localizable28, objArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException18);
        org.junit.Assert.assertNotNull(arithmeticException19);
        org.junit.Assert.assertNotNull(concurrentModificationException20);
        org.junit.Assert.assertNotNull(noSuchElementException21);
        org.junit.Assert.assertNotNull(concurrentModificationException22);
        org.junit.Assert.assertNotNull(illegalArgumentException23);
        org.junit.Assert.assertNotNull(concurrentModificationException24);
        org.junit.Assert.assertNotNull(parseException26);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException27);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException40);
        org.junit.Assert.assertNotNull(eOFException41);
        org.junit.Assert.assertNotNull(concurrentModificationException42);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException43);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray12);
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        java.lang.Object[] objArray31 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException32 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable24, objArray31);
        java.lang.ArithmeticException arithmeticException33 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable23, objArray31);
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray31);
        java.util.NoSuchElementException noSuchElementException35 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable21, objArray31);
        org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(localizable20, objArray31);
        java.lang.Class<?> wildcardClass37 = objArray31.getClass();
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException18.setContext("", (java.lang.Object) wildcardClass37);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException32);
        org.junit.Assert.assertNotNull(arithmeticException33);
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertNotNull(noSuchElementException35);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(localizable1, objArray12);
        java.lang.IllegalStateException illegalStateException18 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, objArray12);
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable24, objArray30);
        java.text.ParseException parseException32 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable23, objArray30);
        java.util.NoSuchElementException noSuchElementException33 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable21, objArray30);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException34 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable20, objArray30);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException35 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable19, objArray30);
        org.apache.commons.math.exception.util.Localizable localizable36 = null;
        org.apache.commons.math.exception.util.Localizable localizable38 = null;
        org.apache.commons.math.exception.util.Localizable localizable40 = null;
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        org.apache.commons.math.exception.util.Localizable localizable42 = null;
        org.apache.commons.math.exception.util.Localizable localizable43 = null;
        org.apache.commons.math.exception.util.Localizable localizable44 = null;
        java.lang.Object[] objArray51 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException52 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable44, objArray51);
        java.io.EOFException eOFException53 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable43, objArray51);
        java.util.ConcurrentModificationException concurrentModificationException54 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable42, objArray51);
        java.lang.ArithmeticException arithmeticException55 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable41, objArray51);
        java.lang.Throwable[] throwableArray56 = arithmeticException55.getSuppressed();
        java.text.ParseException parseException57 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable40, (java.lang.Object[]) throwableArray56);
        java.text.ParseException parseException58 = org.apache.commons.math.MathRuntimeException.createParseException((int) (byte) 0, localizable38, (java.lang.Object[]) throwableArray56);
        java.util.NoSuchElementException noSuchElementException59 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable36, (java.lang.Object[]) throwableArray56);
        arrayIndexOutOfBoundsException35.addSuppressed((java.lang.Throwable) noSuchElementException59);
        java.lang.Throwable[] throwableArray61 = arrayIndexOutOfBoundsException35.getSuppressed();
        illegalStateException18.addSuppressed((java.lang.Throwable) arrayIndexOutOfBoundsException35);
        org.apache.commons.math.exception.util.Localizable localizable63 = null;
        org.apache.commons.math.exception.util.Localizable localizable64 = null;
        org.apache.commons.math.exception.util.Localizable localizable65 = null;
        java.lang.Object[] objArray71 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException72 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable65, objArray71);
        java.lang.Throwable[] throwableArray73 = concurrentModificationException72.getSuppressed();
        java.lang.IllegalStateException illegalStateException74 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable64, (java.lang.Object[]) throwableArray73);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException75 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable63, (java.lang.Object[]) throwableArray73);
        illegalStateException18.addSuppressed((java.lang.Throwable) arrayIndexOutOfBoundsException75);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
        org.junit.Assert.assertNotNull(illegalStateException18);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(parseException32);
        org.junit.Assert.assertNotNull(noSuchElementException33);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException34);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException35);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException52);
        org.junit.Assert.assertNotNull(eOFException53);
        org.junit.Assert.assertNotNull(concurrentModificationException54);
        org.junit.Assert.assertNotNull(arithmeticException55);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(parseException57);
        org.junit.Assert.assertNotNull(parseException58);
        org.junit.Assert.assertNotNull(noSuchElementException59);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException72);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(illegalStateException74);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException75);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.lang.ArithmeticException arithmeticException15 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable5, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray13);
        java.util.NoSuchElementException noSuchElementException17 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable3, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException19 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray13);
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable27, objArray33);
        java.text.ParseException parseException35 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable26, objArray33);
        java.lang.IllegalStateException illegalStateException36 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable24, objArray33);
        java.lang.IllegalArgumentException illegalArgumentException37 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable23, objArray33);
        java.lang.IllegalArgumentException illegalArgumentException38 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable22, objArray33);
        org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException(localizable21, objArray33);
        concurrentModificationException20.addSuppressed((java.lang.Throwable) mathRuntimeException39);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = mathRuntimeException39.getContext("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(arithmeticException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(noSuchElementException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(illegalArgumentException19);
        org.junit.Assert.assertNotNull(concurrentModificationException20);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertNotNull(parseException35);
        org.junit.Assert.assertNotNull(illegalStateException36);
        org.junit.Assert.assertNotNull(illegalArgumentException37);
        org.junit.Assert.assertNotNull(illegalArgumentException38);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable7, objArray13);
        java.text.ParseException parseException15 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable6, objArray13);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray13);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException17 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable3, objArray13);
        java.util.NoSuchElementException noSuchElementException18 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray13);
        java.text.ParseException parseException19 = org.apache.commons.math.MathRuntimeException.createParseException(0, localizable1, objArray13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException20 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) parseException19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(parseException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException17);
        org.junit.Assert.assertNotNull(noSuchElementException18);
        org.junit.Assert.assertNotNull(parseException19);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray9);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable13);
        concurrentModificationException12.addSuppressed((java.lang.Throwable) mathRuntimeException14);
        java.lang.Throwable[] throwableArray16 = mathRuntimeException14.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException17 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) mathRuntimeException14);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(throwableArray16);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.util.NoSuchElementException noSuchElementException14 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray11);
        java.text.ParseException parseException15 = org.apache.commons.math.MathRuntimeException.createParseException(100, localizable1, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = parseException15.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(noSuchElementException14);
        org.junit.Assert.assertNotNull(parseException15);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        org.apache.commons.math.exception.util.Localizable localizable9 = null;
        java.lang.Object[] objArray15 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable9, objArray15);
        java.text.ParseException parseException17 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable8, objArray15);
        java.io.EOFException eOFException18 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable6, objArray15);
        java.lang.IllegalStateException illegalStateException19 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray15);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException20 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable4, objArray15);
        java.util.ConcurrentModificationException concurrentModificationException21 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray15);
        java.lang.ArithmeticException arithmeticException22 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray15);
        java.lang.ArithmeticException arithmeticException23 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray15);
        java.lang.IllegalStateException illegalStateException24 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, objArray15);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException25 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) illegalStateException24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(parseException17);
        org.junit.Assert.assertNotNull(eOFException18);
        org.junit.Assert.assertNotNull(illegalStateException19);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException20);
        org.junit.Assert.assertNotNull(concurrentModificationException21);
        org.junit.Assert.assertNotNull(arithmeticException22);
        org.junit.Assert.assertNotNull(arithmeticException23);
        org.junit.Assert.assertNotNull(illegalStateException24);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.lang.Throwable[] throwableArray10 = concurrentModificationException9.getSuppressed();
        java.io.EOFException eOFException11 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, (java.lang.Object[]) throwableArray10);
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        java.lang.Object[] objArray24 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException25 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable17, objArray24);
        java.lang.ArithmeticException arithmeticException26 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, objArray24);
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable15, objArray24);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException28 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable14, objArray24);
        java.io.EOFException eOFException29 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable13, objArray24);
        illegalStateException12.addSuppressed((java.lang.Throwable) eOFException29);
        org.apache.commons.math.exception.util.Localizable localizable31 = null;
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        org.apache.commons.math.exception.util.Localizable localizable36 = null;
        java.lang.Object[] objArray42 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException43 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable36, objArray42);
        java.lang.Throwable[] throwableArray44 = concurrentModificationException43.getSuppressed();
        java.lang.IllegalStateException illegalStateException45 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable35, (java.lang.Object[]) throwableArray44);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException46 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable34, (java.lang.Object[]) throwableArray44);
        java.lang.ArithmeticException arithmeticException47 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable33, (java.lang.Object[]) throwableArray44);
        java.lang.IllegalArgumentException illegalArgumentException48 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable32, (java.lang.Object[]) throwableArray44);
        org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(localizable31, (java.lang.Object[]) throwableArray44);
        eOFException29.addSuppressed((java.lang.Throwable) mathRuntimeException49);
        org.apache.commons.math.exception.util.Localizable localizable52 = null;
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        org.apache.commons.math.exception.util.Localizable localizable54 = null;
        org.apache.commons.math.exception.util.Localizable localizable55 = null;
        org.apache.commons.math.exception.util.Localizable localizable56 = null;
        java.lang.Object[] objArray63 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException64 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable56, objArray63);
        java.io.EOFException eOFException65 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable55, objArray63);
        java.lang.Throwable[] throwableArray66 = eOFException65.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException67 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable54, (java.lang.Object[]) throwableArray66);
        java.util.ConcurrentModificationException concurrentModificationException68 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable53, (java.lang.Object[]) throwableArray66);
        java.util.ConcurrentModificationException concurrentModificationException69 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable52, (java.lang.Object[]) throwableArray66);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException49.setContext("org.apache.commons.math.MathRuntimeException: ", (java.lang.Object) localizable52);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(eOFException11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException25);
        org.junit.Assert.assertNotNull(arithmeticException26);
        org.junit.Assert.assertNotNull(concurrentModificationException27);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException28);
        org.junit.Assert.assertNotNull(eOFException29);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException43);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(illegalStateException45);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException46);
        org.junit.Assert.assertNotNull(arithmeticException47);
        org.junit.Assert.assertNotNull(illegalArgumentException48);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException64);
        org.junit.Assert.assertNotNull(eOFException65);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException67);
        org.junit.Assert.assertNotNull(concurrentModificationException68);
        org.junit.Assert.assertNotNull(concurrentModificationException69);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) mathRuntimeException16);
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException29 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray28);
        java.lang.Throwable[] throwableArray30 = concurrentModificationException29.getSuppressed();
        java.lang.IllegalStateException illegalStateException31 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, (java.lang.Object[]) throwableArray30);
        java.util.NoSuchElementException noSuchElementException32 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable20, (java.lang.Object[]) throwableArray30);
        java.util.NoSuchElementException noSuchElementException33 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable19, (java.lang.Object[]) throwableArray30);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException16.setContext("hi!", (java.lang.Object) throwableArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException29);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(illegalStateException31);
        org.junit.Assert.assertNotNull(noSuchElementException32);
        org.junit.Assert.assertNotNull(noSuchElementException33);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray12);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray12);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException17 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray12);
        java.lang.Throwable[] throwableArray19 = concurrentModificationException18.getSuppressed();
        java.lang.Class<?> wildcardClass20 = concurrentModificationException18.getClass();
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray12);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray12);
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray27 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable21, objArray27);
        java.lang.IllegalStateException illegalStateException29 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable20, objArray27);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException18.setContext("", (java.lang.Object) localizable20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(illegalStateException29);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = mathRuntimeException16.getContext("org.apache.commons.math.MathRuntimeException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray11);
        java.lang.Throwable[] throwableArray14 = eOFException13.getSuppressed();
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray14);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, (java.lang.Object[]) throwableArray14);
        java.lang.ArithmeticException arithmeticException17 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException34 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable26, objArray33);
        java.io.EOFException eOFException35 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable25, objArray33);
        java.lang.Throwable[] throwableArray36 = eOFException35.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException37 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable24, (java.lang.Object[]) throwableArray36);
        java.util.ConcurrentModificationException concurrentModificationException38 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable23, (java.lang.Object[]) throwableArray36);
        java.lang.ArithmeticException arithmeticException39 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable22, (java.lang.Object[]) throwableArray36);
        java.lang.Throwable[] throwableArray40 = arithmeticException39.getSuppressed();
        org.apache.commons.math.MathRuntimeException mathRuntimeException41 = new org.apache.commons.math.MathRuntimeException(localizable21, (java.lang.Object[]) throwableArray40);
        java.text.ParseException parseException42 = org.apache.commons.math.MathRuntimeException.createParseException((int) 'a', localizable20, (java.lang.Object[]) throwableArray40);
        java.lang.ArithmeticException arithmeticException43 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable18, (java.lang.Object[]) throwableArray40);
        arithmeticException17.addSuppressed((java.lang.Throwable) arithmeticException43);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
        org.junit.Assert.assertNotNull(arithmeticException17);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException34);
        org.junit.Assert.assertNotNull(eOFException35);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException37);
        org.junit.Assert.assertNotNull(concurrentModificationException38);
        org.junit.Assert.assertNotNull(arithmeticException39);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(parseException42);
        org.junit.Assert.assertNotNull(arithmeticException43);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException14 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, (java.lang.Object[]) throwableArray11);
        java.lang.Class<?> wildcardClass15 = arrayIndexOutOfBoundsException14.getClass();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.lang.Throwable[] throwableArray10 = concurrentModificationException9.getSuppressed();
        java.io.EOFException eOFException11 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, (java.lang.Object[]) throwableArray10);
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        java.lang.Object[] objArray24 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException25 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable17, objArray24);
        java.lang.ArithmeticException arithmeticException26 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, objArray24);
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable15, objArray24);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException28 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable14, objArray24);
        java.io.EOFException eOFException29 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable13, objArray24);
        illegalStateException12.addSuppressed((java.lang.Throwable) eOFException29);
        org.apache.commons.math.exception.util.Localizable localizable31 = null;
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        org.apache.commons.math.exception.util.Localizable localizable36 = null;
        java.lang.Object[] objArray42 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException43 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable36, objArray42);
        java.lang.Throwable[] throwableArray44 = concurrentModificationException43.getSuppressed();
        java.lang.IllegalStateException illegalStateException45 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable35, (java.lang.Object[]) throwableArray44);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException46 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable34, (java.lang.Object[]) throwableArray44);
        java.lang.ArithmeticException arithmeticException47 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable33, (java.lang.Object[]) throwableArray44);
        java.lang.IllegalArgumentException illegalArgumentException48 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable32, (java.lang.Object[]) throwableArray44);
        org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(localizable31, (java.lang.Object[]) throwableArray44);
        eOFException29.addSuppressed((java.lang.Throwable) mathRuntimeException49);
        java.lang.String str51 = mathRuntimeException49.toString();
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(eOFException11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException25);
        org.junit.Assert.assertNotNull(arithmeticException26);
        org.junit.Assert.assertNotNull(concurrentModificationException27);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException28);
        org.junit.Assert.assertNotNull(eOFException29);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException43);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(illegalStateException45);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException46);
        org.junit.Assert.assertNotNull(arithmeticException47);
        org.junit.Assert.assertNotNull(illegalArgumentException48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org.apache.commons.math.MathRuntimeException: " + "'", str51, "org.apache.commons.math.MathRuntimeException: ");
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = new java.lang.Object[] {};
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray1);
        org.apache.commons.math.MathRuntimeException mathRuntimeException3 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException2);
        java.lang.Throwable[] throwableArray4 = mathRuntimeException2.getSuppressed();
        java.lang.Class<?> wildcardClass5 = mathRuntimeException2.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray12);
        java.lang.Throwable[] throwableArray17 = noSuchElementException16.getSuppressed();
        java.lang.Throwable[] throwableArray18 = noSuchElementException16.getSuppressed();
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException(throwable0, localizable1, (java.lang.Object[]) throwableArray18);
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        java.lang.Object[] objArray31 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException32 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable24, objArray31);
        java.io.EOFException eOFException33 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable23, objArray31);
        java.lang.Throwable[] throwableArray34 = eOFException33.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException35 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable22, (java.lang.Object[]) throwableArray34);
        java.util.ConcurrentModificationException concurrentModificationException36 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable21, (java.lang.Object[]) throwableArray34);
        java.lang.ArithmeticException arithmeticException37 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable20, (java.lang.Object[]) throwableArray34);
        java.lang.Throwable[] throwableArray38 = arithmeticException37.getSuppressed();
        mathRuntimeException19.addSuppressed((java.lang.Throwable) arithmeticException37);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet40 = mathRuntimeException19.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException32);
        org.junit.Assert.assertNotNull(eOFException33);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException35);
        org.junit.Assert.assertNotNull(concurrentModificationException36);
        org.junit.Assert.assertNotNull(arithmeticException37);
        org.junit.Assert.assertNotNull(throwableArray38);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.text.ParseException parseException12 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable3, objArray10);
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray10);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException14 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = arrayIndexOutOfBoundsException14.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(parseException12);
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException14);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray11);
        java.lang.Throwable[] throwableArray14 = eOFException13.getSuppressed();
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray14);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, (java.lang.Object[]) throwableArray14);
        java.lang.ArithmeticException arithmeticException17 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray27 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable21, objArray27);
        java.lang.Throwable[] throwableArray29 = concurrentModificationException28.getSuppressed();
        java.lang.IllegalStateException illegalStateException30 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable20, (java.lang.Object[]) throwableArray29);
        java.util.NoSuchElementException noSuchElementException31 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable19, (java.lang.Object[]) throwableArray29);
        java.lang.IllegalArgumentException illegalArgumentException32 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable18, (java.lang.Object[]) throwableArray29);
        arithmeticException17.addSuppressed((java.lang.Throwable) illegalArgumentException32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException34 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) illegalArgumentException32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
        org.junit.Assert.assertNotNull(arithmeticException17);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(illegalStateException30);
        org.junit.Assert.assertNotNull(noSuchElementException31);
        org.junit.Assert.assertNotNull(illegalArgumentException32);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable7, objArray14);
        java.io.EOFException eOFException16 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable6, objArray14);
        java.lang.Throwable[] throwableArray17 = eOFException16.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException18 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable5, (java.lang.Object[]) throwableArray17);
        java.util.ConcurrentModificationException concurrentModificationException19 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, (java.lang.Object[]) throwableArray17);
        java.lang.ArithmeticException arithmeticException20 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, (java.lang.Object[]) throwableArray17);
        java.util.NoSuchElementException noSuchElementException21 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException(localizable1, (java.lang.Object[]) throwableArray17);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException23 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, (java.lang.Object[]) throwableArray17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = arrayIndexOutOfBoundsException23.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(eOFException16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException18);
        org.junit.Assert.assertNotNull(concurrentModificationException19);
        org.junit.Assert.assertNotNull(arithmeticException20);
        org.junit.Assert.assertNotNull(noSuchElementException21);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException23);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException14 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable24, objArray30);
        java.text.ParseException parseException32 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable23, objArray30);
        java.lang.IllegalStateException illegalStateException33 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, objArray30);
        java.lang.IllegalArgumentException illegalArgumentException34 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable20, objArray30);
        java.lang.IllegalArgumentException illegalArgumentException35 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable19, objArray30);
        org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(localizable18, objArray30);
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException36);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException16.setContext("", (java.lang.Object) mathRuntimeException36);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(illegalArgumentException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(parseException32);
        org.junit.Assert.assertNotNull(illegalStateException33);
        org.junit.Assert.assertNotNull(illegalArgumentException34);
        org.junit.Assert.assertNotNull(illegalArgumentException35);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable20, objArray26);
        java.text.ParseException parseException28 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable19, objArray26);
        java.lang.IllegalArgumentException illegalArgumentException29 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable17, objArray26);
        java.lang.ArithmeticException arithmeticException30 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, objArray26);
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException14, localizable15, objArray26);
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        java.lang.Object[] objArray42 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException43 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable35, objArray42);
        java.lang.ArithmeticException arithmeticException44 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable34, objArray42);
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable33, objArray42);
        org.apache.commons.math.MathRuntimeException mathRuntimeException46 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException31, localizable32, objArray42);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet47 = mathRuntimeException46.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException27);
        org.junit.Assert.assertNotNull(parseException28);
        org.junit.Assert.assertNotNull(illegalArgumentException29);
        org.junit.Assert.assertNotNull(arithmeticException30);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException43);
        org.junit.Assert.assertNotNull(arithmeticException44);
        org.junit.Assert.assertNotNull(concurrentModificationException45);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException14 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        java.lang.Throwable[] throwableArray17 = mathRuntimeException16.getSuppressed();
        java.lang.Throwable[] throwableArray18 = mathRuntimeException16.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        java.lang.Object[] objArray32 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException33 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable26, objArray32);
        java.text.ParseException parseException34 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable25, objArray32);
        java.lang.IllegalArgumentException illegalArgumentException35 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable23, objArray32);
        java.lang.ArithmeticException arithmeticException36 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable22, objArray32);
        java.io.EOFException eOFException37 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable21, objArray32);
        java.util.NoSuchElementException noSuchElementException38 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable20, objArray32);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException16.setContext("org.apache.commons.math.MathRuntimeException: ", (java.lang.Object) localizable20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(illegalArgumentException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException33);
        org.junit.Assert.assertNotNull(parseException34);
        org.junit.Assert.assertNotNull(illegalArgumentException35);
        org.junit.Assert.assertNotNull(arithmeticException36);
        org.junit.Assert.assertNotNull(eOFException37);
        org.junit.Assert.assertNotNull(noSuchElementException38);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, objArray12);
        java.lang.Throwable[] throwableArray15 = eOFException14.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable3, (java.lang.Object[]) throwableArray15);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, (java.lang.Object[]) throwableArray15);
        java.lang.ArithmeticException arithmeticException18 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray15);
        java.lang.Throwable[] throwableArray19 = arithmeticException18.getSuppressed();
        org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray19);
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        java.lang.Object[] objArray31 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException32 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable25, objArray31);
        java.lang.IllegalArgumentException illegalArgumentException33 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable24, objArray31);
        java.lang.ArithmeticException arithmeticException34 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable23, objArray31);
        java.util.ConcurrentModificationException concurrentModificationException35 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray31);
        org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException20, localizable21, objArray31);
        org.apache.commons.math.exception.util.Localizable localizable38 = null;
        org.apache.commons.math.exception.util.Localizable localizable39 = null;
        org.apache.commons.math.exception.util.Localizable localizable40 = null;
        org.apache.commons.math.exception.util.Localizable localizable41 = null;
        org.apache.commons.math.exception.util.Localizable localizable42 = null;
        org.apache.commons.math.exception.util.Localizable localizable43 = null;
        org.apache.commons.math.exception.util.Localizable localizable44 = null;
        org.apache.commons.math.exception.util.Localizable localizable45 = null;
        java.lang.Object[] objArray52 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException53 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable45, objArray52);
        java.lang.ArithmeticException arithmeticException54 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable44, objArray52);
        java.util.ConcurrentModificationException concurrentModificationException55 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable43, objArray52);
        java.util.NoSuchElementException noSuchElementException56 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable42, objArray52);
        java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable41, objArray52);
        java.lang.IllegalArgumentException illegalArgumentException58 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable40, objArray52);
        java.io.EOFException eOFException59 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable39, objArray52);
        java.io.EOFException eOFException60 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable38, objArray52);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException20.setContext("hi!", (java.lang.Object) eOFException60);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(arithmeticException18);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException32);
        org.junit.Assert.assertNotNull(illegalArgumentException33);
        org.junit.Assert.assertNotNull(arithmeticException34);
        org.junit.Assert.assertNotNull(concurrentModificationException35);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException53);
        org.junit.Assert.assertNotNull(arithmeticException54);
        org.junit.Assert.assertNotNull(concurrentModificationException55);
        org.junit.Assert.assertNotNull(noSuchElementException56);
        org.junit.Assert.assertNotNull(concurrentModificationException57);
        org.junit.Assert.assertNotNull(illegalArgumentException58);
        org.junit.Assert.assertNotNull(eOFException59);
        org.junit.Assert.assertNotNull(eOFException60);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable8, objArray14);
        java.text.ParseException parseException16 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable7, objArray14);
        java.io.EOFException eOFException17 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable5, objArray14);
        java.lang.IllegalStateException illegalStateException18 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray14);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException19 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable3, objArray14);
        java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray14);
        java.lang.ArithmeticException arithmeticException21 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray14);
        java.lang.ArithmeticException arithmeticException22 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray14);
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        org.apache.commons.math.exception.util.Localizable localizable29 = null;
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray36 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException37 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable30, objArray36);
        java.text.ParseException parseException38 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable29, objArray36);
        java.util.NoSuchElementException noSuchElementException39 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable27, objArray36);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException40 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable26, objArray36);
        java.io.EOFException eOFException41 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable25, objArray36);
        java.util.NoSuchElementException noSuchElementException42 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable24, objArray36);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException43 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arithmeticException22, localizable23, objArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(parseException16);
        org.junit.Assert.assertNotNull(eOFException17);
        org.junit.Assert.assertNotNull(illegalStateException18);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException19);
        org.junit.Assert.assertNotNull(concurrentModificationException20);
        org.junit.Assert.assertNotNull(arithmeticException21);
        org.junit.Assert.assertNotNull(arithmeticException22);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException37);
        org.junit.Assert.assertNotNull(parseException38);
        org.junit.Assert.assertNotNull(noSuchElementException39);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException40);
        org.junit.Assert.assertNotNull(eOFException41);
        org.junit.Assert.assertNotNull(noSuchElementException42);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, (java.lang.Object[]) throwableArray11);
        java.util.NoSuchElementException noSuchElementException14 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, (java.lang.Object[]) throwableArray11);
        java.lang.Class<?> wildcardClass15 = throwableArray11.getClass();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(noSuchElementException14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException13 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, (java.lang.Object[]) throwableArray11);
        java.lang.Throwable[] throwableArray14 = arrayIndexOutOfBoundsException13.getSuppressed();
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, (java.lang.Object[]) throwableArray14);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException16 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) eOFException15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(eOFException15);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.text.ParseException parseException11 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable2, objArray9);
        java.lang.Throwable[] throwableArray12 = parseException11.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException13 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, (java.lang.Object[]) throwableArray12);
        java.lang.Throwable[] throwableArray14 = arrayIndexOutOfBoundsException13.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException15 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) arrayIndexOutOfBoundsException13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(parseException11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException13);
        org.junit.Assert.assertNotNull(throwableArray14);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.lang.Throwable[] throwableArray10 = concurrentModificationException9.getSuppressed();
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.MathRuntimeException mathRuntimeException12 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException31 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable23, objArray30);
        java.io.EOFException eOFException32 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable22, objArray30);
        java.util.ConcurrentModificationException concurrentModificationException33 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable21, objArray30);
        java.lang.ArithmeticException arithmeticException34 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable20, objArray30);
        java.lang.Throwable[] throwableArray35 = arithmeticException34.getSuppressed();
        java.text.ParseException parseException36 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable19, (java.lang.Object[]) throwableArray35);
        java.text.ParseException parseException37 = org.apache.commons.math.MathRuntimeException.createParseException((int) (byte) 0, localizable17, (java.lang.Object[]) throwableArray35);
        java.util.ConcurrentModificationException concurrentModificationException38 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable15, (java.lang.Object[]) throwableArray35);
        java.lang.IllegalStateException illegalStateException39 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable14, (java.lang.Object[]) throwableArray35);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException12.setContext("hi!", (java.lang.Object) throwableArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException31);
        org.junit.Assert.assertNotNull(eOFException32);
        org.junit.Assert.assertNotNull(concurrentModificationException33);
        org.junit.Assert.assertNotNull(arithmeticException34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(parseException36);
        org.junit.Assert.assertNotNull(parseException37);
        org.junit.Assert.assertNotNull(concurrentModificationException38);
        org.junit.Assert.assertNotNull(illegalStateException39);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException14 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        java.lang.Throwable[] throwableArray17 = mathRuntimeException16.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = mathRuntimeException16.getContext("org.apache.commons.math.MathRuntimeException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(illegalArgumentException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        mathRuntimeException1.addSuppressed((java.lang.Throwable) concurrentModificationException14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = mathRuntimeException1.getContext("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray12);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet19 = mathRuntimeException18.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = new java.lang.Object[] {};
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray1);
        org.apache.commons.math.MathRuntimeException mathRuntimeException3 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException2);
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray11);
        mathRuntimeException2.addSuppressed((java.lang.Throwable) arithmeticException13);
        java.lang.String str15 = mathRuntimeException2.toString();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.commons.math.MathRuntimeException: " + "'", str15, "org.apache.commons.math.MathRuntimeException: ");
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray9);
        java.lang.Throwable[] throwableArray12 = arithmeticException11.getSuppressed();
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) (short) 0, localizable1, (java.lang.Object[]) throwableArray12);
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable20, objArray26);
        java.text.ParseException parseException28 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable19, objArray26);
        java.util.NoSuchElementException noSuchElementException29 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable17, objArray26);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException30 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable16, objArray26);
        java.lang.IllegalArgumentException illegalArgumentException31 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable15, objArray26);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) parseException13, localizable14, objArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException27);
        org.junit.Assert.assertNotNull(parseException28);
        org.junit.Assert.assertNotNull(noSuchElementException29);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException30);
        org.junit.Assert.assertNotNull(illegalArgumentException31);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.lang.Throwable[] throwableArray13 = concurrentModificationException12.getSuppressed();
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, (java.lang.Object[]) throwableArray13);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, (java.lang.Object[]) throwableArray13);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable2, (java.lang.Object[]) throwableArray13);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException17 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, (java.lang.Object[]) throwableArray13);
        java.io.EOFException eOFException18 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, (java.lang.Object[]) throwableArray13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) eOFException18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException17);
        org.junit.Assert.assertNotNull(eOFException18);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray9);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable13);
        concurrentModificationException12.addSuppressed((java.lang.Throwable) mathRuntimeException14);
        java.lang.Throwable[] throwableArray16 = mathRuntimeException14.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable20, objArray26);
        java.text.ParseException parseException28 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable19, objArray26);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException14.addMessage(localizable17, objArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException27);
        org.junit.Assert.assertNotNull(parseException28);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable5, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray13);
        java.lang.ArithmeticException arithmeticException17 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray13);
        java.lang.Throwable[] throwableArray18 = arithmeticException17.getSuppressed();
        java.text.ParseException parseException19 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable2, (java.lang.Object[]) throwableArray18);
        org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray18);
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        org.apache.commons.math.exception.util.Localizable localizable28 = null;
        org.apache.commons.math.exception.util.Localizable localizable29 = null;
        java.lang.Object[] objArray36 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException37 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable29, objArray36);
        java.io.EOFException eOFException38 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable28, objArray36);
        java.lang.Throwable[] throwableArray39 = eOFException38.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException40 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable27, (java.lang.Object[]) throwableArray39);
        java.util.ConcurrentModificationException concurrentModificationException41 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable26, (java.lang.Object[]) throwableArray39);
        java.lang.ArithmeticException arithmeticException42 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable25, (java.lang.Object[]) throwableArray39);
        java.util.NoSuchElementException noSuchElementException43 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable24, (java.lang.Object[]) throwableArray39);
        org.apache.commons.math.MathRuntimeException mathRuntimeException44 = new org.apache.commons.math.MathRuntimeException(localizable23, (java.lang.Object[]) throwableArray39);
        java.util.NoSuchElementException noSuchElementException45 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable22, (java.lang.Object[]) throwableArray39);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException20.addMessage(localizable21, (java.lang.Object[]) throwableArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(arithmeticException17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(parseException19);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException37);
        org.junit.Assert.assertNotNull(eOFException38);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException40);
        org.junit.Assert.assertNotNull(concurrentModificationException41);
        org.junit.Assert.assertNotNull(arithmeticException42);
        org.junit.Assert.assertNotNull(noSuchElementException43);
        org.junit.Assert.assertNotNull(noSuchElementException45);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable7, objArray13);
        java.text.ParseException parseException15 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable6, objArray13);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable3, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException18 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException(localizable1, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray13);
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        java.lang.Object[] objArray32 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException33 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable26, objArray32);
        java.text.ParseException parseException34 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable25, objArray32);
        java.lang.IllegalArgumentException illegalArgumentException35 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable23, objArray32);
        java.util.NoSuchElementException noSuchElementException36 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable22, objArray32);
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(localizable21, objArray32);
        java.lang.Throwable[] throwableArray38 = mathRuntimeException37.getSuppressed();
        mathRuntimeException20.addSuppressed((java.lang.Throwable) mathRuntimeException37);
        java.lang.Throwable[] throwableArray40 = mathRuntimeException20.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable42 = null;
        org.apache.commons.math.exception.util.Localizable localizable43 = null;
        org.apache.commons.math.exception.util.Localizable localizable44 = null;
        org.apache.commons.math.exception.util.Localizable localizable46 = null;
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        java.lang.Object[] objArray53 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException54 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable47, objArray53);
        java.text.ParseException parseException55 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable46, objArray53);
        java.lang.IllegalStateException illegalStateException56 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable44, objArray53);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException57 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable43, objArray53);
        org.apache.commons.math.MathRuntimeException mathRuntimeException58 = new org.apache.commons.math.MathRuntimeException(localizable42, objArray53);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException20.setContext("org.apache.commons.math.MathRuntimeException: ", (java.lang.Object) mathRuntimeException58);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(parseException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
        org.junit.Assert.assertNotNull(illegalArgumentException18);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException33);
        org.junit.Assert.assertNotNull(parseException34);
        org.junit.Assert.assertNotNull(illegalArgumentException35);
        org.junit.Assert.assertNotNull(noSuchElementException36);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException54);
        org.junit.Assert.assertNotNull(parseException55);
        org.junit.Assert.assertNotNull(illegalStateException56);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException57);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable9 = null;
        org.apache.commons.math.exception.util.Localizable localizable10 = null;
        java.lang.Object[] objArray16 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable10, objArray16);
        java.text.ParseException parseException18 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable9, objArray16);
        java.io.EOFException eOFException19 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable7, objArray16);
        java.lang.IllegalStateException illegalStateException20 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray16);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException21 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable5, objArray16);
        java.util.ConcurrentModificationException concurrentModificationException22 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray16);
        java.lang.ArithmeticException arithmeticException23 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray16);
        java.lang.ArithmeticException arithmeticException24 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray16);
        java.util.NoSuchElementException noSuchElementException25 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray16);
        java.lang.ArithmeticException arithmeticException26 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException27 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) arithmeticException26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(parseException18);
        org.junit.Assert.assertNotNull(eOFException19);
        org.junit.Assert.assertNotNull(illegalStateException20);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException21);
        org.junit.Assert.assertNotNull(concurrentModificationException22);
        org.junit.Assert.assertNotNull(arithmeticException23);
        org.junit.Assert.assertNotNull(arithmeticException24);
        org.junit.Assert.assertNotNull(noSuchElementException25);
        org.junit.Assert.assertNotNull(arithmeticException26);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray12);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray12);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException17 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException18 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException19 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) illegalArgumentException18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException17);
        org.junit.Assert.assertNotNull(illegalArgumentException18);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, objArray11);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = illegalStateException16.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(localizable1, objArray11);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, objArray11);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        java.lang.Object[] objArray31 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException32 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable24, objArray31);
        java.lang.ArithmeticException arithmeticException33 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable23, objArray31);
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray31);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException35 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable21, objArray31);
        java.io.EOFException eOFException36 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable20, objArray31);
        java.text.ParseException parseException37 = org.apache.commons.math.MathRuntimeException.createParseException((int) (byte) 1, localizable19, objArray31);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) illegalStateException16, localizable17, objArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException32);
        org.junit.Assert.assertNotNull(arithmeticException33);
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException35);
        org.junit.Assert.assertNotNull(eOFException36);
        org.junit.Assert.assertNotNull(parseException37);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable20, objArray26);
        java.text.ParseException parseException28 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable19, objArray26);
        java.lang.IllegalArgumentException illegalArgumentException29 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable17, objArray26);
        java.lang.ArithmeticException arithmeticException30 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, objArray26);
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException14, localizable15, objArray26);
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        java.lang.Object[] objArray42 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException43 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable35, objArray42);
        java.lang.ArithmeticException arithmeticException44 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable34, objArray42);
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable33, objArray42);
        org.apache.commons.math.MathRuntimeException mathRuntimeException46 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException31, localizable32, objArray42);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet47 = mathRuntimeException31.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException27);
        org.junit.Assert.assertNotNull(parseException28);
        org.junit.Assert.assertNotNull(illegalArgumentException29);
        org.junit.Assert.assertNotNull(arithmeticException30);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException43);
        org.junit.Assert.assertNotNull(arithmeticException44);
        org.junit.Assert.assertNotNull(concurrentModificationException45);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, (java.lang.Object[]) throwableArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        java.lang.Object[] objArray16 = null;
        java.util.NoSuchElementException noSuchElementException17 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable15, objArray16);
        mathRuntimeException14.addSuppressed((java.lang.Throwable) noSuchElementException17);
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        java.lang.Object[] objArray31 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException32 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable24, objArray31);
        java.lang.ArithmeticException arithmeticException33 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable23, objArray31);
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray31);
        java.text.ParseException parseException35 = org.apache.commons.math.MathRuntimeException.createParseException((int) ' ', localizable21, objArray31);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException14.setContext("hi!", (java.lang.Object) objArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(noSuchElementException17);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException32);
        org.junit.Assert.assertNotNull(arithmeticException33);
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertNotNull(parseException35);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.text.ParseException parseException11 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable2, objArray9);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, objArray9);
        java.lang.Throwable[] throwableArray13 = eOFException12.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable24, objArray30);
        java.text.ParseException parseException32 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable23, objArray30);
        java.io.EOFException eOFException33 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable21, objArray30);
        java.lang.IllegalStateException illegalStateException34 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable20, objArray30);
        java.util.ConcurrentModificationException concurrentModificationException35 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable19, objArray30);
        org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(localizable18, objArray30);
        java.text.ParseException parseException37 = org.apache.commons.math.MathRuntimeException.createParseException((int) (byte) 0, localizable17, objArray30);
        java.io.EOFException eOFException38 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable15, objArray30);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) eOFException12, localizable14, objArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(parseException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(parseException32);
        org.junit.Assert.assertNotNull(eOFException33);
        org.junit.Assert.assertNotNull(illegalStateException34);
        org.junit.Assert.assertNotNull(concurrentModificationException35);
        org.junit.Assert.assertNotNull(parseException37);
        org.junit.Assert.assertNotNull(eOFException38);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.lang.Throwable[] throwableArray13 = concurrentModificationException12.getSuppressed();
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, (java.lang.Object[]) throwableArray13);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable3, (java.lang.Object[]) throwableArray13);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, (java.lang.Object[]) throwableArray13);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = mathRuntimeException18.getContext("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.lang.Throwable[] throwableArray12 = concurrentModificationException11.getSuppressed();
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, (java.lang.Object[]) throwableArray12);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, (java.lang.Object[]) throwableArray12);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, (java.lang.Object[]) throwableArray12);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, (java.lang.Object[]) throwableArray12);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.lang.Throwable[] throwableArray12 = concurrentModificationException11.getSuppressed();
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, (java.lang.Object[]) throwableArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, (java.lang.Object[]) throwableArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(localizable1, (java.lang.Object[]) throwableArray12);
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray27 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable21, objArray27);
        java.text.ParseException parseException29 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable20, objArray27);
        java.lang.IllegalArgumentException illegalArgumentException30 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable18, objArray27);
        java.lang.ArithmeticException arithmeticException31 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable17, objArray27);
        org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException15, localizable16, objArray27);
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        org.apache.commons.math.exception.util.Localizable localizable36 = null;
        java.lang.Object[] objArray43 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException44 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable36, objArray43);
        java.lang.ArithmeticException arithmeticException45 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable35, objArray43);
        java.util.ConcurrentModificationException concurrentModificationException46 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable34, objArray43);
        org.apache.commons.math.MathRuntimeException mathRuntimeException47 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException32, localizable33, objArray43);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException48 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray43);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException49 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) arrayIndexOutOfBoundsException48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(parseException29);
        org.junit.Assert.assertNotNull(illegalArgumentException30);
        org.junit.Assert.assertNotNull(arithmeticException31);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException44);
        org.junit.Assert.assertNotNull(arithmeticException45);
        org.junit.Assert.assertNotNull(concurrentModificationException46);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException48);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable7, objArray14);
        java.io.EOFException eOFException16 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable6, objArray14);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray14);
        java.lang.ArithmeticException arithmeticException18 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray14);
        java.lang.Throwable[] throwableArray19 = arithmeticException18.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException20 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable3, (java.lang.Object[]) throwableArray19);
        java.lang.IllegalArgumentException illegalArgumentException21 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, (java.lang.Object[]) throwableArray19);
        java.lang.Throwable[] throwableArray22 = illegalArgumentException21.getSuppressed();
        java.util.NoSuchElementException noSuchElementException23 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, (java.lang.Object[]) throwableArray22);
        java.lang.IllegalArgumentException illegalArgumentException24 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, (java.lang.Object[]) throwableArray22);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException25 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) illegalArgumentException24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(eOFException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(arithmeticException18);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException20);
        org.junit.Assert.assertNotNull(illegalArgumentException21);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(noSuchElementException23);
        org.junit.Assert.assertNotNull(illegalArgumentException24);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable7, objArray13);
        java.text.ParseException parseException15 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable6, objArray13);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable3, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException18 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException(localizable1, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray13);
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        java.lang.Object[] objArray32 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException33 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable26, objArray32);
        java.text.ParseException parseException34 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable25, objArray32);
        java.lang.IllegalArgumentException illegalArgumentException35 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable23, objArray32);
        java.util.NoSuchElementException noSuchElementException36 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable22, objArray32);
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(localizable21, objArray32);
        java.lang.Throwable[] throwableArray38 = mathRuntimeException37.getSuppressed();
        mathRuntimeException20.addSuppressed((java.lang.Throwable) mathRuntimeException37);
        java.lang.Throwable[] throwableArray40 = mathRuntimeException20.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable43 = null;
        org.apache.commons.math.exception.util.Localizable localizable44 = null;
        java.lang.Object[] objArray50 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException51 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable44, objArray50);
        java.text.ParseException parseException52 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable43, objArray50);
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        org.apache.commons.math.exception.util.Localizable localizable54 = null;
        org.apache.commons.math.exception.util.Localizable localizable55 = null;
        java.lang.Object[] objArray61 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException62 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable55, objArray61);
        java.lang.Throwable[] throwableArray63 = concurrentModificationException62.getSuppressed();
        java.io.EOFException eOFException64 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable54, (java.lang.Object[]) throwableArray63);
        java.io.EOFException eOFException65 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable53, (java.lang.Object[]) throwableArray63);
        parseException52.addSuppressed((java.lang.Throwable) eOFException65);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException20.setContext("", (java.lang.Object) parseException52);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(parseException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
        org.junit.Assert.assertNotNull(illegalArgumentException18);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException33);
        org.junit.Assert.assertNotNull(parseException34);
        org.junit.Assert.assertNotNull(illegalArgumentException35);
        org.junit.Assert.assertNotNull(noSuchElementException36);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException51);
        org.junit.Assert.assertNotNull(parseException52);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException62);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(eOFException64);
        org.junit.Assert.assertNotNull(eOFException65);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.lang.Throwable[] throwableArray13 = concurrentModificationException12.getSuppressed();
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, (java.lang.Object[]) throwableArray13);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable3, (java.lang.Object[]) throwableArray13);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, (java.lang.Object[]) throwableArray13);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray13);
        java.io.IOException iOException19 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) mathRuntimeException18);
        java.lang.String str20 = mathRuntimeException18.toString();
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
        org.junit.Assert.assertNotNull(iOException19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.commons.math.MathRuntimeException: " + "'", str20, "org.apache.commons.math.MathRuntimeException: ");
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = mathRuntimeException18.getContext("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        java.lang.Object[] objArray31 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException32 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable25, objArray31);
        java.text.ParseException parseException33 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable24, objArray31);
        java.lang.IllegalArgumentException illegalArgumentException34 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable22, objArray31);
        java.lang.ArithmeticException arithmeticException35 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable21, objArray31);
        java.io.EOFException eOFException36 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable20, objArray31);
        java.util.NoSuchElementException noSuchElementException37 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable19, objArray31);
        java.lang.IllegalArgumentException illegalArgumentException38 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable18, objArray31);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException16.setContext("hi!", (java.lang.Object) illegalArgumentException38);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException32);
        org.junit.Assert.assertNotNull(parseException33);
        org.junit.Assert.assertNotNull(illegalArgumentException34);
        org.junit.Assert.assertNotNull(arithmeticException35);
        org.junit.Assert.assertNotNull(eOFException36);
        org.junit.Assert.assertNotNull(noSuchElementException37);
        org.junit.Assert.assertNotNull(illegalArgumentException38);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, objArray12);
        java.lang.Throwable[] throwableArray15 = eOFException14.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable3, (java.lang.Object[]) throwableArray15);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, (java.lang.Object[]) throwableArray15);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, (java.lang.Object[]) throwableArray15);
        java.io.EOFException eOFException19 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, (java.lang.Object[]) throwableArray15);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException20 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) eOFException19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(eOFException19);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray10);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray10);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException27 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable19, objArray26);
        java.io.EOFException eOFException28 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable18, objArray26);
        java.util.ConcurrentModificationException concurrentModificationException29 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable17, objArray26);
        java.util.ConcurrentModificationException concurrentModificationException30 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable16, objArray26);
        java.lang.IllegalArgumentException illegalArgumentException31 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable15, objArray26);
        concurrentModificationException14.addSuppressed((java.lang.Throwable) illegalArgumentException31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException33 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) illegalArgumentException31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException27);
        org.junit.Assert.assertNotNull(eOFException28);
        org.junit.Assert.assertNotNull(concurrentModificationException29);
        org.junit.Assert.assertNotNull(concurrentModificationException30);
        org.junit.Assert.assertNotNull(illegalArgumentException31);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray12);
        java.io.EOFException eOFException17 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray12);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException18 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = arrayIndexOutOfBoundsException18.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
        org.junit.Assert.assertNotNull(eOFException17);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException18);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable8, objArray14);
        java.text.ParseException parseException16 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable7, objArray14);
        java.lang.IllegalStateException illegalStateException17 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray14);
        java.lang.IllegalArgumentException illegalArgumentException18 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable4, objArray14);
        java.lang.IllegalArgumentException illegalArgumentException19 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable3, objArray14);
        org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(localizable2, objArray14);
        java.text.ParseException parseException21 = org.apache.commons.math.MathRuntimeException.createParseException((int) (short) 10, localizable1, objArray14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) parseException21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(parseException16);
        org.junit.Assert.assertNotNull(illegalStateException17);
        org.junit.Assert.assertNotNull(illegalArgumentException18);
        org.junit.Assert.assertNotNull(illegalArgumentException19);
        org.junit.Assert.assertNotNull(parseException21);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.lang.Throwable[] throwableArray10 = concurrentModificationException9.getSuppressed();
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, (java.lang.Object[]) throwableArray10);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException12 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, (java.lang.Object[]) throwableArray10);
        java.lang.Throwable[] throwableArray13 = arrayIndexOutOfBoundsException12.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException27 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable19, objArray26);
        java.io.EOFException eOFException28 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable18, objArray26);
        java.util.ConcurrentModificationException concurrentModificationException29 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable17, objArray26);
        java.lang.ArithmeticException arithmeticException30 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, objArray26);
        java.text.ParseException parseException31 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable15, objArray26);
        arrayIndexOutOfBoundsException12.addSuppressed((java.lang.Throwable) parseException31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException33 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) arrayIndexOutOfBoundsException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException27);
        org.junit.Assert.assertNotNull(eOFException28);
        org.junit.Assert.assertNotNull(concurrentModificationException29);
        org.junit.Assert.assertNotNull(arithmeticException30);
        org.junit.Assert.assertNotNull(parseException31);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.text.ParseException parseException11 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable2, objArray9);
        java.util.NoSuchElementException noSuchElementException12 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, objArray9);
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        java.lang.Object[] objArray23 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException24 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable16, objArray23);
        java.lang.ArithmeticException arithmeticException25 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable15, objArray23);
        java.util.ConcurrentModificationException concurrentModificationException26 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable14, objArray23);
        org.apache.commons.math.MathRuntimeException mathRuntimeException27 = new org.apache.commons.math.MathRuntimeException(localizable13, objArray23);
        noSuchElementException12.addSuppressed((java.lang.Throwable) mathRuntimeException27);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet29 = mathRuntimeException27.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(parseException11);
        org.junit.Assert.assertNotNull(noSuchElementException12);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException24);
        org.junit.Assert.assertNotNull(arithmeticException25);
        org.junit.Assert.assertNotNull(concurrentModificationException26);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.text.ParseException parseException12 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable3, objArray10);
        java.lang.IllegalArgumentException illegalArgumentException13 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, objArray10);
        java.lang.ArithmeticException arithmeticException14 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray10);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException29 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray28);
        java.text.ParseException parseException30 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable21, objArray28);
        java.io.EOFException eOFException31 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable19, objArray28);
        java.lang.IllegalStateException illegalStateException32 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable18, objArray28);
        java.util.ConcurrentModificationException concurrentModificationException33 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable17, objArray28);
        org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException(localizable16, objArray28);
        java.lang.ArithmeticException arithmeticException35 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable15, objArray28);
        arithmeticException14.addSuppressed((java.lang.Throwable) arithmeticException35);
        org.apache.commons.math.exception.util.Localizable localizable37 = null;
        org.apache.commons.math.exception.util.Localizable localizable38 = null;
        org.apache.commons.math.exception.util.Localizable localizable39 = null;
        org.apache.commons.math.exception.util.Localizable localizable40 = null;
        java.lang.Object[] objArray46 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException47 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable40, objArray46);
        java.lang.Throwable[] throwableArray48 = concurrentModificationException47.getSuppressed();
        java.lang.ArithmeticException arithmeticException49 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable39, (java.lang.Object[]) throwableArray48);
        java.lang.ArithmeticException arithmeticException50 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable38, (java.lang.Object[]) throwableArray48);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException51 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arithmeticException35, localizable37, (java.lang.Object[]) throwableArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(parseException12);
        org.junit.Assert.assertNotNull(illegalArgumentException13);
        org.junit.Assert.assertNotNull(arithmeticException14);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException29);
        org.junit.Assert.assertNotNull(parseException30);
        org.junit.Assert.assertNotNull(eOFException31);
        org.junit.Assert.assertNotNull(illegalStateException32);
        org.junit.Assert.assertNotNull(concurrentModificationException33);
        org.junit.Assert.assertNotNull(arithmeticException35);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException47);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(arithmeticException49);
        org.junit.Assert.assertNotNull(arithmeticException50);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.lang.Throwable[] throwableArray13 = concurrentModificationException12.getSuppressed();
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, (java.lang.Object[]) throwableArray13);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable3, (java.lang.Object[]) throwableArray13);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, (java.lang.Object[]) throwableArray13);
        java.io.EOFException eOFException17 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = mathRuntimeException18.getContext("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
        org.junit.Assert.assertNotNull(eOFException17);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable20, objArray26);
        java.text.ParseException parseException28 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable19, objArray26);
        java.lang.IllegalArgumentException illegalArgumentException29 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable17, objArray26);
        java.lang.ArithmeticException arithmeticException30 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, objArray26);
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException14, localizable15, objArray26);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet32 = mathRuntimeException31.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException27);
        org.junit.Assert.assertNotNull(parseException28);
        org.junit.Assert.assertNotNull(illegalArgumentException29);
        org.junit.Assert.assertNotNull(arithmeticException30);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, (java.lang.Object[]) throwableArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        java.lang.Object[] objArray16 = null;
        java.util.NoSuchElementException noSuchElementException17 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable15, objArray16);
        mathRuntimeException14.addSuppressed((java.lang.Throwable) noSuchElementException17);
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException34 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable26, objArray33);
        java.io.EOFException eOFException35 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable25, objArray33);
        java.lang.Throwable[] throwableArray36 = eOFException35.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException37 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable24, (java.lang.Object[]) throwableArray36);
        java.util.ConcurrentModificationException concurrentModificationException38 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable23, (java.lang.Object[]) throwableArray36);
        java.lang.ArithmeticException arithmeticException39 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable22, (java.lang.Object[]) throwableArray36);
        java.util.NoSuchElementException noSuchElementException40 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable21, (java.lang.Object[]) throwableArray36);
        org.apache.commons.math.MathRuntimeException mathRuntimeException41 = new org.apache.commons.math.MathRuntimeException(localizable20, (java.lang.Object[]) throwableArray36);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException42 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable19, (java.lang.Object[]) throwableArray36);
        noSuchElementException17.addSuppressed((java.lang.Throwable) arrayIndexOutOfBoundsException42);
        java.lang.Throwable[] throwableArray44 = arrayIndexOutOfBoundsException42.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException45 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) arrayIndexOutOfBoundsException42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(noSuchElementException17);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException34);
        org.junit.Assert.assertNotNull(eOFException35);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException37);
        org.junit.Assert.assertNotNull(concurrentModificationException38);
        org.junit.Assert.assertNotNull(arithmeticException39);
        org.junit.Assert.assertNotNull(noSuchElementException40);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException42);
        org.junit.Assert.assertNotNull(throwableArray44);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable7, objArray14);
        java.io.EOFException eOFException16 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable6, objArray14);
        java.lang.Throwable[] throwableArray17 = eOFException16.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException18 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable5, (java.lang.Object[]) throwableArray17);
        java.util.ConcurrentModificationException concurrentModificationException19 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, (java.lang.Object[]) throwableArray17);
        java.lang.ArithmeticException arithmeticException20 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, (java.lang.Object[]) throwableArray17);
        java.util.NoSuchElementException noSuchElementException21 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, (java.lang.Object[]) throwableArray17);
        java.lang.ArithmeticException arithmeticException22 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray17);
        java.lang.IllegalArgumentException illegalArgumentException23 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, (java.lang.Object[]) throwableArray17);
        java.lang.Class<?> wildcardClass24 = throwableArray17.getClass();
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(eOFException16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException18);
        org.junit.Assert.assertNotNull(concurrentModificationException19);
        org.junit.Assert.assertNotNull(arithmeticException20);
        org.junit.Assert.assertNotNull(noSuchElementException21);
        org.junit.Assert.assertNotNull(arithmeticException22);
        org.junit.Assert.assertNotNull(illegalArgumentException23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        java.lang.Object[] objArray7 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException8 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray7);
        java.lang.IllegalArgumentException illegalArgumentException9 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException10 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) illegalArgumentException9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException8);
        org.junit.Assert.assertNotNull(illegalArgumentException9);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        java.lang.Object[] objArray2 = null;
        java.text.ParseException parseException3 = org.apache.commons.math.MathRuntimeException.createParseException((int) (byte) 0, localizable1, objArray2);
        java.lang.Class<?> wildcardClass4 = parseException3.getClass();
        org.junit.Assert.assertNotNull(parseException3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Throwable throwable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable7, objArray14);
        java.io.EOFException eOFException16 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable6, objArray14);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray14);
        java.lang.ArithmeticException arithmeticException18 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray14);
        java.lang.IllegalStateException illegalStateException19 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray14);
        org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(throwable1, localizable2, objArray14);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException21 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException22 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) arrayIndexOutOfBoundsException21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(eOFException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(arithmeticException18);
        org.junit.Assert.assertNotNull(illegalStateException19);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException21);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable7, objArray13);
        java.text.ParseException parseException15 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable6, objArray13);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable4, objArray13);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException17 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable3, objArray13);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException18 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable2, objArray13);
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray34 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException35 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable27, objArray34);
        java.io.EOFException eOFException36 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable26, objArray34);
        java.util.ConcurrentModificationException concurrentModificationException37 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable25, objArray34);
        java.lang.ArithmeticException arithmeticException38 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable24, objArray34);
        java.lang.Throwable[] throwableArray39 = arithmeticException38.getSuppressed();
        java.text.ParseException parseException40 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable23, (java.lang.Object[]) throwableArray39);
        java.text.ParseException parseException41 = org.apache.commons.math.MathRuntimeException.createParseException((int) (byte) 0, localizable21, (java.lang.Object[]) throwableArray39);
        java.util.NoSuchElementException noSuchElementException42 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable19, (java.lang.Object[]) throwableArray39);
        arrayIndexOutOfBoundsException18.addSuppressed((java.lang.Throwable) noSuchElementException42);
        java.lang.Throwable[] throwableArray44 = noSuchElementException42.getSuppressed();
        java.lang.IllegalStateException illegalStateException45 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, (java.lang.Object[]) throwableArray44);
        java.lang.IllegalArgumentException illegalArgumentException46 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, (java.lang.Object[]) throwableArray44);
        java.lang.Class<?> wildcardClass47 = illegalArgumentException46.getClass();
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(parseException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException17);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException18);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException35);
        org.junit.Assert.assertNotNull(eOFException36);
        org.junit.Assert.assertNotNull(concurrentModificationException37);
        org.junit.Assert.assertNotNull(arithmeticException38);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(parseException40);
        org.junit.Assert.assertNotNull(parseException41);
        org.junit.Assert.assertNotNull(noSuchElementException42);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(illegalStateException45);
        org.junit.Assert.assertNotNull(illegalArgumentException46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray11);
        java.lang.Throwable[] throwableArray14 = eOFException13.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable2, (java.lang.Object[]) throwableArray14);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, (java.lang.Object[]) throwableArray14);
        java.lang.ArithmeticException arithmeticException17 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, (java.lang.Object[]) throwableArray14);
        java.lang.Class<?> wildcardClass18 = arithmeticException17.getClass();
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(arithmeticException17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.lang.Throwable[] throwableArray10 = concurrentModificationException9.getSuppressed();
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, (java.lang.Object[]) throwableArray10);
        java.lang.ArithmeticException arithmeticException12 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, (java.lang.Object[]) throwableArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException13 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) arithmeticException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(arithmeticException12);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable7, objArray13);
        java.text.ParseException parseException15 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable6, objArray13);
        java.util.NoSuchElementException noSuchElementException16 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable4, objArray13);
        java.text.ParseException parseException17 = org.apache.commons.math.MathRuntimeException.createParseException(100, localizable3, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException18 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException19 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) concurrentModificationException19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(parseException15);
        org.junit.Assert.assertNotNull(noSuchElementException16);
        org.junit.Assert.assertNotNull(parseException17);
        org.junit.Assert.assertNotNull(illegalArgumentException18);
        org.junit.Assert.assertNotNull(concurrentModificationException19);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.lang.ArithmeticException arithmeticException15 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable5, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray13);
        java.util.NoSuchElementException noSuchElementException17 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable3, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable2, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException(localizable1, objArray13);
        java.lang.IllegalStateException illegalStateException20 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, objArray13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = illegalStateException20.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(arithmeticException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(noSuchElementException17);
        org.junit.Assert.assertNotNull(illegalStateException20);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.text.ParseException parseException10 = org.apache.commons.math.MathRuntimeException.createParseException(1, localizable1, objArray8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException11 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) parseException10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(parseException10);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.util.NoSuchElementException noSuchElementException14 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray11);
        java.lang.ArithmeticException arithmeticException15 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException17 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) arrayIndexOutOfBoundsException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(noSuchElementException14);
        org.junit.Assert.assertNotNull(arithmeticException15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        java.lang.Throwable[] throwableArray17 = mathRuntimeException16.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        org.apache.commons.math.exception.util.Localizable localizable28 = null;
        java.lang.Object[] objArray35 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException36 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable28, objArray35);
        java.io.EOFException eOFException37 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable27, objArray35);
        java.util.ConcurrentModificationException concurrentModificationException38 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable26, objArray35);
        java.lang.ArithmeticException arithmeticException39 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable25, objArray35);
        java.lang.Throwable[] throwableArray40 = arithmeticException39.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException41 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable24, (java.lang.Object[]) throwableArray40);
        java.lang.IllegalArgumentException illegalArgumentException42 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable23, (java.lang.Object[]) throwableArray40);
        java.lang.Throwable[] throwableArray43 = illegalArgumentException42.getSuppressed();
        java.util.NoSuchElementException noSuchElementException44 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable22, (java.lang.Object[]) throwableArray43);
        java.lang.IllegalArgumentException illegalArgumentException45 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable21, (java.lang.Object[]) throwableArray43);
        org.apache.commons.math.MathRuntimeException mathRuntimeException46 = new org.apache.commons.math.MathRuntimeException(localizable20, (java.lang.Object[]) throwableArray43);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException47 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable19, (java.lang.Object[]) throwableArray43);
        org.apache.commons.math.MathRuntimeException mathRuntimeException48 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException16, localizable18, (java.lang.Object[]) throwableArray43);
        org.apache.commons.math.exception.util.Localizable localizable49 = null;
        org.apache.commons.math.exception.util.Localizable localizable50 = null;
        org.apache.commons.math.exception.util.Localizable localizable51 = null;
        org.apache.commons.math.exception.util.Localizable localizable52 = null;
        org.apache.commons.math.exception.util.Localizable localizable53 = null;
        org.apache.commons.math.exception.util.Localizable localizable55 = null;
        org.apache.commons.math.exception.util.Localizable localizable56 = null;
        java.lang.Object[] objArray62 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException63 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable56, objArray62);
        java.text.ParseException parseException64 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable55, objArray62);
        java.io.EOFException eOFException65 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable53, objArray62);
        java.io.EOFException eOFException66 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable52, objArray62);
        org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(localizable51, objArray62);
        java.lang.ArithmeticException arithmeticException68 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable50, objArray62);
        org.apache.commons.math.MathRuntimeException mathRuntimeException69 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException16, localizable49, objArray62);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = mathRuntimeException69.getContext("org.apache.commons.math.MathRuntimeException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException36);
        org.junit.Assert.assertNotNull(eOFException37);
        org.junit.Assert.assertNotNull(concurrentModificationException38);
        org.junit.Assert.assertNotNull(arithmeticException39);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException41);
        org.junit.Assert.assertNotNull(illegalArgumentException42);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(noSuchElementException44);
        org.junit.Assert.assertNotNull(illegalArgumentException45);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException47);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException63);
        org.junit.Assert.assertNotNull(parseException64);
        org.junit.Assert.assertNotNull(eOFException65);
        org.junit.Assert.assertNotNull(eOFException66);
        org.junit.Assert.assertNotNull(arithmeticException68);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable5, objArray13);
        java.lang.Throwable[] throwableArray16 = eOFException15.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException17 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable4, (java.lang.Object[]) throwableArray16);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, (java.lang.Object[]) throwableArray16);
        java.util.ConcurrentModificationException concurrentModificationException19 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, (java.lang.Object[]) throwableArray16);
        java.lang.IllegalArgumentException illegalArgumentException20 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, (java.lang.Object[]) throwableArray16);
        java.util.ConcurrentModificationException concurrentModificationException21 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, (java.lang.Object[]) throwableArray16);
        java.lang.Class<?> wildcardClass22 = throwableArray16.getClass();
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(concurrentModificationException19);
        org.junit.Assert.assertNotNull(illegalArgumentException20);
        org.junit.Assert.assertNotNull(concurrentModificationException21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable5, objArray13);
        java.lang.Throwable[] throwableArray16 = eOFException15.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException17 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable4, (java.lang.Object[]) throwableArray16);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, (java.lang.Object[]) throwableArray16);
        java.util.ConcurrentModificationException concurrentModificationException19 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, (java.lang.Object[]) throwableArray16);
        java.lang.IllegalArgumentException illegalArgumentException20 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, (java.lang.Object[]) throwableArray16);
        java.util.ConcurrentModificationException concurrentModificationException21 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        org.apache.commons.math.exception.util.Localizable localizable28 = null;
        org.apache.commons.math.exception.util.Localizable localizable29 = null;
        org.apache.commons.math.exception.util.Localizable localizable30 = null;
        java.lang.Object[] objArray37 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException38 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable30, objArray37);
        java.lang.ArithmeticException arithmeticException39 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable29, objArray37);
        java.util.ConcurrentModificationException concurrentModificationException40 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable28, objArray37);
        java.util.NoSuchElementException noSuchElementException41 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable27, objArray37);
        java.io.EOFException eOFException42 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable26, objArray37);
        java.lang.ArithmeticException arithmeticException43 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable25, objArray37);
        java.lang.Throwable[] throwableArray44 = arithmeticException43.getSuppressed();
        java.text.ParseException parseException45 = org.apache.commons.math.MathRuntimeException.createParseException(1, localizable24, (java.lang.Object[]) throwableArray44);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException46 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) concurrentModificationException21, localizable22, (java.lang.Object[]) throwableArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(concurrentModificationException19);
        org.junit.Assert.assertNotNull(illegalArgumentException20);
        org.junit.Assert.assertNotNull(concurrentModificationException21);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException38);
        org.junit.Assert.assertNotNull(arithmeticException39);
        org.junit.Assert.assertNotNull(concurrentModificationException40);
        org.junit.Assert.assertNotNull(noSuchElementException41);
        org.junit.Assert.assertNotNull(eOFException42);
        org.junit.Assert.assertNotNull(arithmeticException43);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(parseException45);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException14 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        java.lang.Throwable[] throwableArray17 = mathRuntimeException16.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = mathRuntimeException16.getContext("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(illegalArgumentException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable9 = null;
        org.apache.commons.math.exception.util.Localizable localizable10 = null;
        java.lang.Object[] objArray16 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable10, objArray16);
        java.text.ParseException parseException18 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable9, objArray16);
        java.io.EOFException eOFException19 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable7, objArray16);
        java.lang.IllegalStateException illegalStateException20 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray16);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException21 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable5, objArray16);
        java.util.ConcurrentModificationException concurrentModificationException22 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray16);
        java.lang.ArithmeticException arithmeticException23 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray16);
        java.lang.ArithmeticException arithmeticException24 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable2, objArray16);
        java.util.NoSuchElementException noSuchElementException25 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray16);
        org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray16);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet27 = mathRuntimeException26.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(parseException18);
        org.junit.Assert.assertNotNull(eOFException19);
        org.junit.Assert.assertNotNull(illegalStateException20);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException21);
        org.junit.Assert.assertNotNull(concurrentModificationException22);
        org.junit.Assert.assertNotNull(arithmeticException23);
        org.junit.Assert.assertNotNull(arithmeticException24);
        org.junit.Assert.assertNotNull(noSuchElementException25);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable3, objArray12);
        java.text.ParseException parseException16 = org.apache.commons.math.MathRuntimeException.createParseException(100, localizable2, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray12);
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException29 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray28);
        java.lang.Throwable[] throwableArray30 = concurrentModificationException29.getSuppressed();
        java.lang.IllegalStateException illegalStateException31 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, (java.lang.Object[]) throwableArray30);
        java.util.NoSuchElementException noSuchElementException32 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable20, (java.lang.Object[]) throwableArray30);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException33 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable19, (java.lang.Object[]) throwableArray30);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException17.addMessage(localizable18, (java.lang.Object[]) throwableArray30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(parseException16);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException29);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(illegalStateException31);
        org.junit.Assert.assertNotNull(noSuchElementException32);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException33);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException10 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray9);
        java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, objArray9);
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray9);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable13);
        concurrentModificationException12.addSuppressed((java.lang.Throwable) mathRuntimeException14);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException29 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable21, objArray28);
        java.io.EOFException eOFException30 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable20, objArray28);
        java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable19, objArray28);
        java.lang.ArithmeticException arithmeticException32 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable18, objArray28);
        java.lang.Throwable[] throwableArray33 = arithmeticException32.getSuppressed();
        java.text.ParseException parseException34 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable17, (java.lang.Object[]) throwableArray33);
        mathRuntimeException14.addSuppressed((java.lang.Throwable) parseException34);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException36 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) mathRuntimeException14);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Locale cannot be cast to [Ljava.lang.Object;");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException10);
        org.junit.Assert.assertNotNull(arithmeticException11);
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException29);
        org.junit.Assert.assertNotNull(eOFException30);
        org.junit.Assert.assertNotNull(concurrentModificationException31);
        org.junit.Assert.assertNotNull(arithmeticException32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(parseException34);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray12);
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException18);
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        org.apache.commons.math.exception.util.Localizable localizable28 = null;
        java.lang.Object[] objArray34 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException35 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable28, objArray34);
        java.text.ParseException parseException36 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable27, objArray34);
        java.io.EOFException eOFException37 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable25, objArray34);
        java.lang.IllegalStateException illegalStateException38 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable24, objArray34);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException39 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable23, objArray34);
        java.util.ConcurrentModificationException concurrentModificationException40 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray34);
        java.lang.ArithmeticException arithmeticException41 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable21, objArray34);
        org.apache.commons.math.exception.util.Localizable localizable43 = null;
        org.apache.commons.math.exception.util.Localizable localizable44 = null;
        org.apache.commons.math.exception.util.Localizable localizable45 = null;
        org.apache.commons.math.exception.util.Localizable localizable46 = null;
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        org.apache.commons.math.exception.util.Localizable localizable48 = null;
        java.lang.Object[] objArray55 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException56 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable48, objArray55);
        java.lang.ArithmeticException arithmeticException57 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable47, objArray55);
        java.util.ConcurrentModificationException concurrentModificationException58 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable46, objArray55);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable45, objArray55);
        java.io.EOFException eOFException60 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable44, objArray55);
        java.text.ParseException parseException61 = org.apache.commons.math.MathRuntimeException.createParseException((int) (byte) 1, localizable43, objArray55);
        arithmeticException41.addSuppressed((java.lang.Throwable) parseException61);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException19.setContext("org.apache.commons.math.MathRuntimeException: ", (java.lang.Object) arithmeticException41);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException35);
        org.junit.Assert.assertNotNull(parseException36);
        org.junit.Assert.assertNotNull(eOFException37);
        org.junit.Assert.assertNotNull(illegalStateException38);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException39);
        org.junit.Assert.assertNotNull(concurrentModificationException40);
        org.junit.Assert.assertNotNull(arithmeticException41);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException56);
        org.junit.Assert.assertNotNull(arithmeticException57);
        org.junit.Assert.assertNotNull(concurrentModificationException58);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59);
        org.junit.Assert.assertNotNull(eOFException60);
        org.junit.Assert.assertNotNull(parseException61);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray11);
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray11);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException29 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray28);
        java.text.ParseException parseException30 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable21, objArray28);
        java.lang.IllegalStateException illegalStateException31 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable19, objArray28);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException32 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable18, objArray28);
        org.apache.commons.math.MathRuntimeException mathRuntimeException33 = new org.apache.commons.math.MathRuntimeException(localizable17, objArray28);
        illegalArgumentException16.addSuppressed((java.lang.Throwable) mathRuntimeException33);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException35 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) illegalArgumentException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException29);
        org.junit.Assert.assertNotNull(parseException30);
        org.junit.Assert.assertNotNull(illegalStateException31);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException32);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable7, objArray13);
        java.text.ParseException parseException15 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable6, objArray13);
        java.io.EOFException eOFException16 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, objArray13);
        java.lang.IllegalStateException illegalStateException17 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray13);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException18 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable2, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException19 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray13);
        java.lang.Throwable[] throwableArray20 = concurrentModificationException19.getSuppressed();
        org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray20);
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray33 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable27, objArray33);
        java.text.ParseException parseException35 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable26, objArray33);
        java.io.EOFException eOFException36 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable24, objArray33);
        java.util.NoSuchElementException noSuchElementException37 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable23, objArray33);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException21.addMessage(localizable22, objArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(parseException15);
        org.junit.Assert.assertNotNull(eOFException16);
        org.junit.Assert.assertNotNull(illegalStateException17);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException18);
        org.junit.Assert.assertNotNull(concurrentModificationException19);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException34);
        org.junit.Assert.assertNotNull(parseException35);
        org.junit.Assert.assertNotNull(eOFException36);
        org.junit.Assert.assertNotNull(noSuchElementException37);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray11);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) arithmeticException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.util.NoSuchElementException noSuchElementException14 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, objArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray11);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        java.lang.Object[] objArray32 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException33 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable25, objArray32);
        java.io.EOFException eOFException34 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable24, objArray32);
        java.util.ConcurrentModificationException concurrentModificationException35 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable23, objArray32);
        java.lang.ArithmeticException arithmeticException36 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable22, objArray32);
        java.lang.Throwable[] throwableArray37 = arithmeticException36.getSuppressed();
        java.text.ParseException parseException38 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable21, (java.lang.Object[]) throwableArray37);
        java.text.ParseException parseException39 = org.apache.commons.math.MathRuntimeException.createParseException((int) (byte) 0, localizable19, (java.lang.Object[]) throwableArray37);
        java.util.NoSuchElementException noSuchElementException40 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable17, (java.lang.Object[]) throwableArray37);
        arrayIndexOutOfBoundsException16.addSuppressed((java.lang.Throwable) noSuchElementException40);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException42 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) arrayIndexOutOfBoundsException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(noSuchElementException14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException33);
        org.junit.Assert.assertNotNull(eOFException34);
        org.junit.Assert.assertNotNull(concurrentModificationException35);
        org.junit.Assert.assertNotNull(arithmeticException36);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(parseException38);
        org.junit.Assert.assertNotNull(parseException39);
        org.junit.Assert.assertNotNull(noSuchElementException40);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable7, objArray14);
        java.io.EOFException eOFException16 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable6, objArray14);
        java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray14);
        java.lang.ArithmeticException arithmeticException18 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray14);
        java.lang.Throwable[] throwableArray19 = arithmeticException18.getSuppressed();
        java.text.ParseException parseException20 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable3, (java.lang.Object[]) throwableArray19);
        java.io.EOFException eOFException21 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, (java.lang.Object[]) throwableArray19);
        java.lang.ArithmeticException arithmeticException22 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, (java.lang.Object[]) throwableArray19);
        java.lang.Class<?> wildcardClass23 = arithmeticException22.getClass();
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(eOFException16);
        org.junit.Assert.assertNotNull(concurrentModificationException17);
        org.junit.Assert.assertNotNull(arithmeticException18);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(parseException20);
        org.junit.Assert.assertNotNull(eOFException21);
        org.junit.Assert.assertNotNull(arithmeticException22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable5, objArray12);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray12);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray12);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException17 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray12);
        java.lang.Class<?> wildcardClass19 = objArray12.getClass();
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(parseException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.text.ParseException parseException10 = org.apache.commons.math.MathRuntimeException.createParseException(1, localizable1, objArray8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException11 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) parseException10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(parseException10);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        org.apache.commons.math.exception.util.Localizable localizable8 = null;
        java.lang.Object[] objArray14 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable8, objArray14);
        java.text.ParseException parseException16 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable7, objArray14);
        java.io.EOFException eOFException17 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable5, objArray14);
        java.lang.IllegalStateException illegalStateException18 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray14);
        java.util.ConcurrentModificationException concurrentModificationException19 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray14);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException20 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable2, objArray14);
        java.text.ParseException parseException21 = org.apache.commons.math.MathRuntimeException.createParseException((int) (short) 0, localizable1, objArray14);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(parseException16);
        org.junit.Assert.assertNotNull(eOFException17);
        org.junit.Assert.assertNotNull(illegalStateException18);
        org.junit.Assert.assertNotNull(concurrentModificationException19);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException20);
        org.junit.Assert.assertNotNull(parseException21);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray10);
        java.text.ParseException parseException12 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable3, objArray10);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, objArray10);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, objArray10);
        java.lang.Throwable[] throwableArray15 = eOFException14.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        java.lang.Object[] objArray27 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable21, objArray27);
        java.lang.Throwable[] throwableArray29 = concurrentModificationException28.getSuppressed();
        java.lang.IllegalStateException illegalStateException30 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable20, (java.lang.Object[]) throwableArray29);
        java.lang.ArithmeticException arithmeticException31 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable19, (java.lang.Object[]) throwableArray29);
        org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException(localizable18, (java.lang.Object[]) throwableArray29);
        java.util.ConcurrentModificationException concurrentModificationException33 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable17, (java.lang.Object[]) throwableArray29);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) eOFException14, localizable16, (java.lang.Object[]) throwableArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException11);
        org.junit.Assert.assertNotNull(parseException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(illegalStateException30);
        org.junit.Assert.assertNotNull(arithmeticException31);
        org.junit.Assert.assertNotNull(concurrentModificationException33);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        java.lang.Object[] objArray7 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException8 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray7);
        java.lang.Throwable[] throwableArray9 = concurrentModificationException8.getSuppressed();
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, (java.lang.Object[]) throwableArray9);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException11 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) concurrentModificationException10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(concurrentModificationException10);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable20, objArray26);
        java.text.ParseException parseException28 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable19, objArray26);
        java.lang.IllegalArgumentException illegalArgumentException29 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable17, objArray26);
        java.lang.ArithmeticException arithmeticException30 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, objArray26);
        org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException14, localizable15, objArray26);
        org.apache.commons.math.exception.util.Localizable localizable32 = null;
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        java.lang.Object[] objArray42 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException43 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable35, objArray42);
        java.lang.ArithmeticException arithmeticException44 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable34, objArray42);
        java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable33, objArray42);
        org.apache.commons.math.MathRuntimeException mathRuntimeException46 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException31, localizable32, objArray42);
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        org.apache.commons.math.exception.util.Localizable localizable48 = null;
        org.apache.commons.math.exception.util.Localizable localizable49 = null;
        java.lang.Object[] objArray55 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException56 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable49, objArray55);
        java.lang.ArithmeticException arithmeticException57 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable48, objArray55);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException46.addMessage(localizable47, objArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException27);
        org.junit.Assert.assertNotNull(parseException28);
        org.junit.Assert.assertNotNull(illegalArgumentException29);
        org.junit.Assert.assertNotNull(arithmeticException30);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException43);
        org.junit.Assert.assertNotNull(arithmeticException44);
        org.junit.Assert.assertNotNull(concurrentModificationException45);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException56);
        org.junit.Assert.assertNotNull(arithmeticException57);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray6 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException7 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray6);
        java.lang.Throwable[] throwableArray8 = concurrentModificationException7.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException9 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) concurrentModificationException7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException7);
        org.junit.Assert.assertNotNull(throwableArray8);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException14 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, objArray11);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) arrayIndexOutOfBoundsException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(illegalArgumentException14);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.lang.Throwable[] throwableArray14 = concurrentModificationException13.getSuppressed();
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, (java.lang.Object[]) throwableArray14);
        java.lang.ArithmeticException arithmeticException16 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(localizable3, (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        java.lang.Object[] objArray29 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException30 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable23, objArray29);
        java.text.ParseException parseException31 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable22, objArray29);
        java.lang.IllegalArgumentException illegalArgumentException32 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable20, objArray29);
        java.lang.ArithmeticException arithmeticException33 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable19, objArray29);
        org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException17, localizable18, objArray29);
        java.lang.IllegalStateException illegalStateException35 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, objArray29);
        java.util.ConcurrentModificationException concurrentModificationException36 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray29);
        java.lang.ArithmeticException arithmeticException37 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray29);
        java.lang.Class<?> wildcardClass38 = objArray29.getClass();
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(arithmeticException16);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException30);
        org.junit.Assert.assertNotNull(parseException31);
        org.junit.Assert.assertNotNull(illegalArgumentException32);
        org.junit.Assert.assertNotNull(arithmeticException33);
        org.junit.Assert.assertNotNull(illegalStateException35);
        org.junit.Assert.assertNotNull(concurrentModificationException36);
        org.junit.Assert.assertNotNull(arithmeticException37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.lang.Throwable[] throwableArray13 = concurrentModificationException12.getSuppressed();
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, (java.lang.Object[]) throwableArray13);
        java.lang.ArithmeticException arithmeticException15 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable2, (java.lang.Object[]) throwableArray13);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        java.lang.Object[] objArray28 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException29 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable22, objArray28);
        java.text.ParseException parseException30 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable21, objArray28);
        java.lang.IllegalArgumentException illegalArgumentException31 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable19, objArray28);
        java.lang.ArithmeticException arithmeticException32 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable18, objArray28);
        org.apache.commons.math.MathRuntimeException mathRuntimeException33 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException16, localizable17, objArray28);
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.exception.util.Localizable localizable35 = null;
        org.apache.commons.math.exception.util.Localizable localizable36 = null;
        org.apache.commons.math.exception.util.Localizable localizable37 = null;
        java.lang.Object[] objArray44 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException45 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable37, objArray44);
        java.lang.ArithmeticException arithmeticException46 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable36, objArray44);
        java.util.ConcurrentModificationException concurrentModificationException47 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable35, objArray44);
        org.apache.commons.math.MathRuntimeException mathRuntimeException48 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException33, localizable34, objArray44);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException49 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, objArray44);
        org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray44);
        org.apache.commons.math.MathRuntimeException mathRuntimeException51 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException50);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet52 = mathRuntimeException50.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(arithmeticException15);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException29);
        org.junit.Assert.assertNotNull(parseException30);
        org.junit.Assert.assertNotNull(illegalArgumentException31);
        org.junit.Assert.assertNotNull(arithmeticException32);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException45);
        org.junit.Assert.assertNotNull(arithmeticException46);
        org.junit.Assert.assertNotNull(concurrentModificationException47);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException49);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        java.lang.Object[] objArray8 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException9 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray8);
        java.lang.Throwable[] throwableArray10 = concurrentModificationException9.getSuppressed();
        java.io.EOFException eOFException11 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable1, (java.lang.Object[]) throwableArray10);
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        org.apache.commons.math.exception.util.Localizable localizable14 = null;
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        java.lang.Object[] objArray24 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException25 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable17, objArray24);
        java.lang.ArithmeticException arithmeticException26 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable16, objArray24);
        java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable15, objArray24);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException28 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable14, objArray24);
        java.io.EOFException eOFException29 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable13, objArray24);
        illegalStateException12.addSuppressed((java.lang.Throwable) eOFException29);
        java.lang.Class<?> wildcardClass31 = eOFException29.getClass();
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(eOFException11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException25);
        org.junit.Assert.assertNotNull(arithmeticException26);
        org.junit.Assert.assertNotNull(concurrentModificationException27);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException28);
        org.junit.Assert.assertNotNull(eOFException29);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException12 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable5, objArray11);
        java.text.ParseException parseException13 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable4, objArray11);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray11);
        java.lang.IllegalStateException illegalStateException15 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray11);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        java.lang.Object[] objArray27 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException28 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable20, objArray27);
        java.io.EOFException eOFException29 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable19, objArray27);
        java.util.ConcurrentModificationException concurrentModificationException30 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable18, objArray27);
        java.lang.ArithmeticException arithmeticException31 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable17, objArray27);
        illegalArgumentException16.addSuppressed((java.lang.Throwable) arithmeticException31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.IllegalArgumentException illegalArgumentException33 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) illegalArgumentException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException12);
        org.junit.Assert.assertNotNull(parseException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(illegalStateException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException28);
        org.junit.Assert.assertNotNull(eOFException29);
        org.junit.Assert.assertNotNull(concurrentModificationException30);
        org.junit.Assert.assertNotNull(arithmeticException31);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.NoSuchElementException noSuchElementException15 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable1, objArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray11);
        java.lang.Throwable[] throwableArray17 = mathRuntimeException16.getSuppressed();
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        org.apache.commons.math.exception.util.Localizable localizable28 = null;
        java.lang.Object[] objArray35 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException36 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable28, objArray35);
        java.io.EOFException eOFException37 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable27, objArray35);
        java.util.ConcurrentModificationException concurrentModificationException38 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable26, objArray35);
        java.lang.ArithmeticException arithmeticException39 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable25, objArray35);
        java.lang.Throwable[] throwableArray40 = arithmeticException39.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException41 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable24, (java.lang.Object[]) throwableArray40);
        java.lang.IllegalArgumentException illegalArgumentException42 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable23, (java.lang.Object[]) throwableArray40);
        java.lang.Throwable[] throwableArray43 = illegalArgumentException42.getSuppressed();
        java.util.NoSuchElementException noSuchElementException44 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable22, (java.lang.Object[]) throwableArray43);
        java.lang.IllegalArgumentException illegalArgumentException45 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable21, (java.lang.Object[]) throwableArray43);
        org.apache.commons.math.MathRuntimeException mathRuntimeException46 = new org.apache.commons.math.MathRuntimeException(localizable20, (java.lang.Object[]) throwableArray43);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException47 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable19, (java.lang.Object[]) throwableArray43);
        org.apache.commons.math.MathRuntimeException mathRuntimeException48 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException16, localizable18, (java.lang.Object[]) throwableArray43);
        org.apache.commons.math.exception.util.Localizable localizable49 = null;
        org.apache.commons.math.exception.util.Localizable localizable50 = null;
        org.apache.commons.math.exception.util.Localizable localizable51 = null;
        java.lang.Object[] objArray57 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException58 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable51, objArray57);
        java.lang.Throwable[] throwableArray59 = concurrentModificationException58.getSuppressed();
        java.util.ConcurrentModificationException concurrentModificationException60 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable50, (java.lang.Object[]) throwableArray59);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException16.addMessage(localizable49, (java.lang.Object[]) throwableArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(noSuchElementException15);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException36);
        org.junit.Assert.assertNotNull(eOFException37);
        org.junit.Assert.assertNotNull(concurrentModificationException38);
        org.junit.Assert.assertNotNull(arithmeticException39);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException41);
        org.junit.Assert.assertNotNull(illegalArgumentException42);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(noSuchElementException44);
        org.junit.Assert.assertNotNull(illegalArgumentException45);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException47);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException58);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(concurrentModificationException60);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable7, objArray13);
        java.text.ParseException parseException15 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable6, objArray13);
        java.lang.IllegalStateException illegalStateException16 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException17 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable3, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException18 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable2, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException(localizable1, objArray13);
        org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray13);
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        java.lang.Object[] objArray32 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException33 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable26, objArray32);
        java.text.ParseException parseException34 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable25, objArray32);
        java.lang.IllegalArgumentException illegalArgumentException35 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable23, objArray32);
        java.util.NoSuchElementException noSuchElementException36 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable22, objArray32);
        org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(localizable21, objArray32);
        java.lang.Throwable[] throwableArray38 = mathRuntimeException37.getSuppressed();
        mathRuntimeException20.addSuppressed((java.lang.Throwable) mathRuntimeException37);
        java.lang.IllegalArgumentException illegalArgumentException40 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) mathRuntimeException20);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet41 = mathRuntimeException20.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(parseException15);
        org.junit.Assert.assertNotNull(illegalStateException16);
        org.junit.Assert.assertNotNull(illegalArgumentException17);
        org.junit.Assert.assertNotNull(illegalArgumentException18);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException33);
        org.junit.Assert.assertNotNull(parseException34);
        org.junit.Assert.assertNotNull(illegalArgumentException35);
        org.junit.Assert.assertNotNull(noSuchElementException36);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(illegalArgumentException40);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        java.util.NoSuchElementException noSuchElementException14 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable15 = null;
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        java.lang.Object[] objArray25 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException26 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable18, objArray25);
        java.io.EOFException eOFException27 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable17, objArray25);
        java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable16, objArray25);
        java.lang.ArithmeticException arithmeticException29 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable15, objArray25);
        noSuchElementException14.addSuppressed((java.lang.Throwable) arithmeticException29);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arithmeticException29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(noSuchElementException14);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException26);
        org.junit.Assert.assertNotNull(eOFException27);
        org.junit.Assert.assertNotNull(concurrentModificationException28);
        org.junit.Assert.assertNotNull(arithmeticException29);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray9 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray9);
        java.lang.Throwable[] throwableArray11 = concurrentModificationException10.getSuppressed();
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) throwableArray11);
        java.lang.ArithmeticException arithmeticException13 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable1, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.exception.util.Localizable localizable17 = null;
        org.apache.commons.math.exception.util.Localizable localizable18 = null;
        org.apache.commons.math.exception.util.Localizable localizable19 = null;
        org.apache.commons.math.exception.util.Localizable localizable20 = null;
        org.apache.commons.math.exception.util.Localizable localizable21 = null;
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        java.lang.Object[] objArray30 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException31 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable23, objArray30);
        java.lang.ArithmeticException arithmeticException32 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable22, objArray30);
        java.util.ConcurrentModificationException concurrentModificationException33 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable21, objArray30);
        java.util.NoSuchElementException noSuchElementException34 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable20, objArray30);
        java.io.EOFException eOFException35 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable19, objArray30);
        java.lang.ArithmeticException arithmeticException36 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable18, objArray30);
        java.lang.Throwable[] throwableArray37 = arithmeticException36.getSuppressed();
        java.text.ParseException parseException38 = org.apache.commons.math.MathRuntimeException.createParseException(1, localizable17, (java.lang.Object[]) throwableArray37);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException14.setContext("hi!", (java.lang.Object) throwableArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(arithmeticException13);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException31);
        org.junit.Assert.assertNotNull(arithmeticException32);
        org.junit.Assert.assertNotNull(concurrentModificationException33);
        org.junit.Assert.assertNotNull(noSuchElementException34);
        org.junit.Assert.assertNotNull(eOFException35);
        org.junit.Assert.assertNotNull(arithmeticException36);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(parseException38);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.lang.ArithmeticException arithmeticException15 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable5, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray13);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException17 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable3, objArray13);
        java.io.EOFException eOFException18 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray13);
        java.text.ParseException parseException19 = org.apache.commons.math.MathRuntimeException.createParseException((int) (byte) 1, localizable1, objArray13);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException20 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) parseException19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(arithmeticException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException17);
        org.junit.Assert.assertNotNull(eOFException18);
        org.junit.Assert.assertNotNull(parseException19);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0);
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException13 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable6, objArray12);
        java.lang.IllegalArgumentException illegalArgumentException14 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable5, objArray12);
        java.lang.ArithmeticException arithmeticException15 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        // The following exception was thrown during execution in test generation
        try {
            mathRuntimeException1.addMessage(localizable2, objArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException13);
        org.junit.Assert.assertNotNull(illegalArgumentException14);
        org.junit.Assert.assertNotNull(arithmeticException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable5, objArray13);
        java.lang.Throwable[] throwableArray16 = eOFException15.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException17 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable4, (java.lang.Object[]) throwableArray16);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, (java.lang.Object[]) throwableArray16);
        java.util.ConcurrentModificationException concurrentModificationException19 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, (java.lang.Object[]) throwableArray16);
        java.lang.IllegalArgumentException illegalArgumentException20 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = mathRuntimeException21.getContext("org.apache.commons.math.MathRuntimeException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(concurrentModificationException19);
        org.junit.Assert.assertNotNull(illegalArgumentException20);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable5, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray13);
        java.lang.ArithmeticException arithmeticException17 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray13);
        java.text.ParseException parseException18 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable2, objArray13);
        java.lang.ArithmeticException arithmeticException19 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray13);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException20 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) arithmeticException19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(arithmeticException17);
        org.junit.Assert.assertNotNull(parseException18);
        org.junit.Assert.assertNotNull(arithmeticException19);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        java.lang.Object[] objArray1 = new java.lang.Object[] {};
        org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(localizable0, objArray1);
        org.apache.commons.math.MathRuntimeException mathRuntimeException3 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException2);
        java.lang.Throwable[] throwableArray4 = mathRuntimeException2.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = mathRuntimeException2.getContext("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        java.lang.Object[] objArray10 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException11 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray10);
        java.io.EOFException eOFException12 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable2, objArray10);
        java.lang.Throwable[] throwableArray13 = eOFException12.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException14 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable1, (java.lang.Object[]) throwableArray13);
        java.lang.Throwable[] throwableArray15 = arrayIndexOutOfBoundsException14.getSuppressed();
        org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable0, (java.lang.Object[]) throwableArray15);
        org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException16);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet18 = mathRuntimeException17.getContextKeys();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: This class is deprecated; calling this method is a bug.");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException11);
        org.junit.Assert.assertNotNull(eOFException12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException14);
        org.junit.Assert.assertNotNull(throwableArray15);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray11);
        java.lang.IllegalArgumentException illegalArgumentException16 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException17 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) illegalArgumentException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(illegalArgumentException16);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        java.lang.Object[] objArray12 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException13 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable5, objArray12);
        java.io.EOFException eOFException14 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, objArray12);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable3, objArray12);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable2, objArray12);
        java.lang.IllegalStateException illegalStateException17 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable1, objArray12);
        java.lang.IllegalStateException illegalStateException18 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable0, objArray12);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException13);
        org.junit.Assert.assertNotNull(eOFException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16);
        org.junit.Assert.assertNotNull(illegalStateException17);
        org.junit.Assert.assertNotNull(illegalStateException18);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        org.apache.commons.math.exception.util.Localizable localizable7 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { (-1.0f), (byte) 1, 100, (short) 10, (-1.0f) };
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable7, objArray13);
        java.text.ParseException parseException15 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', localizable6, objArray13);
        java.io.EOFException eOFException16 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable4, objArray13);
        java.lang.IllegalStateException illegalStateException17 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, objArray13);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException18 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable2, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException19 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray13);
        java.lang.ArithmeticException arithmeticException20 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, objArray13);
        org.apache.commons.math.exception.util.Localizable localizable22 = null;
        org.apache.commons.math.exception.util.Localizable localizable23 = null;
        org.apache.commons.math.exception.util.Localizable localizable24 = null;
        org.apache.commons.math.exception.util.Localizable localizable25 = null;
        org.apache.commons.math.exception.util.Localizable localizable26 = null;
        org.apache.commons.math.exception.util.Localizable localizable27 = null;
        java.lang.Object[] objArray34 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException35 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable27, objArray34);
        java.lang.ArithmeticException arithmeticException36 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable26, objArray34);
        java.util.ConcurrentModificationException concurrentModificationException37 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable25, objArray34);
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException38 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable24, objArray34);
        java.io.EOFException eOFException39 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable23, objArray34);
        java.text.ParseException parseException40 = org.apache.commons.math.MathRuntimeException.createParseException((int) (byte) 1, localizable22, objArray34);
        arithmeticException20.addSuppressed((java.lang.Throwable) parseException40);
        org.apache.commons.math.exception.util.Localizable localizable42 = null;
        org.apache.commons.math.exception.util.Localizable localizable43 = null;
        org.apache.commons.math.exception.util.Localizable localizable44 = null;
        org.apache.commons.math.exception.util.Localizable localizable45 = null;
        org.apache.commons.math.exception.util.Localizable localizable46 = null;
        org.apache.commons.math.exception.util.Localizable localizable47 = null;
        org.apache.commons.math.exception.util.Localizable localizable48 = null;
        org.apache.commons.math.exception.util.Localizable localizable49 = null;
        org.apache.commons.math.exception.util.Localizable localizable50 = null;
        java.lang.Object[] objArray57 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException58 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable50, objArray57);
        java.lang.ArithmeticException arithmeticException59 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable49, objArray57);
        java.util.ConcurrentModificationException concurrentModificationException60 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable48, objArray57);
        java.util.NoSuchElementException noSuchElementException61 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable47, objArray57);
        java.util.ConcurrentModificationException concurrentModificationException62 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable46, objArray57);
        java.lang.IllegalArgumentException illegalArgumentException63 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable45, objArray57);
        java.io.EOFException eOFException64 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable44, objArray57);
        java.io.EOFException eOFException65 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable43, objArray57);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.MathRuntimeException mathRuntimeException66 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) arithmeticException20, localizable42, objArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[-1.0, 1, 100, 10, -1.0]");
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(parseException15);
        org.junit.Assert.assertNotNull(eOFException16);
        org.junit.Assert.assertNotNull(illegalStateException17);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException18);
        org.junit.Assert.assertNotNull(concurrentModificationException19);
        org.junit.Assert.assertNotNull(arithmeticException20);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException35);
        org.junit.Assert.assertNotNull(arithmeticException36);
        org.junit.Assert.assertNotNull(concurrentModificationException37);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException38);
        org.junit.Assert.assertNotNull(eOFException39);
        org.junit.Assert.assertNotNull(parseException40);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException58);
        org.junit.Assert.assertNotNull(arithmeticException59);
        org.junit.Assert.assertNotNull(concurrentModificationException60);
        org.junit.Assert.assertNotNull(noSuchElementException61);
        org.junit.Assert.assertNotNull(concurrentModificationException62);
        org.junit.Assert.assertNotNull(illegalArgumentException63);
        org.junit.Assert.assertNotNull(eOFException64);
        org.junit.Assert.assertNotNull(eOFException65);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        java.lang.Object[] objArray11 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException12 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, objArray11);
        java.io.EOFException eOFException13 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable3, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException14 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray11);
        java.util.ConcurrentModificationException concurrentModificationException15 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable1, objArray11);
        java.io.EOFException eOFException16 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable0, objArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException17 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) eOFException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException12);
        org.junit.Assert.assertNotNull(eOFException13);
        org.junit.Assert.assertNotNull(concurrentModificationException14);
        org.junit.Assert.assertNotNull(concurrentModificationException15);
        org.junit.Assert.assertNotNull(eOFException16);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.io.EOFException eOFException15 = org.apache.commons.math.MathRuntimeException.createEOFException(localizable5, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray13);
        java.lang.ArithmeticException arithmeticException17 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable3, objArray13);
        java.lang.Throwable[] throwableArray18 = arithmeticException17.getSuppressed();
        java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException19 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable2, (java.lang.Object[]) throwableArray18);
        java.lang.IllegalArgumentException illegalArgumentException20 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, (java.lang.Object[]) throwableArray18);
        java.lang.Throwable[] throwableArray21 = illegalArgumentException20.getSuppressed();
        java.lang.ArithmeticException arithmeticException22 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable0, (java.lang.Object[]) throwableArray21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = arithmeticException22.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(eOFException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(arithmeticException17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException19);
        org.junit.Assert.assertNotNull(illegalArgumentException20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(arithmeticException22);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.exception.util.Localizable localizable1 = null;
        org.apache.commons.math.exception.util.Localizable localizable2 = null;
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.exception.util.Localizable localizable4 = null;
        org.apache.commons.math.exception.util.Localizable localizable5 = null;
        org.apache.commons.math.exception.util.Localizable localizable6 = null;
        java.lang.Object[] objArray13 = new java.lang.Object[] { 100L, '4', (byte) 10, 10L, 10, 'a' };
        java.lang.IllegalStateException illegalStateException14 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, objArray13);
        java.lang.ArithmeticException arithmeticException15 = org.apache.commons.math.MathRuntimeException.createArithmeticException(localizable5, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException16 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable4, objArray13);
        java.util.NoSuchElementException noSuchElementException17 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable3, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException18 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable2, objArray13);
        java.lang.IllegalArgumentException illegalArgumentException19 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(localizable1, objArray13);
        java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(localizable0, objArray13);
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException21 = org.apache.commons.math.MathRuntimeException.createIOException((java.lang.Throwable) concurrentModificationException20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[100, 4, 10, 10, 10, a]");
        org.junit.Assert.assertNotNull(illegalStateException14);
        org.junit.Assert.assertNotNull(arithmeticException15);
        org.junit.Assert.assertNotNull(concurrentModificationException16);
        org.junit.Assert.assertNotNull(noSuchElementException17);
        org.junit.Assert.assertNotNull(concurrentModificationException18);
        org.junit.Assert.assertNotNull(illegalArgumentException19);
        org.junit.Assert.assertNotNull(concurrentModificationException20);
    }
}

