/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 21:31:25 GMT 2021
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Stroke;
import java.awt.geom.Area;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import javax.swing.JScrollPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.TickUnits;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.SortOrder;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.general.Dataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CategoryPlot_ESTest extends CategoryPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedRangeCategoryPlot0.handleClick(21, 1859, plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot0.getCategories();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis("?", stringArray0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, subCategoryAxis0, symbolAxis0, stackedBarRenderer0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation(10);
      categoryPlot0.setDomainAxisLocation(500, axisLocation0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("Category Plot");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      combinedRangeCategoryPlot0.isRangeZoomable();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.isDomainZoomable();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2110.926230620005));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.getRangeMarkers(layer0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1601.0, 1601.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.getRangeAxis();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      combinedRangeCategoryPlot0.getOrientation();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      combinedRangeCategoryPlot0.getFixedLegendItems();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getFixedDomainAxisSpace();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.4, "");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[2];
      CategoryAxis categoryAxis0 = new CategoryAxis();
      categoryAxisArray0[0] = categoryAxis0;
      combinedRangeCategoryPlot0.setDomainAxes(categoryAxisArray0);
      combinedRangeCategoryPlot0.getDomainAxisForDataset((-3259));
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDomainAxisEdge();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.4, "");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      combinedRangeCategoryPlot0.setDataset((CategoryDataset) defaultStatisticalCategoryDataset0);
      combinedRangeCategoryPlot0.getDataset();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.zoom(70.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisLocation axisLocation0 = categoryPlot0.getRangeAxisLocation((-1));
      // Undeclared exception!
      try { 
        categoryPlot0.setRangeAxisLocation((-1), axisLocation0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F, "fV2$Ev");
      // Undeclared exception!
      try { 
        categoryPlot0.setRangeAxis((-1), (ValueAxis) cyclicNumberAxis0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setDomainAxis((-1294), categoryAxis0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setDomainAxes((CategoryAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.handleClick(0, 0, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.calculateAxisSpace((Graphics2D) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addRangeMarker((Marker) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, (double) areaRenderer0.ZERO);
      CategoryPlot categoryPlot0 = null;
      try {
        categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis0, cyclicNumberAxis0, levelRenderer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDataRange((ValueAxis) null);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, 1.0F, "pnS&$");
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ValueMarker valueMarker0 = new ValueMarker(56, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_OUTLINE_STROKE);
      combinedRangeCategoryPlot0.addRangeMarker(56, (Marker) valueMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      ValueMarker valueMarker0 = new ValueMarker(10);
      combinedRangeCategoryPlot0.addRangeMarker(10, (Marker) valueMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.getDomainMarkers(365, layer0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), 680, "PRINT");
      CategoryMarker categoryMarker0 = new CategoryMarker("ZOOM_RESET_BOTH", cyclicNumberAxis0.DEFAULT_TICK_LABEL_PAINT, cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addDomainMarker(1793, categoryMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      combinedRangeCategoryPlot0.addDomainMarker(6, categoryMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(tickUnits0, (Dataset) null);
      categoryPlot0.datasetChanged(datasetChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(tickUnits0, (Dataset) null);
      combinedRangeCategoryPlot0.datasetChanged(datasetChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRenderer((-1542), (CategoryItemRenderer) groupedStackedBarRenderer0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDataset(0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) null);
      combinedRangeCategoryPlot0.configureRangeAxes();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("", zoneInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      combinedRangeCategoryPlot0.configureRangeAxes();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeAxisEdge(16);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getDomainAxisLocation();
      categoryPlot0.setRangeAxisLocation(categoryPlot0.MINIMUM_WIDTH_TO_DRAW, axisLocation0, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AxisLocation axisLocation0 = categoryPlot0.getRangeAxisLocation(0);
      categoryPlot0.setRangeAxisLocation(0, axisLocation0, true);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.4, "");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.configureDomainAxes();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setDomainAxisLocation(44, (AxisLocation) null, false);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation(3);
      combinedDomainCategoryPlot0.setDomainAxisLocation(0, axisLocation0, true);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainAxisLocation(3);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.4, "");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getDomainAxisLocation((-3259));
      combinedRangeCategoryPlot0.setRangeAxisLocation(axisLocation0, true);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.setDomainAxis(734, (CategoryAxis) categoryAxis3D0, false);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setDomainAxis(500, categoryAxis0, true);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getDomainAxis((-1));
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), 680, "PRINT");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation((-546));
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0, false);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.isDomainGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      combinedRangeCategoryPlot0.setDomainAxis(0, (CategoryAxis) extendedCategoryAxis0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setAnchorValue((-1.0), true);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setAnchorValue(200.34, false);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-205.32), 1191.96296);
      categoryPlot0.setRangeAxis(10, (ValueAxis) cyclicNumberAxis0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      combinedDomainCategoryPlot0.drawRangeMarkers((Graphics2D) null, rectangle0, (-1514), layer0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("%z:`L9P{[i:M{S", 10, 1.0F);
      combinedDomainCategoryPlot0.removeAnnotation(categoryTextAnnotation0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setRangeCrosshairPaint(categoryPlot0.DEFAULT_GRIDLINE_PAINT);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeCrosshairLockedOnData(false);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.setRangeCrosshairVisible(true);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis("?", stringArray0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, subCategoryAxis0, symbolAxis0, stackedBarRenderer0);
      categoryPlot0.setRangeCrosshairVisible(false);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.clearRangeMarkers(500);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getRangeMarkers(274, (Layer) null);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Stroke stroke0 = combinedDomainCategoryPlot0.getRangeGridlineStroke();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(true, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, stroke0, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, 0.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker((Marker) categoryMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      combinedDomainCategoryPlot0.addRangeMarker((-1), (Marker) intervalMarker0, (Layer) null);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainMarkers(1991, (Layer) null);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      categoryPlot0.getDomainMarkers(723, layer0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.clearDomainMarkers();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      categoryPlot0.addDomainMarker(categoryMarker0, layer0);
      categoryPlot0.addDomainMarker(categoryMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addDomainMarker(10, categoryMarker0, (Layer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addDomainMarker((CategoryMarker) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Area area0 = new Area();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(area0);
      combinedDomainCategoryPlot0.rendererChanged(rendererChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom(10.0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom((-1.0));
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getLegendItems();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.setRangeGridlinePaint(numberAxis0.DEFAULT_AXIS_LABEL_PAINT);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeGridlinesVisible(false);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      combinedRangeCategoryPlot0.setRangeGridlinesVisible(true);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DateAxis dateAxis0 = new DateAxis("Category Plot");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      combinedRangeCategoryPlot0.setDomainGridlineStroke(categoryPlot0.DEFAULT_OUTLINE_STROKE);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAnchor categoryAnchor0 = categoryPlot0.getDomainGridlinePosition();
      combinedRangeCategoryPlot0.setDomainGridlinePosition(categoryAnchor0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.setDomainGridlinesVisible(true);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setDomainGridlinesVisible(false);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRowRenderingOrder((SortOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      combinedDomainCategoryPlot0.setColumnRenderingOrder(sortOrder0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1191.96, 0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setDatasetRenderingOrder((DatasetRenderingOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[7];
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("Category Plot");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      combinedRangeCategoryPlot0.getDomainAxisForDataset(995);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot0.getDataset(499);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRangeAxisLocation((AxisLocation) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      ValueAxis[] valueAxisArray0 = new ValueAxis[1];
      combinedRangeCategoryPlot0.setRangeAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedRangeCategoryPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.clearDomainAxes();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot0.clearDomainAxes();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainAxisLocation(0, (AxisLocation) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDomainAxisEdge(10);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[8];
      combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.getDomainAxis(10);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3757.167933428);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis0, cyclicNumberAxis0, levelRenderer0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDomainGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      combinedRangeCategoryPlot0.getFixedRangeAxisSpace();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Gfr~lS~!$9}06{nV*E9");
      categoryPlot0.getDomainAxisIndex(categoryAxis3D0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      combinedDomainCategoryPlot0.setRenderer((CategoryItemRenderer) lineRenderer3D0, true);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis("?", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      combinedRangeCategoryPlot0.clearAnnotations();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDataset();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setWeight((-1));
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, 3, 5, 10, (-1), 1, 22, true, true, true, true, false, false);
      Point point0 = chartPanel0.getLocation();
      combinedDomainCategoryPlot0.zoomDomainAxes(135.0, (double) 0, plotRenderingInfo0, (Point2D) point0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.setRangeCrosshairValue((double) 1.0F);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.getRangeCrosshairPaint();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.4, "");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      combinedRangeCategoryPlot0.setDataset((CategoryDataset) defaultStatisticalCategoryDataset0);
      combinedRangeCategoryPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Area area0 = new Area();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      Rectangle2D rectangle2D0 = area0.getBounds2D();
      combinedDomainCategoryPlot0.drawDomainGridlines((Graphics2D) null, rectangle2D0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeCrosshairValue();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getRangeAxisEdge();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("", zoneInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      combinedRangeCategoryPlot0.setRenderer((CategoryItemRenderer) intervalBarRenderer0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      categoryPlot0.setRenderer(10, (CategoryItemRenderer) ganttRenderer0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(layer0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDatasetRenderingOrder();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation(10);
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2110.926230620005));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.setFixedRangeAxisSpace((AxisSpace) null);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setFixedDomainAxisSpace((AxisSpace) null);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("SerialDate.monthCodeToQuarter: invalid month code.");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.getDrawSharedDomainAxis();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getAxisOffset();
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedRangeCategoryPlot0.setRangeAxisLocation(axisLocation0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getAnchorValue();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2110.926230620005));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.getRangeAxisCount();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ValueMarker valueMarker0 = new ValueMarker(1436.9209);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getAnnotations();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getRangeGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart(" Bp7", combinedDomainCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      jFreeChart0.createBufferedImage(200, 10, 10, chartRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setDomainAxisLocation((-1079), axisLocation0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setDrawSharedDomainAxis(true);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDatasetCount();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.setRangeCrosshairValue(0.05, true);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation((-2207));
      combinedDomainCategoryPlot0.setRangeAxisLocation(68, axisLocation0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }
}
