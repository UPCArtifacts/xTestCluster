/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 21:59:42 GMT 2021
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Stroke;
import java.awt.color.ColorSpace;
import java.awt.color.ICC_Profile;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Area;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.DirectColorModel;
import java.awt.image.IndexColorModel;
import java.awt.image.LookupOp;
import java.awt.image.RescaleOp;
import java.awt.image.ShortLookupTable;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.SimpleTimeZone;
import java.util.Stack;
import java.util.TimeZone;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTextPane;
import javax.swing.JTree;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.JTableHeader;
import javax.swing.text.JTextComponent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.AxisState;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.NumberTick;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.PeriodAxisLabelInfo;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.TickUnits;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.AxisChangeEvent;
import org.jfree.chart.event.MarkerChangeEvent;
import org.jfree.chart.event.PlotChangeEvent;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.CrosshairState;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.DefaultDrawingSupplier;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.text.TextAnchor;
import org.jfree.chart.title.TextTitle;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.SortOrder;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.Dataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DefaultKeyedValueDataset;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Minute;
import org.jfree.data.time.Second;
import org.jfree.data.time.Year;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CategoryPlot_ESTest extends CategoryPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      axisLocation0.getOpposite();
      AxisLocation.getOpposite(axisLocation0);
      combinedDomainCategoryPlot0.setDomainAxisLocation(2142501629, axisLocation0);
      boolean boolean0 = CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
      int int0 = (-35);
      combinedDomainCategoryPlot0.getRangeAxisForDataset(int0);
      AxisSpace axisSpace0 = new AxisSpace();
      combinedDomainCategoryPlot0.setFixedDomainAxisSpace(axisSpace0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getItemStroke(10, 10);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CategoryAnchor categoryAnchor0 = CategoryAnchor.START;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      AxisLocation axisLocation2 = AxisLocation.getOpposite(axisLocation1);
      combinedDomainCategoryPlot0.setDomainAxisLocation(488, axisLocation2);
      combinedDomainCategoryPlot0.isRangeCrosshairVisible();
      combinedDomainCategoryPlot0.getRangeAxisForDataset(488);
      combinedDomainCategoryPlot0.clearDomainMarkers(2144768750);
      combinedDomainCategoryPlot0.setRangeAxis(488, (ValueAxis) null, true);
      combinedDomainCategoryPlot0.setRangeAxisLocation(488, axisLocation2, true);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      categoryAxis0.setCategoryLabelPositionOffset((-245));
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      AxisLocation axisLocation2 = axisLocation1.getOpposite();
      AxisLocation.getOpposite(axisLocation2);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainAxisLocation((-1656), axisLocation2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getPlotType();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Category Plot");
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.getDomainAxisForDataset(1191);
      combinedRangeCategoryPlot1.getDomainAxisIndex((CategoryAxis) null);
      combinedRangeCategoryPlot1.getRangeCrosshairPaint();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot1.addRangeMarker((-684), (Marker) null, layer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      int int0 = (-1260);
      int int1 = 2054;
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.mapDatasetToRangeAxis((-1260), 2054);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeGridlinesVisible(true);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 10, 3526.490045770016);
      combinedDomainCategoryPlot0.addAnnotation(categoryTextAnnotation0);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.clone();
      combinedDomainCategoryPlot0.getRenderer(10);
      combinedDomainCategoryPlot1.isDomainZoomable();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("org.jfree.chart.renderer.xy.StandardXYItemRenderer");
      categoryAxis3D0.setLabelToolTip("org.jfree.chart.renderer.xy.StandardXYItemRenderer");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "#@5PP fJd");
      CategoryPlot categoryPlot1 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, ganttRenderer0);
      categoryPlot0.getDomainGridlineStroke();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("#@5PP fJd", 1.0F, 1191.96);
      combinedDomainCategoryPlot0.removeAnnotation(categoryTextAnnotation0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      AxisLocation axisLocation0 = categoryPlot0.getRangeAxisLocation();
      AxisLocation axisLocation1 = AxisLocation.getOpposite(axisLocation0);
      combinedDomainCategoryPlot0.setDomainAxisLocation(10, axisLocation1);
      combinedDomainCategoryPlot0.isRangeCrosshairVisible();
      combinedDomainCategoryPlot0.getRangeAxisForDataset(472);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[8];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) minMaxCategoryRenderer0;
      categoryItemRendererArray0[1] = (CategoryItemRenderer) ganttRenderer0;
      categoryItemRendererArray0[2] = (CategoryItemRenderer) ganttRenderer0;
      categoryItemRendererArray0[3] = (CategoryItemRenderer) ganttRenderer0;
      categoryItemRendererArray0[4] = (CategoryItemRenderer) ganttRenderer0;
      categoryItemRendererArray0[5] = (CategoryItemRenderer) minMaxCategoryRenderer0;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      categoryItemRendererArray0[6] = (CategoryItemRenderer) statisticalBarRenderer0;
      categoryItemRendererArray0[7] = (CategoryItemRenderer) ganttRenderer0;
      categoryPlot1.setRenderers(categoryItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1601.978, "l*Zk");
      CategoryPlot categoryPlot1 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(1444.7, 9.0, (String) null);
      cyclicNumberAxis0.setUpperMargin(10);
      jDBCCategoryDataset0.addValue(9.0, (Comparable) true, (Comparable) 0.2);
      categoryPlot0.setAnchorValue((double) 2.0F, true);
      categoryPlot1.getDomainGridlineStroke();
      categoryPlot1.getColumnRenderingOrder();
      Layer layer0 = Layer.BACKGROUND;
      CategoryAxis categoryAxis1 = new CategoryAxis();
      categoryPlot1.getCategoriesForAxis(categoryAxis0);
      categoryPlot1.getDataset();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(categoryPlot0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getOrientation();
      combinedRangeCategoryPlot0.setOrientation(plotOrientation0);
      combinedDomainCategoryPlot0.getDomainAxisIndex(categoryAxis3D0);
      combinedDomainCategoryPlot0.getDomainAxis();
      combinedDomainCategoryPlot0.getRangeAxis();
      combinedRangeCategoryPlot0.getRangeAxisForDataset((-3918));
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Point2D.Float point2D_Float0 = new Point2D.Float();
      categoryPlot0.zoomRangeAxes(1191.96296, 1191.96296, plotRenderingInfo0, (Point2D) point2D_Float0);
      categoryPlot0.getColumnRenderingOrder();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      categoryPlot0.zoomRangeAxes(3126.140625, plotRenderingInfo0, (Point2D) point2D_Float0);
      categoryPlot0.setDomainGridlinesVisible(true);
      categoryPlot0.getFixedDomainAxisSpace();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DefaultDrawingSupplier defaultDrawingSupplier0 = new DefaultDrawingSupplier();
      categoryPlot0.setDrawingSupplier(defaultDrawingSupplier0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("org.jfree.chart.renderer.xy.StandardXYItemRenderer");
      categoryAxis3D0.setLabelToolTip("org.jfree.chart.renderer.xy.StandardXYItemRenderer");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "#@5PP fJd");
      CategoryPlot categoryPlot1 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, ganttRenderer0);
      categoryPlot0.getDomainGridlineStroke();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("#@5PP fJd", 1.0F, 1191.96);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("#@5PP fJd", categoryPlot1);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(800, 500, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      categoryPlot1.getRangeGridlinePaint();
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.drawRangeMarkers(graphics2D0, rectangle0, 3, layer0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SortOrder sortOrder0 = categoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setColumnRenderingOrder(sortOrder0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      combinedDomainCategoryPlot0.getRenderer();
      combinedDomainCategoryPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeCategoryPlot0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.rendererChanged(rendererChangeEvent0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("G[M?pK>}v");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SortOrder sortOrder0 = combinedRangeCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setColumnRenderingOrder(sortOrder0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation1 = thermometerPlot0.getOrientation();
      combinedDomainCategoryPlot1.setOrientation(plotOrientation1);
      combinedDomainCategoryPlot0.getRangeMarkers(80, layer0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.setRangeCrosshairVisible(true);
      combinedDomainCategoryPlot0.addRangeMarker((-1), (Marker) intervalMarker0, layer0);
      combinedDomainCategoryPlot0.setRenderer((CategoryItemRenderer) lineRenderer3D0, true);
      combinedDomainCategoryPlot0.setRangeCrosshairStroke(lineRenderer3D0.DEFAULT_OUTLINE_STROKE);
      Area area0 = new Area();
      area0.clone();
      area0.getBounds2D();
      combinedDomainCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedDomainCategoryPlot0.setRangeCrosshairStroke(lineRenderer3D0.DEFAULT_OUTLINE_STROKE);
      combinedDomainCategoryPlot0.getDataset(0);
      combinedDomainCategoryPlot0.getDomainAxisLocation(3);
      NumberAxis numberAxis0 = new NumberAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
      numberAxis0.setAxisLinePaint(combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeXYPlot0);
      combinedDomainCategoryPlot0.rendererChanged(rendererChangeEvent0);
      combinedDomainCategoryPlot0.setRangeCrosshairValue((-529.1560735), false);
      List list0 = new ArrayList<WaferMapDataset>();
      combinedDomainCategoryPlot0.isRangeCrosshairVisible();
      combinedDomainCategoryPlot0.clone();
      combinedDomainCategoryPlot0.getRangeAxisForDataset(3629);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("org.jfree.chart.plot.FastScatterPlot", 1.0F, 1.5);
      categoryTextAnnotation0.setFont(extendedCategoryAxis0.DEFAULT_TICK_LABEL_FONT);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot0.removeAnnotation(categoryTextAnnotation0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot1.getRangeMarkers(0, layer1);
      combinedRangeCategoryPlot0.getRangeAxis(58);
      combinedRangeCategoryPlot0.isRangeZoomable();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("org.jfree.chart.renderer.xy.StandardXYItemRenderer");
      categoryAxis3D0.setLabelToolTip("org.jfree.chart.renderer.xy.StandardXYItemRenderer");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "#@5PP fJd");
      CategoryPlot categoryPlot1 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, ganttRenderer0);
      categoryPlot0.getDomainGridlineStroke();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("#@5PP fJd", 1.0F, 1191.96);
      combinedDomainCategoryPlot0.removeAnnotation(categoryTextAnnotation0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("#@5PP fJd", categoryPlot1);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(800, 500, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      combinedDomainCategoryPlot0.getDomainAxisLocation();
      categoryPlot1.getRendererForDataset(jDBCCategoryDataset0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
      categoryPlot1.getFixedRangeAxisSpace();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("org.jfree.chart.renderer.xy.StandardXYItemRenderer");
      categoryAxis3D0.setLabelToolTip("Null 'layer' not permitted.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("H?Th.j@]'-3KiZ<uV&/", true, 1497.8464997);
      combinedDomainCategoryPlot1.removeAnnotation(categoryTextAnnotation0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'stroke' not permitted.", combinedDomainCategoryPlot1);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(categoryAxis3D0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1527, 759, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      combinedDomainCategoryPlot0.getDomainAxisLocation();
      combinedDomainCategoryPlot0.setDataset(800, (CategoryDataset) jDBCCategoryDataset0);
      combinedDomainCategoryPlot0.isDomainGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1601.978, "l*Zk");
      CategoryPlot categoryPlot1 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(1444.7, 9.0, (String) null);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      Layer layer0 = Layer.BACKGROUND;
      CategoryAxis categoryAxis1 = new CategoryAxis();
      categoryPlot0.getCategoriesForAxis(categoryAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Area area0 = new Area(categoryPlot0.DEFAULT_LEGEND_ITEM_BOX);
      Rectangle2D rectangle2D0 = area0.getBounds2D();
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis1);
      AxisSpace axisSpace0 = new AxisSpace();
      AxisSpace axisSpace1 = combinedDomainXYPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D0, axisSpace0);
      // Undeclared exception!
      try { 
        categoryAxis1.reserveSpace(graphics2D0, categoryPlot0, rectangle2D0, rectangleEdge0, axisSpace1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      JScrollPane jScrollPane0 = new JScrollPane();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Point2D.Float point2D_Float0 = new Point2D.Float();
      JFreeChart jFreeChart0 = new JFreeChart("", extendedCategoryAxis0.DEFAULT_AXIS_LABEL_FONT, combinedRangeCategoryPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      combinedRangeCategoryPlot0.zoomRangeAxes((double) 0.0F, 0.05, plotRenderingInfo0, (Point2D) point2D_Float0);
      combinedRangeCategoryPlot0.getColumnRenderingOrder();
      combinedRangeCategoryPlot0.clearDomainMarkers(34);
      combinedRangeCategoryPlot0.zoomRangeAxes((double) 34, plotRenderingInfo0, (Point2D) point2D_Float0);
      combinedRangeCategoryPlot0.zoomDomainAxes(70.0, plotRenderingInfo0, (Point2D) point2D_Float0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(34, 336, 680, chartRenderingInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 680
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1601.978, "l*Zk");
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getOrientation();
      categoryPlot0.setOrientation(plotOrientation0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(10, layer0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeAxis((-3034));
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeAxis(10);
      combinedRangeCategoryPlot0.getFixedLegendItems();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getItemStroke(10, 10);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[2];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[1] = (CategoryItemRenderer) areaRenderer0;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.clearRangeMarkers(2285);
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
      categoryPlot0.clearRangeAxes();
      Random.setNextRandom((-117));
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.setRangeCrosshairVisible(true);
      combinedDomainCategoryPlot0.addRangeMarker((-1), (Marker) intervalMarker0, layer0);
      combinedDomainCategoryPlot0.setRenderer((CategoryItemRenderer) lineRenderer3D0, true);
      combinedDomainCategoryPlot0.setRangeCrosshairStroke(lineRenderer3D0.DEFAULT_OUTLINE_STROKE);
      Area area0 = new Area();
      area0.clone();
      area0.getBounds2D();
      combinedDomainCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedDomainCategoryPlot0.setRangeCrosshairStroke(lineRenderer3D0.DEFAULT_OUTLINE_STROKE);
      combinedDomainCategoryPlot0.getDataset(0);
      combinedDomainCategoryPlot0.getDomainAxisLocation(3);
      NumberAxis numberAxis0 = new NumberAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
      numberAxis0.setAxisLinePaint(combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeXYPlot0);
      combinedDomainCategoryPlot0.rendererChanged(rendererChangeEvent0);
      combinedDomainCategoryPlot0.setRangeCrosshairValue((-529.1560735), false);
      combinedDomainCategoryPlot0.getCategories();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.setRangeCrosshairVisible(true);
      combinedDomainCategoryPlot0.setRenderer((CategoryItemRenderer) lineRenderer3D0, true);
      combinedDomainCategoryPlot0.setRangeCrosshairStroke(lineRenderer3D0.DEFAULT_OUTLINE_STROKE);
      Area area0 = new Area();
      area0.clone();
      area0.getBounds2D();
      combinedDomainCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedDomainCategoryPlot0.getDataset(0);
      combinedDomainCategoryPlot0.getDomainAxisLocation(3);
      NumberAxis numberAxis0 = new NumberAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis0);
      numberAxis0.setAxisLinePaint(combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeXYPlot0);
      combinedDomainCategoryPlot0.rendererChanged(rendererChangeEvent0);
      combinedDomainCategoryPlot0.setRangeCrosshairValue((-529.1560735), false);
      combinedDomainCategoryPlot0.getCategories();
      combinedDomainCategoryPlot0.getWeight();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Color color0 = (Color)TextTitle.DEFAULT_TEXT_PAINT;
      extendedCategoryAxis0.setAxisLinePaint(color0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("%z:`L9P{[i:M{S", true, 0.2);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedRangeCategoryPlot0.getRangeAxis(193);
      combinedRangeCategoryPlot0.isDomainGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedDomainCategoryPlot0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.rendererChanged(rendererChangeEvent0);
      combinedDomainCategoryPlot1.setRangeCrosshairValue((double) 10, false);
      Layer layer1 = Layer.BACKGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedDomainCategoryPlot1.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot1.DEFAULT_GRIDLINE_STROKE, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot1.DEFAULT_OUTLINE_STROKE, 1.0F);
      combinedDomainCategoryPlot0.addDomainMarker(categoryMarker0, layer1);
      combinedDomainCategoryPlot0.clearDomainMarkers();
      combinedDomainCategoryPlot0.setRangeCrosshairValue((double) 1.0F, false);
      combinedDomainCategoryPlot0.getCategories();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot1, false);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(0.0F, 1478.8F, renderingHints0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 599, (double) 10, (-1042.4), chartRenderingInfo0);
      BufferedImage bufferedImage1 = rescaleOp0.filter(bufferedImage0, bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      Area area0 = new Area(combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX);
      Rectangle rectangle0 = area0.getBounds();
      combinedDomainCategoryPlot0.drawDomainGridlines(graphics2D0, rectangle0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1601.978, "l*Zk");
      CategoryPlot categoryPlot1 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(1444.7, 9.0, (String) null);
      cyclicNumberAxis0.setUpperMargin(10);
      categoryPlot0.setAnchorValue((double) 2.0F, true);
      categoryPlot1.getDomainGridlineStroke();
      categoryPlot1.getColumnRenderingOrder();
      Layer layer0 = Layer.BACKGROUND;
      CategoryAxis categoryAxis1 = new CategoryAxis();
      categoryPlot1.getCategoriesForAxis(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);
      combinedDomainCategoryPlot0.setNoDataMessage("");
      combinedDomainCategoryPlot0.getRangeAxis();
      combinedDomainCategoryPlot0.getDomainGridlinePosition();
      categoryAxis0.setLabelAngle((-702.692093632));
      combinedDomainCategoryPlot0.setDomainAxis(500, categoryAxis0, true);
      categoryAxis0.addCategoryLabelToolTip(true, "");
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.setRangeAxisLocation(734, axisLocation0, true);
      combinedDomainCategoryPlot0.clearDomainMarkers();
      combinedDomainCategoryPlot0.getCategories();
      combinedDomainCategoryPlot0.getDomainAxis();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.getItemStroke(3, 3009);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.setRangeAxis(3009, (ValueAxis) numberAxis3D0, true);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[6];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) stackedAreaRenderer0;
      categoryItemRendererArray0[1] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[2] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[3] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[4] = (CategoryItemRenderer) areaRenderer0;
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      categoryItemRendererArray0[5] = (CategoryItemRenderer) minMaxCategoryRenderer0;
      combinedDomainCategoryPlot1.setRenderers(categoryItemRendererArray0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.handleClick(3009, 3299, (PlotRenderingInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      categoryAxis0.setCategoryLabelPositionOffset((-245));
      combinedDomainCategoryPlot0.clearRangeAxes();
      combinedDomainCategoryPlot0.getDrawSharedDomainAxis();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("1r?(8_[(", 1.0F, 1191.96296);
      combinedDomainCategoryPlot0.addAnnotation(categoryTextAnnotation0);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      combinedDomainCategoryPlot0.addRangeMarker((Marker) intervalMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      categoryAxis0.setTickLabelsVisible(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);
      combinedDomainCategoryPlot0.setNoDataMessage("");
      combinedDomainCategoryPlot0.mapDatasetToDomainAxis(204, 1062);
      combinedDomainCategoryPlot0.getRangeAxis();
      combinedDomainCategoryPlot0.getDomainGridlinePosition();
      CategoryAxis categoryAxis1 = new CategoryAxis();
      categoryAxis0.setCategoryLabelPositionOffset(1329);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedRangeCategoryPlot0.getCategories();
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.getRangeMarkers(layer0);
      combinedRangeCategoryPlot0.getDataRange((ValueAxis) null);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 10);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1621.078125, 7.2E7);
      thermometerPlot0.setRangeAxis(cyclicNumberAxis0);
      thermometerPlot0.getThermometerPaint();
      combinedDomainCategoryPlot0.setRangeCrosshairPaint(combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      CategoryAxis categoryAxis0 = combinedRangeCategoryPlot1.getDomainAxis(1222);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.addDomainMarker((-3394), categoryMarker0, layer0);
      combinedRangeCategoryPlot0.clearRangeMarkers((-33));
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      combinedDomainCategoryPlot0.getIndexOf(stackedBarRenderer3D0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDomainAxisCount();
      int int0 = (-365);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        categoryPlot0.setDataset((-365), (CategoryDataset) taskSeriesCollection0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      categoryAxis0.setCategoryLabelPositionOffset((-245));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedDomainCategoryPlot0.clearDomainMarkers();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[2];
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      categoryItemRendererArray0[0] = (CategoryItemRenderer) stackedBarRenderer0;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      categoryItemRendererArray0[1] = (CategoryItemRenderer) statisticalBarRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      combinedRangeCategoryPlot0.isDomainZoomable();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      TextAnchor textAnchor0 = TextAnchor.TOP_RIGHT;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 1.0F);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      Paint paint0 = thermometerPlot0.getThermometerPaint();
      combinedDomainCategoryPlot0.setRangeCrosshairPaint(paint0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      combinedDomainCategoryPlot0.getDomainAxisEdge(1);
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      combinedRangeCategoryPlot0.setRangeAxisLocation(axisLocation1, false);
      NumberAxis numberAxis0 = new NumberAxis();
      combinedRangeCategoryPlot0.getDomainAxis(1);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Point2D.Float point2D_Float0 = new Point2D.Float();
      categoryPlot0.zoomRangeAxes(1191.96296, 1191.96296, plotRenderingInfo0, (Point2D) point2D_Float0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("The renderer has changed and I don't know what to do!");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.setDomainGridlineStroke(categoryAxis3D0.DEFAULT_AXIS_LINE_STROKE);
      categoryPlot0.getDomainGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Point2D.Float point2D_Float0 = new Point2D.Float();
      categoryPlot0.zoomRangeAxes(1191.96296, 1191.96296, plotRenderingInfo0, (Point2D) point2D_Float0);
      categoryPlot0.getColumnRenderingOrder();
      categoryPlot0.zoomRangeAxes(3126.1, plotRenderingInfo0, (Point2D) point2D_Float0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Point2D.Float point2D_Float0 = new Point2D.Float();
      categoryPlot0.zoomRangeAxes(1191.96296, 1191.96296, plotRenderingInfo0, (Point2D) point2D_Float0);
      categoryPlot0.getColumnRenderingOrder();
      categoryPlot0.clearDomainMarkers(34);
      categoryPlot0.zoomRangeAxes(3126.140625, plotRenderingInfo0, (Point2D) point2D_Float0);
      categoryPlot0.zoomDomainAxes((-1413.040312651543), plotRenderingInfo0, (Point2D) point2D_Float0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearRangeMarkers(69);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(categoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, groupedStackedBarRenderer0.DEFAULT_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("A$<:uzQ", 0.2, 1.0F);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.addAnnotation(categoryTextAnnotation0);
      combinedDomainCategoryPlot1.getDomainGridlineStroke();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.clearDomainAxes();
      combinedDomainCategoryPlot1.getDomainAxisLocation();
      combinedDomainCategoryPlot0.getLegendItems();
      CategoryPlot categoryPlot1 = new CategoryPlot();
      PlotOrientation plotOrientation0 = categoryPlot1.getOrientation();
      categoryPlot0.setOrientation(plotOrientation0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      ValueAxis[] valueAxisArray0 = new ValueAxis[5];
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      TextAnchor textAnchor0 = TextAnchor.TOP_RIGHT;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedDomainCategoryPlot0.clearRangeMarkers();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[0];
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      combinedRangeCategoryPlot0.getDomainAxis(10);
      int int0 = (-205);
      // Undeclared exception!
      try { 
        ColorSpace.getInstance((-205));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "#@5PP fJd");
      CategoryPlot categoryPlot1 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      cyclicNumberAxis0.setUpperMargin(0.05);
      categoryPlot0.setAnchorValue((double) 500, false);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearDomainAxes();
      combinedDomainCategoryPlot0.getDomainAxisLocation();
      short[][] shortArray0 = new short[7][4];
      short[] shortArray1 = new short[3];
      short short0 = (short)37;
      shortArray1[0] = (short)37;
      shortArray1[1] = (short)2901;
      shortArray1[2] = (short)9;
      shortArray0[0] = shortArray1;
      short[] shortArray2 = new short[0];
      shortArray0[1] = shortArray2;
      short[] shortArray3 = new short[6];
      shortArray3[0] = (short)3;
      shortArray3[1] = (short)2901;
      shortArray3[2] = (short)894;
      shortArray3[3] = (short)37;
      shortArray3[4] = (short)9;
      shortArray3[5] = (short)2901;
      shortArray0[2] = shortArray3;
      short[] shortArray4 = new short[2];
      shortArray4[0] = (short)2901;
      shortArray4[1] = (short)10;
      shortArray0[3] = shortArray4;
      short[] shortArray5 = new short[8];
      shortArray5[0] = (short)10;
      shortArray5[1] = (short)378;
      shortArray5[2] = (short)37;
      shortArray5[3] = (short)10;
      shortArray5[4] = (short)3;
      shortArray5[5] = (short)3;
      shortArray5[6] = (short)9;
      shortArray5[7] = (short) (-3313);
      shortArray0[4] = shortArray5;
      short[] shortArray6 = new short[9];
      shortArray6[0] = (short)826;
      shortArray6[1] = (short)894;
      shortArray6[2] = (short)3;
      shortArray6[3] = (short)2901;
      shortArray6[4] = (short)378;
      shortArray6[5] = (short)37;
      shortArray6[6] = (short)378;
      shortArray6[7] = (short)378;
      shortArray6[8] = (short)3;
      shortArray0[5] = shortArray6;
      short[] shortArray7 = new short[3];
      shortArray7[0] = (short)378;
      shortArray7[1] = (short) (-567);
      shortArray7[2] = (short)9;
      shortArray0[6] = shortArray7;
      ShortLookupTable shortLookupTable0 = new ShortLookupTable(72, shortArray0);
      JFreeChart jFreeChart0 = new JFreeChart("#@5PP fJd", combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, categoryPlot1, false);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      LookupOp lookupOp0 = new LookupOp(shortLookupTable0, renderingHints0);
      JFreeChart jFreeChart1 = new JFreeChart(categoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart1.createBufferedImage((int) (short)826, (int) (short)3, (double) (short)9, 0.2, chartRenderingInfo0);
      // Undeclared exception!
      try { 
        lookupOp0.filter((BufferedImage) null, bufferedImage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.LookupOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("7]co#S'm", categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      TextAnchor textAnchor0 = TextAnchor.TOP_RIGHT;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 1.0F);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeGridlineStroke(combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.setRangeAxisLocation(axisLocation0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      TextAnchor textAnchor0 = TextAnchor.TOP_RIGHT;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 1.0F);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      categoryAxis0.setCategoryLabelPositionOffset(10);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeGridlineStroke(combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.setDomainGridlineStroke(combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      JFreeChart jFreeChart0 = new JFreeChart("Unknown 'category' key.", combinedDomainCategoryPlot0);
      markerChangeEvent0.setChart(jFreeChart0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      Stroke stroke0 = combinedDomainCategoryPlot0.getDomainGridlineStroke();
      combinedDomainCategoryPlot0.clearDomainAxes();
      combinedDomainCategoryPlot0.getCategories();
      double[][] doubleArray0 = new double[2][2];
      double[] doubleArray1 = new double[8];
      doubleArray1[1] = (double) 1.0F;
      doubleArray1[3] = (double) 10;
      doubleArray1[5] = (double) 1.0F;
      combinedDomainCategoryPlot0.setDomainGridlinePaint(combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      doubleArray0[0] = doubleArray1;
      doubleArray0[1] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      combinedDomainCategoryPlot0.setDataset((CategoryDataset) defaultIntervalCategoryDataset0);
      combinedDomainCategoryPlot0.getDomainAxisEdge((-167));
      combinedDomainCategoryPlot0.setDomainGridlineStroke(stroke0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearRangeMarkers(69);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(categoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, groupedStackedBarRenderer0.DEFAULT_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("A$<:uzQ", 0.2, 1.0F);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.addAnnotation(categoryTextAnnotation0);
      combinedDomainCategoryPlot1.getDomainGridlineStroke();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.clearDomainAxes();
      combinedDomainCategoryPlot1.getDomainAxisLocation();
      JFreeChart jFreeChart0 = new JFreeChart("9($u", combinedDomainCategoryPlot1.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("d?[gv");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis1 = new CategoryAxis();
      categoryAxis0.setCategoryLabelPositionOffset(10);
      combinedDomainCategoryPlot0.getDrawSharedDomainAxis();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      TextAnchor textAnchor0 = TextAnchor.TOP_RIGHT;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 1.0F);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      Paint paint0 = thermometerPlot0.getThermometerPaint();
      combinedDomainCategoryPlot0.setRangeCrosshairPaint(paint0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedRangeCategoryPlot0.getDomainAxis(1);
      combinedRangeCategoryPlot0.getCategoriesForAxis((CategoryAxis) null);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      TextAnchor textAnchor0 = TextAnchor.TOP_RIGHT;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 1.0F);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      Paint paint0 = thermometerPlot0.getThermometerPaint();
      combinedDomainCategoryPlot0.setRangeCrosshairPaint(paint0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[0];
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      combinedRangeCategoryPlot0.getDomainAxis((-119));
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      JScrollPane jScrollPane0 = new JScrollPane();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      categoryAxis0.setCategoryLabelPositionOffset((-245));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Random.setNextRandom(10);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis(":>bb|%u9v");
      combinedRangeCategoryPlot0.equals(extendedCategoryAxis0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Area area0 = new Area();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearRangeAxes();
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      categoryAxis0.setCategoryLabelPositionOffset(2218);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.setRangeGridlineStroke(combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      combinedRangeCategoryPlot1.getCategories();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot1.setRenderer((-3178), (CategoryItemRenderer) ganttRenderer0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(tickUnits0, (Dataset) null);
      categoryPlot0.datasetChanged(datasetChangeEvent0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      categoryPlot0.setAnchorValue(3.0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.jfree.chart.renderer.xy.StandardXYItemRenderer");
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "#@5PP fJd");
      CategoryPlot categoryPlot1 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      cyclicNumberAxis0.setUpperMargin(0.05);
      categoryPlot0.setAnchorValue((double) 500, false);
      categoryPlot0.getColumnRenderingOrder();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.clearDomainMarkers();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      categoryPlot1.setOrientation(plotOrientation0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeCategoryPlot0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getOrientation();
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      combinedDomainCategoryPlot0.getDomainAxisIndex(categoryAxis3D0);
      combinedDomainCategoryPlot0.clearDomainAxes();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "?";
      int int0 = 0;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainAxisLocation(742);
      int int1 = (-2390);
      byte[] byteArray0 = null;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(742, (-2390), (byte[]) null, 0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      int int0 = 0;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-69);
      byteArray0[1] = (byte)3;
      byte byte0 = (byte)56;
      byteArray0[2] = (byte)56;
      combinedDomainCategoryPlot0.getDomainAxisLocation(0);
      byteArray0[3] = (byte) (-14);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(10, 0, byteArray0, (byte)3, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Map size (0) must be >= 1
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0, "#@5PP fJd");
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      categoryPlot0.setAnchorValue((double) 0.0F, true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      CategoryMarker categoryMarker0 = new CategoryMarker(cyclicNumberAxis0.DEFAULT_TICK_UNIT);
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeGridlineStroke(cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
      combinedRangeCategoryPlot0.getCategories();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Point point0 = chartPanel0.getLocation();
      categoryPlot0.zoomRangeAxes((-69.6854919013762), (-1.0), plotRenderingInfo0, (Point2D) point0);
      combinedRangeCategoryPlot0.getDomainAxis();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      categoryAxis0.setMaximumCategoryLabelWidthRatio((-16.2F));
      MockDate mockDate0 = new MockDate();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      combinedDomainCategoryPlot0.getRangeAxisCount();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearAnnotations();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeCrosshairStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeCategoryPlot0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.rendererChanged(rendererChangeEvent0);
      combinedDomainCategoryPlot0.clearDomainAxes();
      combinedDomainCategoryPlot0.getCategories();
      combinedDomainCategoryPlot0.setDomainGridlinePaint(combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.clearAnnotations();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (-1139.9046899));
      combinedDomainCategoryPlot0.addRangeMarker(10, (Marker) intervalMarker0, layer1);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeCrosshairVisible(true);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      combinedDomainCategoryPlot0.setRenderer((CategoryItemRenderer) levelRenderer0, true);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.setRangeCrosshairStroke(levelRenderer0.DEFAULT_STROKE);
      Area area0 = new Area();
      area0.clone();
      area0.getBounds2D();
      combinedDomainCategoryPlot1.setFixedLegendItems((LegendItemCollection) null);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot1.setRangeCrosshairStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(tickUnits0, (Dataset) null);
      categoryPlot0.datasetChanged(datasetChangeEvent0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.jfree.chart.renderer.xy.StandardXYItemRenderer");
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("org.jfree.chart.renderer.xy.StandardXYItemRenderer");
      categoryAxis3D0.setLabelToolTip("org.jfree.chart.renderer.xy.StandardXYItemRenderer");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "Null 'location' for index 0 not permitted.");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Null 'location' for index 0 not permitted.";
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      SymbolAxis symbolAxis0 = new SymbolAxis("Null 'paint' argument.", stringArray0);
      CategoryPlot categoryPlot1 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, symbolAxis0, ganttRenderer0);
      categoryPlot0.setAnchorValue(1.0, true);
      categoryPlot1.getDomainGridlineStroke();
      CategoryPlot categoryPlot2 = ganttRenderer0.getPlot();
      categoryPlot2.getColumnRenderingOrder();
      CategoryMarker categoryMarker0 = new CategoryMarker("Null 'location' for index 0 not permitted.");
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot1.setDrawSharedDomainAxis(true);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setDrawSharedDomainAxis(false);
      combinedRangeCategoryPlot0.getRangeAxis(10);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = combinedRangeCategoryPlot0.getDomainAxisForDataset((-1697));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.getDomainAxisIndex((CategoryAxis) null);
      combinedRangeCategoryPlot1.getRangeCrosshairPaint();
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedRangeCategoryPlot0.getCategories();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      FileSystemHandling.shouldAllThrowIOExceptions();
      combinedDomainCategoryPlot0.clearRangeMarkers(69);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Color color0 = (Color)WaferMapPlot.DEFAULT_GRIDLINE_PAINT;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(categoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, groupedStackedBarRenderer0.DEFAULT_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("A$<:uzQ", 0.2, 1.0F);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.addAnnotation(categoryTextAnnotation0);
      combinedDomainCategoryPlot1.getDomainGridlineStroke();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearDomainAxes();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot1.getDomainAxisLocation();
      categoryPlot0.setDomainAxisLocation(axisLocation0, false);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainAxisForDataset((-1697));
      NumberAxis numberAxis0 = new NumberAxis();
      combinedRangeCategoryPlot0.getRangeCrosshairPaint();
      combinedRangeCategoryPlot0.setRangeCrosshairLockedOnData(true);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainAxisEdge();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 1.0F);
      combinedDomainCategoryPlot0.setGap(1191.96);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      Paint paint0 = thermometerPlot0.getThermometerPaint();
      combinedDomainCategoryPlot0.setRangeCrosshairPaint(paint0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedRangeCategoryPlot0.getDomainAxisForDataset(0);
      combinedRangeCategoryPlot0.getDomainAxisIndex((CategoryAxis) null);
      combinedRangeCategoryPlot0.getRangeCrosshairPaint();
      combinedRangeCategoryPlot0.setRangeCrosshairLockedOnData(true);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainAxes((CategoryAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(10, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot1.setRangeAxis(10, (ValueAxis) numberAxis3D0, false);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      Paint paint0 = combinedDomainCategoryPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker((-452.0));
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
      combinedDomainCategoryPlot0.setRangeGridlinePaint(paint0);
      combinedDomainCategoryPlot0.clearDomainMarkers(2);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      combinedDomainCategoryPlot0.setRangeAxis(2883, (ValueAxis) numberAxis3D0, true);
      combinedDomainCategoryPlot0.getDatasetCount();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      JScrollPane jScrollPane0 = new JScrollPane();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Layer layer1 = Layer.BACKGROUND;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[9];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) stackedAreaRenderer0;
      categoryItemRendererArray0[1] = (CategoryItemRenderer) stackedBarRenderer3D0;
      categoryItemRendererArray0[2] = (CategoryItemRenderer) stackedAreaRenderer0;
      categoryItemRendererArray0[3] = (CategoryItemRenderer) stackedBarRenderer3D0;
      categoryItemRendererArray0[4] = (CategoryItemRenderer) categoryStepRenderer0;
      categoryItemRendererArray0[5] = (CategoryItemRenderer) categoryStepRenderer0;
      categoryItemRendererArray0[6] = (CategoryItemRenderer) categoryStepRenderer0;
      categoryItemRendererArray0[7] = (CategoryItemRenderer) statisticalLineAndShapeRenderer0;
      categoryItemRendererArray0[8] = (CategoryItemRenderer) statisticalLineAndShapeRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("org.jfree.chart.plot.FastScatterPlot", zoneInfo0);
      combinedDomainCategoryPlot0.setRangeAxis(5, (ValueAxis) dateAxis0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearDomainAxes();
      combinedDomainCategoryPlot0.getSubplots();
      combinedDomainCategoryPlot0.getCategories();
      combinedDomainCategoryPlot0.setDomainGridlinePaint(combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      double[][] doubleArray0 = new double[2][1];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      combinedDomainCategoryPlot0.setDataset((CategoryDataset) defaultIntervalCategoryDataset0);
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("1r?(8_[(", 1.0F, 1191.96296);
      combinedDomainCategoryPlot0.addAnnotation(categoryTextAnnotation0);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot1.clearDomainAxes();
      combinedDomainCategoryPlot1.getCategories();
      double[][] doubleArray0 = new double[2][2];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) 10;
      doubleArray1[1] = (double) 1.0F;
      doubleArray1[2] = 0.0;
      doubleArray1[3] = (double) 10;
      doubleArray1[4] = (double) 10;
      doubleArray1[5] = (double) 1.0F;
      doubleArray1[6] = (double) 10;
      doubleArray1[7] = (double) 10;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[7];
      doubleArray2[0] = (double) 1.0F;
      doubleArray2[1] = 1191.96296;
      doubleArray2[2] = (double) 1.0F;
      doubleArray2[3] = (-1253.236004244);
      doubleArray2[4] = (double) 10;
      doubleArray2[5] = 3378.0;
      doubleArray2[6] = (double) 1.0F;
      doubleArray0[1] = doubleArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      combinedDomainCategoryPlot0.setDataset((CategoryDataset) defaultIntervalCategoryDataset0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedDomainCategoryPlot0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.rendererChanged(rendererChangeEvent0);
      combinedDomainCategoryPlot1.setRangeCrosshairValue((double) 10, false);
      Layer layer1 = Layer.BACKGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedDomainCategoryPlot1.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot1.DEFAULT_GRIDLINE_STROKE, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot1.DEFAULT_OUTLINE_STROKE, 1.0F);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("j%o!m}x8B!}m?S");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logarithmicAxis0);
      combinedRangeCategoryPlot0.clearRangeMarkers();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(tickUnits0, (Dataset) null);
      categoryPlot0.datasetChanged(datasetChangeEvent0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clone();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addDomainMarker(55, categoryMarker0, layer0);
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers(55, layer1);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot();
      DatasetChangeEvent datasetChangeEvent1 = new DatasetChangeEvent(waferMapPlot0, (Dataset) null);
      combinedDomainCategoryPlot0.datasetChanged(datasetChangeEvent1);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(tickUnits0, (Dataset) null);
      combinedRangeCategoryPlot0.datasetChanged(datasetChangeEvent0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.jfree.chart.renderer.xy.StandardXYItemRenderer");
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("org.jfree.chart.renderer.xy.StandardXYItemRenderer");
      categoryAxis3D0.setLabelToolTip("org.jfree.chart.renderer.xy.StandardXYItemRenderer");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "#@5PP fJd");
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, ganttRenderer0);
      cyclicNumberAxis0.setUpperMargin(0.05);
      combinedRangeCategoryPlot0.setAnchorValue((double) 500, false);
      combinedRangeCategoryPlot0.getDomainGridlineStroke();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("#@5PP fJd", 1.0F, 1191.96);
      combinedDomainCategoryPlot0.removeAnnotation(categoryTextAnnotation0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)WaferMapPlot.DEFAULT_GRIDLINE_STROKE;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot3 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.clearDomainAxes();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Area area0 = new Area();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot)combinedDomainCategoryPlot0.clone();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedDomainCategoryPlot1.DEFAULT_BACKGROUND_PAINT, ganttRenderer0.DEFAULT_OUTLINE_STROKE);
      combinedDomainCategoryPlot0.getDomainMarkers(10, (Layer) null);
      combinedDomainCategoryPlot0.datasetChanged((DatasetChangeEvent) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      Layer layer1 = Layer.FOREGROUND;
      combinedDomainCategoryPlot1.addDomainMarker(categoryMarker0, layer1);
      combinedDomainCategoryPlot0.clearDomainMarkers();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRowRenderingOrder((SortOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRowRenderingOrder((SortOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.mapDatasetToRangeAxis(10, 48);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getItemStroke(10, 10);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[3];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[1] = (CategoryItemRenderer) areaRenderer0;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[9];
      combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      categoryAxis0.setCategoryLabelPositionOffset(478);
      combinedDomainCategoryPlot0.clearRangeAxes();
      combinedDomainCategoryPlot0.getDrawSharedDomainAxis();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(tickUnits0, (Dataset) null);
      categoryPlot0.datasetChanged(datasetChangeEvent0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.jfree.chart.renderer.xy.StandardXYItemRenderer");
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "#@5PP fJd");
      CategoryPlot categoryPlot1 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      cyclicNumberAxis0.setUpperMargin(0.05);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'order' argument.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      combinedDomainCategoryPlot0.setRangeGridlinePaint(ganttRenderer0.DEFAULT_PAINT);
      combinedDomainCategoryPlot0.clearDomainMarkers((-1628));
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[1];
      categoryAxisArray0[0] = (CategoryAxis) subCategoryAxis0;
      combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
      combinedDomainCategoryPlot0.clearRangeAxes();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "#@5PP fJd");
      CategoryPlot categoryPlot1 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      cyclicNumberAxis0.setUpperMargin(0.05);
      categoryPlot0.setAnchorValue((double) 500, true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("7]co#S'm", categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(397, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.getDomainAxisLocation();
      AffineTransform affineTransform0 = new AffineTransform(0.0F, 1.0F, (-2347.6), 1000000.0, 1.0E-8, 10);
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, false, false);
      Rectangle2D rectangle2D0 = categoryPlot0.DEFAULT_VALUE_LABEL_FONT.getMaxCharBounds(fontRenderContext0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
      // Undeclared exception!
      try { 
        categoryPlot0.drawRangeLine(graphics2D0, rectangle2D0, 0.0F, categoryAxis0.DEFAULT_TICK_MARK_STROKE, (Paint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(tickUnits0, (Dataset) null);
      categoryPlot0.datasetChanged(datasetChangeEvent0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.jfree.chart.renderer.xy.StandardXYItemRenderer");
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("org.jfree.chart.renderer.xy.StandardXYItemRenderer");
      categoryAxis3D0.setLabelToolTip("org.jfree.chart.renderer.xy.StandardXYItemRenderer");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "#@5PP fJd");
      CategoryPlot categoryPlot1 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, ganttRenderer0);
      cyclicNumberAxis0.setUpperMargin(0.05);
      categoryPlot0.setAnchorValue((double) 500, false);
      categoryPlot0.getDomainGridlineStroke();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("#@5PP fJd", 1.0F, 1191.96);
      combinedDomainCategoryPlot0.removeAnnotation(categoryTextAnnotation0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      combinedDomainCategoryPlot0.getRendererForDataset(defaultStatisticalCategoryDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("#@5PP fJd", categoryPlot1);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 3191, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.drawBackground(graphics2D0, (Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.Path2D$Float", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getNoDataMessage();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.getItemStroke(10, 10);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 10, 10.0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.removeAnnotation(categoryTextAnnotation0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1459, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      combinedDomainCategoryPlot0.getDomainAxisLocation();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(200, 1.0);
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      JPasswordField jPasswordField0 = new JPasswordField(800);
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jPasswordField0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.getTextBounds(680, 51);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.drawRangeLine(graphics2D0, (Rectangle2D) null, (-18.8), categoryAxis0.DEFAULT_AXIS_LINE_STROKE, categoryTextAnnotation0.DEFAULT_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("%z:`L9P{[i:M{S", true, 0.2);
      categoryTextAnnotation0.setFont(extendedCategoryAxis0.DEFAULT_AXIS_LABEL_FONT);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot0.removeAnnotation(categoryTextAnnotation0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRenderers((CategoryItemRenderer[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(1191.96, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, 0.0F);
      TextAnchor textAnchor0 = TextAnchor.TOP_RIGHT;
      valueMarker0.setLabelTextAnchor(textAnchor0);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
      Color color0 = (Color)PeriodAxisLabelInfo.DEFAULT_DIVIDER_PAINT;
      combinedDomainCategoryPlot0.setRangeGridlinePaint(color0);
      combinedDomainCategoryPlot0.clearDomainMarkers((-518));
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[4];
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxisArray0[0] = (CategoryAxis) categoryAxis3D0;
      CategoryAxis categoryAxis0 = new CategoryAxis("O<ZF+lc9/en_<?Bz");
      categoryAxisArray0[1] = categoryAxis0;
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D("Null 'layer' not permitted.");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      categoryAxisArray0[2] = (CategoryAxis) categoryAxis3D1;
      CategoryAxis categoryAxis1 = new CategoryAxis("mku");
      categoryAxisArray0[3] = categoryAxis1;
      combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis("?", stringArray0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      rectangle2D_Float0.createIntersection(rectangle0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[5];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) stackedAreaRenderer0;
      categoryItemRendererArray0[1] = (CategoryItemRenderer) stackedBarRenderer0;
      categoryItemRendererArray0[2] = (CategoryItemRenderer) ganttRenderer0;
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      categoryItemRendererArray0[4] = (CategoryItemRenderer) intervalBarRenderer0;
      combinedDomainCategoryPlot0.setAxisOffset(symbolAxis0.DEFAULT_TICK_LABEL_INSETS);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedRangeCategoryPlot0.setRangeAxisLocation(axisLocation0, false);
      combinedRangeCategoryPlot0.getDomainAxisForDataset(0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(1191.96);
      TextAnchor textAnchor0 = TextAnchor.TOP_RIGHT;
      valueMarker0.setLabelTextAnchor(textAnchor0);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
      Color color0 = (Color)PeriodAxisLabelInfo.DEFAULT_DIVIDER_PAINT;
      combinedDomainCategoryPlot0.setRangeGridlinePaint(color0);
      combinedDomainCategoryPlot0.clearDomainMarkers(91);
      combinedDomainCategoryPlot0.setDomainGridlinePaint(ganttRenderer0.DEFAULT_VALUE_LABEL_PAINT);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      JScrollPane jScrollPane0 = new JScrollPane();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Layer layer1 = Layer.BACKGROUND;
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Andrzej Porebski", true, 2653.0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.addAnnotation(categoryTextAnnotation0);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.clearDomainAxes();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", false, 10);
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.addAnnotation(categoryTextAnnotation0);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.clearDomainAxes();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultKeyedValueDataset defaultKeyedValueDataset0 = new DefaultKeyedValueDataset(false, combinedDomainCategoryPlot0.ZERO);
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(defaultKeyedValueDataset0, defaultKeyedValueDataset0);
      combinedDomainCategoryPlot0.datasetChanged(datasetChangeEvent0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(5721.777169902066, "");
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      cyclicNumberAxis0.setUpperMargin(0.05);
      categoryPlot0.setAnchorValue(0.2, true);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getRangeAxisEdge(1);
      categoryPlot0.getRenderer();
      CategoryAxis categoryAxis1 = new CategoryAxis();
      combinedDomainCategoryPlot0.getCategoriesForAxis(categoryAxis1);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[0];
      combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      FileSystemHandling.shouldAllThrowIOExceptions();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) categoryMarker0);
      combinedDomainCategoryPlot0.setRangeGridlinePaint(categoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedDomainCategoryPlot0.clearDomainMarkers((-1628));
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[0];
      combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeCategoryPlot0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.rendererChanged(rendererChangeEvent0);
      combinedDomainCategoryPlot0.setRangeCrosshairValue(1191.96, false);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis3D0);
      combinedRangeCategoryPlot1.getAnchorValue();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      combinedDomainCategoryPlot0.setAxisOffset(combinedRangeCategoryPlot1.DEFAULT_INSETS);
      combinedDomainCategoryPlot0.getOrientation();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      combinedDomainCategoryPlot0.setRenderer(10, (CategoryItemRenderer) stackedBarRenderer3D0, false);
      combinedRangeCategoryPlot0.clearRangeMarkers();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("1r?(8_[(", 1.0F, 1191.96296);
      combinedDomainCategoryPlot0.addAnnotation(categoryTextAnnotation0);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot1.clearDomainAxes();
      combinedDomainCategoryPlot0.clearRangeMarkers(493);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[6];
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      categoryItemRendererArray0[0] = (CategoryItemRenderer) groupedStackedBarRenderer0;
      Color color0 = (Color)WaferMapPlot.DEFAULT_GRIDLINE_PAINT;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, color0, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, groupedStackedBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      categoryItemRendererArray0[1] = (CategoryItemRenderer) waterfallBarRenderer0;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      categoryItemRendererArray0[2] = (CategoryItemRenderer) categoryStepRenderer0;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      categoryItemRendererArray0[3] = (CategoryItemRenderer) stackedBarRenderer3D0;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      categoryItemRendererArray0[4] = (CategoryItemRenderer) statisticalLineAndShapeRenderer0;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      categoryItemRendererArray0[5] = (CategoryItemRenderer) stackedAreaRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      rectangle2D_Float0.createIntersection(rectangle0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot)combinedDomainCategoryPlot0.clone();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1181.8019782821), "org.jfree.chart.plot.CategoryPlot");
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, subCategoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      cyclicNumberAxis0.setUpperMargin(1.0F);
      categoryPlot0.setAnchorValue(2.0, false);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeAxisEdge(10);
      categoryPlot0.getRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      combinedDomainCategoryPlot1.getCategoriesForAxis(categoryAxis0);
      combinedDomainCategoryPlot1.setRangeGridlinePaint(subCategoryAxis0.DEFAULT_AXIS_LINE_PAINT);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis("?", stringArray0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      rectangle2D_Float0.createIntersection(rectangle0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[5];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) stackedAreaRenderer0;
      categoryItemRendererArray0[1] = (CategoryItemRenderer) stackedBarRenderer0;
      categoryItemRendererArray0[2] = (CategoryItemRenderer) ganttRenderer0;
      categoryItemRendererArray0[3] = (CategoryItemRenderer) ganttRenderer0;
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      categoryItemRendererArray0[4] = (CategoryItemRenderer) intervalBarRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      combinedDomainCategoryPlot0.setAxisOffset(symbolAxis0.DEFAULT_TICK_LABEL_INSETS);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      combinedRangeCategoryPlot0.getDomainAxisForDataset(0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainAxisEdge();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(500000.0);
      combinedDomainCategoryPlot0.setGap(1191.96);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      Paint paint0 = thermometerPlot0.getThermometerPaint();
      combinedDomainCategoryPlot0.setRangeCrosshairPaint(paint0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedRangeCategoryPlot0.getDomainAxisForDataset(0);
      combinedRangeCategoryPlot0.getDomainAxisIndex((CategoryAxis) null);
      combinedRangeCategoryPlot0.getRangeCrosshairPaint();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'series' argument.");
      Layer layer0 = Layer.FOREGROUND;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainAxisForDataset((-1073741824));
      combinedRangeCategoryPlot0.getDomainAxisIndex(subCategoryAxis0);
      Color color0 = (Color)CategoryPlot.DEFAULT_GRIDLINE_PAINT;
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
      combinedDomainCategoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getItemStroke(0, 0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      combinedDomainCategoryPlot1.setRangeAxis(10, (ValueAxis) numberAxis3D0, true);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("FcW;L|><", true, 10);
      categoryTextAnnotation0.setFont(combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      combinedDomainCategoryPlot0.removeAnnotation(categoryTextAnnotation0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      combinedDomainCategoryPlot0.getRendererForDataset(defaultStatisticalCategoryDataset0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getDomainMarkers(1386, (Layer) null);
      DateAxis dateAxis0 = new DateAxis("");
      combinedDomainCategoryPlot0.getDataRange(dateAxis0);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0E-8);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeAxisEdge(1433);
      CategoryAnchor categoryAnchor0 = CategoryAnchor.START;
      CategoryAnchor categoryAnchor1 = CategoryAnchor.START;
      combinedDomainCategoryPlot0.setDomainGridlinePosition(categoryAnchor1);
      combinedDomainCategoryPlot0.getRenderer((-2075));
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.getRangeCrosshairStroke();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getItemStroke(10, 10);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[2];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) areaRenderer0;
      categoryPlot0.setRangeCrosshairValue((double) areaRenderer0.ZERO);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[0];
      combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
      categoryPlot0.getDomainGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Viktor Rajewski");
      categoryAxis3D0.setLabelURL("Viktor Rajewski");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getRangeCrosshairPaint();
      combinedDomainCategoryPlot0.getRangeAxisLocation(1353);
      combinedDomainCategoryPlot0.isRangeCrosshairVisible();
      combinedDomainCategoryPlot0.setRangeCrosshairValue(36.43636278);
      combinedDomainCategoryPlot0.setAnchorValue(241.723428);
      combinedDomainCategoryPlot0.clearDomainAxes();
      combinedDomainCategoryPlot0.mapDatasetToDomainAxis(1353, 1353);
      combinedDomainCategoryPlot0.configureRangeAxes();
      DirectColorModel directColorModel0 = null;
      try {
        directColorModel0 = new DirectColorModel(1353, 10, 1991, 10, 1991);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Noncontiguous red mask (a
         //
         verifyException("java.awt.image.PackedColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Viktor Rajewski");
      categoryAxis3D0.setLabelURL("Viktor Rajewski");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getRangeCrosshairPaint();
      combinedDomainCategoryPlot0.getRangeAxisLocation(1353);
      combinedDomainCategoryPlot0.isRangeCrosshairVisible();
      combinedDomainCategoryPlot0.setRangeCrosshairValue(36.43636278);
      combinedDomainCategoryPlot0.setAnchorValue(241.723428);
      combinedDomainCategoryPlot0.clearDomainAxes();
      combinedDomainCategoryPlot0.mapDatasetToDomainAxis(1353, 1353);
      combinedDomainCategoryPlot0.configureRangeAxes();
      int int0 = 1991;
      DirectColorModel directColorModel0 = null;
      try {
        directColorModel0 = new DirectColorModel(1353, 10, 1991, 10, 1991);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Noncontiguous red mask (a
         //
         verifyException("java.awt.image.PackedColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainAxisEdge();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(500000.0);
      combinedDomainCategoryPlot0.setGap(1191.96);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      Paint paint0 = combinedDomainCategoryPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(10.0);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
      combinedDomainCategoryPlot0.setRangeGridlinePaint(paint0);
      combinedDomainCategoryPlot0.clearDomainMarkers(2);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxis((-812), (ValueAxis) numberAxis3D0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeGridlinesVisible(false);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 10, 1.0F);
      combinedDomainCategoryPlot0.addAnnotation(categoryTextAnnotation0);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.clone();
      combinedDomainCategoryPlot1.getRenderer(10);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SortOrder sortOrder0 = categoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setColumnRenderingOrder(sortOrder0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      PeriodAxis periodAxis0 = new PeriodAxis("Category Plot");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedRangeCategoryPlot0.getCategories();
      combinedDomainCategoryPlot0.setAxisOffset(periodAxis0.DEFAULT_TICK_LABEL_INSETS);
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
      combinedDomainCategoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getItemStroke(0, 0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      DateAxis dateAxis0 = new DateAxis("5:T=K*Dd_");
      combinedDomainCategoryPlot0.getDataRange(dateAxis0);
      combinedDomainCategoryPlot1.getDomainGridlineStroke();
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      CategoryMarker categoryMarker0 = new CategoryMarker(2.0F);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeAxisEdge(471);
      CategoryAnchor categoryAnchor0 = CategoryAnchor.START;
      combinedDomainCategoryPlot1.setDomainGridlinePosition(categoryAnchor0);
      combinedDomainCategoryPlot1.getRenderer(500);
      combinedDomainCategoryPlot0.getRangeCrosshairStroke();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(tickUnits0, (Dataset) null);
      combinedRangeCategoryPlot0.datasetChanged(datasetChangeEvent0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "#@5PP fJd");
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      combinedRangeCategoryPlot0.setAnchorValue((double) 500, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      SortOrder sortOrder0 = categoryPlot0.getColumnRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      JTextPane jTextPane0 = new JTextPane();
      jTextPane0.modelToView(10);
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      combinedDomainCategoryPlot0.clearDomainMarkers();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
      combinedDomainCategoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getItemStroke(0, 0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      DateAxis dateAxis0 = new DateAxis("5:T=K*Dd_");
      combinedDomainCategoryPlot0.getDataRange(dateAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      SortOrder sortOrder0 = combinedDomainCategoryPlot1.getColumnRenderingOrder();
      combinedDomainCategoryPlot1.setRowRenderingOrder(sortOrder0);
      JTextPane jTextPane0 = new JTextPane();
      jTextPane0.modelToView(0);
      combinedDomainCategoryPlot1.getRangeGridlineStroke();
      combinedDomainCategoryPlot0.clearDomainMarkers();
      combinedDomainCategoryPlot0.mapDatasetToRangeAxis(500, 10);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(tickUnits0, (Dataset) null);
      categoryPlot0.datasetChanged(datasetChangeEvent0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "#@5PP fJd");
      CategoryPlot categoryPlot1 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      cyclicNumberAxis0.setUpperMargin(0.05);
      categoryPlot0.setAnchorValue((double) 500, false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addDomainMarker(10, (CategoryMarker) null, (Layer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(tickUnits0, (Dataset) null);
      categoryPlot0.datasetChanged(datasetChangeEvent0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.jfree.chart.renderer.xy.StandardXYItemRenderer");
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "#@5PP fJd");
      CategoryPlot categoryPlot1 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      cyclicNumberAxis0.setUpperMargin(0.05);
      categoryPlot0.setAnchorValue((double) 500, false);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getRangeAxisEdge(471);
      categoryPlot0.getRenderer();
      CategoryAxis categoryAxis1 = new CategoryAxis();
      categoryPlot1.getCategoriesForAxis(categoryAxis1);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "#@5PP fJd");
      CategoryPlot categoryPlot1 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(0.05, 1406.8787330659359, (String) null);
      cyclicNumberAxis1.setUpperMargin(2.5E-7);
      categoryPlot0.setAnchorValue(0.5, false);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      Layer layer0 = Layer.BACKGROUND;
      CategoryAxis categoryAxis1 = new CategoryAxis();
      categoryPlot1.getCategoriesForAxis(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "#@5PP fJd");
      CategoryPlot categoryPlot1 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      cyclicNumberAxis0.setUpperMargin(0.05);
      categoryPlot0.setAnchorValue((double) 500, true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      Layer layer0 = Layer.BACKGROUND;
      CategoryAxis categoryAxis1 = new CategoryAxis();
      categoryPlot1.getCategoriesForAxis(categoryAxis1);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedDomainCategoryPlot0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainAxisForDataset(10);
      combinedRangeCategoryPlot0.getDomainAxisIndex((CategoryAxis) null);
      combinedRangeCategoryPlot0.getRangeCrosshairPaint();
      combinedRangeCategoryPlot0.setDomainGridlinesVisible(false);
      combinedRangeCategoryPlot0.getRangeAxis();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeCrosshairPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      TextAnchor textAnchor0 = TextAnchor.TOP_RIGHT;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 1.0F);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      Paint paint0 = thermometerPlot0.getThermometerPaint();
      combinedDomainCategoryPlot0.setRangeCrosshairPaint(paint0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainAxisEdge();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(500000.0);
      combinedDomainCategoryPlot0.setGap(1191.96);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      Paint paint0 = thermometerPlot0.getThermometerPaint();
      combinedDomainCategoryPlot0.setRangeCrosshairPaint(paint0);
      Graphics2D graphics2D0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      thermometerPlot0.setUnits(2449);
      jTableHeader0.getHeaderRect(1);
      Stack<CategoryPointerAnnotation> stack0 = new Stack<CategoryPointerAnnotation>();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("Null 'polygon' argument.", 0, 250.0, 250.0);
      // Undeclared exception!
      try { 
        stack0.setElementAt(categoryPointerAnnotation0, (-887));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -887
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("d?[gv");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);
      combinedDomainCategoryPlot0.setNoDataMessage("d?[gv");
      combinedDomainCategoryPlot0.getRangeAxis();
      combinedDomainCategoryPlot0.setDomainAxis(500, categoryAxis0, true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 2.0F, "d?[gv");
      combinedDomainCategoryPlot0.getRangeCrosshairValue();
      combinedRangeCategoryPlot0.getPlotType();
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Point2D.Float point2D_Float0 = new Point2D.Float();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.zoomRangeAxes(1191.96296, 440.046875, plotRenderingInfo0, (Point2D) point2D_Float0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (1251.561108) <= upper (462.04921875).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("X3{I:j4e%x");
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis0, valueAxis0, levelRenderer0);
      categoryPlot0.setDomainAxis(0, categoryAxis0, false);
      categoryPlot0.getRangeAxis();
      thermometerPlot0.setBackgroundPaint(levelRenderer0.DEFAULT_OUTLINE_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(1, layer0);
      categoryPlot0.getRangeCrosshairValue();
      categoryPlot0.getDataRange(valueAxis0);
      categoryPlot0.rendererChanged((RendererChangeEvent) null);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, thermometerPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, true, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CrosshairState crosshairState0 = new CrosshairState();
      crosshairState0.getAnchor();
      // Undeclared exception!
      try { 
        categoryPlot0.zoomRangeAxes(888.5, 0.0, plotRenderingInfo0, (Point2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (88850.0) <= upper (0.0).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.setEntityCollection((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-546), (-1));
      cyclicNumberAxis0.setAxisLinePaint(combinedRangeXYPlot0.DEFAULT_OUTLINE_PAINT);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      NumberTick numberTick0 = new NumberTick(500, "", textAnchor0, textAnchor0, (-546));
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(lineRenderer3D0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation(496);
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 10, 1.0E-8);
      Font font0 = cyclicNumberAxis0.DEFAULT_AXIS_LABEL_FONT.deriveFont(10, 1.0F);
      categoryTextAnnotation0.setFont(font0);
      combinedDomainCategoryPlot1.removeAnnotation(categoryTextAnnotation0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.zoom((double) lineRenderer3D0.ZERO);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      NumberAxis numberAxis0 = new NumberAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedRangeCategoryPlot0.getRangeGridlinePaint();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("=9|TAhk1I6v$@t");
      combinedRangeCategoryPlot0.getCategoriesForAxis(categoryAxis3D0);
      combinedRangeCategoryPlot0.handleClick((-2909), (-1), plotRenderingInfo0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getDataset((-2909));
      combinedDomainCategoryPlot1.isRangeGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot0.getDomainAxisLocation();
      Collection collection0 = new LinkedList<LinkedList<AxisState>>();
      combinedDomainCategoryPlot0.getRenderer();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[2];
      categoryItemRendererArray0[0] = null;
      categoryItemRendererArray0[1] = null;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Point2D.Float point2D_Float0 = new Point2D.Float();
      categoryPlot0.zoomRangeAxes(1191.96296, 1191.96296, plotRenderingInfo0, (Point2D) point2D_Float0);
      categoryPlot0.getColumnRenderingOrder();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      CategoryAnchor categoryAnchor0 = CategoryAnchor.END;
      combinedRangeCategoryPlot1.setDomainGridlinePosition(categoryAnchor0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(combinedRangeCategoryPlot1.DEFAULT_GRIDLINE_STROKE);
      combinedRangeCategoryPlot1.getCategories();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(tickUnits0, (Dataset) null);
      categoryPlot0.datasetChanged(datasetChangeEvent0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "#@5PP fJd");
      CategoryPlot categoryPlot1 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      categoryPlot0.setAnchorValue((double) 500, false);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getRangeAxisEdge(471);
      CategoryAnchor categoryAnchor0 = CategoryAnchor.START;
      categoryPlot0.setDomainGridlinePosition(categoryAnchor0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker((-1), (Marker) intervalMarker0, layer0);
      combinedDomainCategoryPlot0.getDomainMarkers((-1), layer0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      DatasetRenderingOrder datasetRenderingOrder1 = DatasetRenderingOrder.REVERSE;
      combinedDomainCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder1);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("sBX8}vGHqG=vXKeuG", true, 1.0F);
      categoryTextAnnotation0.setFont(combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeAxisEdge(42);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(tickUnits0, (Dataset) null);
      categoryPlot0.datasetChanged(datasetChangeEvent0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "#@5PP fJd");
      CategoryPlot categoryPlot1 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      cyclicNumberAxis0.setUpperMargin(0.05);
      categoryPlot0.setAnchorValue((double) 500, false);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getRangeAxisEdge(471);
      categoryPlot0.getRenderer();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(tickUnits0, (Dataset) null);
      categoryPlot0.datasetChanged(datasetChangeEvent0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, "#@5PP fJd");
      CategoryPlot categoryPlot1 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      categoryPlot0.setAnchorValue((double) 500, false);
      categoryPlot0.getDomainGridlineStroke();
      SortOrder sortOrder0 = categoryPlot0.getColumnRenderingOrder();
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      CategoryMarker categoryMarker1 = new CategoryMarker(cyclicNumberAxis0.DEFAULT_TICK_UNIT, cyclicNumberAxis0.DEFAULT_TICK_LABEL_PAINT, categoryPlot1.DEFAULT_GRIDLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      categoryPlot0.addDomainMarker(categoryMarker1, layer0);
      AxisLocation axisLocation0 = categoryPlot1.getRangeAxisLocation(3380);
      categoryPlot0.setRangeAxisLocation(10, axisLocation0, false);
      categoryPlot1.addRangeMarker(500, (Marker) categoryMarker1, layer0);
      categoryPlot1.setRowRenderingOrder(sortOrder0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      Paint paint0 = combinedDomainCategoryPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(2.0);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
      combinedDomainCategoryPlot0.setRangeGridlinePaint(paint0);
      combinedDomainCategoryPlot0.clearDomainMarkers(2);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainAxisEdge();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((double) 1.0F);
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearDomainMarkers(470);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(tickUnits0, (Dataset) null);
      categoryPlot0.datasetChanged(datasetChangeEvent0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getItemStroke(0, 283);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DateAxis dateAxis0 = new DateAxis("5:TK*Dd_");
      combinedDomainCategoryPlot0.getDataRange(dateAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      SortOrder sortOrder0 = categoryPlot0.getRowRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      JTextPane jTextPane0 = new JTextPane();
      jTextPane0.modelToView((-1605));
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      combinedDomainCategoryPlot0.clearDomainMarkers();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainAxisForDataset((-1073741824));
      combinedRangeCategoryPlot0.getDomainAxisIndex((CategoryAxis) null);
      Color color0 = Color.MAGENTA;
      SortOrder sortOrder0 = combinedRangeCategoryPlot0.getRowRenderingOrder();
      combinedRangeCategoryPlot0.setRowRenderingOrder(sortOrder0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      NumberAxis numberAxis0 = new NumberAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      NumberTick numberTick0 = new NumberTick(2.0F, (String) null, textAnchor0, textAnchor0, 1.0F);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(numberTick0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.addDomainMarker((CategoryMarker) null, (Layer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainAxisForDataset((-1073741824));
      combinedRangeCategoryPlot0.getDomainAxisIndex((CategoryAxis) null);
      combinedRangeCategoryPlot0.getRangeCrosshairPaint();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeCrosshairPaint();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedDomainCategoryPlot0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.rendererChanged(rendererChangeEvent0);
      combinedDomainCategoryPlot1.setRangeCrosshairValue((double) 10, false);
      Layer layer1 = Layer.BACKGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedDomainCategoryPlot1.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot1.DEFAULT_GRIDLINE_STROKE, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot1.DEFAULT_OUTLINE_STROKE, 1.0F);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryAxis categoryAxis0 = new CategoryAxis("e[wW'#iR{Wb*H(<x");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.setRangeAxis(80, (ValueAxis) numberAxis3D0, false);
      ValueAxis[] valueAxisArray0 = new ValueAxis[5];
      valueAxisArray0[0] = (ValueAxis) numberAxis3D0;
      valueAxisArray0[1] = (ValueAxis) numberAxis3D0;
      valueAxisArray0[2] = (ValueAxis) numberAxis3D0;
      valueAxisArray0[3] = (ValueAxis) numberAxis3D0;
      valueAxisArray0[4] = (ValueAxis) numberAxis3D0;
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      combinedDomainCategoryPlot2.datasetChanged((DatasetChangeEvent) null);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeCrosshairValue((-2448.0), false);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      combinedRangeCategoryPlot0.getAnchorValue();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot1.setRangeAxes((ValueAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(tickUnits0, (Dataset) null);
      categoryPlot0.datasetChanged(datasetChangeEvent0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getCategoriesForAxis(categoryAxis3D0);
      combinedRangeCategoryPlot0.handleClick(2251, 10, plotRenderingInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.getRangeAxis();
      combinedRangeCategoryPlot1.getRangeAxisEdge(10);
      int[] intArray0 = new int[4];
      intArray0[0] = 10;
      intArray0[1] = (-1);
      intArray0[2] = 10;
      intArray0[3] = (-830);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(471, 471, intArray0, 2251, true, 10, (-1775));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers(10, layer0);
      Layer layer1 = Layer.BACKGROUND;
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getItemStroke(0, 0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeCrosshairStroke(areaRenderer0.DEFAULT_STROKE);
      combinedDomainCategoryPlot0.setAnchorValue((double) 0, true);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.getDomainAxisEdge((-1));
      CategoryMarker categoryMarker0 = new CategoryMarker(areaRenderer0.ZERO);
      combinedDomainCategoryPlot0.addDomainMarker(categoryMarker0, layer0);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation(0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxisLocation((-490), axisLocation0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getRangeAxis();
      combinedDomainCategoryPlot0.getDomainGridlinePosition();
      categoryAxis3D0.setLabelAngle(1.0F);
      combinedDomainCategoryPlot0.setDomainAxis(10, (CategoryAxis) categoryAxis3D0, false);
      categoryAxis3D0.addCategoryLabelToolTip(false, (String) null);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxisLocation((-2844), axisLocation0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);
      combinedDomainCategoryPlot0.setNoDataMessage("");
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) null);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis1 = new CategoryAxis("Null 'location' for index 0 not permitted.");
      categoryAxis0.setMaximumCategoryLabelWidthRatio((-851.3387F));
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedRangeCategoryPlot0.setDomainAxis((CategoryAxis) categoryAxis3D0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis1.DEFAULT_TICK_MARK_STROKE);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      combinedRangeCategoryPlot0.configureRangeAxes();
      combinedRangeCategoryPlot0.getRangeGridlineStroke();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("d?[gv");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.setNoDataMessage("d?[gv");
      combinedDomainCategoryPlot0.getRangeAxis();
      CategoryAnchor categoryAnchor0 = CategoryAnchor.START;
      combinedDomainCategoryPlot0.setRangeAxis(500, (ValueAxis) null);
      categoryAxis0.setLabelAngle((-702.692093632));
      combinedDomainCategoryPlot0.setDomainAxis(500, categoryAxis0, true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis numberAxis0 = new NumberAxis();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "B");
      TextAnchor textAnchor0 = TextAnchor.TOP_RIGHT;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 1.0F);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      Paint paint0 = thermometerPlot0.getThermometerPaint();
      combinedDomainCategoryPlot0.setRangeCrosshairPaint(paint0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedRangeCategoryPlot0.getDomainAxis(1);
      combinedDomainCategoryPlot0.setAxisOffset(thermometerPlot0.DEFAULT_INSETS);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);
      combinedDomainCategoryPlot0.setNoDataMessage("");
      ValueAxis valueAxis0 = combinedDomainCategoryPlot0.getRangeAxis();
      combinedDomainCategoryPlot0.getDomainGridlinePosition();
      categoryAxis0.setLabelAngle((-702.692093632));
      combinedDomainCategoryPlot0.setDomainAxis(500, categoryAxis0, true);
      categoryAxis0.addCategoryLabelToolTip(true, "");
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.setRangeAxisLocation(734, axisLocation0, true);
      axisLocation0.getOpposite();
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot1.addDomainMarker(categoryMarker0, layer0);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[1];
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      categoryItemRendererArray0[0] = (CategoryItemRenderer) stackedAreaRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      combinedDomainCategoryPlot1.setAxisOffset(valueAxis0.DEFAULT_AXIS_LABEL_INSETS);
      combinedDomainCategoryPlot0.getOrientation();
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer1);
      AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(subCategoryAxis0);
      subCategoryAxis0.setLabelAngle(5144.4);
      combinedDomainCategoryPlot0.setDomainAxis(0, (CategoryAxis) subCategoryAxis0, true);
      subCategoryAxis0.addCategoryLabelToolTip(10, "");
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.setRangeAxisLocation(734, axisLocation0, true);
      axisLocation0.getOpposite();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      Layer layer2 = Layer.FOREGROUND;
      combinedDomainCategoryPlot1.addDomainMarker(categoryMarker0, layer2);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[8];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) stackedAreaRenderer0;
      categoryItemRendererArray0[1] = (CategoryItemRenderer) stackedAreaRenderer0;
      categoryItemRendererArray0[2] = (CategoryItemRenderer) stackedAreaRenderer0;
      categoryItemRendererArray0[3] = (CategoryItemRenderer) stackedAreaRenderer0;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      categoryItemRendererArray0[4] = (CategoryItemRenderer) statisticalLineAndShapeRenderer0;
      categoryItemRendererArray0[5] = (CategoryItemRenderer) stackedAreaRenderer0;
      categoryItemRendererArray0[6] = (CategoryItemRenderer) stackedAreaRenderer0;
      categoryItemRendererArray0[7] = (CategoryItemRenderer) stackedAreaRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      rectangle0.add(960, 460);
      rectangle2D_Float0.createIntersection(rectangle0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot1.setDomainAxisLocation((-1666), (AxisLocation) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainAxisForDataset((-1697));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.getDomainAxisIndex((CategoryAxis) null);
      combinedRangeCategoryPlot1.getRangeCrosshairPaint();
      CategoryAnchor categoryAnchor0 = CategoryAnchor.START;
      combinedDomainCategoryPlot0.setDomainGridlinePosition(categoryAnchor0);
      combinedRangeCategoryPlot1.isRangeCrosshairLockedOnData();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      CategoryMarker categoryMarker0 = new CategoryMarker(true, periodAxis0.DEFAULT_AXIS_LINE_PAINT, periodAxis0.DEFAULT_TICK_MARK_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.addDomainMarker(490, categoryMarker0, layer0);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      combinedRangeCategoryPlot0.configureRangeAxes();
      combinedRangeCategoryPlot0.getRangeGridlineStroke();
      combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("1r?(8_[(", 1.0F, 1191.96296);
      combinedDomainCategoryPlot0.addAnnotation(categoryTextAnnotation0);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      combinedDomainCategoryPlot0.addDomainMarker(categoryMarker0, layer0);
      combinedDomainCategoryPlot0.clearDomainMarkers();
      combinedDomainCategoryPlot0.getRangeAxisLocation(35);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getItemStroke(0, 0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DateAxis dateAxis0 = new DateAxis("5:TK*Dd_");
      combinedDomainCategoryPlot0.getDataRange(dateAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      JTextPane jTextPane0 = new JTextPane();
      jTextPane0.modelToView(500);
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      combinedDomainCategoryPlot0.clearDomainMarkers();
      ValueAxis[] valueAxisArray0 = new ValueAxis[4];
      valueAxisArray0[0] = (ValueAxis) dateAxis0;
      valueAxisArray0[1] = (ValueAxis) dateAxis0;
      valueAxisArray0[2] = (ValueAxis) dateAxis0;
      valueAxisArray0[3] = (ValueAxis) dateAxis0;
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 10, 1.0F);
      combinedDomainCategoryPlot0.addAnnotation(categoryTextAnnotation0);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot2.clearDomainMarkers();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis("7Oh^H<wJnEZ");
      categoryAxis0.setLabelAngle(0.2);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainAxis((-1), categoryAxis0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      rectangle2D_Float0.createIntersection(rectangle0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot)combinedDomainCategoryPlot0.clone();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedDomainCategoryPlot1.DEFAULT_BACKGROUND_PAINT, ganttRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot1.addDomainMarker(2074, categoryMarker0, layer0);
      combinedDomainCategoryPlot1.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.getDomainMarkers(10, (Layer) null);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'offset' argument.", combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      markerChangeEvent0.setChart(jFreeChart0);
      intervalMarker0.setLabel("");
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker((-1), (Marker) intervalMarker0, layer0);
      combinedDomainCategoryPlot0.getWeight();
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(0, 10, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (0) and height (10) must be > 0
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1601.0, 1601.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedRangeCategoryPlot0.getRangeGridlinePaint();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      combinedRangeCategoryPlot0.getCategoriesForAxis(categoryAxis3D0);
      combinedRangeCategoryPlot0.handleClick(8, 21, plotRenderingInfo0);
      combinedRangeCategoryPlot0.getRangeAxis();
      combinedRangeCategoryPlot0.getRangeAxisEdge((-830));
      int int0 = (-769);
      int[] intArray0 = new int[3];
      intArray0[0] = 10;
      intArray0[1] = (-830);
      intArray0[2] = 3;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-1), (-769), intArray0, 10, true, 500, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer1);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      JTree jTree0 = new JTree();
      jTree0.getRowBounds((-3));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.drawBackground((Graphics2D) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer1);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      JScrollPane jScrollPane0 = new JScrollPane();
      jScrollPane0.getViewportBorderBounds();
      JTree jTree0 = new JTree();
      Rectangle rectangle0 = jTree0.getRowBounds(0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.drawBackground((Graphics2D) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 10, 1.0F);
      combinedDomainCategoryPlot0.addAnnotation(categoryTextAnnotation0);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot1.clearDomainAxes();
      combinedDomainCategoryPlot0.getAxisOffset();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer1);
      AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(subCategoryAxis0);
      axisChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, 221, 15, 15, 489, (-1), (-1390), true, true, false, true, true, false);
      Point point0 = chartPanel0.getLocation();
      ChartPanel chartPanel1 = new ChartPanel((JFreeChart) null);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel1.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.zoomDomainAxes(1036.4919927062133, (double) 221, plotRenderingInfo0, (Point2D) point0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.getRangeAxisLocation();
      combinedDomainCategoryPlot1.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(2500.0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true, combinedDomainCategoryPlot1.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedDomainCategoryPlot1.addRangeMarker((Marker) categoryMarker0);
      combinedDomainCategoryPlot0.getAxisOffset();
      combinedDomainCategoryPlot0.getFixedLegendItems();
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      combinedRangeCategoryPlot0.configureRangeAxes();
      combinedRangeCategoryPlot0.getDomainAxis();
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      categoryAxis0.removeChangeListener(combinedRangeCategoryPlot0);
      combinedDomainCategoryPlot0.setNoDataMessage("org.jfree.chart.axis.CategoryAxis3D");
      combinedDomainCategoryPlot0.getRangeAxis();
      combinedDomainCategoryPlot0.getDomainGridlinePosition();
      categoryAxis0.setLabelAngle(3999.54866652);
      combinedDomainCategoryPlot0.setDomainAxis(10, categoryAxis0, false);
      categoryAxis0.addCategoryLabelToolTip(500, "hS&YBO\"gS-");
      combinedRangeCategoryPlot0.getRangeAxisLocation();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDomainAxisLocation(10);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(10);
      axisLocation0.getOpposite();
      combinedRangeCategoryPlot0.getDomainAxisEdge(3);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot1.addDomainMarker(categoryMarker0, layer0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[2];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) stackedAreaRenderer0;
      categoryItemRendererArray0[1] = (CategoryItemRenderer) stackedAreaRenderer0;
      combinedDomainCategoryPlot1.setRenderers(categoryItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[2];
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Category Plot");
      categoryAxisArray0[0] = (CategoryAxis) categoryAxis3D0;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Category Plot");
      categoryAxisArray0[1] = (CategoryAxis) extendedCategoryAxis0;
      combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      JScrollPane jScrollPane0 = new JScrollPane();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, "");
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, extendedCategoryAxis0, cyclicNumberAxis0, (CategoryItemRenderer) null);
      cyclicNumberAxis0.setUpperMargin(0.2);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.setRangeGridlinePaint(cyclicNumberAxis0.DEFAULT_TICK_LABEL_PAINT);
      combinedDomainCategoryPlot0.clearDomainMarkers(500);
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[8];
      categoryAxisArray0[0] = (CategoryAxis) subCategoryAxis0;
      categoryAxisArray0[1] = (CategoryAxis) extendedCategoryAxis0;
      categoryAxisArray0[2] = (CategoryAxis) extendedCategoryAxis0;
      categoryAxisArray0[3] = (CategoryAxis) subCategoryAxis0;
      categoryAxisArray0[4] = (CategoryAxis) subCategoryAxis0;
      categoryAxisArray0[5] = (CategoryAxis) extendedCategoryAxis0;
      categoryAxisArray0[6] = categoryAxis0;
      categoryAxisArray0[7] = (CategoryAxis) subCategoryAxis0;
      combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
      combinedDomainCategoryPlot0.clearRangeAxes();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getDomainMarkers(1386, (Layer) null);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("%z:`L9P{[i:M{S", true, 10);
      categoryTextAnnotation0.setFont(combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      combinedDomainCategoryPlot0.removeAnnotation(categoryTextAnnotation0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      combinedDomainCategoryPlot0.getRendererForDataset(defaultStatisticalCategoryDataset0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      BasicStroke basicStroke0 = (BasicStroke)areaRenderer0.getItemStroke(0, 0);
      basicStroke0.getDashArray();
      categoryPlot0.setRangeCrosshairStroke(basicStroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.getRendererForDataset((CategoryDataset) null);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Year year0 = new Year();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("%z:`L9P{[i:M{S", year0, 1.0F);
      categoryTextAnnotation0.setFont(combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("%z:`L9P{[i:M{S");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      combinedDomainCategoryPlot0.getRendererForDataset(defaultStatisticalCategoryDataset0);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1722.069389723553));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, extendedCategoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      categoryPlot0.setAnchorValue((double) 0.0F, true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      CategoryMarker categoryMarker0 = new CategoryMarker(cyclicNumberAxis0.DEFAULT_TICK_UNIT);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getRangeAxisEdge(481);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      combinedDomainCategoryPlot0.getDomainMarkers(10, (Layer) null);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeAxisEdge(10);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clone();
      CategoryMarker categoryMarker0 = new CategoryMarker(0.2, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_OUTLINE_STROKE);
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      combinedDomainCategoryPlot0.datasetChanged((DatasetChangeEvent) null);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Layer layer0 = Layer.FOREGROUND;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Null 'orientation' argument.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0);
      combinedDomainCategoryPlot0.clearDomainMarkers();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ThermometerPlot thermometerPlot1 = new ThermometerPlot();
      thermometerPlot1.getOrientation();
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      NumberAxis numberAxis0 = new NumberAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      NumberTick numberTick0 = new NumberTick(2.0F, (String) null, textAnchor0, textAnchor0, 1.0F);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(numberTick0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(2538);
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0);
      combinedDomainCategoryPlot0.rendererChanged((RendererChangeEvent) null);
      combinedDomainCategoryPlot0.setRangeCrosshairValue((double) 10, false);
      combinedRangeCategoryPlot0.getAnchorValue();
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Year year0 = new Year();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("%z:`L9P{[i:M{S", year0, 1.0F);
      categoryTextAnnotation0.setFont(combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("%z:`L9P{[i:M{S");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      boolean boolean0 = CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      combinedDomainCategoryPlot0.getRendererForDataset(defaultStatisticalCategoryDataset0);
      combinedRangeCategoryPlot0.getRangeAxisEdge();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Color color0 = chartPanel0.getBackground();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(color0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), 680, "PRINT");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation((-546));
      combinedDomainCategoryPlot0.setRangeAxisLocation(496, axisLocation0);
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      ChartPanel chartPanel1 = new ChartPanel((JFreeChart) null, 680, 0, 0, (-1), 680, 500, false, true, false, true, true, true);
      Point point0 = chartPanel1.getLocation();
      combinedDomainCategoryPlot0.zoomDomainAxes((double) 420, 0.0, plotRenderingInfo0, (Point2D) point0);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(2.0);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
      combinedDomainCategoryPlot0.getRangeAxisEdge();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getDomainMarkers(1991, (Layer) null);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDatasetRenderingOrder((DatasetRenderingOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      String string0 = "org.jfree.chart.plot.FastScatterPlot";
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("org.jfree.chart.plot.FastScatterPlot", 1.0F, 2.0, 1.0F);
      combinedDomainCategoryPlot0.removeAnnotation(categoryPointerAnnotation0);
      CategoryMarker categoryMarker0 = new CategoryMarker(3.0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.addDomainMarker(487, categoryMarker0, layer0);
      TimeZone.getDefault();
      SimpleTimeZone simpleTimeZone0 = null;
      try {
        simpleTimeZone0 = new SimpleTimeZone(10, "org.jfree.chart.plot.FastScatterPlot", (-3993), (-3993), 10, (-3993), 489, 68, 10, (-3993));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal start month -3993
         //
         verifyException("java.util.SimpleTimeZone", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getSubplots();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      categoryAxis3D0.setVisible(true);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      combinedDomainCategoryPlot0.getDomainAxisIndex(categoryAxis3D0);
      combinedDomainCategoryPlot0.clearDomainAxes();
      combinedDomainCategoryPlot0.isDomainZoomable();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      JFreeChart jFreeChart0 = new JFreeChart("rC<zHw0$uT@Rj/OcF", categoryAxis0.DEFAULT_TICK_LABEL_FONT, categoryPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      ChartRenderingInfo chartRenderingInfo1 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo1);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(15);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      combinedRangeCategoryPlot0.setRenderer((CategoryItemRenderer) intervalBarRenderer0);
      IntervalMarker intervalMarker0 = null;
      try {
        intervalMarker0 = new IntervalMarker(1.0F, (-1.0), categoryAxis0.DEFAULT_AXIS_LINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, periodAxis0.DEFAULT_AXIS_LABEL_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, 1454.049F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'alpha' value must be in the range 0.0f to 1.0f
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      categoryPlot0.setAnchorValue((-1.0), true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      categoryPlot0.getDomainAxisEdge(0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      categoryPlot0.addDomainMarker(categoryMarker0, layer0);
      AxisLocation axisLocation0 = categoryPlot0.getRangeAxisLocation(0);
      categoryPlot0.setRangeAxisLocation(0, axisLocation0, true);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      categoryAxis0.setCategoryLabelPositionOffset((-245));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      combinedRangeCategoryPlot0.getCategories();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getItemStroke(10, 10);
      categoryPlot0.setRangeCrosshairStroke(areaRenderer0.DEFAULT_STROKE);
      categoryPlot0.setAnchorValue((-1.0), true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      categoryPlot0.getDomainAxisEdge(478);
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      Layer layer1 = Layer.FOREGROUND;
      categoryPlot0.addDomainMarker(categoryMarker0, layer1);
      categoryPlot0.getDataset();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      categoryPlot0.setAnchorValue((-1.0), true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation(3);
      combinedDomainCategoryPlot0.setDomainAxisLocation(0, axisLocation0, true);
      combinedDomainCategoryPlot0.getAnnotations();
      combinedDomainCategoryPlot0.getDomainAxisLocation();
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);
      combinedDomainCategoryPlot0.setNoDataMessage("");
      combinedDomainCategoryPlot0.getRangeAxis();
      combinedDomainCategoryPlot0.getDomainGridlinePosition();
      categoryAxis0.setLabelAngle((-702.692093632));
      combinedDomainCategoryPlot0.setDomainAxis(500, categoryAxis0, true);
      categoryAxis0.addCategoryLabelToolTip(true, "");
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.setRangeAxisLocation(734, axisLocation0, true);
      axisLocation0.getOpposite();
      combinedDomainCategoryPlot0.getDomainAxisEdge(734);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot1.addDomainMarker(categoryMarker0, layer0);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[1];
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      categoryItemRendererArray0[0] = (CategoryItemRenderer) stackedAreaRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      FileSystemHandling.shouldAllThrowIOExceptions();
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) categoryMarker0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(1740, layer0);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer1);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.calculateAxisSpace((Graphics2D) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom((-32.718407224283695));
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(10, categoryAxis0.DEFAULT_TICK_LABEL_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom((-1.0));
      combinedRangeCategoryPlot0.getDomainAxisEdge(10);
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance(734);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.clearDomainAxes();
      categoryPlot0.getDomainAxisEdge(0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-2269.1659), 1128.73, 1.0F, 226.52);
      // Undeclared exception!
      try { 
        rectangle2D_Double0.createIntersection((Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.Rectangle2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeCategoryPlot0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(numberAxis3D0);
      combinedRangeCategoryPlot1.getAnchorValue();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      combinedRangeCategoryPlot0.clearRangeMarkers();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LegendItemCollection legendItemCollection0 = combinedRangeCategoryPlot0.getLegendItems();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      candlestickRenderer0.getLegendItem(10, (-2177));
      legendItemCollection0.add((LegendItem) null);
      combinedRangeCategoryPlot0.setFixedLegendItems(legendItemCollection0);
      combinedRangeCategoryPlot0.getAnchorValue();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      extendedCategoryAxis0.setAxisLineStroke(combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeCategoryPlot0.setDomainAxis(0, (CategoryAxis) extendedCategoryAxis0);
      String string0 = "TQAERm|K'r7ie";
      Hour.parseHour("TQAERm|K'r7ie");
      Minute minute0 = null;
      try {
        minute0 = new Minute(0, (Hour) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hour' argument.
         //
         verifyException("org.jfree.data.time.Minute", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearDomainAxes();
      combinedDomainCategoryPlot0.getSubplots();
      combinedDomainCategoryPlot0.getCategories();
      combinedDomainCategoryPlot0.setDomainGridlinePaint(combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainAxisForDataset((-1697));
      NumberAxis numberAxis0 = new NumberAxis();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("U7G'r5}J 0]/??", false, 0.2, 0.05);
      combinedRangeCategoryPlot0.addAnnotation(categoryPointerAnnotation0);
      combinedRangeCategoryPlot0.getRangeCrosshairPaint();
      combinedRangeCategoryPlot0.setRangeCrosshairLockedOnData(false);
      combinedRangeCategoryPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeAxisEdge(487);
      combinedDomainCategoryPlot0.getDomainAxisIndex(extendedCategoryAxis0);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1191.96296, "l*Zk");
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Null 'offset' argument.");
      CategoryPlot categoryPlot1 = new CategoryPlot(defaultCategoryDataset0, extendedCategoryAxis0, cyclicNumberAxis0, areaRenderer0);
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(0.05, 0.05, "Null 'offset' argument.");
      cyclicNumberAxis0.setUpperMargin(10);
      categoryPlot1.setAnchorValue(0.05, false);
      categoryPlot1.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      Layer layer0 = Layer.BACKGROUND;
      CategoryAxis categoryAxis0 = new CategoryAxis();
      categoryPlot0.getCategoriesForAxis(extendedCategoryAxis0);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.setRangeCrosshairVisible(false);
      combinedDomainCategoryPlot0.addRangeMarker((-1), (Marker) intervalMarker0, layer0);
      combinedDomainCategoryPlot0.setRenderer((CategoryItemRenderer) lineRenderer3D0, false);
      combinedDomainCategoryPlot0.setRangeCrosshairStroke(lineRenderer3D0.DEFAULT_OUTLINE_STROKE);
      Area area0 = new Area();
      area0.clone();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getThermometerPaint();
      combinedDomainCategoryPlot0.setRangeCrosshairPaint(thermometerPlot0.DEFAULT_BACKGROUND_PAINT);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.getDomainAxis(0);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeCategoryPlot0);
      CategoryAnchor categoryAnchor0 = CategoryAnchor.START;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      AxisLocation axisLocation2 = AxisLocation.getOpposite(axisLocation1);
      combinedDomainCategoryPlot0.setDomainAxisLocation(461, axisLocation2);
      combinedDomainCategoryPlot0.isRangeCrosshairVisible();
      combinedDomainCategoryPlot0.getAnnotations();
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1722.069389723553));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "org.jfree.chart.plot.FastScatterPlot";
      stringArray0[1] = "org.jfree.chart.plot.FastScatterPlot";
      SymbolAxis symbolAxis0 = new SymbolAxis("org.jfree.chart.plot.FastScatterPlot", stringArray0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      rectangle2D_Float0.createIntersection(rectangle0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainAxisLocation(0, (AxisLocation) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      AxisLocation.getOpposite(axisLocation1);
      combinedDomainCategoryPlot0.setDomainAxisLocation(10, axisLocation0);
      boolean boolean0 = CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE;
      combinedDomainCategoryPlot0.getRangeAxisForDataset((-35));
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      categoryAxis0.setCategoryLabelPositionOffset((-245));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedDomainCategoryPlot0.setRangeAxisLocation(10, (AxisLocation) null, true);
      combinedDomainCategoryPlot0.clearRangeAxes();
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1601.0, 1601.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedRangeCategoryPlot0.getRangeGridlinePaint();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      standardEntityCollection0.equals((Object) null);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("w jRn");
      List list0 = new Stack<DefaultIntervalCategoryDataset>();
      combinedRangeCategoryPlot0.handleClick(500, 21, plotRenderingInfo0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getDataset(21);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxis((-3516), (ValueAxis) cyclicNumberAxis0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.clearDomainAxes();
      combinedDomainCategoryPlot0.getFixedRangeAxisSpace();
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getFixedRangeAxisSpace();
      String string0 = "fV2$Ev";
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F, "fV2$Ev");
      // Undeclared exception!
      try { 
        categoryPlot0.setRangeAxis((-1), (ValueAxis) cyclicNumberAxis0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getNoDataMessage();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      Stroke stroke0 = stackedAreaRenderer0.getItemStroke(10, 10);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryAxis categoryAxis0 = new CategoryAxis("`CTX76Wwj5");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.setRenderer(495, (CategoryItemRenderer) stackedBarRenderer3D0, true);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Z_z#HV#Cc");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logarithmicAxis0);
      combinedRangeCategoryPlot0.clearRangeMarkers();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      TextAnchor textAnchor0 = TextAnchor.TOP_RIGHT;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 1.0F);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Paint paint0 = thermometerPlot0.getThermometerPaint();
      combinedDomainCategoryPlot0.setRangeCrosshairPaint(paint0);
      PlotChangeEvent plotChangeEvent0 = new PlotChangeEvent(thermometerPlot0);
      thermometerPlot0.notifyListeners(plotChangeEvent0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      combinedRangeCategoryPlot0.setRenderer((CategoryItemRenderer) layeredBarRenderer0, true);
      NumberAxis numberAxis0 = new NumberAxis();
      combinedRangeCategoryPlot0.getDomainAxis(0);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getItemStroke(10, 10);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[2];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) areaRenderer0;
      categoryItemRendererArray0[1] = (CategoryItemRenderer) areaRenderer0;
      categoryPlot0.setRenderers(categoryItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker((-1), (Marker) intervalMarker0, layer0);
      combinedDomainCategoryPlot0.setRenderer((CategoryItemRenderer) lineRenderer3D0, true);
      combinedDomainCategoryPlot0.setRangeCrosshairStroke(lineRenderer3D0.DEFAULT_OUTLINE_STROKE);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(0, 10, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (0) and height (10) must be > 0
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) categoryMarker0);
      combinedDomainCategoryPlot0.setRangeGridlinePaint(categoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      combinedDomainCategoryPlot0.clearDomainMarkers((-1628));
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Color color0 = chartPanel0.getBackground();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(color0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), 680, "PRINT");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation((-546));
      combinedDomainCategoryPlot0.setRangeAxisLocation(496, axisLocation0);
      combinedDomainCategoryPlot0.setRangeCrosshairStroke(cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedDomainCategoryPlot0.setAnchorValue((-654.72878), true);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.getDomainAxisEdge(1859);
      CategoryMarker categoryMarker0 = new CategoryMarker("ZOOM_DOMAIN_BOTH");
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.addDomainMarker(categoryMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(10, 10);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot1.setRangeAxis(10, (ValueAxis) numberAxis3D0, false);
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      MockDate mockDate0 = new MockDate();
      Second second0 = new Second(mockDate0);
      categoryAxis0.getCategoryLabelToolTip(second0);
      combinedDomainCategoryPlot0.setRangeCrosshairVisible(true);
      combinedDomainCategoryPlot0.getDomainAxisEdge();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(categoryAxis0.DEFAULT_AXIS_LABEL_PAINT);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, 1.0F, "pnS&$");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation(500);
      combinedDomainCategoryPlot0.setRangeAxisLocation(0, axisLocation0);
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, 0, 0, 0, 10, (-1), (-1), true, true, true, true, true, true);
      Point point0 = chartPanel0.getLocation();
      combinedDomainCategoryPlot0.zoomDomainAxes(0.0, (double) 500, plotRenderingInfo0, (Point2D) point0);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.setRangeCrosshairVisible(true);
      combinedDomainCategoryPlot0.setRenderer((CategoryItemRenderer) lineRenderer3D0, true);
      combinedDomainCategoryPlot0.setRangeCrosshairStroke(lineRenderer3D0.DEFAULT_OUTLINE_STROKE);
      Area area0 = new Area();
      area0.getBounds2D();
      Point2D.Float point2D_Float0 = new Point2D.Float();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.zoomRangeAxes(779.1465269520334, 779.1465269520334, plotRenderingInfo0, (Point2D) point2D_Float0);
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.zoomRangeAxes(10.0, plotRenderingInfo0, (Point2D) point2D_Float0);
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      Layer layer0 = null;
      combinedDomainCategoryPlot0.getDomainMarkers(1991, (Layer) null);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      String string0 = "%z:`L9P{[i:M{S";
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("%z:`L9P{[i:M{S", 10, 1.0F);
      categoryTextAnnotation0.setFont(combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      combinedDomainCategoryPlot0.removeAnnotation(categoryTextAnnotation0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addDomainMarker(1991, categoryMarker0, (Layer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer1);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 10, 1268.86);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.removeAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      combinedDomainCategoryPlot0.getDomainMarkers(10, (Layer) null);
      Layer layer0 = Layer.FOREGROUND;
      Layer layer1 = Layer.FOREGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addDomainMarker(categoryMarker0, (Layer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers(605, layer0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("%z:`L9P{[i:M{S", 10, 14.0);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", 0.0, 10, (-75.0012606564));
      categoryPointerAnnotation0.setFont(categoryTextAnnotation0.DEFAULT_FONT);
      combinedDomainCategoryPlot0.removeAnnotation(categoryPointerAnnotation0);
      CategoryMarker categoryMarker0 = new CategoryMarker(5.0);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getDomainMarkers(1991, (Layer) null);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      String string0 = "%z:`L9P{[i:M{S";
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("%z:`L9P{[i:M{S", 10, 1.0F);
      categoryTextAnnotation0.setFont(combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      combinedDomainCategoryPlot0.removeAnnotation(categoryTextAnnotation0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addDomainMarker(1991, categoryMarker0, (Layer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedRangeCategoryPlot0.setRangeAxisLocation(axisLocation0);
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom(10);
      combinedRangeCategoryPlot0.getDomainAxisEdge(62);
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance(62);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.getRangeMarkers(layer0);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'stroke' argument.", combinedRangeCategoryPlot0);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.getRangeMarkers(layer0);
      combinedRangeCategoryPlot0.zoom(1191.96296);
      combinedRangeCategoryPlot0.getDomainAxisEdge((-1));
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance(10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      categoryAxis0.setCategoryLabelPositionOffset(10);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRangeGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedDomainCategoryPlot0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.rendererChanged(rendererChangeEvent0);
      combinedDomainCategoryPlot1.setRangeCrosshairValue((double) 10, false);
      Layer layer1 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addDomainMarker((CategoryMarker) null, layer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedDomainCategoryPlot0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.rendererChanged(rendererChangeEvent0);
      combinedDomainCategoryPlot0.setDomainAxis((CategoryAxis) null);
      ValueMarker valueMarker0 = new ValueMarker(10);
      combinedDomainCategoryPlot1.addRangeMarker(1, (Marker) valueMarker0, layer0);
      combinedDomainCategoryPlot1.setRangeCrosshairValue((double) 10, false);
      combinedDomainCategoryPlot0.clearDomainMarkers();
      combinedDomainCategoryPlot1.getCategories();
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Year year0 = new Year();
      year0.previous();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("%z:`L9P{[i:M{S", year0, 1.0F);
      categoryTextAnnotation0.setFont(combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("%z:`L9P{[i:M{S");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearRangeMarkers(719);
      combinedDomainCategoryPlot0.isRangeGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      categoryAxis0.setCategoryLabelPositionOffset(10);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      categoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.getRenderer();
      combinedDomainCategoryPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      int int0 = 420;
      TickUnits tickUnits0 = new TickUnits();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(tickUnits0, (Dataset) null);
      categoryPlot0.datasetChanged(datasetChangeEvent0);
      // Undeclared exception!
      try { 
        tickUnits0.get(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "CategoryItemEntity: rowKey=";
      stringArray0[1] = "CategoryItemEntity: rowKey=";
      stringArray0[2] = "CategoryItemEntity: rowKey=";
      stringArray0[3] = "CategoryItemEntity: rowKey=";
      stringArray0[4] = "CategoryItemEntity: rowKey=";
      SymbolAxis symbolAxis0 = new SymbolAxis("CategoryItemEntity: rowKey=", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(2.0);
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(10, layer0);
      combinedDomainCategoryPlot0.getRenderer();
      combinedDomainCategoryPlot0.clearRangeMarkers(10);
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "h diBc");
      CategoryAxis categoryAxis0 = new CategoryAxis("org.jfree.chart.util.PaintUtilities");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis0, numberAxis3D0, stackedAreaRenderer0);
      categoryPlot0.getFixedDomainAxisSpace();
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      MockDate mockDate0 = new MockDate();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer0);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.calculateAxisSpace((Graphics2D) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      combinedRangeCategoryPlot0.getDomainAxisForDataset(500);
      combinedRangeCategoryPlot0.getDomainAxisIndex((CategoryAxis) null);
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setWeight((-1));
      combinedRangeCategoryPlot0.getPlotType();
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(3, 3, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 0
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot0.clearDomainAxes();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedDomainCategoryPlot0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.rendererChanged(rendererChangeEvent0);
      combinedDomainCategoryPlot1.setRangeCrosshairValue((double) 10, false);
      Layer layer1 = Layer.BACKGROUND;
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedDomainCategoryPlot1.DEFAULT_GRIDLINE_PAINT, combinedDomainCategoryPlot1.DEFAULT_GRIDLINE_STROKE, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot1.DEFAULT_OUTLINE_STROKE, 1.0F);
      combinedDomainCategoryPlot0.addDomainMarker(categoryMarker0, layer1);
      combinedDomainCategoryPlot0.clearDomainMarkers();
      combinedDomainCategoryPlot1.getCategories();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(combinedRangeCategoryPlot0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.rendererChanged(rendererChangeEvent0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("G[M?pK>}v");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getOrientation();
      combinedDomainCategoryPlot1.setOrientation(plotOrientation0);
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer0);
      combinedRangeCategoryPlot0.getRangeAxis(10);
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getDomainMarkers(1991, (Layer) null);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedDomainCategoryPlot0.setAnchorValue((double) 1991, false);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.getDomainAxisEdge((-1));
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addDomainMarker(categoryMarker0, (Layer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Category Plot");
      JScrollPane jScrollPane0 = new JScrollPane();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainAxisForDataset(1191);
      combinedRangeCategoryPlot0.getDomainAxisIndex((CategoryAxis) null);
      combinedRangeCategoryPlot0.getRangeCrosshairPaint();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDomainAxisEdge();
      categoryPlot0.getPlotType();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[6];
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.setAnchorValue(1601.0, true);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeAxisEdge(21);
      combinedDomainCategoryPlot0.getRenderer();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      combinedDomainCategoryPlot1.addDomainMarker(categoryMarker0, layer0);
      combinedDomainCategoryPlot1.clearDomainMarkers();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Point2D.Float point2D_Float0 = new Point2D.Float();
      categoryPlot0.getColumnRenderingOrder();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainAxisLocation();
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      combinedDomainCategoryPlot0.getDataset(492);
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)SpiderWebPlot.DEFAULT_LABEL_OUTLINE_STROKE;
      categoryPlot0.setRangeCrosshairStroke(basicStroke0);
      categoryPlot0.getPlotType();
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[0];
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("#i24");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);
      combinedDomainCategoryPlot0.setNoDataMessage("");
      combinedDomainCategoryPlot0.getRangeAxis();
      combinedDomainCategoryPlot0.getDomainGridlinePosition();
      categoryAxis0.setLabelAngle((-702.692093632));
      combinedDomainCategoryPlot0.setDomainAxis(500, categoryAxis0, true);
      categoryAxis0.addCategoryLabelToolTip(true, "");
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.setRangeAxisLocation(734, axisLocation0, true);
      axisLocation0.getOpposite();
      combinedDomainCategoryPlot0.setDomainAxisLocation(734, axisLocation0, true);
      combinedDomainCategoryPlot0.getAnnotations();
      combinedDomainCategoryPlot0.getDomainAxisLocation();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis("?", stringArray0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.createIntersection(rectangle0);
      stackedBarRenderer0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, symbolAxis0, (Marker) null, rectangle2D0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, subCategoryAxis0, symbolAxis0, stackedBarRenderer0);
      subCategoryAxis0.addChangeListener(categoryPlot0);
      CategoryPlot categoryPlot1 = new CategoryPlot(defaultKeyedValues2DDataset0, subCategoryAxis0, symbolAxis0, stackedBarRenderer0);
      categoryPlot1.setRangeCrosshairVisible(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      symbolAxis0.setVerticalTickLabels(true);
      subCategoryAxis0.setTickMarkInsideLength(1.0F);
      combinedDomainCategoryPlot0.setDomainAxisLocation(44, (AxisLocation) null, false);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation(10);
      categoryPlot1.setDomainAxisLocation(500, axisLocation0);
      combinedDomainCategoryPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      combinedRangeCategoryPlot0.getDomainAxisIndex(categoryAxis3D0);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(0.0F);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1601.0, 1601.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedRangeCategoryPlot0.getRangeGridlinePaint();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("%z:`L9P{[i:M{S", true, 0.05);
      categoryTextAnnotation0.setFont(combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeAxisEdge((-991));
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.clone();
      combinedRangeCategoryPlot0.getRangeAxis(10);
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JScrollPane jScrollPane0 = new JScrollPane();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getPlotType();
      categoryPlot0.getRangeAxisEdge((-1007));
      categoryPlot0.getDomainAxisLocation(49);
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1601.0, 1601.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedRangeCategoryPlot0.getRangeGridlinePaint();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedRangeCategoryPlot0.handleClick(0, 21, plotRenderingInfo0);
      combinedRangeCategoryPlot0.getRangeAxis();
      combinedRangeCategoryPlot0.getRangeAxisEdge((-830));
      int int0 = (-769);
      int[] intArray0 = new int[3];
      intArray0[0] = 10;
      intArray0[1] = (-830);
      intArray0[2] = 3;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-1), (-769), intArray0, 10, true, 500, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }
}
