/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 22 21:51:41 GMT 2021
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Stroke;
import java.awt.color.ColorSpace;
import java.awt.color.ICC_Profile;
import java.awt.geom.AffineTransform;
import java.awt.geom.Area;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.RescaleOp;
import java.awt.image.ShortLookupTable;
import java.awt.image.TileObserver;
import java.sql.Connection;
import java.sql.Statement;
import java.text.AttributedCharacterIterator;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.Stack;
import java.util.TimeZone;
import java.util.TreeSet;
import javax.swing.DebugGraphics;
import javax.swing.JMenu;
import javax.swing.JScrollPane;
import javax.swing.JTree;
import javax.swing.border.BevelBorder;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.NumberTick;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.TickUnits;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.ChartEntity;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.AxisChangeEvent;
import org.jfree.chart.event.MarkerChangeEvent;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.text.TextAnchor;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.SortOrder;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.Dataset;
import org.jfree.data.general.DatasetChangeEvent;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Day;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Minute;
import org.jfree.data.time.Month;
import org.jfree.data.time.Second;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.XYSeriesCollection;
import org.junit.runner.RunWith;
import sun.awt.SunHints;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CategoryPlot_ESTest extends CategoryPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("org.jfree.chart.renderer.category.CategoryStepRenderer$State");
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(zoneInfo0);
      timeTableXYDataset0.getItemCount();
      timeTableXYDataset0.setDomainIsPointsInTime(true);
      categoryAxis3D0.hasListener(timeTableXYDataset0);
      combinedRangeCategoryPlot0.getCategoriesForAxis(categoryAxis3D0);
      categoryAxis3D0.setTickLabelsVisible(true);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Integer integer0 = new Integer(3618);
      combinedRangeCategoryPlot0.getRendererForDataset(defaultBoxAndWhiskerCategoryDataset0);
      combinedRangeCategoryPlot0.clearRangeAxes();
      categoryAxis3D0.setCategoryMargin(1.0F);
      combinedRangeCategoryPlot0.getPlotType();
      combinedRangeCategoryPlot0.getAnnotations();
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D();
      DateAxis dateAxis0 = new DateAxis("Category Plot");
      dateAxis0.setVisible(false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(dateAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D1);
      combinedDomainCategoryPlot0.clearRangeAxes();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      Stack<CyclicNumberAxis> stack0 = new Stack<CyclicNumberAxis>();
      combinedRangeCategoryPlot0.getCategories();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.setEntityCollection((EntityCollection) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      combinedRangeCategoryPlot0.configureRangeAxes();
      SortOrder sortOrder0 = combinedDomainCategoryPlot1.getRowRenderingOrder();
      combinedDomainCategoryPlot1.setDomainGridlineStroke(combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      combinedDomainCategoryPlot1.setColumnRenderingOrder(sortOrder0);
      combinedDomainCategoryPlot1.getOrientation();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      jFreeChart0.setBackgroundPaint(combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT);
      TileObserver tileObserver0 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      bufferedImage0.removeTileObserver(tileObserver0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Double line2D_Double0 = new Line2D.Double(49.224, 1.0F, 1.0F, 10);
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      line2D_Double0.y1 = 1191.96296;
      bufferedImage0.getSource();
      Line2D.Double line2D_Double1 = new Line2D.Double();
      line2D_Double0.setLine((Line2D) line2D_Double1);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.drawRangeMarkers(graphics2D0, rectangle2D0, 10, layer0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      AffineTransform affineTransform0 = new AffineTransform(0.0, 15, 1.0F, 1.0F, 0.0, 9.0);
      JFreeChart jFreeChart1 = new JFreeChart("", combinedDomainCategoryPlot0);
      jFreeChart0.getRenderingHints();
      combinedDomainCategoryPlot0.configureDomainAxes();
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[9];
      CategoryAxis categoryAxis0 = new CategoryAxis();
      categoryAxisArray0[0] = categoryAxis0;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxisArray0[1] = (CategoryAxis) categoryAxis3D0;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Null 'stroke' not permitted.");
      categoryAxisArray0[2] = (CategoryAxis) extendedCategoryAxis0;
      CategoryAxis categoryAxis1 = new CategoryAxis();
      categoryAxisArray0[3] = categoryAxis1;
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D();
      categoryAxisArray0[4] = (CategoryAxis) categoryAxis3D1;
      CategoryAxis categoryAxis2 = new CategoryAxis("");
      categoryAxisArray0[5] = categoryAxis2;
      CategoryAxis3D categoryAxis3D2 = new CategoryAxis3D();
      categoryAxisArray0[6] = (CategoryAxis) categoryAxis3D2;
      CategoryAxis categoryAxis3 = new CategoryAxis();
      categoryAxisArray0[7] = categoryAxis3;
      CategoryAxis categoryAxis4 = new CategoryAxis("");
      categoryAxisArray0[8] = categoryAxis4;
      combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearRangeMarkers(2561);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      ValueMarker valueMarker0 = new ValueMarker(2561);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      combinedDomainCategoryPlot0.getRangeAxis(0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1.14858, 0.05, 0, 1.0);
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D0, (RectangleAnchor) null);
      combinedDomainCategoryPlot0.zoomDomainAxes(1.0, plotRenderingInfo0, point2D0);
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.jdbc.JDBCCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CategoryAxis categoryAxis0 = new CategoryAxis("pJ_o0+o#");
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      combinedDomainCategoryPlot0.setDataset(10, (CategoryDataset) defaultBoxAndWhiskerCategoryDataset0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setDomainAxes((CategoryAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      int int0 = 2561;
      combinedDomainCategoryPlot0.clearRangeMarkers(2561);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      ValueMarker valueMarker0 = new ValueMarker(2561);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      combinedDomainCategoryPlot0.getRangeAxis(0);
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot1.setRowRenderingOrder((SortOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      jFreeChart0.createBufferedImage(15, 10);
      jFreeChart0.setBackgroundPaint(combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(512, layer0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getLegendItemURLGenerator();
      waterfallBarRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer();
      Layer layer1 = Layer.FOREGROUND;
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[2];
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("EtB6");
      categoryAxisArray0[0] = (CategoryAxis) categoryAxis3D0;
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D("EtB6");
      categoryAxis3D1.setFixedDimension(0.0F);
      categoryAxisArray0[1] = (CategoryAxis) categoryAxis3D1;
      combinedRangeCategoryPlot0.setDomainAxes(categoryAxisArray0);
      AffineTransform affineTransform0 = new AffineTransform();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.setDataset((CategoryDataset) null);
      combinedDomainCategoryPlot0.configureDomainAxes();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearRangeMarkers(2561);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      ValueMarker valueMarker0 = new ValueMarker(2561);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      combinedDomainCategoryPlot0.getRangeAxis(0);
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      combinedDomainCategoryPlot0.isRangeZoomable();
      IntervalMarker intervalMarker0 = new IntervalMarker(2.0F, 1.0F);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getDomainAxis(0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("org.jfree.chart.renderer.category.CategoryStepRenderer$State");
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(zoneInfo0);
      timeTableXYDataset0.setDomainIsPointsInTime(true);
      categoryAxis3D0.hasListener(timeTableXYDataset0);
      combinedRangeCategoryPlot0.getCategoriesForAxis(categoryAxis3D0);
      categoryAxis3D0.setTickLabelsVisible(true);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Integer integer0 = new Integer(3618);
      combinedRangeCategoryPlot0.getRendererForDataset(defaultBoxAndWhiskerCategoryDataset0);
      combinedRangeCategoryPlot0.clearRangeAxes();
      categoryAxis3D0.setCategoryMargin(1.0F);
      combinedRangeCategoryPlot0.getPlotType();
      combinedRangeCategoryPlot0.getAnnotations();
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D();
      DateAxis dateAxis0 = new DateAxis("Category Plot");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot(dateAxis0);
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[1];
      categoryAxisArray0[0] = (CategoryAxis) categoryAxis3D1;
      combinedRangeCategoryPlot1.setDomainAxes(categoryAxisArray0);
      AffineTransform affineTransform0 = new AffineTransform();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setDataset((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0);
      combinedDomainCategoryPlot0.configureDomainAxes();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("`ZYcLjon@~q\"5D");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(663, layer0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DateAxis dateAxis0 = new DateAxis("`ZYcLjon@~q\"5D");
      dateAxis0.setRightArrow(waterfallBarRenderer0.DEFAULT_SHAPE);
      ValueAxis[] valueAxisArray0 = new ValueAxis[5];
      valueAxisArray0[0] = (ValueAxis) dateAxis0;
      valueAxisArray0[1] = (ValueAxis) dateAxis0;
      valueAxisArray0[2] = (ValueAxis) dateAxis0;
      valueAxisArray0[3] = (ValueAxis) dateAxis0;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-8, "");
      valueAxisArray0[4] = (ValueAxis) cyclicNumberAxis0;
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot1.getRenderer(93);
      combinedDomainCategoryPlot1.clearRangeMarkers();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      combinedDomainCategoryPlot1.setRangeGridlinePaint(extendedCategoryAxis0.DEFAULT_TICK_LABEL_PAINT);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Color color0 = chartPanel0.getBackground();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(color0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(300, layer0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRenderers((CategoryItemRenderer[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      categoryPlot0.setAnchorValue((-1.0), true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      categoryPlot0.getDomainAxisEdge(0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      categoryPlot0.addDomainMarker(categoryMarker0, layer0);
      JFreeChart jFreeChart0 = new JFreeChart("Category Plot", categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      JScrollPane jScrollPane0 = null;
      try {
        jScrollPane0 = new JScrollPane(15, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid verticalScrollBarPolicy
         //
         verifyException("javax.swing.JScrollPane", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("+1d77");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.clearRangeMarkers(0);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      int int0 = 2387;
      combinedDomainCategoryPlot1.getRangeAxis(2387);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.jdbc.JDBCCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      jFreeChart0.setBackgroundPaint(combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(512, layer0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getLegendItemURLGenerator();
      waterfallBarRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer();
      Layer layer1 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers(layer1);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[0];
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      combinedRangeCategoryPlot0.getRenderer();
      combinedDomainCategoryPlot0.setRangeCrosshairPaint(waterfallBarRenderer1.DEFAULT_VALUE_LABEL_PAINT);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("`ZYcLjon@~q\"5D");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(663, layer0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(attributedCharacterIterator_Attribute0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot1.rendererChanged(rendererChangeEvent0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0E-4, "`ZYcLjon@~q\"5D");
      ValueAxis[] valueAxisArray0 = new ValueAxis[6];
      valueAxisArray0[0] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[2] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[3] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[4] = (ValueAxis) cyclicNumberAxis0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "`ZYcLjon@~q\"5D";
      SymbolAxis symbolAxis0 = new SymbolAxis("`ZYcLjon@~q\"5D", stringArray0);
      valueAxisArray0[5] = (ValueAxis) symbolAxis0;
      combinedDomainCategoryPlot1.setRangeAxes(valueAxisArray0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot2.setRangeCrosshairPaint(combinedDomainCategoryPlot1.DEFAULT_CROSSHAIR_PAINT);
      combinedDomainCategoryPlot2.getDomainAxisLocation((-663));
      combinedDomainCategoryPlot1.getRangeAxisForDataset(3087);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(tickUnits0, (Dataset) null);
      categoryPlot0.datasetChanged(datasetChangeEvent0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-521.674), 5.0E11);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(10.0, "");
      ValueAxis[] valueAxisArray0 = new ValueAxis[7];
      valueAxisArray0[0] = (ValueAxis) cyclicNumberAxis1;
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis1;
      valueAxisArray0[2] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[3] = (ValueAxis) cyclicNumberAxis1;
      valueAxisArray0[4] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[5] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[6] = (ValueAxis) cyclicNumberAxis0;
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      combinedDomainCategoryPlot0.getDomainAxisLocation(10);
      combinedDomainCategoryPlot0.getRangeAxisForDataset((-1));
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(0.0F, 2.0F, renderingHints0);
      int int0 = 365;
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(365, 349, 1.0E-8, 0.0, chartRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("org.jfree.chart.renderer.category.CategoryStepRenderer$State");
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(zoneInfo0);
      timeTableXYDataset0.setDomainIsPointsInTime(true);
      categoryAxis3D0.hasListener(timeTableXYDataset0);
      combinedRangeCategoryPlot0.getCategoriesForAxis(categoryAxis3D0);
      categoryAxis3D0.setTickLabelsVisible(false);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Integer integer0 = new Integer(10);
      combinedRangeCategoryPlot0.getRendererForDataset(defaultBoxAndWhiskerCategoryDataset0);
      combinedRangeCategoryPlot0.clearRangeAxes();
      categoryAxis3D0.setCategoryMargin(1.0F);
      combinedRangeCategoryPlot0.getPlotType();
      combinedRangeCategoryPlot0.getAnnotations();
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[7];
      categoryAxisArray0[0] = (CategoryAxis) categoryAxis3D0;
      categoryAxisArray0[1] = (CategoryAxis) categoryAxis3D0;
      categoryAxisArray0[2] = (CategoryAxis) categoryAxis3D0;
      CategoryAxis categoryAxis0 = new CategoryAxis();
      categoryAxisArray0[3] = categoryAxis0;
      categoryAxisArray0[4] = (CategoryAxis) categoryAxis3D0;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.mapDatasetToDomainAxis(10, 102261127);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.setRenderer(58, (CategoryItemRenderer) null, true);
      combinedDomainCategoryPlot1.setDomainGridlineStroke(categoryAxis0.DEFAULT_AXIS_LINE_STROKE);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      combinedRangeCategoryPlot0.getRowRenderingOrder();
      combinedRangeCategoryPlot0.clearDomainMarkers();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot1.getRangeMarkers(0, layer0);
      SortOrder sortOrder0 = combinedDomainCategoryPlot1.getColumnRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot3 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.getDataset(2);
      combinedDomainCategoryPlot2.clearDomainMarkers(68);
      JScrollPane jScrollPane0 = new JScrollPane();
      combinedDomainCategoryPlot1.getColumnRenderingOrder();
      combinedDomainCategoryPlot3.setRowRenderingOrder(sortOrder0);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      DateAxis dateAxis0 = new DateAxis("org.jfree.chart.labels.StandardPieSectionLabelGenerator");
      ValueAxis[] valueAxisArray0 = new ValueAxis[6];
      valueAxisArray0[0] = (ValueAxis) dateAxis0;
      valueAxisArray0[1] = (ValueAxis) dateAxis0;
      valueAxisArray0[2] = (ValueAxis) dateAxis0;
      valueAxisArray0[3] = (ValueAxis) dateAxis0;
      DateAxis dateAxis1 = new DateAxis("org.jfree.chart.labels.StandardPieSectionLabelGenerator");
      valueAxisArray0[4] = (ValueAxis) dateAxis1;
      dateAxis1.setRightArrow(combinedDomainCategoryPlot3.DEFAULT_LEGEND_ITEM_CIRCLE);
      valueAxisArray0[5] = (ValueAxis) dateAxis1;
      combinedDomainCategoryPlot1.setRangeAxes(valueAxisArray0);
      combinedDomainCategoryPlot1.getRenderer((-510));
      combinedDomainCategoryPlot3.getFixedRangeAxisSpace();
      combinedDomainCategoryPlot1.setFixedDomainAxisSpace((AxisSpace) null);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot1.getRangeMarkers(0, layer0);
      SortOrder sortOrder0 = combinedDomainCategoryPlot1.getColumnRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot3 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.getDataset(2);
      combinedDomainCategoryPlot2.clearDomainMarkers(68);
      JScrollPane jScrollPane0 = new JScrollPane();
      combinedDomainCategoryPlot1.getColumnRenderingOrder();
      combinedDomainCategoryPlot3.setRowRenderingOrder(sortOrder0);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      subCategoryAxis0.addSubCategory(false);
      DateAxis dateAxis0 = new DateAxis("org.jfree.chart.labels.StandardPieSectionLabelGenerator");
      combinedDomainCategoryPlot2.setRangeAxis(3, (ValueAxis) dateAxis0, true);
      ValueAxis[] valueAxisArray0 = new ValueAxis[6];
      valueAxisArray0[0] = (ValueAxis) dateAxis0;
      valueAxisArray0[1] = (ValueAxis) dateAxis0;
      valueAxisArray0[2] = (ValueAxis) dateAxis0;
      valueAxisArray0[3] = (ValueAxis) dateAxis0;
      DateAxis dateAxis1 = new DateAxis("org.jfree.chart.labels.StandardPieSectionLabelGenerator");
      valueAxisArray0[4] = (ValueAxis) dateAxis1;
      dateAxis1.setRightArrow(combinedDomainCategoryPlot3.DEFAULT_LEGEND_ITEM_CIRCLE);
      valueAxisArray0[5] = (ValueAxis) dateAxis0;
      combinedDomainCategoryPlot1.setRangeAxes(valueAxisArray0);
      combinedDomainCategoryPlot1.getRenderer((-510));
      combinedDomainCategoryPlot2.clearRangeMarkers();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      combinedDomainCategoryPlot3.setRangeGridlinePaint(combinedDomainCategoryPlot2.DEFAULT_BACKGROUND_PAINT);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      categoryAxis3D0.setAxisLineStroke(combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      combinedDomainCategoryPlot0.setBackgroundImageAlignment(850);
      categoryAxis3D0.setTickMarkOutsideLength(10.0F);
      int int0 = 2600;
      combinedDomainCategoryPlot0.clearDomainMarkers(2600);
      combinedDomainCategoryPlot0.isDomainZoomable();
      PlotOrientation plotOrientation0 = null;
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setOrientation((PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("org.jfree.chart.renderer.category.CategoryStepRenderer$State");
      combinedRangeCategoryPlot0.getCategoriesForAxis(categoryAxis3D0);
      categoryAxis3D0.setTickLabelsVisible(true);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Integer integer0 = new Integer(3618);
      combinedRangeCategoryPlot0.getRendererForDataset(defaultBoxAndWhiskerCategoryDataset0);
      combinedRangeCategoryPlot0.clearRangeAxes();
      categoryAxis3D0.setCategoryMargin(1.0F);
      combinedRangeCategoryPlot0.getPlotType();
      combinedRangeCategoryPlot0.getAnnotations();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeAxisForDataset((-284));
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      categoryPlot0.getLegendItems();
      Layer layer0 = Layer.BACKGROUND;
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ValueMarker valueMarker0 = new ValueMarker(15, categoryPlot0.DEFAULT_OUTLINE_PAINT, categoryPlot0.DEFAULT_OUTLINE_STROKE);
      valueMarker0.setLabel(":Qtp|4[H7]m3wM)");
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getTextNonSelectionColor();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setDomainGridlinePaint(categoryPlot0.DEFAULT_OUTLINE_PAINT);
      CategoryAxis categoryAxis0 = new CategoryAxis("tb12V#sM");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot1.getDatasetCount();
      combinedDomainCategoryPlot0.configureRangeAxes();
      ValueMarker valueMarker1 = null;
      try {
        valueMarker1 = new ValueMarker(1.0F, (Paint) null, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, categoryPlot0.DEFAULT_GRIDLINE_STROKE, 0.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TickUnits tickUnits0 = new TickUnits();
      categoryPlot0.getLegendItems();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(tickUnits0, (Dataset) null);
      categoryPlot0.datasetChanged(datasetChangeEvent0);
      // Undeclared exception!
      try { 
        tickUnits0.get(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Color color0 = chartPanel0.getBackground();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(color0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), 680, "PRINT");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(statisticalLineAndShapeRenderer0);
      combinedDomainCategoryPlot0.rendererChanged(rendererChangeEvent0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[5];
      valueAxisArray0[0] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[1] = (ValueAxis) cyclicNumberAxis0;
      valueAxisArray0[2] = (ValueAxis) cyclicNumberAxis0;
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(1.0, "ZOOM_IN_DOMAIN");
      valueAxisArray0[3] = (ValueAxis) cyclicNumberAxis1;
      valueAxisArray0[4] = (ValueAxis) cyclicNumberAxis0;
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      combinedDomainCategoryPlot0.getDomainAxisLocation(420);
      combinedDomainCategoryPlot0.getRangeAxisForDataset(818);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer0);
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      ThermometerPlot thermometerPlot1 = new ThermometerPlot();
      thermometerPlot0.getLegendItems();
      combinedDomainCategoryPlot1.setFixedLegendItems((LegendItemCollection) null);
      combinedDomainCategoryPlot1.getDataset(0);
      combinedDomainCategoryPlot0.clearDomainMarkers(2);
      JScrollPane jScrollPane0 = new JScrollPane();
      SortOrder sortOrder0 = combinedDomainCategoryPlot1.getColumnRenderingOrder();
      combinedDomainCategoryPlot1.setRowRenderingOrder(sortOrder0);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      combinedDomainCategoryPlot1.setRowRenderingOrder(sortOrder0);
      CategoryMarker categoryMarker1 = new CategoryMarker(1);
      DateAxis dateAxis0 = new DateAxis("EO5");
      combinedDomainCategoryPlot1.setRangeAxis(0, (ValueAxis) dateAxis0, false);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot1.getRangeMarkers(0, layer0);
      SortOrder sortOrder0 = combinedDomainCategoryPlot1.getColumnRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot3 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.getDataset(2);
      combinedDomainCategoryPlot2.clearDomainMarkers(68);
      JScrollPane jScrollPane0 = new JScrollPane();
      combinedDomainCategoryPlot1.getColumnRenderingOrder();
      combinedDomainCategoryPlot3.setRowRenderingOrder(sortOrder0);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      DateAxis dateAxis0 = new DateAxis("org.jfree.chart.labels.StandardPieSectionLabelGenerator");
      combinedDomainCategoryPlot2.setRangeAxis(3, (ValueAxis) dateAxis0, true);
      ValueAxis[] valueAxisArray0 = new ValueAxis[6];
      valueAxisArray0[0] = (ValueAxis) dateAxis0;
      valueAxisArray0[1] = (ValueAxis) dateAxis0;
      valueAxisArray0[2] = (ValueAxis) dateAxis0;
      valueAxisArray0[3] = (ValueAxis) dateAxis0;
      DateAxis dateAxis1 = new DateAxis("org.jfree.chart.labels.StandardPieSectionLabelGenerator");
      valueAxisArray0[4] = (ValueAxis) dateAxis1;
      dateAxis1.setRightArrow(combinedDomainCategoryPlot3.DEFAULT_LEGEND_ITEM_CIRCLE);
      valueAxisArray0[5] = (ValueAxis) dateAxis0;
      combinedDomainCategoryPlot1.setRangeAxes(valueAxisArray0);
      combinedDomainCategoryPlot1.getRenderer((-510));
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("`ZYcLjon@~q\"5D");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      Layer layer0 = Layer.BACKGROUND;
      Layer layer1 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(663, layer1);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainAxisForDataset((-1317));
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[5];
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer();
      categoryItemRendererArray0[0] = (CategoryItemRenderer) waterfallBarRenderer1;
      categoryItemRendererArray0[1] = (CategoryItemRenderer) waterfallBarRenderer0;
      categoryItemRendererArray0[2] = (CategoryItemRenderer) waterfallBarRenderer0;
      categoryItemRendererArray0[3] = (CategoryItemRenderer) waterfallBarRenderer0;
      categoryItemRendererArray0[4] = (CategoryItemRenderer) waterfallBarRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      combinedRangeCategoryPlot0.getRenderer();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(675, layer0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      SortOrder sortOrder0 = combinedDomainCategoryPlot1.getColumnRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot(categoryAxis0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getLegendItems();
      combinedDomainCategoryPlot1.setFixedLegendItems((LegendItemCollection) null);
      combinedDomainCategoryPlot1.getDataset(22);
      combinedDomainCategoryPlot2.clearDomainMarkers((-830));
      JScrollPane jScrollPane0 = new JScrollPane();
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      Month month0 = new Month(1, 1);
      CategoryMarker categoryMarker0 = new CategoryMarker(month0);
      DateAxis dateAxis0 = new DateAxis(")k3");
      // Undeclared exception!
      combinedDomainCategoryPlot1.setRangeAxis(2145683521, (ValueAxis) dateAxis0, false);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedDomainCategoryPlot0.clearRangeMarkers(2561);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), (-2832.8771939036));
      combinedDomainCategoryPlot0.getDataRange((ValueAxis) null);
      combinedDomainCategoryPlot0.setAxisOffset(cyclicNumberAxis0.DEFAULT_AXIS_LABEL_INSETS);
      combinedDomainCategoryPlot0.isRangeZoomable();
      IntervalMarker intervalMarker0 = new IntervalMarker((-620.91939), 454.012543229392);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getDomainAxis(2561);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedDomainCategoryPlot0.clearRangeMarkers(10);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      ValueMarker valueMarker0 = new ValueMarker(10);
      CategoryAxis categoryAxis0 = new CategoryAxis("Requires 'size' > 0.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot1.setRangeGridlinePaint(combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 2044.43, "gj \u0004,8/ynv5/");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      JScrollPane jScrollPane0 = new JScrollPane();
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.zoom(0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer0);
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      ThermometerPlot thermometerPlot1 = new ThermometerPlot();
      thermometerPlot1.getLegendItems();
      combinedDomainCategoryPlot1.setFixedLegendItems((LegendItemCollection) null);
      combinedDomainCategoryPlot1.getDataset(0);
      combinedDomainCategoryPlot0.clearDomainMarkers(2);
      JScrollPane jScrollPane0 = new JScrollPane();
      SortOrder sortOrder0 = combinedDomainCategoryPlot1.getColumnRenderingOrder();
      combinedDomainCategoryPlot1.setRowRenderingOrder(sortOrder0);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      DateAxis dateAxis0 = new DateAxis("EO5");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 2.0F);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.getDomainAxisForDataset(2473);
      combinedDomainCategoryPlot0.getDrawSharedDomainAxis();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearRangeMarkers(2561);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      ValueMarker valueMarker0 = new ValueMarker(2561);
      AxisLocation axisLocation1 = AxisLocation.BOTTOM_OR_LEFT;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRenderer((-10));
      combinedDomainCategoryPlot0.clearRangeMarkers();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      combinedDomainCategoryPlot0.setRangeGridlinePaint(combinedDomainCategoryPlot1.DEFAULT_OUTLINE_PAINT);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Greg Steckman");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      Layer layer0 = Layer.BACKGROUND;
      Layer layer1 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(663, layer1);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxis((-4096), (ValueAxis) numberAxis0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedDomainCategoryPlot0.clearRangeMarkers(10);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      ValueMarker valueMarker0 = new ValueMarker(10);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("L37Be(>,1", true, 10);
      categoryTextAnnotation0.setFont(combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      combinedDomainCategoryPlot0.getRangeAxis(0);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getRowRenderingOrder();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      CategoryMarker categoryMarker1 = new CategoryMarker("L37Be(>,1");
      DateAxis dateAxis0 = new DateAxis("L37Be(>,1");
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxis((-121), (ValueAxis) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer0);
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getLegendItems();
      combinedDomainCategoryPlot1.setFixedLegendItems((LegendItemCollection) null);
      combinedDomainCategoryPlot1.getDataset(0);
      combinedDomainCategoryPlot0.clearDomainMarkers(2);
      JScrollPane jScrollPane0 = new JScrollPane();
      SortOrder sortOrder0 = combinedDomainCategoryPlot1.getColumnRenderingOrder();
      combinedDomainCategoryPlot1.setRowRenderingOrder(sortOrder0);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      DateAxis dateAxis0 = new DateAxis("EO5");
      combinedDomainCategoryPlot0.setRangeAxis(0, (ValueAxis) dateAxis0, true);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedDomainCategoryPlot0.clearRangeMarkers(2561);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      ValueMarker valueMarker0 = new ValueMarker(2561);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("L37Be(>,1", true, 10);
      categoryTextAnnotation0.setFont(combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      combinedDomainCategoryPlot0.getRangeAxis(0);
      combinedDomainCategoryPlot0.setRangeGridlinesVisible(false);
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      Layer layer0 = Layer.BACKGROUND;
      CategoryAxis categoryAxis0 = combinedDomainCategoryPlot0.getDomainAxis((-1910));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setAxisOffset(categoryAxis0.DEFAULT_TICK_LABEL_INSETS);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      NumberAxis numberAxis0 = new NumberAxis("");
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      rectangle0.y = (-1);
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(648, 1.0, (double) 2.0F);
      rectangle0.getPathIterator(affineTransform0, (-2263.4450829348));
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      rectangle2D_Float0.createIntersection(rectangle0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setDomainAxisLocation(500, (AxisLocation) null, false);
      combinedDomainCategoryPlot0.clone();
      combinedDomainCategoryPlot0.getFixedDomainAxisSpace();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getRangeCrosshairValue();
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(2477, 10, 2477);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 2477
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("`ZYcLjon@~q\"5D");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(663, layer0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[5];
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot1.getRenderer(93);
      combinedDomainCategoryPlot1.clearRangeMarkers();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      combinedRangeCategoryPlot0.getRangeCrosshairStroke();
      combinedDomainCategoryPlot0.isDomainGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Null 'order' argument.";
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = "Null 'order' argument.";
      SymbolAxis symbolAxis0 = new SymbolAxis("Null 'order' argument.", stringArray0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      rectangle2D_Float0.createIntersection(rectangle0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.setDomainAxisLocation(3, (AxisLocation) null, true);
      combinedDomainCategoryPlot0.clone();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1614.236069465471), 0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.addRangeMarker(10, (Marker) intervalMarker0, layer0);
      combinedDomainCategoryPlot0.isDomainGridlinesVisible();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      multiplePiePlot0.getPieChart();
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.FOREGROUND;
      combinedDomainCategoryPlot1.getRangeMarkers(4345, layer1);
      combinedDomainCategoryPlot1.getColumnRenderingOrder();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("5RqT,");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getLegendItems();
      combinedDomainCategoryPlot1.setFixedLegendItems((LegendItemCollection) null);
      combinedDomainCategoryPlot2.getDataset(0);
      combinedDomainCategoryPlot2.clearDomainMarkers(0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot3 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot3.getDomainAxisLocation((-3497));
      TickUnits tickUnits0 = new TickUnits();
      // Undeclared exception!
      try { 
        tickUnits0.get(4345);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 4345, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      jFreeChart0.setBackgroundPaint(combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT);
      TileObserver tileObserver0 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      bufferedImage0.removeTileObserver(tileObserver0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Double line2D_Double0 = new Line2D.Double(49.224, 1.0F, 1.0F, 10);
      line2D_Double0.getBounds2D();
      line2D_Double0.y1 = 1191.96296;
      bufferedImage0.getSource();
      Line2D.Double line2D_Double1 = new Line2D.Double();
      line2D_Double0.setLine((Line2D) line2D_Double1);
      Layer layer0 = Layer.BACKGROUND;
      JMenu jMenu0 = new JMenu("Ut0gw");
      JScrollPane jScrollPane0 = new JScrollPane(jMenu0);
      jScrollPane0.getViewportBorderBounds();
      JTree jTree0 = new JTree();
      jTree0.getRowBounds(2375);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      combinedRangeCategoryPlot0.drawBackground(graphics2D0, rectangle2D0);
      combinedRangeCategoryPlot0.getDomainAxisForDataset((-2138025741));
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.setEntityCollection((EntityCollection) null);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 10, 1.0);
      combinedDomainCategoryPlot0.addAnnotation(categoryTextAnnotation0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-4518.1527009), (-4518.1527009), ";!G30");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      combinedRangeCategoryPlot0.configureRangeAxes();
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      combinedDomainCategoryPlot0.mapDatasetToDomainAxis(10, (-284));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      combinedDomainCategoryPlot0.setRenderer(2, (CategoryItemRenderer) ganttRenderer0, false);
      combinedDomainCategoryPlot0.setDomainGridlineStroke(combinedDomainXYPlot0.DEFAULT_OUTLINE_STROKE);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "?";
      stringArray0[1] = "";
      stringArray0[2] = "?";
      stringArray0[3] = "?";
      stringArray0[4] = "";
      stringArray0[5] = "H4A:[}4Gx)fm,bD";
      stringArray0[6] = "orQY{+L'?L',(";
      SymbolAxis symbolAxis0 = new SymbolAxis("?", stringArray0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      rectangle2D_Float0.createIntersection(rectangle0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot1.setDomainAxisLocation(0, (AxisLocation) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("180");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      combinedDomainCategoryPlot1.getLegendItems();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot1.getDomainMarkers(10, layer0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      CategoryTextAnnotation categoryTextAnnotation0 = null;
      try {
        categoryTextAnnotation0 = new CategoryTextAnnotation((String) null, false, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.annotations.TextAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      jFreeChart0.setBackgroundPaint(combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT);
      TileObserver tileObserver0 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      bufferedImage0.removeTileObserver(tileObserver0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Double line2D_Double0 = new Line2D.Double(49.224, 1.0F, 1.0F, 10);
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      line2D_Double0.y1 = 1191.96296;
      bufferedImage0.getSource();
      Line2D.Double line2D_Double1 = new Line2D.Double();
      line2D_Double0.setLine((Line2D) line2D_Double1);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.drawRangeMarkers(graphics2D0, rectangle2D0, 10, layer0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      line2D_Double0.y1 = 1.0;
      combinedDomainCategoryPlot0.clearAnnotations();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(10, "org.jfree.chart.block.LineBorder");
      DateAxis dateAxis0 = new DateAxis((String) null, simpleTimeZone0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      combinedRangeCategoryPlot0.zoom(2.0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(500);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      ganttRenderer1.setAutoPopulateSeriesPaint(false);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, dateAxis0, ganttRenderer1);
      categoryPlot0.setAnchorValue((double) 500, true);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.getRangeAxisEdge(4662);
      combinedRangeCategoryPlot0.setRenderer(200, (CategoryItemRenderer) ganttRenderer0);
      combinedRangeCategoryPlot1.clone();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis((String) null);
      NumberAxis numberAxis0 = new NumberAxis("");
      numberAxis0.setAxisLinePaint(subCategoryAxis0.DEFAULT_AXIS_LINE_PAINT);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      combinedDomainCategoryPlot0.rendererChanged((RendererChangeEvent) null);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxes((ValueAxis[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getDomainMarkers(1991, (Layer) null);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
      Area area0 = new Area(combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      area0.isPolygonal();
      area0.getBounds2D();
      IntervalMarker intervalMarker0 = new IntervalMarker(1626.44, 1497.813197);
      intervalMarker0.setOutlineStroke(combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker(1991, (Marker) intervalMarker0, layer0);
      combinedDomainCategoryPlot0.getPlotType();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDatasetRenderingOrder();
      combinedDomainCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("y\"5h'u)25)A$?SuC#", "Category Plot", 1497.813197);
      categoryTextAnnotation0.setFont(combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      combinedDomainCategoryPlot0.getRangeAxis(44);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom((-1.0));
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2585.2627));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ganttRenderer0.setAutoPopulateSeriesPaint(false);
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      combinedDomainCategoryPlot0.setAnchorValue((-1974.6129844168), true);
      combinedRangeCategoryPlot0.getDomainGridlineStroke();
      combinedRangeCategoryPlot0.getColumnRenderingOrder();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.getRangeAxisEdge(1);
      combinedRangeCategoryPlot1.setRenderer(6784, (CategoryItemRenderer) ganttRenderer0);
      categoryPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Greg Steckman");
      Layer layer0 = Layer.BACKGROUND;
      Layer layer1 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainAxisLocation(663);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.getRenderer(947);
      combinedDomainCategoryPlot1.clearRangeMarkers();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      combinedDomainCategoryPlot1.setOrientation(plotOrientation0);
      combinedDomainCategoryPlot0.setRangeGridlinePaint(extendedCategoryAxis0.DEFAULT_AXIS_LABEL_PAINT);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      NumberAxis numberAxis0 = new NumberAxis("");
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      SortOrder sortOrder0 = combinedRangeCategoryPlot0.getColumnRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      JScrollPane jScrollPane0 = new JScrollPane();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Color color0 = defaultTreeCellRenderer0.getTextSelectionColor();
      BevelBorder bevelBorder0 = new BevelBorder(10, color0, color0);
      Rectangle rectangle0 = bevelBorder0.getInteriorRectangle((Component) defaultTreeCellRenderer0, 32, 902, 530, 500);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.drawRangeMarkers((Graphics2D) null, rectangle0, 10, layer0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, false, true, true, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.clearAnnotations();
      PlotRenderingInfo plotRenderingInfo1 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        plotRenderingInfo1.getSubplotInfo(23);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 23, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      jFreeChart0.setBackgroundPaint(combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT);
      TileObserver tileObserver0 = mock(TileObserver.class, new ViolatedAssumptionAnswer());
      bufferedImage0.removeTileObserver(tileObserver0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Line2D.Double line2D_Double0 = new Line2D.Double(49.224, 1.0F, 1.0F, 10);
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      double double0 = 1191.96296;
      line2D_Double0.y1 = 1191.96296;
      bufferedImage0.getSource();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.drawRangeMarkers(graphics2D0, rectangle2D0, 10, layer0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      double double1 = 1.0;
      line2D_Double0.y1 = 1.0;
      int int0 = 2;
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      Layer layer0 = Layer.FOREGROUND;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[17];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) stackedAreaRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      LinkedList<DefaultKeyedValues2DDataset> linkedList0 = new LinkedList<DefaultKeyedValues2DDataset>();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDataset((-29), (CategoryDataset) taskSeriesCollection0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.setEntityCollection((EntityCollection) null);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 10, 1.0);
      combinedDomainCategoryPlot0.addAnnotation(categoryTextAnnotation0);
      combinedDomainCategoryPlot0.clearRangeMarkers(2561);
      combinedDomainCategoryPlot0.getPlotType();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      ValueMarker valueMarker0 = new ValueMarker(2.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainAxisForDataset(10);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Fz>1B!0d", true, 135.0);
      combinedDomainCategoryPlot0.addAnnotation(categoryTextAnnotation0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2143.988881, 0.0, "Fz>1B!0d");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      JScrollPane jScrollPane0 = new JScrollPane();
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.zoom(0.2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      NumberAxis numberAxis0 = new NumberAxis("");
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      rectangle2D_Float0.createIntersection(rectangle0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot1.setDomainAxisLocation(0, (AxisLocation) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);
      String string0 = "";
      combinedDomainCategoryPlot0.setNoDataMessage("");
      combinedDomainCategoryPlot0.getRangeAxis();
      combinedDomainCategoryPlot0.getDomainGridlinePosition();
      categoryAxis0.setLabelAngle((-1.0));
      categoryAxis0.addCategoryLabelToolTip("", "");
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedDomainCategoryPlot0.setRangeAxisLocation(500, axisLocation0, false);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainAxisLocation((-4096), axisLocation0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("melH&");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      chartPanel0.getBackground();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(extendedCategoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(300, "ZOOM_RESET_BOTH");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      JScrollPane jScrollPane0 = new JScrollPane();
      combinedDomainCategoryPlot0.setRangeAxis(10, (ValueAxis) cyclicNumberAxis0);
      combinedDomainCategoryPlot0.clearRangeMarkers(3);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Color color0 = chartPanel0.getBackground();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(color0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), 680, "PRINT");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      JScrollPane jScrollPane0 = new JScrollPane();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addRangeMarker(8, (Marker) null, layer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("melH&");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("melH&");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getCategoriesForAxis(categoryAxis3D0);
      combinedRangeCategoryPlot0.handleClick(3, 10, plotRenderingInfo0);
      combinedRangeCategoryPlot0.getRangeAxis();
      combinedRangeCategoryPlot0.getRangeAxisEdge((-830));
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.getRangeAxisLocation();
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker((-219.8667987));
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
      combinedDomainCategoryPlot0.setDomainGridlinesVisible(false);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      PlotRenderingInfo plotRenderingInfo1 = new PlotRenderingInfo(chartRenderingInfo0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1261.95), 8.0);
      combinedDomainCategoryPlot0.setDomainGridlinesVisible(false);
      DateAxis dateAxis0 = new DateAxis(")Ap\"H,S>Jz*");
      combinedDomainCategoryPlot0.getDataRange(dateAxis0);
      combinedDomainCategoryPlot0.setAxisOffset(dateAxis0.DEFAULT_TICK_LABEL_INSETS);
      combinedDomainCategoryPlot0.isRangeZoomable();
      IntervalMarker intervalMarker0 = new IntervalMarker(10.0, 0.05);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getDomainAxis(2561);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("melH&");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(3, layer0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(jDBCCategoryDataset0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 2.0, "melH&");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(cyclicNumberAxis0);
      RendererChangeEvent rendererChangeEvent1 = new RendererChangeEvent(combinedRangeXYPlot0);
      combinedDomainCategoryPlot0.rendererChanged(rendererChangeEvent1);
      RendererChangeEvent rendererChangeEvent2 = new RendererChangeEvent("melH&");
      AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(cyclicNumberAxis0);
      MockDate mockDate0 = new MockDate();
      SegmentedTimeline segmentedTimeline0 = SegmentedTimeline.newFifteenMinuteTimeline();
      segmentedTimeline0.getSegment((Date) mockDate0);
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot1.configureRangeAxes();
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getDomainMarkers(1991, (Layer) null);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
      Area area0 = new Area(combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      area0.isPolygonal();
      area0.getBounds2D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("hs_R!sPY5IWFTw");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.setFixedLegendItems((LegendItemCollection) null);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      combinedDomainCategoryPlot1.clearDomainMarkers(10);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      categoryAxis3D0.setMaximumCategoryLabelWidthRatio(1.0F);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      combinedRangeCategoryPlot0.configureRangeAxes();
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      combinedDomainCategoryPlot1.mapDatasetToDomainAxis(10, (-284));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      combinedDomainCategoryPlot1.setRenderer(10, (CategoryItemRenderer) ganttRenderer0, true);
      combinedDomainCategoryPlot1.setDomainGridlineStroke(combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedDomainCategoryPlot1.isRangeCrosshairLockedOnData();
      combinedRangeCategoryPlot0.getRangeMarkers(10, (Layer) null);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedDomainCategoryPlot0.clearRangeMarkers(2561);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      ValueMarker valueMarker0 = new ValueMarker(2561);
      valueMarker0.setLabel("ft3f=vf32|Q}gWG>'s");
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Color color0 = defaultTreeCellRenderer0.getTextNonSelectionColor();
      combinedDomainCategoryPlot0.setDomainGridlinePaint(color0);
      combinedDomainCategoryPlot0.getDatasetCount();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearRangeMarkers(2561);
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      ValueMarker valueMarker0 = new ValueMarker(2561);
      valueMarker0.setLabel("ft3f=vf32|Q}gWG>'s");
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Color color0 = defaultTreeCellRenderer0.getTextNonSelectionColor();
      combinedDomainCategoryPlot0.setDomainGridlinePaint(color0);
      combinedDomainCategoryPlot0.getDatasetCount();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      chartPanel0.zoomOutBoth((-1232.8), 1191.96);
      Color color0 = chartPanel0.getBackground();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(color0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), 680, "PRINT");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      JScrollPane jScrollPane0 = new JScrollPane();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      int int0 = (-1);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.mapDatasetToRangeAxis((-1), (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getDomainMarkers(1991, (Layer) null);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
      Area area0 = new Area(combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      area0.isPolygonal();
      area0.getBounds2D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("hs_R!sPY5IWFTw");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.setFixedLegendItems((LegendItemCollection) null);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      combinedDomainCategoryPlot1.clearDomainMarkers(10);
      combinedDomainCategoryPlot1.getDomainAxisLocation(104);
      categoryAxis3D0.setMaximumCategoryLabelWidthRatio(269.292F);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      combinedRangeCategoryPlot0.configureRangeAxes();
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      combinedDomainCategoryPlot0.getAnchorValue();
      combinedDomainCategoryPlot1.mapDatasetToDomainAxis(104, (-284));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      combinedDomainCategoryPlot1.setRenderer(7, (CategoryItemRenderer) ganttRenderer0, true);
      combinedRangeCategoryPlot0.getRangeCrosshairPaint();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("melH&");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("melH&");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getCategoriesForAxis(categoryAxis3D0);
      combinedRangeCategoryPlot0.handleClick(3, 10, plotRenderingInfo0);
      combinedRangeCategoryPlot0.getRangeAxis();
      combinedRangeCategoryPlot0.getRangeAxisEdge((-830));
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot1.getRangeGridlinePaint();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot1.getDomainAxis(10);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.setAxisOffset(categoryAxis3D0.DEFAULT_AXIS_LABEL_INSETS);
      combinedDomainCategoryPlot0.getCategories();
      combinedRangeCategoryPlot0.getRangeCrosshairPaint();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      intervalMarker0.setOutlineStroke(combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker((-1), (Marker) intervalMarker0, layer0);
      combinedDomainCategoryPlot0.getPlotType();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = combinedDomainXYPlot0.getDatasetRenderingOrder();
      combinedDomainCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("y\"5h'u)25)A$?SuC#", "y\"5h'u)25)A$?SuC#", 10);
      categoryTextAnnotation0.setFont(combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      combinedDomainCategoryPlot0.removeAnnotation(categoryTextAnnotation0);
      CategoryMarker categoryMarker0 = new CategoryMarker("%z:`L9P{[i:M{S");
      combinedDomainCategoryPlot0.getRangeAxis((-3057));
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Color color0 = chartPanel0.getBackground();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(color0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeAxisEdge(300);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot2.getRangeAxisLocation();
      combinedDomainCategoryPlot2.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      combinedDomainCategoryPlot2.addRangeMarker((Marker) valueMarker0);
      combinedDomainCategoryPlot1.setDomainGridlinesVisible(true);
      combinedRangeCategoryPlot0.isDomainZoomable();
      combinedRangeCategoryPlot0.getOrientation();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("melH&");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("melH&");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getCategoriesForAxis(categoryAxis3D0);
      combinedRangeCategoryPlot0.handleClick(3, 10, plotRenderingInfo0);
      combinedRangeCategoryPlot0.getRangeAxis();
      combinedRangeCategoryPlot0.getRangeAxisEdge((-830));
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot1.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(10);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
      combinedDomainCategoryPlot0.setDomainGridlinesVisible(true);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      NumberAxis numberAxis0 = new NumberAxis("");
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.rendererChanged((RendererChangeEvent) null);
      ValueMarker valueMarker0 = new ValueMarker(2.0F);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
      combinedDomainCategoryPlot0.getDomainGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getDomainMarkers(1991, (Layer) null);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
      Area area0 = new Area(combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      area0.isPolygonal();
      area0.getBounds2D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("hs_R!sPY5IWFTw");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.setFixedLegendItems((LegendItemCollection) null);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      combinedDomainCategoryPlot1.clearDomainMarkers(10);
      combinedDomainCategoryPlot1.getDomainAxisLocation(104);
      categoryAxis3D0.setMaximumCategoryLabelWidthRatio(269.292F);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      combinedRangeCategoryPlot1.configureRangeAxes();
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      combinedDomainCategoryPlot0.getAnchorValue();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer1);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      JScrollPane jScrollPane0 = new JScrollPane();
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      combinedRangeCategoryPlot0.configureRangeAxes();
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      combinedDomainCategoryPlot0.getAnchorValue();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.mapDatasetToDomainAxis((-1219), 52);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedDomainCategoryPlot0.clearRangeMarkers(2582);
      chartRenderingInfo0.getPlotInfo();
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedDomainCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Null 'stroke' argument.", 10, 25.5);
      categoryTextAnnotation0.setFont(combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      categoryTextAnnotation0.setFont(combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      CategoryTextAnnotation categoryTextAnnotation1 = new CategoryTextAnnotation("Null 'formatString' argument.", false, 1.0E10);
      combinedDomainCategoryPlot0.removeAnnotation(categoryTextAnnotation1);
      CategoryMarker categoryMarker0 = new CategoryMarker("%z:`L9P{[i:M{S");
      combinedDomainCategoryPlot0.getPlotType();
      combinedDomainCategoryPlot0.getDatasetRenderingOrder();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("melH&");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(3, layer0);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[2];
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      categoryItemRendererArray0[0] = (CategoryItemRenderer) statisticalBarRenderer0;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      categoryItemRendererArray0[1] = (CategoryItemRenderer) waterfallBarRenderer0;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getOrientation();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      Area area0 = new Area();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getPlotType();
      area0.clone();
      combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
      area0.getBounds2D();
      LegendItemCollection legendItemCollection0 = combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.setFixedLegendItems(legendItemCollection0);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.getRangeAxis();
      combinedRangeCategoryPlot0.getRangeAxisEdge(998);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot1.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker((-620.91939));
      combinedDomainCategoryPlot1.addRangeMarker((Marker) valueMarker0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      combinedDomainCategoryPlot0.setRenderer(10, (CategoryItemRenderer) boxAndWhiskerRenderer0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer1);
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      thermometerPlot0.getLegendItems();
      combinedDomainCategoryPlot1.setFixedLegendItems((LegendItemCollection) null);
      combinedDomainCategoryPlot1.getDataset(0);
      combinedDomainCategoryPlot0.clearDomainMarkers(2);
      combinedDomainCategoryPlot0.getDomainAxisLocation(1);
      TickUnits tickUnits0 = new TickUnits();
      // Undeclared exception!
      try { 
        tickUnits0.get(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("melH&");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(3, layer0);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[2];
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      categoryItemRendererArray0[0] = (CategoryItemRenderer) statisticalBarRenderer0;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      categoryItemRendererArray0[1] = (CategoryItemRenderer) waterfallBarRenderer0;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainAxisForDataset(3);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom((-1.0));
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      combinedDomainCategoryPlot0.setAnchorValue((-1974.6129844168), true);
      combinedRangeCategoryPlot0.getDomainGridlineStroke();
      combinedRangeCategoryPlot0.getColumnRenderingOrder();
      PolarPlot polarPlot0 = new PolarPlot();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(polarPlot0, jDBCCategoryDataset0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      extendedCategoryAxis0.setTickMarkPaint(categoryAxis0.DEFAULT_AXIS_LINE_PAINT);
      combinedDomainCategoryPlot0.datasetChanged(datasetChangeEvent0);
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.setAxisOffset(categoryAxis0.DEFAULT_AXIS_LABEL_INSETS);
      combinedDomainCategoryPlot0.isRangeZoomable();
      IntervalMarker intervalMarker0 = new IntervalMarker(658.73071, 10);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getDomainAxis(10);
      combinedRangeCategoryPlot0.setAxisOffset(extendedCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("melH&");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(3, layer0);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[2];
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      categoryItemRendererArray0[1] = (CategoryItemRenderer) waterfallBarRenderer0;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getDomainAxisForDataset(3);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1601.0, 1601.0);
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(1601.0, 1601.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis1);
      combinedRangeCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedRangeCategoryPlot0.getRangeGridlinePaint();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      combinedRangeCategoryPlot0.setGap((-747.4423019));
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      combinedRangeCategoryPlot0.getCategoriesForAxis(categoryAxis3D0);
      categoryAxis3D0.setTickLabelFont((Comparable) 1.0F, combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getDomainAxisCount();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(minMaxCategoryRenderer0);
      RendererChangeEvent rendererChangeEvent1 = new RendererChangeEvent(standardEntityCollection0);
      combinedDomainCategoryPlot1.rendererChanged(rendererChangeEvent1);
      RendererChangeEvent rendererChangeEvent2 = new RendererChangeEvent(combinedDomainCategoryPlot0);
      AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(categoryAxis3D0);
      MockDate mockDate0 = new MockDate();
      SegmentedTimeline segmentedTimeline0 = SegmentedTimeline.newFifteenMinuteTimeline();
      segmentedTimeline0.getSegment((Date) mockDate0);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      combinedDomainCategoryPlot1.getDrawSharedDomainAxis();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Greg Steckman");
      Layer layer0 = Layer.BACKGROUND;
      Layer layer1 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainAxisLocation(663);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.getRangeAxisForDataset(1462);
      combinedDomainCategoryPlot0.getDrawSharedDomainAxis();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers((-2293), layer0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[2];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) statisticalBarRenderer0;
      categoryItemRendererArray0[0] = (CategoryItemRenderer) waterfallBarRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      NumberAxis numberAxis0 = new NumberAxis("");
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.clearRangeAxes();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      combinedDomainCategoryPlot0.getCategories();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Color color0 = chartPanel0.getBackground();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(color0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), 680, "PRINT");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation((-546));
      combinedDomainCategoryPlot0.setDomainAxis(3, (CategoryAxis) null, true);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("ZOOM_IN_DOMAIN");
      extendedCategoryAxis0.addCategoryLabelToolTip("ZOOM_OUT_BOTH", "PRINT");
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      combinedDomainCategoryPlot0.setRangeAxisLocation(200, axisLocation1, true);
      axisLocation1.getOpposite();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot1.addDomainMarker(categoryMarker0, layer0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[1];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) stackedAreaRenderer0;
      combinedDomainCategoryPlot1.setRenderers(categoryItemRendererArray0);
      combinedDomainCategoryPlot0.getCategoriesForAxis(extendedCategoryAxis0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      combinedDomainCategoryPlot0.setDataset(7, (CategoryDataset) taskSeriesCollection0);
      combinedDomainCategoryPlot0.clearRangeAxes();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        debugGraphics0.getColor();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedDomainCategoryPlot0.clearRangeMarkers(2561);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      ValueMarker valueMarker0 = new ValueMarker(2.0);
      valueMarker0.setLabel("ft3f=vf32|Q}gWG>'s");
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Greg Steckman");
      Layer layer0 = Layer.BACKGROUND;
      Layer layer1 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearRangeMarkers();
      combinedDomainCategoryPlot0.getDomainAxisLocation(663);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.getRangeAxisForDataset(10);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker((-1), (Marker) intervalMarker0, layer0);
      Area area0 = new Area();
      combinedDomainCategoryPlot0.getPlotType();
      area0.clone();
      combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
      area0.getBounds2D();
      combinedDomainCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.getRangeAxis();
      combinedRangeCategoryPlot0.getRangeAxisEdge(500);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(0.0);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot1.setRenderer((-233), (CategoryItemRenderer) boxAndWhiskerRenderer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D(" 9.yf/OC4j<c*RKwkd");
      categoryAxis3D0.setLabelAngle(0);
      combinedDomainCategoryPlot0.setDomainAxis(360, (CategoryAxis) categoryAxis3D0, true);
      categoryAxis3D0.addCategoryLabelToolTip(false, " 9.yf/OC4j<c*RKwkd");
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_LEFT;
      combinedDomainCategoryPlot0.setRangeAxisLocation(0, axisLocation0, true);
      axisLocation0.getOpposite();
      CategoryMarker categoryMarker0 = new CategoryMarker(" 9.yf/OC4j<c*RKwkd");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot1.addDomainMarker(categoryMarker0, layer0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      short[] shortArray0 = new short[8];
      shortArray0[0] = (short)2309;
      shortArray0[1] = (short)2309;
      shortArray0[2] = (short)2309;
      shortArray0[3] = (short)2309;
      shortArray0[4] = (short)2309;
      shortArray0[5] = (short)2309;
      shortArray0[6] = (short)2309;
      shortArray0[7] = (short)2309;
      ShortLookupTable shortLookupTable0 = new ShortLookupTable(2020, shortArray0);
      combinedDomainCategoryPlot2.getDomainAxis();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Locale locale0 = Locale.GERMAN;
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) treeSet0, locale_FilteringMode0);
      locale0.toLanguageTag();
      NumberAxis.createIntegerTickUnits(locale0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      combinedRangeCategoryPlot0.getLegendItems();
      combinedRangeCategoryPlot0.setAnchorValue(1.0E-8);
      CategoryMarker categoryMarker0 = new CategoryMarker(numberAxis3D0.DEFAULT_TICK_UNIT);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.addDomainMarker(500, categoryMarker0, layer0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot0.setRangeGridlinesVisible(false);
      short[] shortArray0 = new short[6];
      shortArray0[0] = (short) (-1289);
      shortArray0[1] = (short)120;
      shortArray0[2] = (short)241;
      shortArray0[3] = (short) (-331);
      shortArray0[4] = (short)705;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[3];
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      categoryItemRendererArray0[0] = (CategoryItemRenderer) statisticalBarRenderer0;
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      categoryItemRendererArray0[1] = (CategoryItemRenderer) barRenderer3D0;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(statisticalBarRenderer0.DEFAULT_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      categoryItemRendererArray0[2] = (CategoryItemRenderer) waterfallBarRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation((int) (short) (-1289));
      combinedRangeCategoryPlot0.setRangeAxisLocation(axisLocation0, true);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 0.5);
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis((-1306.14211211897), (-1.0));
      NumberAxis numberAxis0 = new NumberAxis("iRa:qEev0y|Y!`E={ ");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedRangeCategoryPlot0.getRangeGridlinePaint();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      chartRenderingInfo0.setEntityCollection(standardEntityCollection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("=2+83[k74_9'tb");
      combinedRangeCategoryPlot0.getCategoriesForAxis(categoryAxis3D0);
      combinedRangeCategoryPlot0.handleClick(10, 8, plotRenderingInfo0);
      combinedRangeCategoryPlot0.getRangeAxis();
      combinedRangeCategoryPlot0.getRangeAxisEdge(500);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      combinedDomainCategoryPlot0.getAxisOffset();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1601.0, 1601.0);
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis(1601.0, 1601.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis1);
      combinedRangeCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedRangeCategoryPlot0.getRangeGridlinePaint();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      ChartEntity chartEntity0 = new ChartEntity(combinedRangeCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX);
      standardEntityCollection0.add(chartEntity0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      List list0 = new LinkedList<AxisSpace>();
      combinedRangeCategoryPlot0.handleClick(8, 21, plotRenderingInfo0);
      combinedRangeCategoryPlot0.getRangeAxis();
      combinedRangeCategoryPlot0.getRangeAxisEdge((-830));
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation((-1980));
      combinedRangeCategoryPlot0.setDomainAxisLocation(axisLocation0, true);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom((-1.0));
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2585.2627));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      categoryAxis0.setLabel("");
      combinedDomainCategoryPlot0.setAnchorValue((-1974.6129844168), true);
      combinedRangeCategoryPlot0.getDomainGridlineStroke();
      combinedRangeCategoryPlot0.getColumnRenderingOrder();
      PolarPlot polarPlot0 = new PolarPlot();
      AffineTransform affineTransform0 = AffineTransform.getShearInstance(1711.836881302, 1.0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      jFreeChart0.createBufferedImage(1, 70, (-620.91939), (-1.0), chartRenderingInfo0);
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      categoryPlot0.setAnchorValue((double) 0, true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getRowRenderingOrder();
      categoryPlot0.getDomainAxisEdge(0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      categoryPlot0.addDomainMarker(categoryMarker0, layer0);
      JFreeChart jFreeChart0 = new JFreeChart("Category Plot", categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      bufferedImage0.createGraphics();
      JScrollPane jScrollPane0 = null;
      try {
        jScrollPane0 = new JScrollPane(15, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid verticalScrollBarPolicy
         //
         verifyException("javax.swing.JScrollPane", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      int int0 = (-284);
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addDomainMarker((-284), categoryMarker0, layer0);
      combinedDomainCategoryPlot0.getDomainGridlinePosition();
      combinedDomainCategoryPlot0.clearDomainMarkers();
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainCategoryPlot0);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("MILLISECOND");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.clearDomainMarkers(3671);
      JScrollPane jScrollPane0 = new JScrollPane();
      SortOrder sortOrder0 = combinedDomainCategoryPlot1.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedDomainCategoryPlot0.clearRangeMarkers(2561);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-620.91939), (-1.0));
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.setAxisOffset(cyclicNumberAxis0.DEFAULT_TICK_LABEL_INSETS);
      combinedDomainCategoryPlot0.isRangeZoomable();
      IntervalMarker intervalMarker0 = new IntervalMarker(2.0F, (-620.91939));
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getDomainAxis(500);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom((-1.0));
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2585.2627));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      combinedDomainCategoryPlot0.setAnchorValue((-1974.6129844168), true);
      combinedRangeCategoryPlot0.getDomainGridlineStroke();
      combinedRangeCategoryPlot0.getColumnRenderingOrder();
      PolarPlot polarPlot0 = new PolarPlot();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(polarPlot0, jDBCCategoryDataset0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      extendedCategoryAxis0.setTickMarkPaint(categoryAxis0.DEFAULT_AXIS_LINE_PAINT);
      combinedDomainCategoryPlot0.datasetChanged(datasetChangeEvent0);
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.setAxisOffset(categoryAxis0.DEFAULT_AXIS_LABEL_INSETS);
      combinedDomainCategoryPlot0.isRangeZoomable();
      IntervalMarker intervalMarker0 = new IntervalMarker(658.73071, 10);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker((Marker) intervalMarker0, layer0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, (-1));
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker(0, (Marker) intervalMarker0, layer0);
      int int0 = 157;
      int int1 = 469;
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(491, 157, 469);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 469
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getDomainMarkers(1991, (Layer) null);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
      Area area0 = new Area(combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      area0.getBounds2D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("hs_R!sPY5IWFTw");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.setFixedLegendItems((LegendItemCollection) null);
      combinedDomainCategoryPlot1.getDataset(479);
      combinedDomainCategoryPlot1.clearDomainMarkers(10);
      combinedDomainCategoryPlot1.getDomainAxisLocation(104);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      combinedRangeCategoryPlot0.configureRangeAxes();
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      combinedDomainCategoryPlot0.getAnchorValue();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getDomainMarkers(1991, (Layer) null);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
      Area area0 = new Area(combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      area0.getBounds2D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("hs_R!sPY5IWFTw");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot1.setFixedLegendItems((LegendItemCollection) null);
      combinedDomainCategoryPlot1.getDataset(479);
      combinedDomainCategoryPlot1.clearDomainMarkers(10);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.05, 10);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("hs_R!sPY5IWFTw");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis3D0, numberAxis3D0, stackedBarRenderer3D0);
      categoryPlot0.setRangeCrosshairValue(0.2);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.setEntityCollection((EntityCollection) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedDomainCategoryPlot1.getRowRenderingOrder();
      combinedDomainCategoryPlot0.setDomainGridlineStroke(combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker((-1), (Marker) intervalMarker0, layer0);
      Area area0 = new Area();
      combinedDomainCategoryPlot0.getPlotType();
      area0.clone();
      combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
      area0.getBounds2D();
      combinedDomainCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedDomainCategoryPlot0.getDataset(0);
      combinedDomainCategoryPlot0.getDomainAxisLocation(3);
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      combinedRangeCategoryPlot0.configureRangeAxes();
      combinedDomainCategoryPlot0.getRowRenderingOrder();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getLegendItems();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      Layer layer0 = Layer.BACKGROUND;
      CategoryMarker categoryMarker1 = new CategoryMarker(true, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeCategoryPlot0.addDomainMarker((-515), categoryMarker1, layer0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot0.setRangeGridlinesVisible(true);
      short[] shortArray0 = new short[5];
      shortArray0[0] = (short) (-1289);
      shortArray0[1] = (short) (-1289);
      shortArray0[3] = (short) (-1289);
      shortArray0[4] = (short) (-1289);
      ShortLookupTable shortLookupTable0 = new ShortLookupTable(10, shortArray0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Locale locale0 = Locale.GERMAN;
      TreeSet<String> treeSet0 = new TreeSet<String>();
      locale0.toLanguageTag();
      NumberAxis.createIntegerTickUnits(locale0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getLegendItems();
      combinedRangeCategoryPlot0.setAnchorValue(1.0E-8);
      CategoryMarker categoryMarker0 = new CategoryMarker(numberAxis3D0.DEFAULT_TICK_UNIT);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.setRangeGridlinesVisible(false);
      short[] shortArray0 = new short[6];
      ShortLookupTable shortLookupTable0 = null;
      try {
        shortLookupTable0 = new ShortLookupTable((-1927), shortArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Offset must be greater than 0
         //
         verifyException("java.awt.image.LookupTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Locale locale0 = Locale.GERMAN;
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) treeSet0, locale_FilteringMode0);
      Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) list0);
      locale0.toLanguageTag();
      NumberAxis.createIntegerTickUnits(locale0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      combinedRangeCategoryPlot0.getLegendItems();
      combinedRangeCategoryPlot0.setAnchorValue(1.0E-8);
      CategoryMarker categoryMarker0 = new CategoryMarker(numberAxis3D0.DEFAULT_TICK_UNIT);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.addDomainMarker(500, categoryMarker0, layer0);
      combinedRangeCategoryPlot0.isRangeZoomable();
      combinedRangeCategoryPlot0.setRangeGridlinesVisible(false);
      short[] shortArray0 = new short[6];
      shortArray0[0] = (short) (-1289);
      shortArray0[1] = (short)120;
      short short0 = (short)241;
      shortArray0[2] = (short)241;
      shortArray0[3] = (short) (-331);
      shortArray0[4] = (short)705;
      shortArray0[5] = (short)2309;
      ShortLookupTable shortLookupTable0 = null;
      try {
        shortLookupTable0 = new ShortLookupTable((-1), shortArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Offset must be greater than 0
         //
         verifyException("java.awt.image.LookupTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      String string0 = "";
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      categoryAxis0.addCategoryLabelToolTip(false, "");
      combinedDomainCategoryPlot0.getRangeAxisLocation(2450);
      combinedDomainCategoryPlot0.getPlotType();
      combinedDomainCategoryPlot0.getRangeAxisForDataset(2450);
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      // Undeclared exception!
      try { 
        defaultTableXYDataset0.getSeries((-1377));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index outside valid range.
         //
         verifyException("org.jfree.data.xy.DefaultTableXYDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      AffineTransform affineTransform0 = new AffineTransform();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.setDataset((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0);
      combinedDomainCategoryPlot1.configureDomainAxes();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Color color0 = chartPanel0.getBackground();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(color0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), 680, "PRINT");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.getDomainAxisLocation((-546));
      combinedDomainCategoryPlot0.setDomainAxis(3, (CategoryAxis) null, true);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      extendedCategoryAxis0.addCategoryLabelToolTip("ZOOM_OUT_BOTH", "PRINT");
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.setRangeAxisLocation(200, axisLocation0, true);
      axisLocation0.getOpposite();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot1.addDomainMarker(categoryMarker0, layer0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[1];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) stackedAreaRenderer0;
      combinedDomainCategoryPlot1.setRenderers(categoryItemRendererArray0);
      combinedDomainCategoryPlot0.getCategoriesForAxis(extendedCategoryAxis0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      combinedDomainCategoryPlot0.setDataset(7, (CategoryDataset) taskSeriesCollection0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getItemStroke(0, 0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Category Plot");
      extendedCategoryAxis0.addCategoryLabelToolTip(false, "org.jfree.chart.renderer.xy.DeviationRenderer$State");
      AxisLocation axisLocation0 = categoryPlot0.getRangeAxisLocation();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxisLocation((-535), axisLocation0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Layer layer1 = Layer.BACKGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeMarkers(10, layer1);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Category Plot");
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      xYSeriesCollection0.getDomainBounds(false);
      ModuloAxis moduloAxis0 = new ModuloAxis("?CU", (Range) null);
      CategoryPlot categoryPlot1 = null;
      try {
        categoryPlot1 = new CategoryPlot(jDBCCategoryDataset0, subCategoryAxis0, moduloAxis0, areaRenderer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'range' argument.
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom((-1.0));
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2585.2627));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      combinedDomainCategoryPlot0.setAnchorValue((-1974.6129844168), true);
      combinedRangeCategoryPlot0.getDomainGridlineStroke();
      combinedRangeCategoryPlot0.getColumnRenderingOrder();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot1.getRangeAxisEdge(1);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      NumberAxis numberAxis0 = new NumberAxis("");
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis0, numberAxis0, barRenderer3D0);
      categoryPlot0.setAnchorValue((-763.2528458629428), false);
      categoryPlot0.setForegroundAlpha(500);
      combinedRangeCategoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0F);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.addDomainMarker(categoryMarker0, layer0);
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((double) 1.0F, (double) 2.0F, 121.38668500898419, (-1379.4360228));
      AffineTransform affineTransform1 = new AffineTransform(affineTransform0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, datasetRenderingOrder0);
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform1, renderingHints0);
      RescaleOp rescaleOp0 = new RescaleOp(10, 1.0F, renderingHints0);
      int int0 = 365;
      int int1 = 1854;
      int int2 = 462;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-28);
      byteArray0[1] = (byte)116;
      byteArray0[2] = (byte) (-126);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(17, 48, byteArray0, byteArray0, byteArray0, 500);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.setAnchorValue((-1.0), false);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getPlot();
      JFreeChart jFreeChart0 = null;
      try {
        jFreeChart0 = new JFreeChart((Plot) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String string0 = "";
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);
      combinedDomainCategoryPlot0.setNoDataMessage(".V49/JPm");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.getRangeAxis();
      combinedDomainCategoryPlot0.getDomainGridlinePosition();
      categoryAxis0.setLabelAngle(10);
      categoryAxis0.setFixedDimension((-1879.5557386354792));
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainAxis((-1292), categoryAxis0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      rectangle2D_Float0.createIntersection(rectangle0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot)combinedDomainCategoryPlot0.clone();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedDomainCategoryPlot1.DEFAULT_BACKGROUND_PAINT, ganttRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot1.addDomainMarker(2074, categoryMarker0, layer0);
      combinedDomainCategoryPlot1.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.getDomainMarkers(10, (Layer) null);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'offset' argument.", combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      markerChangeEvent0.setChart(jFreeChart0);
      intervalMarker0.setLabel("");
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker((-1), (Marker) intervalMarker0, layer0);
      combinedDomainCategoryPlot0.getWeight();
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(0, 10, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (0) and height (10) must be > 0
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1601.0, 1601.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedRangeCategoryPlot0.getRangeGridlinePaint();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      combinedRangeCategoryPlot0.getCategoriesForAxis(categoryAxis3D0);
      combinedRangeCategoryPlot0.handleClick(8, 21, plotRenderingInfo0);
      combinedRangeCategoryPlot0.getRangeAxis();
      combinedRangeCategoryPlot0.getRangeAxisEdge((-830));
      int int0 = (-769);
      int[] intArray0 = new int[3];
      intArray0[0] = 10;
      intArray0[1] = (-830);
      intArray0[2] = 3;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-1), (-769), intArray0, 10, true, 500, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("org.jfree.chart.renderer.category.CategoryStepRenderer$State");
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(zoneInfo0);
      categoryAxis3D0.hasListener(timeTableXYDataset0);
      combinedRangeCategoryPlot0.getCategoriesForAxis(categoryAxis3D0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot2 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot2.isRangeGridlinesVisible();
      combinedRangeCategoryPlot2.configureRangeAxes();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer1);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      JTree jTree0 = new JTree();
      jTree0.getRowBounds((-3));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.drawBackground((Graphics2D) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      NumberAxis numberAxis0 = new NumberAxis("");
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      SortOrder sortOrder0 = combinedRangeCategoryPlot0.getColumnRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      JTree jTree0 = new JTree();
      jTree0.getRowBounds((-3));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot1.drawBackground((Graphics2D) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 0.5);
      CyclicNumberAxis cyclicNumberAxis1 = new CyclicNumberAxis((-1306.14211211897), 0.0F);
      NumberAxis numberAxis0 = new NumberAxis("iRa:qEev0y|Y!`E={ ");
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      chartRenderingInfo0.setEntityCollection(standardEntityCollection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("iRa:qEev0y|Y!`E={ ");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      combinedDomainCategoryPlot0.getAxisOffset();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer1);
      AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(subCategoryAxis0);
      axisChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, 221, 15, 15, 489, (-1), (-1390), true, true, false, true, true, false);
      Point point0 = chartPanel0.getLocation();
      ChartPanel chartPanel1 = new ChartPanel((JFreeChart) null);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel1.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.zoomDomainAxes(1036.4919927062133, (double) 221, plotRenderingInfo0, (Point2D) point0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.getRangeAxisLocation();
      combinedDomainCategoryPlot1.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(2500.0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true, combinedDomainCategoryPlot1.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedDomainCategoryPlot1.addRangeMarker((Marker) categoryMarker0);
      combinedDomainCategoryPlot0.getAxisOffset();
      combinedDomainCategoryPlot0.getFixedLegendItems();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      combinedRangeCategoryPlot0.configureRangeAxes();
      combinedRangeCategoryPlot0.getDomainAxis();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      categoryAxis0.removeChangeListener(combinedRangeCategoryPlot0);
      combinedDomainCategoryPlot0.setNoDataMessage("org.jfree.chart.axis.CategoryAxis3D");
      combinedDomainCategoryPlot0.getRangeAxis();
      combinedDomainCategoryPlot0.getDomainGridlinePosition();
      categoryAxis0.setLabelAngle(3999.54866652);
      combinedDomainCategoryPlot0.setDomainAxis(10, categoryAxis0, false);
      categoryAxis0.addCategoryLabelToolTip(500, "hS&YBO\"gS-");
      combinedRangeCategoryPlot0.getRangeAxisLocation();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDomainAxisLocation(10);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(10);
      axisLocation0.getOpposite();
      combinedRangeCategoryPlot0.getDomainAxisEdge(3);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot1.addDomainMarker(categoryMarker0, layer0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[2];
      categoryItemRendererArray0[0] = (CategoryItemRenderer) stackedAreaRenderer0;
      categoryItemRendererArray0[1] = (CategoryItemRenderer) stackedAreaRenderer0;
      combinedDomainCategoryPlot1.setRenderers(categoryItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Layer layer0 = Layer.FOREGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[1];
      combinedRangeCategoryPlot0.setDomainAxes(categoryAxisArray0);
      AffineTransform affineTransform0 = new AffineTransform();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Null 'stroke' not permitted.");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis3D0, numberAxis3D0, (CategoryItemRenderer) null);
      float[] floatArray0 = new float[3];
      floatArray0[0] = 2.0F;
      floatArray0[1] = 1.0F;
      floatArray0[2] = (float) 500;
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel((-912), 10, floatArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      String string0 = "org.jfree.chart.renderer.category.CategoryStepRenderer$State";
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("org.jfree.chart.renderer.category.CategoryStepRenderer$State");
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(zoneInfo0);
      timeTableXYDataset0.setDomainIsPointsInTime(true);
      categoryAxis3D0.hasListener(timeTableXYDataset0);
      combinedRangeCategoryPlot0.getCategoriesForAxis(categoryAxis3D0);
      categoryAxis3D0.setTickLabelsVisible(false);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      defaultBoxAndWhiskerCategoryDataset0.getMeanValue((Comparable) 1.0F, (Comparable) true);
      combinedRangeCategoryPlot0.getRendererForDataset(defaultBoxAndWhiskerCategoryDataset0);
      combinedRangeCategoryPlot0.clearRangeAxes();
      categoryAxis3D0.setCategoryMargin(1.0F);
      combinedRangeCategoryPlot0.getPlotType();
      combinedRangeCategoryPlot0.getAnnotations();
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[7];
      categoryAxisArray0[0] = (CategoryAxis) categoryAxis3D0;
      categoryAxisArray0[1] = (CategoryAxis) categoryAxis3D0;
      categoryAxisArray0[2] = (CategoryAxis) categoryAxis3D0;
      CategoryAxis categoryAxis0 = new CategoryAxis();
      categoryAxisArray0[3] = categoryAxis0;
      categoryAxisArray0[4] = (CategoryAxis) categoryAxis3D0;
      categoryAxisArray0[5] = (CategoryAxis) categoryAxis3D0;
      categoryAxisArray0[6] = (CategoryAxis) categoryAxis3D0;
      combinedRangeCategoryPlot0.setDomainAxes(categoryAxisArray0);
      AffineTransform affineTransform0 = new AffineTransform();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedRangeCategoryPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      // Undeclared exception!
      try { 
        affineTransformOp0.filter((BufferedImage) null, (BufferedImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // src image is null
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("K@(jV^vJ");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      AxisLocation axisLocation0 = categoryPlot0.getRangeAxisLocation(0);
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0);
      combinedDomainCategoryPlot0.rendererChanged((RendererChangeEvent) null);
      combinedDomainCategoryPlot0.setRangeCrosshairValue((double) 10, false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getAnchorValue();
      ValueAxis[] valueAxisArray0 = new ValueAxis[4];
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      valueAxisArray0[0] = valueAxis0;
      Day day0 = new Day();
      PeriodAxis periodAxis0 = new PeriodAxis("K@(jV^vJ", day0, day0);
      valueAxisArray0[1] = (ValueAxis) periodAxis0;
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      valueAxisArray0[2] = (ValueAxis) numberAxis3D0;
      PeriodAxis periodAxis1 = new PeriodAxis("Category Plot", day0, day0);
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1722.069389723553));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, extendedCategoryAxis0, cyclicNumberAxis0, ganttRenderer0);
      categoryPlot0.setAnchorValue((double) 0.0F, true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      CategoryMarker categoryMarker0 = new CategoryMarker(cyclicNumberAxis0.DEFAULT_TICK_UNIT);
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getRangeAxisEdge(481);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      NumberAxis numberAxis0 = new NumberAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      NumberTick numberTick0 = new NumberTick(2.0F, (String) null, textAnchor0, textAnchor0, 1.0F);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(numberTick0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(2538);
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0);
      combinedDomainCategoryPlot0.rendererChanged((RendererChangeEvent) null);
      combinedDomainCategoryPlot0.setRangeCrosshairValue((double) 10, false);
      combinedRangeCategoryPlot0.getAnchorValue();
      combinedRangeCategoryPlot0.getRangeAxisEdge(500);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      combinedRangeCategoryPlot0.isRangeCrosshairVisible();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      NumberAxis numberAxis0 = new NumberAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(periodAxis0);
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      NumberTick numberTick0 = new NumberTick(2.0F, (String) null, textAnchor0, textAnchor0, 1.0F);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(numberTick0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      AxisLocation axisLocation0 = combinedRangeCategoryPlot0.getRangeAxisLocation(2538);
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0);
      combinedDomainCategoryPlot0.rendererChanged((RendererChangeEvent) null);
      combinedDomainCategoryPlot0.setRangeCrosshairValue((double) 10, false);
      combinedRangeCategoryPlot0.getAnchorValue();
      ValueAxis[] valueAxisArray0 = new ValueAxis[0];
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      NumberAxis numberAxis0 = new NumberAxis((String) null);
      numberAxis0.setAutoRange(true);
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.rendererChanged((RendererChangeEvent) null);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      categoryPlot0.setAnchorValue((-1.0), true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      categoryPlot0.getDomainAxisEdge(0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      categoryPlot0.addDomainMarker(categoryMarker0, layer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      categoryPlot0.getRangeAxisEdge();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Color color0 = chartPanel0.getBackground();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(color0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), 680, "PRINT");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation((-546));
      combinedDomainCategoryPlot0.setRangeAxisLocation(496, axisLocation0);
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      ChartPanel chartPanel1 = new ChartPanel((JFreeChart) null, 680, 0, 0, (-1), 680, 500, false, true, false, true, true, true);
      Point point0 = chartPanel1.getLocation();
      combinedDomainCategoryPlot0.zoomDomainAxes((double) 420, 0.0, plotRenderingInfo0, (Point2D) point0);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(2.0);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
      combinedDomainCategoryPlot0.getRangeAxisEdge();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getDomainMarkers(1991, (Layer) null);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDatasetRenderingOrder((DatasetRenderingOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      String string0 = "org.jfree.chart.plot.FastScatterPlot";
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("org.jfree.chart.plot.FastScatterPlot", 1.0F, 2.0, 1.0F);
      combinedDomainCategoryPlot0.removeAnnotation(categoryPointerAnnotation0);
      CategoryMarker categoryMarker0 = new CategoryMarker(3.0);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.addDomainMarker(487, categoryMarker0, layer0);
      TimeZone.getDefault();
      SimpleTimeZone simpleTimeZone0 = null;
      try {
        simpleTimeZone0 = new SimpleTimeZone(10, "org.jfree.chart.plot.FastScatterPlot", (-3993), (-3993), 10, (-3993), 489, 68, 10, (-3993));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal start month -3993
         //
         verifyException("java.util.SimpleTimeZone", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedRangeCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeCategoryPlot0.setRangeAxis((ValueAxis) periodAxis0);
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      categoryAxis0.setMaximumCategoryLabelWidthRatio(500);
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      combinedRangeCategoryPlot0.setRenderer((CategoryItemRenderer) intervalBarRenderer0);
      IntervalMarker intervalMarker0 = null;
      try {
        intervalMarker0 = new IntervalMarker(1.0F, (-1.0), categoryAxis0.DEFAULT_AXIS_LINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, periodAxis0.DEFAULT_AXIS_LABEL_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, 1454.049F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The 'alpha' value must be in the range 0.0f to 1.0f
         //
         verifyException("org.jfree.chart.plot.Marker", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      categoryPlot0.setAnchorValue((-1.0), true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      categoryPlot0.getDomainAxisEdge(0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      categoryPlot0.addDomainMarker(categoryMarker0, layer0);
      AxisLocation axisLocation0 = categoryPlot0.getRangeAxisLocation(0);
      categoryPlot0.setRangeAxisLocation(0, axisLocation0, true);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.getItemStroke(10, 10);
      categoryPlot0.setRangeCrosshairStroke(areaRenderer0.DEFAULT_STROKE);
      categoryPlot0.setAnchorValue((-1.0), true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      categoryPlot0.getDomainAxisEdge(478);
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      Layer layer1 = Layer.FOREGROUND;
      categoryPlot0.addDomainMarker(categoryMarker0, layer1);
      categoryPlot0.getDataset();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      categoryPlot0.setAnchorValue((-1.0), true);
      categoryPlot0.getDomainGridlineStroke();
      categoryPlot0.getColumnRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation(3);
      combinedDomainCategoryPlot0.setDomainAxisLocation(0, axisLocation0, true);
      combinedDomainCategoryPlot0.getAnnotations();
      combinedDomainCategoryPlot0.getDomainAxisLocation();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.setEntityCollection((EntityCollection) null);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers((-1977), layer0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[0];
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);
      combinedDomainCategoryPlot0.setNoDataMessage("");
      combinedDomainCategoryPlot0.getRangeAxis();
      combinedDomainCategoryPlot0.getDomainGridlinePosition();
      categoryAxis0.setLabelAngle((-702.692093632));
      combinedDomainCategoryPlot0.setDomainAxis(500, categoryAxis0, true);
      categoryAxis0.addCategoryLabelToolTip(true, "");
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.setRangeAxisLocation(734, axisLocation0, true);
      axisLocation0.getOpposite();
      combinedDomainCategoryPlot0.getDomainAxisEdge(734);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot1.addDomainMarker(categoryMarker0, layer0);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[1];
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      categoryItemRendererArray0[0] = (CategoryItemRenderer) stackedAreaRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      Layer layer0 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer1 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer1);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.calculateAxisSpace((Graphics2D) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      chartPanel0.getBackground();
      Color color0 = (Color)SpiderWebPlot.DEFAULT_LABEL_OUTLINE_PAINT;
      combinedDomainCategoryPlot0.setRangeGridlinePaint(color0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 420, "[D:");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      JScrollPane jScrollPane0 = new JScrollPane();
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.zoom((-1614.236069465471));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom((-1.0));
      combinedRangeCategoryPlot0.getDomainAxisEdge(10);
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance(734);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D((String) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1191.96, (String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      combinedDomainCategoryPlot0.getDomainAxisLocation(10);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      combinedRangeCategoryPlot0.configureRangeAxes();
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      combinedDomainCategoryPlot0.getAnchorValue();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LegendItemCollection legendItemCollection0 = combinedRangeCategoryPlot0.getLegendItems();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      candlestickRenderer0.getLegendItem(10, (-2177));
      legendItemCollection0.add((LegendItem) null);
      combinedRangeCategoryPlot0.setFixedLegendItems(legendItemCollection0);
      combinedRangeCategoryPlot0.getAnchorValue();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      extendedCategoryAxis0.setAxisLineStroke(combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      combinedRangeCategoryPlot0.setDomainAxis(0, (CategoryAxis) extendedCategoryAxis0);
      String string0 = "TQAERm|K'r7ie";
      Hour.parseHour("TQAERm|K'r7ie");
      Minute minute0 = null;
      try {
        minute0 = new Minute(0, (Hour) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'hour' argument.
         //
         verifyException("org.jfree.data.time.Minute", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.setEntityCollection((EntityCollection) null);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 10, 1.0);
      combinedDomainCategoryPlot0.addAnnotation(categoryTextAnnotation0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-4518.1527009), (-4518.1527009), ";!G30");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainAxisLocation((-2012), axisLocation0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis("?", stringArray0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Area area0 = new Area();
      Rectangle rectangle0 = new Rectangle();
      rectangle2D_Float0.createIntersection(rectangle0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setDomainAxisLocation(44, (AxisLocation) null, false);
      combinedDomainCategoryPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Color color0 = chartPanel0.getBackground();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(color0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), 680, "PRINT");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      JScrollPane jScrollPane0 = new JScrollPane();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedDomainCategoryPlot0.setRangeAxisLocation(200, axisLocation0, true);
      combinedDomainCategoryPlot0.setDomainAxisLocation(15, axisLocation0, true);
      combinedDomainCategoryPlot0.getAnnotations();
      combinedDomainCategoryPlot0.getDomainAxisLocation();
      combinedDomainCategoryPlot0.getDomainAxisLocation();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, false, false, false);
      Color color0 = chartPanel0.getBackground();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(color0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1.0), 680, "PRINT");
      jFreeChart0.setBorderPaint(cyclicNumberAxis0.DEFAULT_AXIS_LABEL_PAINT);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      JScrollPane jScrollPane0 = new JScrollPane();
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      combinedDomainCategoryPlot0.getFixedRangeAxisSpace();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.zoom(0.05);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getFixedRangeAxisSpace();
      String string0 = "fV2$Ev";
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 1.0F, "fV2$Ev");
      // Undeclared exception!
      try { 
        categoryPlot0.setRangeAxis((-1), (ValueAxis) cyclicNumberAxis0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      TextAnchor textAnchor0 = TextAnchor.BASELINE_RIGHT;
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      ValueAxis[] valueAxisArray0 = new ValueAxis[4];
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom(1.0F);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) null);
      Layer layer0 = Layer.BACKGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeAxisEdge(1991);
      combinedRangeCategoryPlot1.setRenderer(10, (CategoryItemRenderer) ganttRenderer0);
      combinedRangeCategoryPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("melH&");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(3, layer0);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[2];
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      categoryItemRendererArray0[0] = (CategoryItemRenderer) statisticalBarRenderer0;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      categoryItemRendererArray0[1] = (CategoryItemRenderer) waterfallBarRenderer0;
      combinedDomainCategoryPlot0.setRenderers(categoryItemRendererArray0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.configureDomainAxes();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10);
      intervalMarker0.setOutlinePaint(combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      MarkerChangeEvent markerChangeEvent0 = new MarkerChangeEvent(intervalMarker0);
      intervalMarker0.notifyListeners(markerChangeEvent0);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addRangeMarker((-1), (Marker) intervalMarker0, layer0);
      combinedDomainCategoryPlot0.setRenderer((CategoryItemRenderer) lineRenderer3D0, true);
      combinedDomainCategoryPlot0.setRangeCrosshairStroke(lineRenderer3D0.DEFAULT_OUTLINE_STROKE);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(0, 10, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (0) and height (10) must be > 0
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      combinedDomainCategoryPlot0.clearRangeMarkers(2561);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-620.91939), (-1.0));
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      combinedDomainCategoryPlot0.setAxisOffset(cyclicNumberAxis0.DEFAULT_TICK_LABEL_INSETS);
      combinedDomainCategoryPlot0.getDomainAxisEdge();
      combinedDomainCategoryPlot0.isRangeZoomable();
      IntervalMarker intervalMarker0 = new IntervalMarker(2.0F, (-620.91939));
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getDomainAxis(500);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer0);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation(0);
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      AxisLocation axisLocation2 = AxisLocation.getOpposite(axisLocation1);
      combinedDomainCategoryPlot0.setRangeAxisLocation(0, axisLocation2);
      NumberAxis numberAxis0 = new NumberAxis("x1");
      combinedDomainCategoryPlot0.getDataRange(numberAxis0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      combinedDomainCategoryPlot0.setAnchorValue((-1758.03), true);
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      Layer layer1 = Layer.BACKGROUND;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeAxisEdge(10);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("melH&");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      Layer layer0 = Layer.BACKGROUND;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3, "melH&");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-1404.1), 0.05);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, extendedCategoryAxis0, cyclicNumberAxis0, stackedBarRenderer3D0);
      categoryPlot0.setRangeCrosshairValue((double) 1.0F);
      PeriodAxis periodAxis0 = new PeriodAxis("melH&");
      combinedDomainCategoryPlot0.getDataRange(periodAxis0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      MockDate mockDate0 = new MockDate();
      Second second0 = new Second(mockDate0);
      categoryAxis0.getCategoryLabelToolTip(second0);
      combinedDomainCategoryPlot0.setRangeCrosshairVisible(true);
      combinedDomainCategoryPlot0.getDomainAxisEdge();
      combinedDomainCategoryPlot0.setRangeGridlinePaint(categoryAxis0.DEFAULT_AXIS_LABEL_PAINT);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, 1.0F, "pnS&$");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation(500);
      combinedDomainCategoryPlot0.setRangeAxisLocation(0, axisLocation0);
      combinedDomainCategoryPlot0.getDataRange(cyclicNumberAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, 0, 0, 0, 10, (-1), (-1), true, true, true, true, true, true);
      Point point0 = chartPanel0.getLocation();
      combinedDomainCategoryPlot0.zoomDomainAxes(0.0, (double) 500, plotRenderingInfo0, (Point2D) point0);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      MockDate mockDate0 = new MockDate();
      Second second0 = new Second(mockDate0);
      categoryAxis0.getCategoryLabelToolTip(second0);
      combinedDomainCategoryPlot0.setRangeCrosshairVisible(true);
      combinedDomainCategoryPlot0.getDomainAxisEdge();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(59, layer0);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      JScrollPane jScrollPane0 = new JScrollPane();
      JScrollPane jScrollPane1 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane1.getViewportBorderBounds();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.calculateAxisSpace((Graphics2D) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      Layer layer0 = null;
      combinedDomainCategoryPlot0.getDomainMarkers(1991, (Layer) null);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      String string0 = "%z:`L9P{[i:M{S";
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("%z:`L9P{[i:M{S", 10, 1.0F);
      categoryTextAnnotation0.setFont(combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      combinedDomainCategoryPlot0.removeAnnotation(categoryTextAnnotation0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addDomainMarker(1991, categoryMarker0, (Layer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getDomainMarkers(1991, (Layer) null);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("%z:`L9P{[i:M{S", 10, 1.0F);
      categoryTextAnnotation0.setFont(combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      combinedDomainCategoryPlot0.removeAnnotation(categoryTextAnnotation0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers(10, layer0);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData();
      Area area0 = new Area(combinedRangeCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX);
      area0.isPolygonal();
      AffineTransform affineTransform0 = new AffineTransform();
      Area area1 = area0.createTransformedArea(affineTransform0);
      area1.getBounds2D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("d3$X>&(~@-n#4vDZ");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot1.setFixedLegendItems((LegendItemCollection) null);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      combinedDomainCategoryPlot1.clearDomainMarkers(10);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      categoryAxis3D0.setMaximumCategoryLabelWidthRatio(10);
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      combinedRangeCategoryPlot1.isRangeGridlinesVisible();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot2 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot2.configureRangeAxes();
      combinedDomainCategoryPlot0.getRowRenderingOrder();
      combinedDomainCategoryPlot1.mapDatasetToDomainAxis(10, 10);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      combinedDomainCategoryPlot1.setRenderer(194, (CategoryItemRenderer) ganttRenderer0, true);
      combinedDomainCategoryPlot0.setDomainGridlineStroke(combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getDomainMarkers(1991, (Layer) null);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      String string0 = "%z:`L9P{[i:M{S";
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("%z:`L9P{[i:M{S", 10, 1.0F);
      categoryTextAnnotation0.setFont(combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      combinedDomainCategoryPlot0.removeAnnotation(categoryTextAnnotation0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addDomainMarker(1991, categoryMarker0, (Layer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      Layer layer1 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainAxisLocation(663);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Greg Steckman");
      Layer layer0 = Layer.BACKGROUND;
      Layer layer1 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      JScrollPane jScrollPane0 = new JScrollPane();
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.zoom(10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.getRangeMarkers(layer0);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'stroke' argument.", combinedRangeCategoryPlot0);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.getRangeMarkers(layer0);
      combinedRangeCategoryPlot0.zoom(1191.96296);
      combinedRangeCategoryPlot0.getDomainAxisEdge((-1));
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance(10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D((String) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1191.96, (String) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0F, 1.0E-8);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis3D0, cyclicNumberAxis0, stackedBarRenderer3D0);
      categoryPlot0.setRangeCrosshairValue((double) 2.0F);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      categoryAxis0.setLabelAngle((-702.692093632));
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.isRangeGridlinesVisible();
      combinedRangeCategoryPlot0.configureRangeAxes();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getDomainMarkers(1991, (Layer) null);
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("%z:`L9P{[i:M{S", 10, 1.0F);
      combinedDomainCategoryPlot0.removeAnnotation(categoryTextAnnotation0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      int int0 = 420;
      TickUnits tickUnits0 = new TickUnits();
      DatasetChangeEvent datasetChangeEvent0 = new DatasetChangeEvent(tickUnits0, (Dataset) null);
      categoryPlot0.datasetChanged(datasetChangeEvent0);
      // Undeclared exception!
      try { 
        tickUnits0.get(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "CategoryItemEntity: rowKey=";
      stringArray0[1] = "CategoryItemEntity: rowKey=";
      stringArray0[2] = "CategoryItemEntity: rowKey=";
      stringArray0[3] = "CategoryItemEntity: rowKey=";
      stringArray0[4] = "CategoryItemEntity: rowKey=";
      SymbolAxis symbolAxis0 = new SymbolAxis("CategoryItemEntity: rowKey=", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("`ZYcLjon@~q\"5D");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(656, layer0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      WaterfallBarRenderer waterfallBarRenderer1 = new WaterfallBarRenderer();
      combinedRangeCategoryPlot0.getRenderer();
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.getRangeAxisLocation();
      combinedDomainCategoryPlot1.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      combinedDomainCategoryPlot1.addRangeMarker((Marker) valueMarker0);
      combinedRangeCategoryPlot0.isDomainZoomable();
      combinedRangeCategoryPlot0.getOrientation();
      combinedRangeCategoryPlot0.getDataset(10);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getRangeMarkers(0, layer0);
      SortOrder sortOrder0 = combinedDomainCategoryPlot0.getColumnRenderingOrder();
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.calculateAxisSpace((Graphics2D) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setWeight((-1));
      combinedRangeCategoryPlot0.getPlotType();
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(3, 3, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 0
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.plot.FastScatterPlot");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      combinedDomainCategoryPlot0.clearDomainAxes();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      Layer layer0 = Layer.BACKGROUND;
      combinedDomainCategoryPlot0.addDomainMarker((-284), categoryMarker0, layer0);
      combinedDomainCategoryPlot0.getDomainGridlinePosition();
      combinedDomainCategoryPlot0.clearDomainMarkers();
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainCategoryPlot0);
      combinedDomainCategoryPlot0.getDomainGridlinePosition();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(648);
      AffineTransform affineTransform1 = new AffineTransform(affineTransform0);
      // Undeclared exception!
      try { 
        affineTransform1.deltaTransform((Point2D) null, (Point2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.AffineTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("Category Plot");
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.clearDomainAxes();
      categoryPlot0.getDomainAxisEdge(0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-2269.1659), 1128.73, 1.0F, 226.52);
      // Undeclared exception!
      try { 
        rectangle2D_Double0.createIntersection((Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.Rectangle2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getDomainMarkers(10, (Layer) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      combinedRangeCategoryPlot0.setDomainAxis(categoryAxis0);
      combinedRangeCategoryPlot0.setRangeGridlineStroke(categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0);
      CategoryMarker categoryMarker1 = new CategoryMarker(1.0F);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      MockDate mockDate0 = new MockDate();
      combinedDomainCategoryPlot0.getRangeGridlineStroke();
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      combinedDomainCategoryPlot0.setRowRenderingOrder(sortOrder0);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_RIGHT;
      combinedRangeCategoryPlot0.setRangeAxisLocation(axisLocation0);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainAxisLocation();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      categoryPlot0.getDomainMarkers(layer0);
      categoryPlot0.getPlotType();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Stroke stroke0 = areaRenderer0.getItemStroke(0, 0);
      categoryPlot0.setRangeCrosshairStroke(stroke0);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.rendererChanged((RendererChangeEvent) null);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getDomainMarkers(1991, (Layer) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("%z:`L9P{[i:M{S", 10, 1.0F);
      combinedDomainCategoryPlot1.mapDatasetToDomainAxis(1991, (-2403));
      categoryTextAnnotation0.setFont(combinedDomainCategoryPlot1.DEFAULT_VALUE_LABEL_FONT);
      combinedDomainCategoryPlot1.removeAnnotation(categoryTextAnnotation0);
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      combinedDomainCategoryPlot0.clone();
      combinedDomainCategoryPlot0.addRangeMarker((-1556), (Marker) categoryMarker0, (Layer) null);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("#i24");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);
      combinedDomainCategoryPlot0.setNoDataMessage("");
      combinedDomainCategoryPlot0.getRangeAxis();
      combinedDomainCategoryPlot0.getDomainGridlinePosition();
      categoryAxis0.setLabelAngle((-702.692093632));
      combinedDomainCategoryPlot0.setDomainAxis(500, categoryAxis0, true);
      categoryAxis0.addCategoryLabelToolTip(true, "");
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.setRangeAxisLocation(734, axisLocation0, true);
      axisLocation0.getOpposite();
      combinedDomainCategoryPlot0.setDomainAxisLocation(734, axisLocation0, true);
      combinedDomainCategoryPlot0.getAnnotations();
      combinedDomainCategoryPlot0.getDomainAxisLocation();
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.plot.CategoryPlot");
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis("?", stringArray0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.getPlot();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Area area0 = new Area();
      Rectangle rectangle0 = area0.getBounds();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.createIntersection(rectangle0);
      stackedBarRenderer0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, symbolAxis0, (Marker) null, rectangle2D0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, subCategoryAxis0, symbolAxis0, stackedBarRenderer0);
      subCategoryAxis0.addChangeListener(categoryPlot0);
      CategoryPlot categoryPlot1 = new CategoryPlot(defaultKeyedValues2DDataset0, subCategoryAxis0, symbolAxis0, stackedBarRenderer0);
      categoryPlot1.setRangeCrosshairVisible(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      symbolAxis0.setVerticalTickLabels(true);
      subCategoryAxis0.setTickMarkInsideLength(1.0F);
      combinedDomainCategoryPlot0.setDomainAxisLocation(44, (AxisLocation) null, false);
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation(10);
      categoryPlot1.setDomainAxisLocation(500, axisLocation0);
      combinedDomainCategoryPlot0.clone();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.getRangeGridlinePaint();
      ValueMarker valueMarker0 = new ValueMarker(2.0);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LegendItemCollection legendItemCollection0 = combinedDomainCategoryPlot0.getLegendItems();
      combinedDomainCategoryPlot0.getColumnRenderingOrder();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot2 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      combinedDomainCategoryPlot2.setFixedLegendItems(legendItemCollection0);
      combinedDomainCategoryPlot1.getDataset(2435);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot3 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot3.clearDomainMarkers((-830));
      JScrollPane jScrollPane0 = new JScrollPane();
      SortOrder sortOrder0 = combinedDomainCategoryPlot1.getColumnRenderingOrder();
      combinedDomainCategoryPlot1.setRowRenderingOrder(sortOrder0);
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) null);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Greg Steckman");
      Layer layer0 = Layer.BACKGROUND;
      Layer layer1 = Layer.FOREGROUND;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainAxisLocation(663);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot1.getRangeAxisForDataset(10);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getPlotType();
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      NumberAxis numberAxis0 = new NumberAxis("");
      numberAxis0.setAxisLinePaint(categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      TextAnchor textAnchor0 = TextAnchor.CENTER_LEFT;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot0.rendererChanged((RendererChangeEvent) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot(categoryAxis0);
      combinedDomainCategoryPlot1.getRangeAxisEdge(10);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1601.0, 1601.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedRangeCategoryPlot0.getRangeGridlinePaint();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      combinedRangeCategoryPlot0.handleClick(0, 21, plotRenderingInfo0);
      combinedRangeCategoryPlot0.getRangeAxis();
      combinedRangeCategoryPlot0.getRangeAxisEdge((-830));
      int int0 = (-769);
      int[] intArray0 = new int[3];
      intArray0[0] = 10;
      intArray0[1] = (-830);
      intArray0[2] = 3;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-1), (-769), intArray0, 10, true, 500, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }
}
